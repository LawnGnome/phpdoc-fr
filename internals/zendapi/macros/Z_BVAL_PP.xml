<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.8 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry id="zend-macro.z-bval-pp">
 <refnamediv>
  <refname>Z_BVAL_PP</refname>
  <refpurpose>Déréférence un pointeur vers un pointeur <type>zval</type> et retourne son élément <varname>lval</varname> en tant que <type>booléen</type></refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <literallayout>#include &lt;zend_operators.h&gt;</literallayout>
  <methodsynopsis>
   <type>zend_bool</type><methodname>Z_BVAL_PP</methodname>
    <methodparam><type>zval **</type><parameter>zval_pp</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>Z_BVAL_PP</function> retourne l'élément <varname>lval</varname>
   d'une structure <type>zval</type> indirectement pointée par
   <parameter>zval_pp</parameter> de type <type>zend_bool</type>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>zval_pp</parameter></term>
     <listitem>
      <para>
       Pointeur vers un pointeur d'une structure <type>zval</type> pour extraire la valeur résultante.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   L'élément <varname>lval</varname> de la structure <type>zval</type>
   pointée par le pointeur <parameter>zval_pp</parameter> de type
   <type>zend_bool</type> qui peut être soit à &true;, soit à &false;.
  </para>
 </refsect1>

 <refsect1 role="seealso">
   &reftitle.seealso;
   <para>
    Voir <function>Z_BVAL</function> et <function>Z_BVAL_P</function> pour d'autres
    macros qui accèdent au champ <varname>lval</varname> d'un <type>zval</type>
    de type <type>zend_bool</type>.
   </para>
   <para>
    Pour les macros qui extraient d'autres valeurs depuis un <type>zval **</type>, voir
    <function>Z_ARRVAL_PP</function>, <function>Z_BINLEN_PP</function>,
    <function>Z_BINVAL_PP</function>, <!-- <function>Z_BVAL_PP</function> -->,
    <function>Z_DVAL_PP</function>, <function>Z_LVAL_PP</function>,
    <function>Z_OBJCE_PP</function>, <function>Z_OBJ_HANDLE_PP</function>,
    <function>Z_OBJ_HANDLER_PP</function>, <function>Z_OBJ_HT_PP</function>,
    <function>Z_OBJPROP_PP</function>, <function>Z_OBJVAL_PP</function>,
    <function>Z_RESVAL_PP</function>, <function>Z_STRLEN_PP</function>,
    <function>Z_STRVAL_PP</function>, <function>Z_TYPE_PP</function>,
    <function>Z_UNILEN_PP</function>, <function>Z_UNIVAL_PP</function>,
    <function>Z_USTRCPLEN_PP</function>, <function>Z_USTRLEN_PP</function>,
    et <function>Z_USTRVAL_PP</function>.
   </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
