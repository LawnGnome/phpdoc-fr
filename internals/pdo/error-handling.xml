<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.2 Maintainer: yannick Status: ready -->
<sect1 id="internals.pdo.error-handling">
 <title>Gestion des erreurs</title>
 <para>
  La gestion des erreurs est implémentée via un protocole entre PDO et le code
  du driver de la base de données. Le code du driver de la base de données
  signale à PDO qu'une erreur est survenue via un retour d'échec (<literal>0</literal>)
  depuis n'importe quelles fonctions d'interface. Si un zéro est retourné, le champ
  <parameter>error_code</parameter> du bloc de contrôle approprié
  au contexte (soit le bloc pdo_dbh_t, soit le bloc pdo_stmt_t) est utilisé.
  Dans la pratique, c'est généralement une bonne idée de définir le champ
  dans les deux blocs à la même valeur pour s'assurer que le bon sera utilisé.
 </para>

 <para>
  Le champ error_mode est un champ sur 6 octets contenant un code identifiant
  SQLSTATE sur 5 caractères ASCIIZ. Ce code permet de contrôler le processus
  de message d'erreur. Le code SQLSTATE est utilisé pour rechercher un message
  d'erreur dans la table interne des messages d'erreur PDO (voir pdo_sqlstate.c
  pour une liste des codes erreurs ainsi que leurs messages). Si le code est inconnu
  pour PDO, une valeur par défaut <quote>Unknown Message</quote> est utilisée.
 </para>

 <para>
  En plus du code SQLSTATE et du message d'erreur, PDO appelera une routine
  spécifique au driver fetch_err() pour obtenir des données particulières sur les conditions
  de l'erreur. Cette routine passe un tableau dans lequel le driver placera les
  informations additionnelles. Ce tableau a des slots de position particuliers
  pour des types spécifiques d'informations supplémentaires :
 </para>

 <orderedlist>
  <listitem>
   <para>
    Un code erreur natif. C'est généralement un code erreur obtenu directement
    depuis l'API de la base de données.
   </para>
  </listitem>
  <listitem>
   <para>
    Une chaîne descriptive. Cette chaîne peut contenir n'importe quelle information
    additionnelle en rapport avec l'erreur. Les drivers de base de données
    incluent typiquement des informations sur le message d'erreur, endroit du code où l'erreur
    est survenue et n'importe quelle autre information spécifique au driver que le
    développeur aura jugé nécessaire d'inclure. C'est généralement une bonne idée
    d'inclure toutes les informations obtenues de l'interface de base de données
    au moment où l'erreur survient. Pour les erreurs du drivers (comme les problèmes
    d'allocation de mémoire), le développeur du driver peut définir quelques sont les informations
    appropriées à communiquer.
   </para>
  </listitem>
 </orderedlist>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->