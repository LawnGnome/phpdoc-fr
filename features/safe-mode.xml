<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: dams Status: ready -->
<!-- Reviewed: yes -->

 <chapter xml:id="features.safe-mode" xmlns="http://docbook.org/ns/docbook">
  <title>Safe mode</title>

  <para>
   Le "Safe Mode" est le mode de sécurité de PHP :
   une solution au problème de partage de PHP sur un serveur.
   Ce système pêche au niveau de l'architecture
   car il n'est pas correct de tenter de résoudre ce
   problème au niveau de PHP, mais les solutions
   alternatives basées sur le serveur web et l'OS
   ne sont pas réalistes. De nombreux intervenants,
   notamment les fournisseurs d'hébergement, utilisent
   le "Safe Mode".
  </para>
  <warning>
   <para>
    Le "Safe Mode" est obsolète depuis PHP 5.3.0 et est supprimé dans PHP 6.0.0.
   </para>
  </warning>

  <sect1 xml:id="ini.sect.safe-mode">
   <title>Sécurité et "Safe Mode"</title>
   <para>
    <table>
      <title>Options de configuration</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>Nom</entry>
        <entry>Par défaut</entry>
        <entry>Modifiable</entry>
        <entry>Historique</entry>
       </row>
      </thead>
      <tbody>
      <row>
       <entry>safe_mode</entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Supprimé en PHP 6.0.0.</entry>
      </row>
      <row>
       <entry>safe_mode_gid</entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Disponible depuis PHP 4.1.0. Supprimé en PHP 6.0.0.</entry>
      </row>
      <row>
       <entry>safe_mode_include_dir</entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Disponible depuis PHP 4.1.0.Supprimé en PHP 6.0.0.</entry>
      </row>
      <row>
       <entry>safe_mode_exec_dir</entry>
       <entry>""</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Supprimé en PHP 6.0.0.</entry>
      </row>
      <row>
       <entry>safe_mode_allowed_env_vars</entry>
       <entry>"PHP_"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Supprimé en PHP 6.0.0.</entry>
      </row>
      <row>
       <entry>safe_mode_protected_env_vars</entry>
       <entry>"LD_LIBRARY_PATH"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Supprimé en PHP 6.0.0.</entry>
      </row>
      <row>
       <entry>open_basedir</entry>
       <entry>NULL</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>PHP_INI_SYSTEM en PHP &lt; 5.3.0.</entry>
      </row>
      <row>
       <entry>disable_functions</entry>
       <entry>""</entry>
       <entry>&php.ini; seulement</entry>
       <entry>Disponible depuis PHP 4.0.1.</entry>
      </row>
      <row>
       <entry>disable_classes</entry>
       <entry>""</entry>
       <entry>&php.ini; seulement</entry>
       <entry>Disponible depuis PHP 4.3.2.</entry>
      </row>
      </tbody>
     </tgroup>
    </table>
    &ini.php.constants;
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry xml:id="ini.safe-mode">
      <term>
       <parameter>safe_mode</parameter>
       <type>booléen</type>
      </term>
      <listitem>
       <para>
        Active ou non le mode de sécurité de PHP.
        Si PHP est compilé avec <literal>--enable-safe-mode</literal>, la valeur par défaut
        sera On, sinon Off.
       </para>
       &warn.deprecated.feature-5-3-0.removed-6-0-0;
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-gid">
      <term>
       <parameter>safe_mode_gid</parameter>
       <type>booléen</type>
      </term>
      <listitem>
       <para>
        Par défaut, le safe mode fait une comparaison des
        propriétaires, avant d'ouvrir un fichier. Si vous voulez
        alléger un peu ce niveau de sécurité, vous pouvez
        réaliser une comparaison de groupe, et activer cette
        directive.
        Si cette directive vaut &false; (sa valeur par défaut),
        c'est une comparaison sur les <literal>UID</literal>,
        et, si elle vaut &true; c'est une comparaison sur les
        <literal>GID</literal>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-include-dir">
      <term>
       <parameter>safe_mode_include_dir</parameter>
       &string;
      </term>
      <listitem>
       <para>
        Les vérifications basées sur le <literal>UID</literal> ou <literal>GID</literal>
        sont ignorées lorsque les fichiers inclus sont placés dans le dossier
        indiqué par cette directive, ainsi que ses sous-dossiers. Les
        dossiers peuvent être aussi dans l'<link linkend="ini.include-path">include_path</link>
        ou bien il faut inclure le chemin complet.
       </para>
       <simpara>
        Depuis PHP 4.2.0, cette directive utilise le point virgule
        de la même façon que le fait
        <link linkend="ini.include-path">include_path</link>, pour
        permettre de configurer plusieurs dossiers.
       </simpara>
       <simpara>
        La restriction spécifiée est en fait un préfixe, plus qu'un
        nom de dossier. Cela signifie que "<literal>safe_mode_include_dir = /dir/incl</literal>"
        autorise aussi bien "<literal>/dir/include</literal>" que
        "<literal>/dir/incls</literal>", s'ils existent.
        Lorsque vous souhaitez restreindre l'accès à un dossier spécifique,
        il faut terminer cette directive avec un slash. Par exemple
        "<literal>safe_mode_include_dir = /dir/incl/</literal>".
       </simpara>
       <simpara>
        Si la valeur de cette directive est vide, aucun fichier avec le
        <literal>UID</literal>/<literal>GID</literal> différent ne peut
        être inclus dans PHP 4.2.3 et dans les versions PHP 4.3.3 et plus récentes.
        Dans les versions antérieures, tous les fichiers pouvaient être inclus.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-exec-dir">
      <term>
       <parameter>safe_mode_exec_dir</parameter>
       &string;
      </term>
      <listitem>
       <para>
        Si PHP est utilisé en safe mode, les fonctions comme <function>system</function>
        et toutes celles qui permettent l'exécution en
        <link linkend="ref.exec">ligne de commande</link> refuseront d'exécuter des programmes
        qui ne sont pas dans ce dossier.
        Vous devez utiliser <literal>/</literal> en tant que séparateur de dossier
        sous tous les environnements, y compris Windows.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-allowed-env-vars">
      <term>
       <parameter>safe_mode_allowed_env_vars</parameter>
       &string;
      </term>
      <listitem>
       <para>
        Modifier certaines variables d'environnement est un trou de
        sécurité potentiel. Cette directive contient une liste de noms de
        variables d'environnement séparées par des virgules, ou de préfixes.
        En Safe mode, l'utilisateur ne pourra modifier que les
        variables d'environnement dont le nom commence par l'un des préfixes
        fourni ici. Par défaut, les utilisateurs ne peuvent modifier que
        les variables d'environnement qui commencent par <literal>PHP_</literal>
        (e.g. <literal>PHP_FOO=BAR</literal>).
       </para>
       <note>
        <para>
         Si cette directive est vide, PHP autorisera la modification
         de TOUTES les variables d'environnement.
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-protected-env-vars">
      <term>
       <parameter>safe_mode_protected_env_vars</parameter>
       &string;
      </term>
      <listitem>
       <para>
        Cette directive contient une liste de variables d'environnement
        que le programmeur ne pourra pas modifier en utilisant la
        fonction <function>putenv</function>. Ces variables seront protégées,
        même si la directive <option>safe_mode_allowed_env_vars</option> autorise leur
        modification.
       </para>
      </listitem>
     </varlistentry>
      <varlistentry xml:id="ini.open-basedir">
      <term>
       <parameter>open_basedir</parameter>
       &string;
      </term>
      <listitem>
       <para>
        Limite les fichiers accessibles par PHP dans l'arborescence.
        Cette directive <emphasis>n'est pas</emphasis> affectée
        par le safe mode.
       </para>
       <para>
        Lorsqu'un script tente d'ouvrir un fichier, avec les fonctions
        <function>fopen</function> ou <function>gzopen</function>, la situation
        du fichier est vérifiée. Si le fichier se situe hors du dossier
        spécifié dans cette directive, PHP refusera de l'ouvrir.
        Les liens symboliques sont résolus, ce qui fait que cette
        restriction ne peut être contournée par un lien symbolique.
        Si le fichier n'existe pas, le lien symbolique ne pourra pas être résolu
        et le nom de fichier sera comparé à <option>open_basedir</option>.
       </para>
       <para>
        La valeur spéciale <systemitem class="filesystem">.</systemitem>
        indique que le dossier dans lequel le script est stocké servira de
        dossier de base. Cela est cependant un peu dangereux car le dossier
        courant du script peut facilement être modifié avec la fonction
        <function>chdir</function>.
       </para>
        <para>
         Dans <filename>httpd.conf</filename>, <option>open_basedir</option> peut être désactivée
         (i.e. pour certains hôtes virtuels)
         <link linkend="configuration.changes.apache">de la même manière</link> que
         toute autre directive de configuration avec la syntaxe
         "<literal>php_admin_value open_basedir none</literal>".
       </para>
       <para>
        Sous Windows, séparez les dossiers par des points virgules. Sur les autres
        systèmes, séparez les dossiers avec des deux-points. Lorsque PHP est utilisé
        comme module Apache, les chemins de la directive <option>open_basedir</option> des
        dossiers parents sont automatiques transmis.
       </para>
       <para>
        La restriction spécifiée par <option>open_basedir</option> est en fait un
        préfixe et non un dossier. Cela signifie que
        "<literal>open_basedir = /dir/incl</literal>" donne accès au dossier
        "<literal>/dir/include</literal>"
        et aussi au dossier "<literal>/dir/incls</literal>" s'il existe. Lorsque vous souhaitez
        restreindre l'accès à un dossier spécifique, ajoutez un slash final.
        Par exemple : <literal>open_basedir = /dir/incl/</literal>.
       </para>
       <para>
        La valeur par défaut permet l'ouverture de
        tous les fichiers.
       </para>
       <note>
        <para>
         Depuis PHP 5.3.0, open_basedir peut être modifié au moment de l'exécution.
         Cela signifie que si open_basedir est défini à <literal>/www/</literal>
         dans votre fichier &php.ini;, un script peut le modifier en
         <literal>/www/tmp/</literal> au moment de l'exécution via la fonction
         <function>ini_set</function>.
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.disable-functions">
      <term>
       <parameter>disable_functions</parameter>
       &string;
      </term>
      <listitem>
       <simpara>
        Cette directive vous permet de désactiver certaines fonctions
        pour des raisons de <link linkend="security">sécurité</link>. Elle
        prend une liste de nom de fonctions, séparés par des
        virgules. <parameter>disable_functions</parameter>
        n'est pas affectée par le <link linkend="ini.safe-mode">Safe Mode</link>.
       </simpara>
       <simpara>
        Cette directive doit être configurée dans le fichier &php.ini;. Par exemple,
        vous ne pourrez pas la configurer dans le fichier
        &httpd.conf;.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.disable-classes">
      <term>
       <parameter>disable_classes</parameter>
       &string;
      </term>
      <listitem>
       <simpara>
        Cette directive vous permet de désactiver certaines classes
        pour des raisons de <link linkend="security">sécurité</link>. Elle
        prend une liste de nom de fonctions, séparées par des
        virgules. <parameter>disable_functions</parameter> n'est pas
        affectée par le <link linkend="ini.safe-mode">Safe Mode</link>.
       </simpara>
       <simpara>
        Cette directive doit être configurée dans le fichier &php.ini;. Par exemple,
        vous ne pourrez pas la configurer dans le fichier
        &httpd.conf;.
       </simpara>
       <note>
        <title>Disponibilité</title>
          <simpara>
           Cette directive est disponible depuis PHP 4.3.2
          </simpara>
       </note>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    Voir aussi
    <link linkend="ini.register-globals">register_globals</link>,
    <link linkend="ini.display-errors">display_errors</link> et
    <link linkend="ini.log-errors">log_errors</link>.
   </para>

   <para>
    Lorsque <link linkend="ini.safe-mode">Safe Mode</link> est actif, PHP
    vérifie que le propriétaire du script courant est le même que le propriétaire des
    fichiers ou dossiers qui seront manipulés par ce script. Par exemple,
    dans la situation suivante :
    <programlisting role="ls">
<![CDATA[
-rw-rw-r--    1 rasmus   rasmus       33 Jul  1 19:20 script.php
-rw-r--r--    1 root     root       1116 May 26 18:01 /etc/passwd
]]>
    </programlisting>
    exécuter le script <filename>script.php</filename> :
    <programlisting role="php">
<![CDATA[
<?php
 readfile('/etc/passwd');
?>
]]>
    </programlisting>
    générera cette erreur, si le Safe Mode est activé :
    <screen>
<![CDATA[
Warning: SAFE MODE Restriction in effect. The script whose uid is 500 is not
allowed to access /etc/passwd owned by uid 0 in /docroot/script.php on line 2
]]>
   </screen>
  </para>
  <para>
   Cependant, il arrive que la vérification faite avec le nom du propriétaire
   (<literal>UID</literal>) du fichier soit trop restrictive, et qu'une
   vérification sur le nom du groupe (<literal>GID</literal>) soit suffisante.
   C'est une autre fonctionnalité supportée
   par la directive <link linkend="ini.safe-mode-gid">safe_mode_gid</link>.
   En lui donnant la valeur de <literal>On</literal>, les vérifications
   seront faites sur le <literal>GID</literal>, alors qu'en lui laissant
   sa valeur par défaut de <literal>Off</literal>, les vérifications seront
   faites sur le <literal>UID</literal>.
  </para>
  <para>
   Si au lieu d'utiliser le <link linkend="ini.safe-mode">Safe Mode</link>,
   vous utilisez la directive <link linkend="ini.open-basedir">open_basedir</link>,
   alors les manipulations seront limitées aux fichiers situés
   dans les dossiers spécifiés. Par exemple (Apache &httpd.conf;) :
   <programlisting role="ini">
<![CDATA[
<Directory /docroot>
  php_admin_value open_basedir /docroot
</Directory>
]]>
   </programlisting>
   Si vous exécutez le script <filename>script.php</filename> ci-dessus avec
   la configuration d'<link linkend="ini.open-basedir">open_basedir</link>,
   le résultat sera l'affichage suivant :
   <screen>
<![CDATA[
Warning: open_basedir restriction in effect. File is in wrong directory in
/docroot/script.php on line 2
]]>
   </screen>
  </para>
  <para>
   Vous pouvez également désactiver les fonctions particulières. Notez que
   la directive <link linkend="ini.disable-functions">disable_functions</link>
   ne peut être utilisée en dehors du fichier &php.ini;, ce qui signifie
   que vous ne pouvez pas désactiver des fonctions par virtualhost ou par
   dossiers, dans votre fichier &httpd.conf;. Si nous ajoutons ceci à notre
   fichier &php.ini; :
   <programlisting role="ini">
<![CDATA[
disable_functions = readfile,system
]]>
   </programlisting>
   toute utilisation des fonctions <function>readfile</function> et
   <function>system</function> générera l'affichage suivant :
   <screen>
<![CDATA[
Warning: readfile() has been disabled for security reasons in
/docroot/script.php on line 2
]]>
   </screen>
  </para>
  <warning>
   <para>
    Ces restrictions de PHP sont bien sûr invalides en exécution binaire.
   </para>
  </warning>
 </sect1>

  <sect1 xml:id="features.safe-mode.functions">
   <title>Fonctions désactivées par le Safe Mode</title>
   <para>
    Voici une liste non-exhaustive des fonctions désactivées par
    le <link linkend="features.safe-mode">Safe Mode</link>.
    <table>
     <title>Fonctions désactivées par le Safe Mode</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Fonction</entry>
        <entry>Limitations</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><function>dbmopen</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>dbase_open</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_rowcount</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_retrieve</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry>Fonctions ifx_*</entry>
        <entry>restrictions sql_safe_mode, (!= Safe Mode)</entry>
       </row>
       <row>
        <entry>Fonctions ingres_*</entry>
        <entry>restrictions sql_safe_mode, (!= Safe Mode)</entry>
       </row>
       <row>
        <entry>Fonctions mysql_*</entry>
        <entry>restrictions sql_safe_mode, (!= Safe Mode)</entry>
       </row>
       <row>
        <entry><function>pg_lo_import</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>posix_mkfifo</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>putenv</function></entry>
        <entry>Obéit aux directives safe_mode_protected_env_vars et
        safe_mode_allowed_env_vars. Voir aussi la documentation de
        <function>putenv</function></entry>
       </row>
       <row>
        <entry><function>move_uploaded_file</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>dl</function></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><link linkend="language.operators.execution">opérateur guillemets obliques</link></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>shell_exec</function> (équivalent fonctionnel
         des guillemets obliques)</entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>exec</function></entry>
        <entry>
         Vous ne pouvez exécuter que les programmes qui
         sont dans le dossier <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
         Pour des raisons pratiques, il n'est pas possible d'utiliser des
         jokers comme <literal>..</literal> dans le chemin de ce dossier.
         <function>escapeshellcmd</function> est exécuté sur les arguments de cette fonction.
        </entry>
       </row>
       <row>
        <entry><function>system</function></entry>
        <entry>
         Vous ne pouvez exécuter que les programmes qui
         sont dans le dossier <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
         Pour des raisons pratiques, il n'est pas possible d'utiliser des
         jokers comme <literal>..</literal> dans le chemin de ce dossier.
         <function>escapeshellcmd</function> est exécuté sur les arguments de cette fonction.
        </entry>
       </row>
       <row>
        <entry><function>passthru</function></entry>
        <entry>
         Vous ne pouvez exécuter que les programmes qui
         sont dans le dossier <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
         Pour des raisons pratiques, il n'est pas possible d'utiliser des
         jokers comme <literal>..</literal> dans le chemin de ce dossier.
         <function>escapeshellcmd</function> est exécuté sur les arguments de cette fonction.
        </entry>
       </row>
       <row>
        <entry><function>popen</function></entry>
        <entry>
         Vous ne pouvez exécuter que les programmes qui
         sont dans le dossier <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
         Pour des raisons pratiques, il n'est pas possible d'utiliser des
         jokers comme <literal>..</literal> dans le chemin de ce dossier.
         <function>escapeshellcmd</function> est exécuté sur les arguments de cette fonction.
        </entry>
       </row>
       <row>
        <entry><function>fopen</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>mkdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>rmdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>rename</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>unlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>copy</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (sur
        <parameter>source</parameter> et
        <parameter>target</parameter>)</entry>
       </row>
       <row>
        <entry><function>chgrp</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chown</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chmod</function></entry>
        <entry>&sm.uidcheck; De plus, vous ne pouvez pas modifier les
        SUID, SGID et le bit sticky</entry>
       </row>
       <row>
        <entry><function>touch</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>symlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (note :
        seule l'hôte cible est vérifié)</entry>
       </row>
       <row>
        <entry><function>link</function></entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir; (note : seul le fichier
         de destination est vérifié.)
        </entry>
       </row>
       <row>
        <entry><function>apache_request_headers</function></entry>
        <entry>
         En Safe Mode, les en-têtes commençant par <literal>authorization</literal>
         (sensible à la casse) ne seront pas retournés.
        </entry>
       </row>
       <row>
        <entry><function>header</function></entry>
        <entry>Avec le safe mode, le uid du script est ajouté à la partie
        <literal>realm</literal> de l'en-tête
        <literal>WWW-Authenticate</literal> si vous utilisez cet en-tête
        pour l'identification.</entry>
       </row>
       <row>
        <entry><link linkend="features.http-auth">variables PHP_AUTH</link></entry>
        <entry>
         Avec le safe mode, les variables <varname>PHP_AUTH_USER</varname>,
         <varname>PHP_AUTH_PW</varname> et <varname>PHP_AUTH_TYPE</varname>
         ne sont pas disponibles dans la variable <varname>$_SERVER</varname>.
         Indépendamment, vous pouvez utiliser la variable
         <varname>REMOTE_USER</varname> pour connaître l'utilisateur.
         (note : affectée uniquement depuis PHP 4.3.0)
        </entry>
       </row>
       <row>
        <entry>
         <function>highlight_file</function>,
         <function>show_source</function>
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir;
         (note : affectée uniquement depuis PHP 4.2.1)
        </entry>
       </row>
       <row>
        <entry>
         <function>parse_ini_file</function>
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir;
         (note : affectée uniquement depuis PHP 4.2.1)
        </entry>
       </row>
       <row>
        <entry>
         <function>set_time_limit</function>
        </entry>
        <entry>
         N'a aucun effet lorsque PHP fonctionne avec le &safemode;.
        </entry>
       </row>
       <row>
        <entry>
         <link linkend="ini.max-execution-time">max_execution_time</link>
        </entry>
        <entry>
         N'a aucun effet lorsque PHP fonctionne avec le &safemode;.
        </entry>
       </row>
       <row>
        <entry>
         <function>mail</function>
        </entry>
        <entry>
         Si le Safe Mode est actif, le
         5ème paramètre est désactivé (note : uniquement
         affecté depuis PHP 4.2.3)
        </entry>
       </row>
       <row>
        <entry>
        <function>session_start</function> 
        </entry>
        <entry>
         Le propriétaire d'un script doit être le même que celui que celui du répertoire <link 
         linkend="ini.session.save-path">session.save_path</link> si
         le <literal>répertoire</literal> par défaut <link
         linkend="ini.session.save-handler">session.save_handler</link> est
         utilisé.
        </entry>
       </row>
       <row>
        <entry>
         Toutes les fonctions sur les flux et sur le système de fichiers.
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir; (Voir l'option <link
          linkend="ini.safe-mode-include-dir">safe_mode_include_dir</link>
         du &php.ini;.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
