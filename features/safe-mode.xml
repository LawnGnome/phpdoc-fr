<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
 <chapter id="features.safe-mode">
  <title>Safe mode</title>

  <para>
   Le "Safe Mode" est le mode de sécurité de PHP : 
   une solution au problème de partage de PHP sur un serveur. 
   Ce système pêche au niveau de l'architecture
   car il n'est pas correct de tenter de résoudre ce 
   problème au niveau de PHP, mais les solutions 
   alternatives basées sur le serveur web et l'OS
   ne sont pas réalistes. De nombreux intervenants, 
   notamment les fournisseurs d'hébergement, utilisent 
   le "Safe Mode".
  </para>

  <sect1 id="ini.sect.safe-mode">
   <title>Securité et Safe Mode</title>
   <para>
    <table>
      &ini.table.title;
     <tgroup cols="3">
      <thead>
      &ini.table.top;
      </thead>
      <tbody>
      <row>
       <entry>safe_mode</entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_gid</entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_include_dir</entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_exec_dir</entry>
       <entry>""</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_allowed_env_vars</entry>
       <entry>PHP_</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>safe_mode_protected_env_vars</entry>
       <entry>LD_LIBRARY_PATH</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>open_basedir</entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      <row>
       <entry>disable_functions</entry>
       <entry>""</entry>
       <entry>PHP_INI_SYSTEM</entry>
      </row>
      </tbody>
     </tgroup>
    </table>
  &ini.table.bottom;

   </para>
	&ini.descriptions.title;
   <para>
    <variablelist>
     <varlistentry id="ini.safe-mode">
      <term>
       <parameter>safe_mode</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        Active ou non le mode de sécurité de &php;. Lisez le chapitre 
        <link linkend="security">sécurité</link> pour plus d'informations.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-gid">
      <term>
       <parameter>safe_mode_gid</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        Par défaut, le safe mode fait une comparaison des
        propriétaires, avant d'ouvrir un fichier. Si vous voulez
        alléger un peu ce niveau de sécurité, vous pouvez
        réaliser une comparaison de groupe, et activer cette
        directive.
        Si cette directive vaut &false; (sa valeur par défaut),
        c'est une comparaison sur les <literal>UID</literal>, 
        et sinon, sur les <literal>GID</literal>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-include-dir">
      <term>
       <parameter>safe_mode_include_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Les vérifications basées sur le <literal>UID</literal> ou <literal>GID</literal>
        sont ignorées lorsque les fichiers sont issus du dossier
        et de ses sous-dossiers, indiqué dans cette directive. Les
        dossiers peuvent être aussi dans l'<link linkend="ini.include-path">include_path</link>
        ou bien il faut inclure le chemin complet.
       </para>
       <simpara>
        Depuis &php; 4.2.0, cette directive utilise le point virgule
        de la même façon que le fait 
        <link linkend="ini.include-path">include_path</link>, pour
        permettre de configurer plusieurs dossiers.
       </simpara>
       <simpara>
        La restriction spécifiée est en fait un préfixe, plus qu'un
        nom de dossier. Cela signifie que "safe_mode_include_dir = /dir/incl" 
        autorise aussi bien "/dir/include" que "/dir/incls", si ils existent.
        Lorsque vous souhaitez restreindre l'accès à un dossier spécifique,
        il faut terminer cette directive avec un slash /. Par exemple 
        "safe_mode_include_dir = /dir/incl/"
        </simpara>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-exec-dir">
      <term>
       <parameter>safe_mode_exec_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Si &php; est utilisé en safe mode, les fonctions comme <function>system</function>
        et toutes celles qui permettent l'exécution en 
        <link linkend="ref.exec">ligne de commande</link> refuseront d'exécuter des programmes
        qui ne sont pas dans ce dossier.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-allowed-env-vars">
      <term>
       <parameter>safe_mode_allowed_env_vars</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Modifier certaines variables d'environnement est un trou de 
        sécurité potentiel. Cette directive contient une liste de noms 
        variables d'environnement séparées par des virgules, ou de préfixes.
        En Safe mode, l'utilisateur ne pourra modifier que les 
        variables d'environnement dont le nom commence par l'un des préfixes
        fourni ici. Par défaut, les utilisateurs ne peuvent modifier que
        les variables d'environnemt qui commencent par PHP_ (e.g. PHP_FOO=BAR).
       </para>
       <note>
        <para>
         Si cette directive est vide, &php; autorisera la modification
         de TOUTES les variables d'environnement.
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.safe-mode-protected-env-vars">
      <term>
       <parameter>safe_mode_protected_env_vars</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Cette directive contient une liste de variables d'environnement
        que le programmeur ne pourra pas modifier en utilisant la
        fonction <function>putenv</function>. Ces variables seront protégées,
        même is la directive safe_mode_allowed_env_vars autorise leur 
        modification.
       </para>
      </listitem>
     </varlistentry>
      <varlistentry id="ini.open-basedir">
      <term>
       <parameter>open_basedir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Limite les fichiers accessibles par &php; dans l'arborescence.
        Cette directive <emphasis>n'est pas</emphasis> affectée 
        par le safe mode.
       </para>
       <para>
        Lorsqu'un script tente d'ouvrir un fichier, avec les fonctions
        <function>fopen</function> ou <function>gzopen</function>, la situation
        du fichier est vérifiée. Si le fichier se situe hors du dossier
        spécifié dans cette directive,&php; refusera de l'ouvrir.
        Les liens symboliques sont résolus, ce qui fait que cette
        restriction ne peut être contournée par un lien symbolique.
       </para>
       <para>
        La valeur spéciale <systemitem class="constant">.</systemitem>
        indique que le dossier dans lequel le script est stocké, servira
        de dossier de base.
       </para>
       <para>
        Sous Windows, séparez les dossiers par des deux points. Sur les autres
        systèmes, séparez les dossiers avec un point-virgule. Lorsque &php; est utilisé
        comme module Apache, les chemins de la directive open_basedir des
        dossiers parents sont automatiques transmis.
       </para>
       <para>
        La restriction spécifiée par open_basedir est en fait un
        préfixe, et non un dossier. Cela signifie que 
        "open_basedir = /dir/incl" donne accès au dossier "/dir/include" 
        et aussi au dossier "/dir/incls" si il existe. Lorsque vous souhaitez
        restreindre l'accès à un dossier spécifique, ajoutez un slash final.
        Par exemple "open_basedir = /dir/incl/".
       </para>
       <note>
        <para>
         Le support des dossiers multiples a été ajouté en &php; 3.0.7.
        </para>
       </note>
       <para>
        La valeur par défaut est de permettre l'ouverture de
        tous les fichiers.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.disable-functions">
      <term>
       <parameter>disable_functions</parameter>
       <type>string</type>
      </term>
      <listitem>
       <simpara>
        Cette directive vous permet de désactiver certaines fonctions
        pour des raisons de <link linkend="security">sécurité</link>. Elle
        prend une liste de nom de fonctions, séparés par des
	virgules. disable_functions n'est pas affectée par le &safemode;.
       </simpara>
       <simpara>
        Cette directive doit être configurée dans le fichier &php.ini;. Par exemple,
        vous ne pourrez pas la configurer dans le fichier 
        &httpd.conf;.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry id="ini.disable-classes">
      <term>
       <parameter>disable_classes</parameter>
       <type>string</type>
      </term>
      <listitem>
       <simpara>
        Cette directive vous permet de désactiver certaines classes
        pour des raisons de <link linkend="security">sécurité</link>. Elle
        prend une liste de nom de fonctions, séparés par des
        virgules. disable_functions n'est pas affectée par le &safemode;.
       </simpara>
       <simpara>
        Cette directive doit être configurée dans le fichier &php.ini;. Par exemple,
        vous ne pourrez pas la configurer dans le fichier 
        &httpd.conf;.
       </simpara>
       <note>
        <title>Disponibilité</title>
      	<simpara>
	 Cette directive est disponible depuis &php; 4.3.2
      	</simpara>
       </note>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    Voir aussi
    <link linkend="ini.register-globals">register_globals</link>,
    <link linkend="ini.display-errors">display_errors</link> et
    <link linkend="ini.log-errors">log_errors</link>
   </para>
   <para>
    Lorsque &safemode; est actif, &php; vérifie que le 
    propriétaire du script
    courant est le même que le propriétaire des
    fichiers qui seront manipulés par ce script. Par exemple, 
    dans a la situation suivante :
    <programlisting role="ls">
<![CDATA[
-rw-rw-r--    1 rasmus   rasmus       33 Jul  1 19:20 script.php 
-rw-r--r--    1 root     root       1116 May 26 18:01 /etc/passwd 
]]>
    </programlisting>
    exécuter le script <filename>script.php</filename>
    <programlisting role="php">
<![CDATA[
<?php
 readfile('/etc/passwd'); 
?>
]]>
    </programlisting>
    générera cette erreur, si le Safe Mode est activé :
    <screen>
<![CDATA[
Warning: SAFE MODE Restriction in effect. The script whose uid is 500 is not 
allowed to access /etc/passwd owned by uid 0 in /docroot/script.php on line 2
]]>
   </screen>
  </para>
  <para>
   Cependant, il arrive que la vérification faite avec le nom du propriétaire
   du fichier soit trop restrictive, et qu'une vérification sur le nom
   du groupe soit suffisante. C'est une autre fonctionnalité supportée
   par la directive <link linkend="ini.safe-mode-gid">safe_mode_gid</link>. 
   En lui donnant la valeur de <literal>On</literal>, les vérifications
   seront faites sur le <literal>GID</literal>, alors qu'en lui laissant
   sa valeur par défaut de <literal>Off</literal>, les vérifications seront
   faites sur le <literal>UID</literal>.
  </para>
  <para>
   Si vou utilisez la directive open_basedir au lieu du &safemode;,
   alors les manipulations seront limitées aux fichiers situés
   dans les dossiers spécifiés. Par exemple :
   <programlisting role="ini">
<![CDATA[
<Directory /docroot>
  php_admin_value open_basedir /docroot 
</Directory>
]]>
   </programlisting>
   Si vous exécutez le script <filename>script.php</filename> ci-dessus avec
   la configuration d'open_basedir le résultat sera l'affichage suivant :
   <screen>
<![CDATA[
Warning: open_basedir restriction in effect. File is in wrong directory in 
/docroot/script.php on line 2 
]]>
   </screen>
  </para>
  <para>
   Vous pouvez aussi désactiver individuellement les fonctions. Par exemple,
   en ajoutant cette ligne dans le fichier &php.ini; :
   <programlisting role="ini">
<![CDATA[
disable_functions readfile,system  
]]>
   </programlisting>
   toute utilisation des fonctions <function>readfile</function> et
   <function>system</function> générera l'affichage suivant :
   <screen>
<![CDATA[
Warning: readfile() has been disabled for security reasons in 
/docroot/script.php on line 2 
]]>
   </screen>
  </para>
 </sect1>

  <sect1 id="features.safe-mode.functions">
   <title>Fonctions désactivées par le Safe Mode</title>
   <para>
    Voici une liste non-exhaustive des fonctions désactivées par
    le <link linkend="features.safe-mode">Safe Mode</link>.
    <!-- TODO: add &note.sm.*; to the functions mentioned here.
    That entity should link to this section -->
    <table>
     <title>Fonctions désactivées par le Safe Mode</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Fonction</entry>
        <entry>Limitations</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><function>dbmopen</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>dbase_open</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_rowcount</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_retrieve</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry>Fonctions ifx_</entry>
        <entry>restrictions sql_safe_mode, (!= Safe Mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry>Fonctions ingres_</entry>
        <entry>restrictions sql_safe_mode, (!= Safe Mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry>Fonctions mysql_</entry>
        <entry>restrictions sql_safe_mode, (!= Safe Mode)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry><function>pg_loimport</function></entry>
        <entry>&sm.uidcheck;</entry>
        <!-- source TODO: there is no PHP-warning for that safe-mode-restriction -->
       </row>
       <row>
        <entry><function>posix_mkfifo</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>putenv</function></entry>
        <entry>Obéis aux directives safe_mode_protected_env_vars et 
        safe_mode_allowed_env_vars. Voir aussi la documentation de 
        <function>putenv</function></entry>
        <!-- TODO: document those directives in chapters/config.xml -->
       </row>
       <row>
        <entry><function>move_uploaded_file</function></entry>
        <entry>&sm.uidcheck; <!-- TODO: check this --></entry>
       </row>

       <!-- TODO: from here on, add warning to the function itself -->

       <row>
        <entry><function>chdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>dl</function></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><link linkend="language.operators.execution">opérateur guillemets obliques</link></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>shell_exec</function> (équivalent fonctionnel
         des guillemets obliques)</entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>exec</function></entry>
        <entry>
         Vous ne pouvez exécuter que les programmes qui
         sont dans le dossier <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
         Pour des raisons pratiques, il n'est pas possible d'utiliser des
         jokers comme <literal>..</literal> dans le chemin de ce dossier.
        </entry>
       </row>
       <row>
        <entry><function>system</function></entry>
        <entry>
         Vous ne pouvez exécuter que les programmes qui
         sont dans le dossier <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
         Pour des raisons pratiques, il n'est pas possible d'utiliser des
         jokers comme <literal>..</literal> dans le chemin de ce dossier.
        </entry>
       </row>
       <row>
        <entry><function>passthru</function></entry>
        <entry>
         Vous ne pouvez exécuter que les programmes qui
         sont dans le dossier <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
         Pour des raisons pratiques, il n'est pas possible d'utiliser des
         jokers comme <literal>..</literal> dans le chemin de ce dossier.
        </entry>
       </row>
       <row>
        <entry><function>popen</function></entry>
        <entry>
         Vous ne pouvez exécuter que les programmes qui
         sont dans le dossier <link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
         Pour des raisons pratiques, il n'est pas possible d'utiliser des
         jokers comme <literal>..</literal> dans le chemin de ce dossier.
        </entry>
        <!-- TODO: not sure. popen uses a completely different implementation
        Don't know why, don't know whether it's behaving the same -->
       </row>
       <row>
        <entry><function>fopen</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>mkdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>rmdir</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>rename</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;<!-- on the old name only, it seems. Is rename preventing moving files? --></entry>
       </row>
       <row>
        <entry><function>unlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>copy</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (on 
        <parameter>source</parameter> and 
        <parameter>target</parameter>) </entry>
       </row>
       <row>
        <entry><function>chgrp</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chown</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chmod</function></entry>
        <entry>&sm.uidcheck; De plus, vous ne pouvez pas modifier les
        SUID, SGID et sticky bit</entry>
       </row>
       <row>
        <entry><function>touch</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>symlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (note: only the target is 
        checked)</entry>
       </row>
       <row>
        <entry><function>link</function></entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir; (note: seule le fichier
         de destination est vérifié.
        </entry>
       </row>
       <row>
        <entry><function>getallheaders</function></entry>
        <entry>
         En Safe Mode, les en-têtes commencants par 'authorization' 
         (sensible à la casse) ne seront pas retournés. Attention :
         cette protection est mise en défaut par la fonction
         <function>getallheaders</function> sur les serveurs AOL!
        </entry>
       </row>
       <row>
        <entry><function>header</function></entry>
        <entry>Avec le safe mode, le uid du script est ajouté à la partie
        <literal>realm</literal> de l'en-tête 
        <literal>WWW-Authenticate</literal> si vous utilisez cet en-tête
        pour l'authentification.</entry>
       </row>
       <row>
        <entry><link linkend="features.http-auth">variables PHP_AUTH</link></entry>
        <entry>
         Avec le safe mode, les variables <varname>PHP_AUTH_USER</varname>,
         <varname>PHP_AUTH_PW</varname> et <varname>PHP_AUTH_TYPE</varname>
         ne sont pas disponibles dans la variable <varname>$_SERVER</varname>. 
         Indépendamment, vous pouvez utiliser la variable
         <varname>REMOTE_USER</varname> pour connaître le USER.
         (note : affectée uniquement depuis &php; 4.3.0)
        </entry>
       </row>
       <row>
        <entry>
         <function>highlight_file</function>,
         <function>show_source</function>
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir;
         (note : affectée uniquement depuis &php; 4.2.1)
        </entry>
       </row>
       <row>
        <entry>
         <function>parse_ini_file</function>
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir;
         (note : affectée uniquement depuis &php; 4.2.1)
        </entry>
       </row>
       <row>
        <entry>
         Toutes les fonctions qui utilisent les wrappers de fichiers.
         (<filename>php4/main/fopen_wrappers.c</filename>)
        </entry>
        <entry>??</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </sect1>

 </chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
