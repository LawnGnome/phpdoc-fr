<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.28 Maintainer: gui Status: ready -->
 <chapter id="faq.installation">
  <title>Installation</title>
  <titleabbrev>Installation</titleabbrev>

  <para>
   Cette section traite de questions courantes sur la façon d'installer &php;.
   &php; est disponible sur la plupart des systèmmes d'exploitation (sauf les
   versions de MacOS antérieures à Mac OSX) et pour quasiment n'importe quel
   serveur web.
  </para>
  <para>
   Pour installer &php;, suivez les instructions présentes dans  le fichier
   <ulink url="&url.file.installation;">INSTALL</ulink>
   livré avec les sources. Les utilisateurs de Windows doivent aussi lire le
   fichier <ulink url="&url.file.readmewin;">install.txt</ulink>. Des astuces
   intéressantes pour les utilisateurs de Windows sont aussi présentes
   <link linkend="install.windows">ici</link>.
  </para>

  <qandaset>
   <qandaentry id="faq.installation.phpini">
    <question>
     <para>
      Unix/Windows: Où doit être placé mon fichier &php.ini;?
     </para>
    </question>
    <answer>
     <para>
      Par défaut sous Unix, il doit être placé dans <filename>/usr/local/lib</filename>
      qui est en fait <filename>&lt;install-path&gt;/lib</filename>.
      La plupart des personnes voudront changer ceci lors de la compilation
      avec l'option <link
      linkend="install.configure.with-config-file-path">--with-config-file-path</link>.
      Vous pouvez par exemple le régler de cette façon :
      <programlisting role="shell">
--with-config-file-path=/etc
      </programlisting>
      Et alors vous copirez le fichier <filename>php.ini-dist</filename> livré
      avec les sources vers <filename>/etc/php.ini</filename> et l'éditer pour
      l'adpater à vos besoins.
     </para>
      <programlisting role="shell">
--with-config-file-scan-dir=PATH 
      </programlisting>
     <para>
      Sous Windows, le chemin par défaut de &php.ini; est le répertoire de
      Windows. Si vous utilisez le serveur web Apache, &php.ini; est tout
      d'abord cherché dans le répertoire d'installation de Apache, c'est à
      dire <filename>c:\program files\apache group\apache</filename>. De cette
      façon, vous pouvez avoir un &php.ini; différent pour chaque version de
      Apache installée.
     </para>
     <para>
     Consultez aussi le chapitre sur le
     <link linkend="configuration.file">fichier de configuration</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.nodata">
    <question>
     <para>
      Unix : J'ai installé &php;, mais à chaque fois que je charge un
      document, j'obtiens l'erreur 'Document Contains No Data'! Que se
      passe-t-il?
     </para>
    </question>
    <answer>
     <para>
      Celà signifie probablement que &php; rencontre un problème et génère un
      fichier core. Consultez vos fichiers de logs de votre serveur pour voir
      si c'est le cas, et tentez de reproduire le problème avec un test
      simple. Si vous savez utiliser 'gdb', il serait très utile de fournir un
      backtrace avec votre rapport de bug, afin d'aider les développeurs à
      cerner le problème. Si vous utilisez &php; en module Apache, essayez
      ceci :
      <itemizedlist>
       <listitem>
        <para>
         Stoppez vos processus httpd
        </para>
       </listitem>
       <listitem>
        <para>
         gdb httpd
        </para>
       </listitem>
       <listitem>
        <para>
         Stoppez vos processus httpd
        </para>
       </listitem>
       <listitem>
        <para>
         &gt; run -X -f /path/to/httpd.conf
        </para>
       </listitem>
       <listitem>
        <para>
         Pointez alors avec votre navigateur vers l'URL posant problème.
        </para>
       </listitem>      
       <listitem>
        <para>
         &gt; run -X -f /path/to/httpd.conf
        </para>
       </listitem>      
       <listitem>
        <para>
         Si vous obtenez un fichier core, gdb doit alors vous en informer.
        </para>
       </listitem>      
       <listitem>
        <para>
         tapez : bt
        </para>
       </listitem>
       <listitem>
        <para>
         Vous devriez inclure votre backtrace dans votre rapport de bug.
         Celui-ci doit être posté sur
         <ulink url="&url.php.bugs;">&url.php.bugs;</ulink>.
        </para>
       </listitem>
      </itemizedlist>
     </para>
     <para>
      Si votre script utilise les expressions rationelles
      (<function>ereg</function> et consorts), assurez vous que &php; et
      Apache ont été compilés avec les même outils d'expression rationelles.
      Celà doit être automatiquement le cas avec &php; et Apache 1.3.x.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.processing">
    <question>
     <para>
      Unix: J'ai installé &php; en utilisant des fichiers sources RPMS, mais
      apache ne traite pas les pages &php;. Que se passe-t-il?
     </para>
    </question>
    <answer>
     <para>
      En supposant que vous avez installé à la fois Apache et &php; à partir
      de fichiers RPM, vous devrez commenter ou ajouter au moins quelques unes
      des lignes suivantes dans votre fichier &httpd.conf; :
      <programlisting role="apache-conf">
<![CDATA[
# Extra Modules
AddModule mod_php.c
AddModule mod_php3.c
AddModule mod_perl.c

# Extra Modules
LoadModule php_module         modules/mod_php.so
LoadModule php3_module        modules/libphp3.so     # for PHP 3
LoadModule php4_module        modules/libphp4.so     # for PHP 4
LoadModule perl_module        modules/libperl.so
]]>
      </programlisting>
      Et ajouter :
      <programlisting role="apache-conf">
<![CDATA[
AddType application/x-httpd-php3 .php3    # for PHP 3
AddType application/x-httpd-php .php      # for PHP 4
]]>
      </programlisting>
      ... aux propriétés globales ou aux propriétés du VirtualDomain ou vous
      voulez que &php; officie.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.compile">
    <question>
     <para>
      Unix : J'ai installé &php; 3 en utilisant des paquets source RPMS, mais
      ils ne compilent pas avec le support de la base de données dont j'ai
      besoin! Que se passe-t-il?
     </para>
    </question>
    <answer>
     <para>
      La façon dont &php; 3 est compilé rend la contruction flexible de
      paquets RPM très peu aisée. Ceci est résolu avec &php; 4. Pour &php; 3,
      nous vous conseillons de suivre le mécanisme décrit dans le fichier
      INSTALL.REDHAT inclus avec les sources. Si vous persistez à vouloir
      construire des fichiers RPM de &php; 3, lisez ceci...
     </para>
     <para>
      Les mainteneurs des paquets RPM ont configuré les paquets RPM à s'installer
      sans le support des bases de données pour simplifier l'installation 
      <emphasis>et</emphasis> parceque les paquets RPMs utilise le répertoire 
      <literal>/usr</literal> au lieu du répertoire standart <literal>/usr/local/</literal>
      pour les fichiers. Vous devez spécifier au fichier de spécification du paquet RPM
      quelle base de données vous voulez utiliser et quel est chemin complet du serveur
      de votre base de données.
     </para>
     <para>
      L'exemple ci-dessou explique la procédure pour ajouter le support
      de la base de données populaires, MySQL, en utilisant une installation en module d'Apache.
     </para>
     <para>
      Bien sûr, toutes ces informations peuvent être ajustées pour n'importe 
      quel serveur de bases de données que &php; supporte. Nous supposerons
      que vous avez installer MySQL et Apache complètement avec des paquets RPMs 
      pour cette exemple.
      <itemizedlist>
       <listitem>
        <para>
         Premièrement, supprimer mod_php3 :
         <programlisting role="shell">
rpm -e mod_php3
         </programlisting>
        </para>
       </listitem>
       <listitem>
        <para>
         Ensuite, récupérer le paquet RPM et installez-le, SANS --rebuild
         <programlisting role="shell">
rpm -Uvh mod_php3-3.0.5-2.src.rpm
         </programlisting>
        </para>
       </listitem>
       <listitem>
        <para>
         Ensuite, éditez le fichier <filename>/usr/src/redhat/SPECS/mod_php3.spec</filename>
        </para>
        <para>
         Dans la section %build, ajoutez le support de la base de données désiré ainsi que son chemin.
        </para>
        <para>
         Pour MySQL, vous devez ajouter
         <programlisting role="shell">
--with-mysql=/usr \
         </programlisting>
         La section %build devrait ressembler à quelque chose comme ceci :
         <programlisting role="shell">
./configure --prefix=/usr \
--with-apxs=/usr/sbin/apxs \
--with-config-file-path=/usr/lib \
--enable-debug=no \
--enable-safe-mode \
--with-exec-dir=/usr/bin \
--with-mysql=/usr \
--with-system-regex
         </programlisting>
        </para>
       </listitem>
       <listitem>
        <para>
         Une fois cette modification effectuée, compiler le binaire RPM comme ceci :
         <programlisting role="shell">
rpm -bb /usr/src/redhat/SPECS/mod_php3.spec
         </programlisting>
        </para>
       </listitem>
       <listitem>
        <para>
         Ensuite, installez le RPM
         <programlisting role="shell">
rpm -ivh /usr/src/redhat/RPMS/i386/mod_php3-3.0.5-2.i386.rpm
         </programlisting>
        </para>
       </listitem>
      </itemizedlist>
      Assurez-vous de redémarrer Apache et que vous avez &php; 3 avec le support MySQL
      en utilisant le paquet RPMs. Notez qu'il est probablement plus facile de compiler
      directement depuis l'archive tarball &php; 3 et de suivre les instructions du fichier
      <filename>INSTALL.REDHAT</filename> dans les sources de la distribution.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.frontpage">
    <question>
     <para>
      Unix : J'ai patché Apache avec l'extension FrontPage et subitement, &php; ne fonctionne plus.
      Est-ce que &php; est incompatible avec l'extension FrontPage pour Apache ?
     </para>
    </question>
    <answer>
     <para>
      Non, &php; fonctionne très bien avec l'extension FrontPage. Le souci vient du fait que le patch
      pour l'installation de FrontPage modifie la structure d'Apache, qui est relié à &php;.
      Recompiler &php; (en utilisant 'make clean ; make') après avoir patché Apache avec l'extension
      FrontPage devrait résoudre ce problème.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.blankscreen">
    <question>
     <para>
      Unix/Windows : J'ai installé &php;, mais lorsque je tente d'accéder à un fichier contenant un
      script &php; via mon navigateur, j'obtiens un écran vide.
     </para>
    </question>
    <answer>
     <para>
      Affichez le code source du document dans votre navigateur et vous
      devriez probablement trouver le code source de votre script &php;.
      Celà signifie que le serveur web n'a pas envoyé le script à &php; pour interprétation.
      Quelque chose est donc incorrect dans le fichier de configuration de votre serveur web -
      re-vérifier la configuration du serveur web en vous référant aux instructions d'installations
      de &php;.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.500error">
    <question>
     <para>
      Unix/Windows : J'ai installé &php;, mais lorsque je tente d'accéder à un fichier contenant un
      script &php; via mon navigateur, j'obtiens une erreur de type 'server 500 error'.
     </para>
    </question>
    <answer>
     <para>
      Quelque chose se passe mal lorsque le serveur tente d'utiliser &php;.
      Pour tenter de récupérer un message d'erreur, depuis la ligne de commande, placez vous
      dans le répertoire contenant l'exécutable &php; (<filename>php.exe</filename> sous 
      Windows) et exécutez la commande <literal>php -i</literal>.
      Si &php; a un problème quelconque l'empéchant de fonctionner, un message d'erreur
      devrait s'afficher qui devrait expliquer comment résoudre ce souci. Si un
      écran de code HTML apparait (la sortie de la fonction <function>phpinfo</function>),
      celà signifie que &php; fonctionne correctement et que le problème doit certainement venir
      de la configuration de votre serveur web que vous devriez re-vérifier.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.undefinedsyms">
    <question>
     <para> 
      Quelques systèmes d'exploitations : J'ai installé &php; sans erreur, mais lorsque
      je tente de démarrer Apache, j'otiens une erreur du type 
      '<literal>Undefined symbols</literal>' :
      <programlisting role="shell">
[mybox:user /src/php4] root# apachectl configtest
 apachectl: /usr/local/apache/bin/httpd Undefined symbols:
  _compress
  _uncompress
      </programlisting>
     </para>
    </question>
    <answer>
     <para>
      Celà n'a actuellement rien à voir avec &php; mais avec la librairie cliente MySQL.
      Suivant les versions, elle a besoin que &php; soit compiler avec l'option
      --with-zlib, d'autre non. Ce problème est égaement traité dans la FAQ de MySQL.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.cgierror">
    <question>
     <para>
      Windows : J'ai installé &php;, mais lorsque j'accède à un fichier contenant un script &php;
      via mon navigateur, j'obtiens l'erreur : 
      <screen>
cgi error:
 The specified CGI application misbehaved by not
 returning a complete set of HTTP headers.
 The headers it did return are:
      </screen>
     </para>
    </question>
    <answer>
     <para>
      Ce message d'erreur signifie que &php; a échoué lors de l'affichage.
      Pour tenter de récupérer un message d'erreur, depuis la ligne de commande, 
      placez-vous dans le répertoire contenant l'exécutable &php;
      (<filename>php.exe</filename> sous Windows) et exécutez la commande
      <literal>php -i</literal>. Si &php; a un quelconque souci de fonctionnement, alors un message
      d'erreur le décrivant s'affichera. Si vous obtenez un écran de code HTML (le contenu
      du résultat de la fonction <function>phpinfo</function>), alors &php; fonctionne 
      correctement.
     </para>
     <para>
      Si &php; fonctionne depuis la ligne de commane, tentez d'accéder à votre script encore une fois
      via votre navigateur. Si il échoue toujours, alors, il se peut que ce soit l'un des soucis
      suivants :
     </para>
     <itemizedlist>
      <listitem>
       <simpara>
        Les permissions de votre script &php; des fichiers <filename>php.exe</filename>, 
        <filename>php4ts.dll</filename>, &php.ini; ou de toute extension nécessaire à &php;
        que vous tentez de charger, sont telles que l'utilisateur internet anonyme de votre système
        <literal>ISUR_&lt;machinename&gt;</literal> ne peut pas y accéder.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        le script &php; n'existe pas (ou n'est pas à l'endroit que vous pensez, relativement au 
        répertoire racine de votre serveur web). Notez que pour le serveur web IIS, vous pouvez
        vérifier celà en cochant la case 'vérifier si le fichier existe' lors de la configuration
        de l'exécution des scripts dans le gestionnaire de services Internet. Si un fichier de script
        n'existe pas, le serveur web retournera une erreur 404. IIS a également
        l'avantage d'effectuer tous les identifications requises à votre place,
        basés sur les permissions NTLanMan, sur votre fichier de script.
       </simpara>
      </listitem>
     </itemizedlist>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.phpandiis">
    <question>
     <para>
      Windows : J'ai suivi toutes les instructions, mais je n'arrive toujours pas à faire fonctionner
      &php; et IIS ensemble !
     </para>
    </question>
    <answer>
     <para>
      Assurez-vous que chaque utilisateur qui a besoin d'exécuter un script &php;
      possède les droits requis pour exécuter le fichier <filename>php.exe</filename> !
      IIS utilise un utilisateur anonyme qui est ajouté lors de l'installation de IIS.
      Cette utilisateur doit avoir les droits suffisant sur le fichier 
      <filename>php.exe</filename>. De même, tous les utilisateurs enregistrés doivent
      posséder les droits requis pour exécuter le fichier <filename>php.exe</filename>.
      Pour IIS4, vous devez lui dire que &php; est un moteur de script.
      De plus, vous devriez lire cette <link linkend="faq.installation.forceredirect">FAQ</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.forceredirect">
    <question>
     <para>
      Lorsque vous exécutez &php; comme CGI avec IIS, PWS, OmniHTTPD ou Xitami,
      j'obtiens l'erreur suivante : <literal>Security Alert! PHP CGI 
       cannot be accessed directly.</literal>.
     </para>
    </question>
    <answer>
     <para>
      Vous devez définir la directive <link linkend="ini.cgi.force-redirect">
      cgi.force_redirect</link> à &zero;. Par défaut, elle vaut &one;, donc, soyez sûr
      que cette directive n'est pas commentée (précédé d'un point virgule). Comme toutes les
      directives, elles sont définies dans le &php.ini;.
     </para>
     <para>
      Parceque la valeur par défaut vaut &one;, il est critique que vous soyez sûr à 100% que le
      bon fichier &php.ini; a été lu.
      Lisez cette <link linkend="faq.installation.findphpini">FAQ</link> pour plus de détails.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.findphpini">
    <question>
     <para>
      Comment puis-je savoir si mon &php.ini; a bien été trouvé et lu ?
      Celà semble être le cas mais aucun de mes changements n'ont eu d'effets.
     </para>
    </question>
    <answer>
     <para>
      Pour être sûr que votre &php.ini; a été lu par &php;, effectuez un appel à la fonction
      <function>phpinfo</function> et vers le haut du document résultant, il devrait figurer
      une liste appelée <literal>Configuration File (php.ini)</literal>.
      Celà vous indiquera où &php; a cherché le &php.ini; et si oui ou non il l'a lu.
      Si il n'apparait qu'un chemin vers un répertoire existant, celà signifie que
      vous devez copier votre &php.ini; dans ce répertoire. Si le &php.ini; est présent dans le chemin,
      celà signifie qu'il a bien été lu.
     </para>
     <para>
      Si le &php.ini; a bien été lu et que vous exécutez &php; comme module,
      alors assurez-vous de redémarrer le serveur web après avoir effectué les modifications
      à votre &php.ini;.
     </para>
    </answer>
   </qandaentry>
  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
