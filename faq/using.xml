<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.29 $ -->
<!-- EN-Revision: 1.38 Maintainer: gui Status: ready -->
<!-- Reviewed: yes -->

<chapter xml:id="faq.using" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Utiliser PHP</title>
  <titleabbrev>Utiliser PHP</titleabbrev>

  <para>
   Cette section regroupe plusieurs erreurs que vous pouvez rencontrer
   lors de l'écriture de vos scripts PHP.
  </para>

  <qandaset>
   <qandaentry xml:id="faq.using.anyform">
    <question>
     <para>
      J'aimerais écrire un script PHP générique qui pourrait traiter les
      données provenant de tout formulaire. Comment savoir quelles variables
      de la méthode POST sont disponibles ?
     </para>
    </question>
    <answer>
     <para>
      PHP fournit plusieurs <link linkend="language.variables.predefined">
      variables pré-définies</link>, comme la superglobale <varname>
      $_POST</varname>. Vous pouvez boucler sur <varname>$_POST</varname>
      puisque c'est un tableau associatif de toutes les valeurs POSTées.
      Par exemple, bouclons dessus simplement avec <link linkend="control-structures.foreach">
      foreach</link>, vérifions les valeurs vides et affichons-les.
      <programlisting role="php">
<![CDATA[
<?php
$empty = $post = array();
foreach ($_POST as $nomvar => $valeurvar) {
    if (empty($varvalue)) {
        $empty[$nomvar] = $valeurvar;
    } else {
        $post[$nomvar] = $valeurvar;
    }
}

echo '<pre>';
if (empty($empty)) {
    print "Aucune valeur POSTée n'est vide, postées :\n";
    var_dump($post);
} else {
    print "Nous avons " . count($empty) . " valeurs vides\n";
    print "Postées :\n"; var_dump($post);
    print "Vides :\n";  var_dump($empty);
    exit;
}
echo '</pre>';
?>
]]>
      </programlisting>
     </para>
     
     &note.superglobals;

    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.addslashes">
    <question>
     <para>
      Il faut que je convertisse tous les guillemets simples (')
      en un antislash suivi d'un guillemet simple (\'). Comment le faire
      avec une expression régulière ? J'aimerais aussi convertir " en \" et
      \ en \\.
     </para>
    </question>
    <answer>
     <para>
      La fonction <function>addslashes</function> le fera. Voir aussi
      <function>mysql_escape_string</function>. Vous pouvez aussi supprimer
      les antislashs avec <function>stripslashes</function>.
     </para>

     &note.magicquotes.gpc;

    </answer>
   </qandaentry>
   
   <qandaentry xml:id="faq.using.stripslashes">
    <question>
     <para>
      Tous mes " se transforment en \" et mes ' en \', comment me débarrasser
      de tous ces antislashs ? Comment et pourquoi sont-ils apparus ?
     </para>
    </question>
    <answer>
     <para>
      La fonction PHP <function>stripslashes</function> supprimera ces
      antislashs de votre chaîne de caractères. La plupart du temps, ils
      apparaissent quand la directive PHP
      <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> est activée.
     </para>

     &note.magicquotes.gpc;

    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.register-globals">
    <question>
     <para>
      Comment la directive register_globals affecte-t-elle mes scripts ?
     </para>
    </question>
    <answer>
     <para>
      Tout d'abord, une rapide explication sur ce que réalise cette configuration
      ini. Supposons que nous utilisons l'URL suivante :
      <literal>http://example.com/foo.php?animal=cat</literal>
      et, dans le fichier <filename>foo.php</filename>, nous avons le code PHP suivant :
     </para>
     <para>
      <programlisting role="php">
<![CDATA[
<?php
// L'utilisation de $_GET est ici préférée
echo $_GET['animal'];

// Pour que $animal existe, register_globals doit être actif
// NE FAITE JAMAIS CELA !
echo $animal;

// Ceci s'applique à toutes les variables, y compris à $_SERVER
echo $_SERVER['PHP_SELF'];

// Encore une fois, pour que $PHP_SELF existe, register_globals doit être actif
// NE FAITE JAMAIS CELA !
echo $PHP_SELF;
?>
]]>
     </programlisting>
    </para>
    <para>
     Le code ci-dessus démontre la façon dont register_globals crée un grand
     nombre de variables. Durant des années, ce type de codage a été désapprouvé,
     et donc, depuis des années, cette fonctionnalité a été désactivée par défaut.
     Depuis PHP 6, cette fonctionnalité a été supprimée. Bien que la majorité
     des hébergeurs Web a désactivé cette fonctionnlité, il y a toujours sur
     le web des articles, des tutoriaux et des livres qui demandent à ce que
     cette option de configuration soit activée.
    </para>
    <para>
     Voir aussi les ressources suivantes pour plus d'informations :
     <simplelist>
      <member>La directive <link linkend="ini.register-globals">register_globals</link></member>
      <member>Le <link linkend="security.globals">chapitre sur la sécurité et register globals</link></member>
      <member><link linkend="language.variables.external">Gestion des variables externes</link></member>
      <member>Utilisez les <link linkend="language.variables.superglobals">superglobals</link> à la place</member>
     </simplelist>
    </para>
    <note>
     <para>
      Dans l'exemple ci-dessus, nous utilisez une <acronym>URL</acronym> qui contient
      une QUERY_STRING. Passer des informations comme cela se fait via une requête
      HTTP GET, c'est la raison pour laquelle la superglobale <varname>$_GET</varname>
      est utilisée.
     </para>
    </note>
   </answer>
  </qandaentry>

   <qandaentry xml:id="faq.using.wrong-order">
    <question>
     <para>
      Quand je fais ce qui suit, l'affichage se fait dans le mauvais ordre :
     <programlisting role="php">
<![CDATA[
<?php
function mafonction($argument)
{
    echo $argument + 10;
}
$variable = 10;
echo "mafonction($variable) = " . mafonction($variable);
?>
]]>
    </programlisting>
     que se passe-t-il ?
     </para>
    </question>
    <answer>
     <para>
      Pour pouvoir utiliser le résultat de votre fonction dans une expression
      (comme le concaténer avec une chaîne comme dans cet exemple), vous devez
      retourner la valeur avec <function>return</function>, et non pas
      l'afficher avec <function>echo</function>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.newlines">
    <question>
     <para>
      Hey, où sont mes nouvelles lignes ?
      <programlisting role="php">
<![CDATA[
<pre>
<?php echo "Ceci est ma première ligne."; ?>
<?php echo "Celle-ci devrait s'afficher en dessous de la première."; ?>
</pre>
]]>
      </programlisting>
     </para>
    </question>
    <answer>
     <para>
      En PHP, la fin d'un bloc de code est soit "?&gt;" ou
      "?&gt;\n" (où \n signifie une nouvelle ligne). Donc dans l'exemple plus
      haut, les phrases affichées le seront sur une seule ligne, car PHP
      oublie les nouvelles lignes après la fin du bloc. Cela signifie que vous
      devez insérer une nouvelle ligne de plus après chaque bloc de code PHP
      pour la lui faire afficher.
     </para>
     <para>
      Pourquoi PHP fait-il cela ? Car lors du formatage du HTML, cela
      vous simplifie la vie car vous ne voulez pas de cette nouvelle ligne,
      mais vous devez créer de très longues lignes ou rendre la source brute
      de la page illisible pour arriver à cet effet.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.headers-sent">
    <question>
     <para>
      J'obtiens le message 'Warning: Cannot send session cookie - headers already
      sent...' ou 'Cannot add header information - headers already sent...'.
     </para>
    </question>
    <answer>
     <para>
      Les fonctions <function>header</function>, <function>setcookie</function>,
      et les <link linkend="ref.session">fonctions de session</link>
      doivent ajouter des en-têtes au flux de sortie, mais ceux-ci ne
      peuvent être envoyés qu'avant le reste du contenu. Il ne doit y avoir
      aucun affichage avant d'utiliser ces fonctions, comme le HTML par
      exemple. La fonction <function>headers_sent</function> vérifiera si
      votre script a déjà envoyé des en-têtes. Voyez aussi 
      <link linkend="ref.outcontrol">les fonctions de bufferisation de sortie</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.header">
    <question>
     <para>
      J'ai besoin d'accéder à des informations dans l'en-tête de requête
      directement. Comment puis-je le faire ?
     </para>
    </question>
    <answer>
     <para>
      La fonction <function>getallheaders</function> le fera si vous exécutez
      PHP en tant que module Apache. Le code suivant vous montrera tous les
      en-têtes de requête :
      <programlisting role="php">
<![CDATA[
<?php
$headers = getallheaders();
foreach ($headers as $nom => $contenu) {
    echo "headers[$nom] = $contenu<br />\n";
}
?>
]]>
      </programlisting>
     </para>
     <para>
      Voir aussi 
      <function>apache_lookup_uri</function>,
      <function>apache_response_headers</function> et
      <function>fsockopen</function>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.authentication">
    <question>
     <para>
      Quand j'essaye d'utiliser l'identification avec IIS j'obtiens 
      <literal>'No Input file specified'</literal>.
     </para>
    </question>
    <answer>
     <para>
      Le modèle sécuritaire de IIS est en faute. C'est un problème commun à
      tous les programmes CGI fonctionnant avec IIS. Une alternative est de
      créer un fichier HTML (non exécuté par PHP) comme page d'entrée dans
      le dossier où il faut s'identifier. Utilisez alors une balise META
      pour rediriger vers la page PHP, ou encore proposez un lien vers
      celle-ci. PHP reconnaîtra alors l'identification correctement. Avec
      le module ISAPI, cela n'est pas un problème. Cela ne devrait pas non
      plus affecter d'autres serveurs NT. Pour plus d'informations, voyez : 
      <link xlink:href="&url.iis;">&url.iis;</link> et la section du manuel
      concernant l'<link linkend="features.http-auth">identification HTTP</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.iis.sharing">
    <question>
     <para>
      Windows: Je ne peux pas accéder aux fichiers partagés sur un autre ordinateur
      utilisant IIS
     </para>
    </question>
    <answer>
     <para>
      Vous devez modifier le service <literal>Go to Internet Information
      Services</literal>. Localisez votre fichier PHP et éditez ces propriétés.
      Placez-vous sur l'onglet <literal>File Security</literal>, <literal>Edit -&lt; 
      Anonymous access and authentication control</literal>.
     </para>
     <para>
      Vous pouvez résoudre ce souci soit en décochant la case <literal>Anonymous
      Access</literal> et en laissant la case <literal>Integrated Window
      Authentication</literal> cochée, soit en cochant la case <literal>Anonymous
      Access</literal> et en éditant l'utilisateur qui ne doit pas avoir les droits d'accès.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.netscape">
    <question>
     <para>
      Mon script PHP fonctionne avec IE et Lynx, mais avec Netscape une
      portion de ce qui devrait s'afficher manque. Quand j'affiche la source
      HTML de la page, je vois le contenu avec IE mais pas avec Netscape.
     </para>
    </question>
    <answer>
     <para>
      Netscape est plus strict que IE concernant les balises HTML (comme les tables).
      Faire valider votre HTML généré par un validateur HTML, comme 
      <link xlink:href="&url.w3.validator;">validator.w3.org</link>, peut se
      révéler utile. Par exemple, une &lt;/table&gt; manquante peut provoquer
      ce problème.
     </para>
     <para>
      De plus, IE et Lynx ignorent les NULs (<literal>\0</literal>) dans le
      flux HTML, Netscape non. La meilleure façon de le vérifier est de
      compiler la version en <link linkend="features.commandline">ligne de
      commande</link> de PHP (aussi connue sous le nom de version CGI) et
      d'exécuter vos scripts à partir de la console. Sous *nix, redirigez la
      sortie sur <literal>od -c</literal> et cherchez les caractères  
      <literal>\0</literal>. Si vous êtes sous Windows, vous devez trouver un
      éditeur ou un autre programme qui vous permettra de visualiser les
      fichiers binaires. Lorsque Netscape rencontre un NUL dans un fichier, il
      n'affichera la plupart du temps rien dans cette ligne, alors que IE et
      Lynx le feront.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.mixml">
    <question>
     <para>
      Comment mélanger XML et PHP ? PHP se plaint de mes balises &lt;?xml !
     </para>
    </question>
    <answer>
     <para>
      Pour inclure &lt;?xml dans votre code PHP, vous devrez désactiver les
      short tags en configurant la directive PHP
      <link linkend="ini.short-open-tag">short_open_tags</link> à 
      &zero;. Vous ne pouvez pas modifier cette directive avec
      <function>ini_set</function>.  Que <link linkend="ini.short-open-tag">
      short_open_tags</link> soit à on ou off, vous pouvez toujours faire ceci :
      <literal>&lt;?php echo '&lt;?xml'; ?&gt;</literal>.  La valeur par
      défaut pour cette directive est on.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.editor">
    <question>
     <para>
      Comment utiliser PHP avec FrontPage ou d'autres éditeurs HTML qui
      insistent pour mettre mon code ailleurs ?
     </para>
    </question>
    <answer>
     <para>
      La façon la plus simple est d'activer l'utilisation des balises ASP dans
      votre code PHP. Cela vous permettra d'utiliser des délimiteurs de code
      à la manière de ASP : &lt;% et %&gt;. Quelques éditeurs HTML populaires
      gèrent cela plus habilement. Pour activer les balises ASP, vous devez
      configurer la variable <link linkend="ini.asp-tags">asp_tags</link>
      de &php.ini;, ou utiliser la directive Apache appropriée.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.variables">
    <question>
     <para>
      Où puis-je trouver une liste complète des variables prédéfinies que je 
      peux utiliser dans mes scripts PHP ?
     </para>
    </question>
    <answer>
     <para>
      Lisez la page du manuel qui concerne les <link linkend="language.variables.predefined">
      variables prédéfinies</link> vu qu'elle présente une liste
      partielle des variables prédéfinies disponibles dans votre script. Une
      liste complète des variables disponibles (et beaucoup d'informations)
      peut être vue en appelant la fonction <function>phpinfo</function>.
      Lisez la section du manuel traitant des  
      <link linkend="language.variables.external">variables non-issues de
      PHP</link>, elle décrit des scénarios communs pour les variables
      externes, comme celles issues d'un formulaire HTML, d'un cookie, et de
      l'URL.
     </para>

     &note.registerglobals;

    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.freepdf">
    <question>
     <para>
      Comment puis-je générer des fichiers PDF sans utiliser les bibliothèques
      non libres
      <link linkend="ref.pdf">PDFLib</link> ? J'aimerais une façon gratuite
      et qui ne requiert pas de bibliothèques PDF externes.
     </para>
    </question>
    <answer>
     <para>
      Il y'a quelques alternatives écrites en PHP tel que
      <link xlink:href="&url.pdf.fpdf;">FPDF</link> et
      <link xlink:href="&url.pdf.tcpdf;">TCPDF</link>.
     </para>
     <para>
      Il y a également l'extension <link linkend="book.haru">Haru</link>
      qui utilise la bibliothèque externe libre libHaru.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.cgi-vars">
    <question>
     <para>
      J'essaye d'accéder à une des variables standard CGI (comme
      <varname>$DOCUMENT_ROOT</varname> ou 
      <varname>$HTTP_REFERER</varname>) dans une fonction écrite par moi-même,
      et il semblerait qu'elle ne soit pas définie. Que se passe-t-il ?
     </para>
    </question>
    <answer>
     <para>
      Il est important de réaliser que la directive PHP <link
      linkend="ini.register-globals">register_globals</link> affecte aussi les
      variables d'environnement et de serveur. Lorsque register_globals = off
      (valeur par défaut depuis PHP 4.2.0), <varname>$DOCUMENT_ROOT</varname>
      n'existera pas. À la place, utilisez 
      <varname>$_SERVER['DOCUMENT_ROOT']</varname>. 
      Si register_globals = on alors les variables
      <varname>$DOCUMENT_ROOT</varname> et
      <varname>$GLOBALS['DOCUMENT_ROOT']</varname> existeront aussi.
     </para>
     <para>
      Si vous êtes sûrs que register_globals = on et que vous vous demandez
      pourquoi <varname>$DOCUMENT_ROOT</varname> n'est pas disponible à
      l'intérieur de votre fonction, c'est parce que elle est comme toute autre
      variable et requiert donc <literal>global $DOCUMENT_ROOT</literal> dans
      le corps de la fonction.  Voyez aussi la page du manuel à propos de la 
      <link linkend="language.variables.scope">portée des variables</link>. Il
      est recommandé de coder avec register_globals = off.
     </para>
     
     &note.superglobals;

    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.shorthandbytes">
    <question>
     <para>
      Quelques directives PHP peuvent également prendre des valeurs d'octets
      sténographiées contrairement aux valeurs d'octets uniquement <type>entières</type>.
      Quelles sont toutes les options d'octets sténographiées disponibles ?
     </para>
    </question>
    <answer>
     <para>
      Les options disponibles sont K (pour Kilo octets) et M (pour mégaoctet) et 
      G (pour gigaoctet ; disponible depuis PHP 5.1.0), ils sont
      insensibles à la casse. Tout autre syntaxe est supposée représenter des octets.
      <literal>1M</literal> équivaut à un mégaoctet ou <literal>1048576</literal>
      octets. <literal>1K</literal> équivaut à un kilooctet ou 
      <literal>1024</literal> octets. Vous ne devriez pas utiliser
      ces abréviations en dehors du fichier &php.ini;. À la place, utilisez
      une valeur <type>entière</type> en octets. Lisez la documentation
      sur la fonction <function>ini_get</function> pour un exemple sur la façon
      de convertir ces valeurs.
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
