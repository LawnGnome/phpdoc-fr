<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.16 Maintainer: gui Status: ready -->
<!-- Reviewed: yes -->

<chapter xml:id="faq.languages" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>PHP et les autres langages</title>
 <titleabbrev>PHP et les autres langages</titleabbrev>
 
 <para>
  PHP est le meilleur langage pour la programmation web, mais qu'en est-il
  des autres langages ?
 </para>
 
 <qandaset>
  <qandaentry xml:id="faq.languages.asp">
   <question>
    <para>PHP contre ASP ?</para>
   </question>
   <answer>
    <para>
     ASP n'est pas vraiment un langage en lui-même, c'est l'acronyme de
     Active Server Pages, le langage courant pour programmer en ASP étant le
     Visual Basic ou le JScript. Le plus gros inconvénient de ASP est que
     c'est un système propriétaire utilisé nativement sur Microsoft Internet
     Information Server (IIS). Cela limite sa disponibilité aux seules
     plates-formes Win32. Il existe cependant des projets pour utiliser ASP
     dans d'autres environnements et avec d'autres serveurs web :
     <link xlink:href="&url.instantasp;">InstantASP</link>
     de <link xlink:href="&url.halcyon;">Halcyon</link> (commercial),
     Chili!Soft ASP de 
     <link xlink:href="&url.chilisoft;">Chili!Soft</link> (commercial).
     ASP est connu pour être un langage plus lent et plus lourd que PHP,
     mais aussi moins stable. Les gens favorables à ASP prétendront que
     comme ils utilisent de base VBScript, c'est un langage facile à apprendre
     si vous connaissez déjà Visual Basic. Le support de ASP est activé par
     défaut dans IIS, le rendant facile à mettre en oeuvre et à utiliser. Les
     composants inclus de base dans ASP sont vraiment limités, et si vous
     devez utiliser des fonctionnalités "avancées" comme l'interaction avec
     des serveurs FTP, vous devrez acheter des composants supplémentaires.
    </para>
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.languages.aspconverter">
   <question>
    <para>Existe-t-il un convertisseur de ASP vers PHP ?</para>
   </question>
   <answer>
    <para>
     Oui, le programme côté serveur <link
     xlink:href="&url.asp2php;">asp2php</link> est le plus fréquemment utilisé, de
     même que cette option <link xlink:href="&url.asptranslator;">côté
     client</link>.
    </para>
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.languages.coldfusion">
   <question>
    <para>PHP contre Cold Fusion ?</para>
   </question>
   <answer>
    <para>
     PHP est réputé pour être plus rapide et plus efficace pour la
     programmation complexe et pour tester de nouvelles idées. PHP est
     aussi plus stable et consomme moins de ressources. Cold Fusion a une
     meilleure gestion des erreurs, une meilleure abstraction de bases de
     données et une meilleure gestion des dates, bien que l'abstraction de
     bases de données soit chose possible en PHP 4. Un autre point réputé
     pour être une des forces de Cold Fusion est sont excellent moteur de
     recherche, mais il peut paraître absurde d'intégrer un moteur de
     recherche dans un langage de script Web. PHP fonctionne sur nombre de
     plates-formes alors que Cold Fusion ne supporte que Win32, Solaris, Linux
     et HP/UX. Cold Fusion intègre un bon environnement de développement
     (IDE) et il est facile à apprendre, alors que PHP requiert davantage
     de connaissances en programmation. Cold Fusion est pensé pour des
     non-développeurs, alors que PHP est pensé pour les développeurs.
    </para>
    <para>
     Un excellent résumé de Michael J Sheldon sur ce sujet a été posté sur la
     liste de diffusion PHP. Une copie du message peut être trouvée sur
     <link xlink:href="&url.coldfusion.summary;">&url.coldfusion.summary;</link>.
    </para>
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.languages.perl">
   <question>
    <para>PHP contre Perl ?</para>
   </question>
   <answer>
    <para>
     Le plus grand avantage de PHP par rapport à Perl est que PHP a été
     pensé pour la programmation Web alors que Perl a été pensé pour faire
     des choses bien plus diversifiées, ce qui le rend bien plus compliqué.
     La complexité / flexibilité de Perl rend l'écriture de script plus
     facile, mais en rend la lecture par un autre auteur / codeur beaucoup
     moins aisée. PHP est plus facile que Perl à intégrer dans du HTML.
     PHP a toutes les "bonnes" fonctionnalités de Perl : la construction,
     la syntaxe... sans pour autant être aussi compliqué que Perl. Perl est
     un véritable langage bien testé, du fait de son existence depuis la fin
     des années 80, mais PHP devient mature très rapidement.
    </para>
   </answer>
  </qandaentry>
  
 </qandaset>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
