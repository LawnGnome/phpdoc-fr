<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->
 <sect1 id="language.oop5.magic">
  <title>Méthodes magiques</title>
  <para>
   Les fonctions nommées
   <literal>__construct</literal>,
   <literal>__destruct</literal>
   (voir les <link linkend="language.oop5.decon">Constructeurs et Destructeurs</link>),
   <literal>__call</literal>,
   <literal>__get</literal>,
   <literal>__set</literal>
   (voir la <link linkend="language.oop5.overloading">surcharge</link>),
   <literal>__sleep</literal>,
   <literal>__wakeup</literal> et
   <literal>__toString</literal> 
   sont magiques dans les classes &php;. Vous ne pouvez pas
   avoir de fonctions nommées comme celà dans n'importe
   la quelle de vos classes sans que vous ne vouliez modifier 
   le comportement associé à ces fonctions magiques.
  </para>

  <caution>
   <simpara>
    &php; réserve toutes les fonctions dont le nom commence par __ pour
    les fonctions magiques. Il est recommandé de ne pas utiliser de noms 
    de fonctions utilisant __ mise à part si vous voulez des fonctionnalités magiques
    documentées.
   </simpara>
  </caution>
 
  <sect2 id="language.oop5.magic.sleep">
   <title><literal>__sleep</literal> et <literal>__wakeup</literal></title>
   <para>
    La fonction <function>serialize</function> vérifie si votre classe a une fonction
    avec le nom magique <literal>__sleep</literal>. Si c'est le cas, cette fonction
    sera exécutée avant toute linéarisation. Elle peut nettoyer l'objet et elle est supposée
    retourner un tableau avec les noms de toutes les variables de l'objet 
    qui doivent être linéarisées.
   </para>
   <para>
    Le but avoué de <literal>__sleep</literal> est de clôre toutes les
    connexions aux bases de données possédés par l'objet, valider 
    les données en attente ou d'effectuer les nettoyages demandés. 
    De plus, cette fonction est utile si vous avez de très gros objets
    qui n'ont pas besoin d'ere sauvegardés en totalité.
   </para>
   <para>
    Réciproquement, la fonction <function>unserialize</function> vérifie
    la présence d'une fonction dont le nom est le nom magique
    <literal>__wakeup</literal>. Si elle est présente, cette fonction
    peut reconstruire toute ressource que l'objet possède.
   </para>
   <para>
    Le but avoué de <literal>__wakeup</literal> est de rétablir
    toutes connexions aux bases de données qui ont été perdues
    durant la linéarisation et d'effectuer toutes autres réinitialisations 
    demandées.
   </para>
  </sect2>

  <sect2 id="language.oop5.magic.tostring">
   <title><literal>__toString</literal></title>
   <para>
    La méthode <literal>__toString</literal> autorise une classe 
    de décider comme elle doit réagir lorsqu'elle est convertie en chaîne de
    caractères.
   </para>
   <example>
    <title>Exemple simple</title>
    <programlisting role="php">
<![CDATA[
<?php
// Déclaration d'une classe simple
class TestClass
{
    public $foo;

    public function __construct($foo) {
        $this->foo = $foo;
    }

    public function __toString() {
        return $this->foo;
    }
}

$class = new TestClass('Bonjour');
echo $class;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Bonjour
]]>
    </screen>
   </example>
   <para>
    Il est important de noter que la méthode <literal>__toString</literal>
    ne peut être appelée que lorsqu'elle est combiné avec 
    <function>echo</function> ou <function>print</function>.
   </para>
   <example>
    <title>Cas où <literal>__toString</literal> est appelé</title>
    <programlisting role="php">
<![CDATA[
<?php
// __toString appelé
echo $class;

// __toString appelé (reste un paramètre normal pour echo)
echo 'text', $class;

// __toString non appelé (opérateur de concaténation utilisé en premier)
echo 'text' . $class;

// __toString non appelé (convertion en une chaîne de caractères en premier)
echo (string) $class;
?>
]]>
    </programlisting>
   </example>
  </sect2>
 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
