<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 299619 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<sect1 xml:id="language.oop5.autoload" xmlns="http://docbook.org/ns/docbook">
 <title>Auto-chargement de classes</title>
 <para>
  De nombreux développeurs qui créent des applications orientées objet,
  créent un fichier source par définition de classe. L'inconvénient
  majeur de cette méthode est d'avoir à écrire une longue liste d'inclusions de
  fichier de classes au début de chaque script : une inclusion par classe.
 </para>
 <para>
  En PHP 5, ce n'est plus nécessaire. Vous pouvez définir la fonction
  <function>__autoload</function> qui va automatiquement être appelée
  si une classe n'est pas encore définie au moment de son utilisation.
  Grâce à elle, vous avez une dernière chance pour inclure une définition de
  classe, avant que PHP ne lance une erreur.
 </para>
 <note>
  <para>
   Avant PHP 5.3.0, les exceptions lancées depuis la fonction __autoload
   ne pouvaient pas être interceptées par un bloc
   <link linkend="language.exceptions">catch</link> et provoquaient une
   erreur fatale. Depuis PHP 5.3.0+, elles peuvent être interceptées
   dans<link linkend="language.exceptions">catch</link>, à une précision
   près : Si vous lancez une exception personnalisée, alors la classe de
   cette exception doit être disponible. La fonction __autoload doit
   pouvoir être utilisée récursivement pour charger automatiquement
   la classe de l'exception personnalisée.
  </para>
 </note>
 <note>
  <para>
   L'auto-chargement n'est pas disponible si vous utilisez PHP en
   <link linkend="features.commandline">mode interactif</link> CLI.
  </para>
 </note>
 <note>
  <para>
   Si le nom de la classe est utilisé, e.g. dans la fonction
   <function>call_user_func</function>, alors il peut contenir des caractères
   dangereux comme <literal>../</literal>. Il est recommandé de ne pas utiliser
   d'entrées utilisateur dans de telle fonction, ou, au moins, vérifier l'entrée
   dans la fonction <function>__autoload</function>.
  </para>
 </note>
 <para>
  <example>
   <title>Exemple avec <function>__autoload</function></title>
   <para>
    Cet exemple tente de charger les classes <literal>MaClasse1</literal>
    et <literal>MaClasse2</literal>, dans les fichiers
    <filename>MaClasse1.php</filename> et
    <filename>MaClasse2.php</filename> respectivement.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
function __autoload($class_name) {
    require_once $class_name . '.php';
}

$obj  = new MaClasse1();
$obj2 = new MaClasse2();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Autre exemple d'auto-chargement</title>
   <para>
    Cet exemple tente de charger l'interface <literal>ITest</literal>.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

function __autoload($name) {
    var_dump($name);
}

class Foo implements ITest {
}

/*
string(5) "ITest"

Fatal error: Interface 'ITest' not found in ...
*/
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Auto-chargement avec gestion des exceptions en PHP 5.3.0+</title>
   <para>
    Cet exemple lance une exception et montre comment la traiter avec
    les blocs try/catch.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
function __autoload($name) {
    echo "Tentative de chargement de $name.\n";
    throw new Exception("Impossible de charger $name.");
}

try {
    $obj = new NonLoadableClass();
} catch (Exception $e) {
    echo $e->getMessage(), "\n";
}
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Tentative de chargement de NonLoadableClass.
Impossible de charger NonLoadableClass.
]]>
   </screen>
  </example>
  <example>
   <title>Auto-chargement avec gestion des exceptions en PHP 5.3.0+. Pas d'exception personnalisée</title>
   <para>
    Cet exemple lance une exception pour une classe non-chargeable, en
    utilisant une exception personnalisée.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
function __autoload($name) {
    echo "Tentative de chargement de $name.\n";
    throw new MissingException("Impossible de charger $name.");
}

try {
    $obj = new NonLoadableClass();
} catch (Exception $e) {
    echo $e->getMessage(), "\n";
}
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Tentative de chargement de NonLoadableClass.
Tentative de chargement de MissingException.

Fatal error: Class 'MissingException' not found in testMissingException.php on line 4
]]>
   </screen>
  </example>
 </para>
 
 <simplesect role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
     <member><function>unserialize</function></member>
     <member><link linkend="unserialize-callback-func">unserialize_callback_func</link></member>
     <member><function>spl_autoload</function></member>
     <member><function>spl_autoload_register</function></member>
    </simplelist>
  </para>
 </simplesect>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
