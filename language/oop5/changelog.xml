<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 304554 Maintainer: jpauli Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="language.oop5.changelog" xmlns="http://docbook.org/ns/docbook">
 <title>Modifications en POO (Programmation orientée objets)</title>
 <para>
  Les changements du modèle objets de PHP5 sont recensés ici. Plus d'informations et quelques notes
  peuvent être trouvées dans la documentation sur la POO en PHP5.
 </para>
 <para>
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>5.3.3</entry>
      <entry>
       Changement: Les méthodes ayant le même nom que la classe dans
       un <link linkend="language.namespaces">namespace</link>
       ne sont plus considérées comme <link
       linkend="language.oop5.decon">constructeur</link>. Ce changement
       n'affecte pas les classes sans namespace.
      </entry>
     </row>
      <row>
      <entry>5.3.0</entry>
      <entry>
       Changement: Les interfaces définissant des méthodes ayant un prototype avec des
       arguments obligatoires peuvent être implémentées dans les classes avec un argument
       facultatif sans erreur.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Changement: Il est maintenant possible de référencer une classe en utilisant une
       variable (ex: <literal>echo $classname::constant;</literal>).
       La valeur de la variable ne peut être un mot-clé (ex: <literal>self</literal>,
       <literal>parent</literal> ou <literal>static</literal>).
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Changement: Une erreur de niveau <constant>E_WARNING</constant> est levée si les méthodes
       magiques de <link linkend="language.oop5.overloading">surcharge</link>
       sont déclarées <link linkend="language.oop5.static">static</link>.
       La visibilité publique est aussi requise.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Changement: Avant 5.3.0, les exceptions lancées dans la fonction
       <link linkend="language.oop5.autoload">__autoload</link> ne pouvaient être traitées
       dans un bloc <link linkend="language.exceptions">catch</link> et résultaient en une
       erreur fatale. Maintenant les exceptions levées dans la fonction __autoload peuvent
       être attrapées dans un bloc <link linkend="language.exceptions">catch</link> et
       traitées. Si une exception personnalisée est levée, alors sa classe doit être disponible.
       La fonction __autoload peut par contre être utilisée recursivement pour autocharger
       la classe d'exception personnalisée.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Ajout de la méthode magique <link linkend="language.oop5.overloading">__callStatic</link>.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Ajout: <link linkend="language.types.string.syntax.heredoc">heredoc</link>
       et <link linkend="language.types.string.syntax.heredoc">nowdoc</link>
       sont supportées pour définir les <emphasis>constantes</emphasis> de classes et les
       attributs.
       Note: Les valeurs heredoc ne doivent pas contenir de variables.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Ajout du <link linkend="language.oop5.late-static-bindings">Late Static Bindings</link>
       (résolution statique tardive).
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Ajout de la méthode magique <link linkend="language.oop5.magic.invoke">__invoke</link>.
      </entry>
     </row>
     <row>
      <entry>5.2.0</entry>
      <entry>
       Changement: La méthode magique <link linkend="language.oop5.magic.tostring">__toString</link>
       n'était appelée que lors des appels à <function>echo</function> ou
       <function>print</function>. Maintenant, elle l'est dans n'importe quel contexte de
       chaine (ex: dans <function>printf</function> avec <literal>%s</literal>) mais pas dans
       les autres contextes (ex: avec le modificateur <literal>%d</literal>).
       Depuis PHP 5.2.0, convertir un objet en chaine sans méthode <literal>__toString</literal>
       émet une erreur <constant>E_RECOVERABLE_ERROR</constant>.
      </entry>
     </row>
     <row>
      <entry>5.1.3</entry>
      <entry>
       Changement: Dans les versions antérieures de PHP, l'utilisation de <literal>var</literal>
       était considérée comme obsolète et envoyait une erreur <constant>E_STRICT</constant>.
       Ce n'est plus le cas.
      </entry>
     </row>
     <row>
      <entry>5.1.0</entry>
      <entry>
       Changement: La méthode magique statique
       <link linkend="language.oop5.magic.set-state">__set_state</link> est maintenant appelée
       pour les classes exportées via <function>var_export</function>.
      </entry>
     </row>
     <row>
      <entry>5.1.0</entry>
      <entry>
       Ajout des méthodes magiques <link linkend="language.oop5.overloading.members">__isset</link>
       et <link linkend="language.oop5.overloading.members">__unset</link>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </para>
</sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
