<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.4 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="reserved.variables.server" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" role="noversion">
 <refnamediv>
  <refname>$_SERVER</refname>
  <refname>$HTTP_SERVER_VARS [Obsolète]</refname>
  <refpurpose>Variables de serveur et d'exécution</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
   <para>
    <varname>$_SERVER</varname> est un tableau contenant des informations
    comme les en-têtes, dossiers et chemins du script. Les entrées de ce
    tableau sont créées par le serveur web. Il n'y a aucune garantie que tous
    les serveurs les rempliront tous ; certains en oublieront quelques-unes
    et en rajouteront de nouvelles non mentionnées ici. Cependant, un grand
    nombre de ces variables fait partie des
    <link xlink:href="&url.cgispec;">spécifications CGI 1.1</link>, et vous pouvez donc
    vous attendre à les retrouver.
   </para>

   <simpara>
    <varname>$HTTP_SERVER_VARS</varname> contient les mêmes
    informations, mais n'est pas <link
    linkend="language.variables.superglobals">superglobale</link>. (Notez que
    <varname>$HTTP_SERVER_VARS</varname> et <varname>$_SERVER</varname>
    sont des variables différentes et que PHP les traite en tant que telles.)
   </simpara>

   <simpara>
    Vous pouvez éventuellement trouver les éléments suivants
    dans la variable <varname>$_SERVER</varname>. Notez que certains,
    n'auront pas de sens si vous utilisez PHP en <link linkend="features.commandline">ligne
    de commande</link>.
   </simpara>

   <para>
    <variablelist>
     <varlistentry>
      <term>'<varname>PHP_SELF</varname>'</term>
      <listitem>
       <simpara>
        Le nom du fichier du script en cours d'exécution, par
        rapport à la racine web.
        Par exemple, <varname>$_SERVER['PHP_SELF']</varname> dans le script
        situé à l'adresse <filename>http://www.monsite.com/test.php/foo.bar</filename>
        sera <filename>/test.php/foo.bar</filename>.
        La constante <link linkend="language.constants.predefined">__FILE__</link>
        contient le chemin complet ainsi que le nom du fichier (i.e. inclut) courant.
       </simpara>
       <simpara>
        Si PHP fonctionne en ligne de commande,
        cette variable contient le nom du script depuis PHP 4.3.0. Dans les
        versions antérieures, cette variable n'était pas disponible.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<link linkend="reserved.variables.argv">$argv</link>'</term>
      <listitem>
       <simpara>
        Tableau des arguments passés au script. Lorsque le script
        est appelé en ligne de commande, cela donne accès
        aux arguments, comme en langage C. Lorsque le script est
        appelé avec la méthode GET, ce tableau contiendra
        la chaîne de requête.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<link linkend="reserved.variables.argc">$argc</link>'</term>
      <listitem>
       <simpara>
        Contient le nombre de paramètres de la ligne de commande
        passés au script (si le script fonctionne en ligne de commande).
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>GATEWAY_INTERFACE</varname>'</term>
      <listitem>
       <simpara>
        Numéro de révision de l'interface CGI du serveur :
        i.e. '<literal>CGI/1.1</literal>'.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>SERVER_ADDR</varname>'</term>
      <listitem>
       <simpara>
        L'adresse IP du serveur sous lequel le script courant est en train
        d'être exécuté.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>SERVER_NAME</varname>'</term>
      <listitem>
       <simpara>
        Le nom du serveur hôte qui exécute le script suivant.
        Si le script est exécuté sur un hôte virtuel, ce sera
        la valeur définie pour cet hôte virtuel.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>SERVER_SOFTWARE</varname>'</term>
      <listitem>
       <simpara>
        Chaîne d'identification du serveur, qui est donnée dans
        les en-têtes lors de la réponse aux requêtes.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>SERVER_PROTOCOL</varname>'</term>
      <listitem>
       <simpara>
        Nom et révision du protocole de communication : i.e. '<literal>HTTP/1.0</literal>';
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>REQUEST_METHOD</varname>'</term>
      <listitem>
       <simpara>
        Méthode de requête utilisée pour accéder
        à la page; i.e. '<literal>GET</literal>',
        '<literal>HEAD</literal>', '<literal>POST</literal>', '<literal>PUT</literal>'.
       </simpara>
       <note>
        <para>
         Le script PHP se termine après avoir envoyé les en-têtes (après
         avoir produit n'importe quelle sortie sans avoir affiché le buffer) si
         la méthode de la requête était <literal>HEAD</literal>.
        </para>
       </note>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>REQUEST_TIME</varname>'</term>
      <listitem>
       <simpara>
        Le temps Unix depuis le début de la requête. Disponible depuis PHP 5.1.0.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>QUERY_STRING</varname>'</term>
      <listitem>
       <simpara>
        La chaîne de requête, si elle existe, qui est
        utilisée pour accéder à la page.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>DOCUMENT_ROOT</varname>'</term>
      <listitem>
       <simpara>
        La racine sous laquelle le script courant est exécuté,
        comme défini dans la configuration du serveur.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>HTTP_ACCEPT</varname>'</term>
      <listitem>
       <simpara>
        Contenu de l'en-tête <literal>Accept:</literal> de la
        requête courante, s'il y en a une.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>HTTP_ACCEPT_CHARSET</varname>'</term>
      <listitem>
       <simpara>
        Contenu de l'en-tête <literal>Accept-Charset:</literal>
        de la requête courante, si elle existe. Par exemple :
        '<literal>iso-8859-1,*,utf-8</literal>'.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>HTTP_ACCEPT_ENCODING</varname>'</term>
      <listitem>
       <simpara>
        Contenu de l'en-tête <literal>Accept-Encoding:</literal>
        de la requête courante, si elle existe. Par exemple : '<literal>gzip</literal>'.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>HTTP_ACCEPT_LANGUAGE</varname>'</term>
      <listitem>
       <simpara>
        Contenu de l'en-tête <literal>Accept-Language:</literal> de
        la requête courante, si elle existe. Par exemple : '<literal>fr</literal>'.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>HTTP_CONNECTION</varname>'</term>
      <listitem>
       <simpara>
        Contenu de l'en-tête <literal>Connection:</literal> de la
        requête courante, si elle existe. Par exemple : '<literal>Keep-Alive</literal>'.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>HTTP_HOST</varname>'</term>
      <listitem>
       <simpara>
        Contenu de l'en-tête <literal>Host:</literal> de la
        requête courante, si elle existe.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>HTTP_REFERER</varname>'</term>
      <listitem>
       <simpara>
        L'adresse de la page (si elle existe) qui a conduit le
        client à la page courante. Cette valeur est
        affectée par le client, et tous les clients ne le font pas.
        Certains navigateurs permettent même de modifier la valeur de
        <varname>HTTP_REFERER</varname>, sous forme de fonctionnalité.
        En bref, ce n'est pas une valeur de confiance.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>HTTP_USER_AGENT</varname>'</term>
      <listitem>
       <simpara>
        Contenu de l'en-tête <literal>User_Agent:</literal> de
        la requête courante, si elle existe. C'est une chaîne
        qui décrit le client HTML utilisé pour voir
        la page courante. Par exemple :
        <computeroutput>Mozilla/4.5 [en] (X11; U; Linux 2.2.9 i586)</computeroutput>.
        Entre autres choses, vous pouvez utiliser cette valeur avec
        <function>get_browser</function> pour optimiser votre page
        en fonction des capacités du client.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>HTTPS</varname>'</term>
      <listitem>
       <simpara>
        Définissez à une valeur non-vide si le script nécessite d'utiliser le protocole HTTPS.
       </simpara>
       <simpara>
        Noter que lors de l'utilisation de ISAPI avec IIS, la valeur sera
        <literal>off</literal> si la demande n'a pas été faite via le protocole HTTPS.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>REMOTE_ADDR</varname>'</term>
      <listitem>
       <simpara>
        L'adresse IP du client qui demande la page courante.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>REMOTE_HOST</varname>'</term>
      <listitem>
       <simpara>
        Le nom de l'hôte qui lit le script courant. La résolution
        DNS inverse est basée sur la valeur de <varname>REMOTE_ADDR</varname>.
       </simpara>
       <note>
        <simpara>
         Votre serveur web doit être configuré pour créer cette variable.
         Par exemple, pour Apache, vous devez ajouter la directive
         <literal>HostnameLookups On</literal> dans le fichier
         &httpd.conf;, pour que cette variable existe.
         Voyez aussi <function>gethostbyaddr</function>.
        </simpara>
       </note>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>REMOTE_PORT</varname>'</term>
      <listitem>
       <simpara>
        Le port utilisé par la machine cliente pour communiquer
        avec le serveur web.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>SCRIPT_FILENAME</varname>'</term>
      <listitem>
       <para>
        Le chemin absolu vers le fichier contenant le script en cours d'exécution.
        <note>
         <para>
          Si un script est exécuté avec le CLI, avec un chemin relatif,
          comme <filename>file.php</filename> ou
          <filename>../file.php</filename>,
          <varname>$_SERVER['SCRIPT_FILENAME']</varname>
          contiendra le chemin relatif spécifié par l'utilisateur.
         </para>
        </note>
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>SERVER_ADMIN</varname>'</term>
      <listitem>
       <simpara>
        La valeur donnée à la directive SERVER_ADMIN
        (pour Apache), dans le fichier de configuration. Si le script
        est exécuté par un hôte virtuel, ce sera la
        valeur définie par l'hôte virtuel.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>SERVER_PORT</varname>'</term>
      <listitem>
       <simpara>
        Le port de la machine serveur utilisé pour les
        communications. Par défaut, c'est '80'. En utilisant
        SSL, par exemple, il sera remplacé par le numéro
        de port HTTP sécurisé.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>SERVER_SIGNATURE</varname>'</term>
      <listitem>
       <simpara>
        Chaîne contenant le numéro de version du serveur
        et le nom d'hôte virtuel, qui sont ajoutés aux
        pages générées par le serveur, si cette
        option est activée.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>PATH_TRANSLATED</varname>'</term>
      <listitem>
       <simpara>
        Chemin dans le système de fichiers (pas le document-root)
        jusqu'au script courant, une fois que le serveur a fait
        une traduction chemin virtuel -> réel.
       </simpara>
       <note>
        <simpara>
         Depuis PHP 4.3.2, la variable <envar>PATH_TRANSLATED</envar> n'est plus seulement
         définie implicitement sous Apache 2 <acronym>SAPI</acronym>
         contrairement à la situation sous Apache 1 oÃ¹ elle est définie avec la même
         valeur que la variable serveur <envar>SCRIPT_FILENAME</envar> lorsqu'elle
         n'est pas fournie par Apache. Ce changement a été effectué pour être conforme
         aux spécifications <acronym>CGI</acronym> qui fait que
         la variable <envar>PATH_TRANSLATED</envar> doit exister seulement
         si la variable <envar>PATH_INFO</envar> est définie.
        </simpara>
        <simpara>
         Les utilisateurs d'Apache 2 devraient utiliser <literal>AcceptPathInfo = On</literal>
         au lieu de <filename>httpd.conf</filename> pour définir <envar>PATH_INFO</envar>.
        </simpara>
       </note>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>SCRIPT_NAME</varname>'</term>
      <listitem>
       <simpara>
        Contient le nom du script courant. Cela sert lorsque
        les pages doivent s'appeler elles-mêmes.
        La constante <link linkend="language.constants.predefined">__FILE__</link>
        contient le chemin complet ainsi que le nom du fichier (i.e. inclut) courant.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>REQUEST_URI</varname>'</term>
      <listitem>
       <simpara>
        L'URI qui a été fourni pour accéder
        à cette page. Par exemple : '<literal>/index.html</literal>'.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>PHP_AUTH_DIGEST</varname>'</term>
      <listitem>
       <simpara>
        Lorsque vous utilisez PHP avec Apache en tant que module
        faisant une identification HTTP <literal>Digest</literal>,
        cette variable est définie dans l'en-tête 'Authorization'
        envoyé par le client (que vous devez donc utiliser pour
        réaliser la validation appropriée).
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>PHP_AUTH_USER</varname>'</term>
      <listitem>
       <simpara>
        Lorsque vous utilisez PHP avec Apache ou IIS (ISAPI en PHP 5) en tant que
        module faisant une identification HTTP,
        cette variable est définie à l'utilisateur fourni par l'utilisateur.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>PHP_AUTH_PW</varname>'</term>
      <listitem>
       <simpara>
        Lorsque vous utilisez PHP avec Apache ou IIS (ISAPI en PHP 5) en tant que
        module faisant une identification HTTP,
        cette variable est définie au mot de passe fourni par l'utilisateur.
       </simpara>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term>'<varname>AUTH_TYPE</varname>'</term>
      <listitem>
       <simpara>
        Lorsque vous utilisez PHP avec Apache en tant que module faisant une identification HTTP,
        cette variable est définie au type d'identification.
       </simpara>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>

 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.1.0</entry>
       <entry>
        Introduction de <varname>$_SERVER</varname>, rendant obsolète
        <varname>$HTTP_SERVER_VARS</varname>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example xml:id="variable.server.basic">
    <title>Exemple avec <varname>$_SERVER</varname></title>
    <programlisting role="php">
<![CDATA[
<?php
echo $_SERVER['SERVER_NAME'];
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
www.example.com
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.is-superglobal;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="book.filter">L'extension sur les filtres</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->