<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.1 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<sect1 xml:id="function.return" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>return</title>
 <simpara>
  Si appelée depuis une fonction, la commande <function>return</function>
  termine immédiatement la fonction, et retourne l'argument qui lui est passé.
  <function>return</function> interrompt aussi l'exécution de commande
  <function>eval</function> ou de scripts.
 </simpara>
 <simpara>
  Si appelée depuis l'environnement global, l'exécution du script est
  interrompue. Si le script courant était <function>include</function> ou
  <function>require</function>, alors le contrôle est rendu au script appelant,
  et la valeur retournée sera utilisée comme résultat de la fonction
  <function>include</function>. Si <function>return</function> est appelée
  depuis le script principal, alors l'exécution du script s'arrête. Si le script
  courant est
  <link linkend="ini.auto-prepend-file"><option>auto_prepend_file</option></link>
  ou
  <link linkend="ini.auto-append-file"><option>auto_append_file</option></link>
  dans le fichier &php.ini;, alors l'exécution du script s'arrête.
 </simpara>
 <simpara>
  Pour plus d'informations, voyez
  <link linkend="functions.returning-values">retourner des valeurs</link>.
 </simpara>
 <para>
  <note>
   <simpara>
    Notez que puisque <function>return</function> est une structure de langage,
    et non une fonction, les parenthèses entourant les arguments ne sont pas
    nécessaires. Il est classique de les oublier et vous devriez le faire car
    PHP travaillera moins dans ce cas.
   </simpara>
  </note>
  <note>
   <simpara>
    Vous ne devriez <emphasis>jamais</emphasis> utiliser les parenthèses autour
    de la variable retournée lorsque vous la retournez pas référence, car cela
    ne fonctionnera pas. Vous ne pouvez retourner que les variables par
    référence, et non le résultat du traitement. Si vous utilisez
    <literal>return ($a);</literal>, alors vous ne retournez pas une variable
    mais le résultat de l'expression <literal>($a)</literal> (qui est, bien sûr,
    la valeur de <varname>$a</varname>).
    </simpara>
   </note>
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
