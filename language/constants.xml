  <chapter id="language.constants">
   <title>Les constantes</title>
   <simpara>
    PHP d&eacute;finit un certain nombre de constantes et propose des
    m&eacute;canismes pour en d&eacute;finir d'autres durant l'ex&eacute;cution.
    Les constantes se comportent des variables, &agrave; l'exception du fait
    que leur valeur est d&eacute;finie gr&acirc;ce &agrave; la fonction
    <function>define</function>, et qu'elle ne peut pas &ecirc;tre
    modifi&eacute;e par la suite.
   </simpara>
   <para>
	Les constantes pr&eacute;d&eacute;finies (toujours disponibles) sont :
	<variablelist>
	 <varlistentry>
	  <term>__FILE__</term>
	  <listitem>
	   <simpara>
		Le nom du fichier qui est actuellement ex&eacute;cut&eacute;.
		Si cette constante est utilis&eacute;e dans le cadre d'un fichier
		"inclus" (apr&egrave; utilisation de <function>require</function>),
		alors le nom du fichier inclus est renvoy&eacute;, et non le nom
		du fichier parent.
	   </simpara>
	  </listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>__LINE__</term>
	  <listitem>
	   <simpara>
        Le num&eacute;ro de la ligne qui est actuellement ex&eacute;cut&eacute;e.
        Si cette constante est utilis&eacute;e dans le cadre d'un fichier
        "inclus" (apr&egrave; utilisation de <function>require</function>),
        c'est la position dans le fichier inclus qui est renvoy&eacute;.
	   </simpara>
	  </listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>PHP_VERSION</term>
	  <listitem>
	   <simpara>
        La cha&icirc;ne de caract&egrave;res de pr&eacute;sentation de la
        version du PHP qui est actuellement utilis&eacute;e. Par exemple '4.0.0'.
	   </simpara>
	  </listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>PHP_OS</term>
	  <listitem>
	   <simpara>
         Nom du syst&egrave;me d'exploitation qui est utilis&eacute; par
         la machine qui fait tourner le PHP. Par exemple, 'Linux'.
	   </simpara>
	  </listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>&true;</term>
	  <listitem>
	   <simpara>
		La valeur vraie bool&eacute;enne, &true;.
	   </simpara>
	  </listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>&false;</term>
	  <listitem>
	   <simpara>
		La valeur faux bool&eacute;enne, &false;.
	   </simpara>
	  </listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>E_ERROR</term>
	  <listitem>
	   <simpara>
		D&eacute;note une erreur autre qu'une erreur d'analyse ("parse error")
        qu'il n'est pas possible de corriger.
	   </simpara>
	  </listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>E_WARNING</term>
	  <listitem>
	   <simpara>
        D&eacute;note un contexte dans lequel le PHP trouve que quelque chose
        qui ne va pas. Mais l'ex&eacute;cution se poursuit tout de m&ecirc;me.
        Ces alertes-l&agrave; peuvent &ecirc;tre r&eacute;cup&eacute;r&eacute;es
        par le script lui-m&ecirc;me. Un exemple serait une expression
        r&eacute;guli&egrave;re (regexp) invalide dans la fonction
        <function>ereg</function>.
	   </simpara>
	  </listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>E_PARSE</term>
	  <listitem>
	   <simpara>
         L'analyseur a rencontr&eacute; une forme syntaxique invalide
         dans le script. Correction de l'erreur impossible.
	   </simpara>
	  </listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>E_NOTICE</term>
	  <listitem>
	   <simpara>
        Quelque chose s'est produit, qui peut &ecirc;tre ou non une erreur.
        L'ex&eacute;cution continue. Par exemple, le cas de guillemets doubles (")
        non referm&eacute;s, ou bien la tentative d'acc&eacute;der &agrave;
        une variable qui n'est pas encore affect&eacute;e.
	   </simpara>
	  </listitem>
	 </varlistentry>
	</variablelist>
   <variablelist>
   <varlistentry>
     <term>E_ALL</term>
     <listitem>
      <simpara>
       Toutes les constantes E_* rassembl&eacute;es en une seule. Si vous l'utilisez
       avec <function>error_reporting</function>, toutes les erreurs et les
       probl&egrave;mes que PHP rencontrera seront notifi&eacute;s.
      </simpara>
     </listitem>
    </varlistentry>
  </variablelist>
  </para>
  <para>
    Les constantes E_* sont g&eacute;n&eacute;ralement utilis&eacute;es
    avec la fonction <function>error_reporting</function>.
   </para>
   <para>
    Vous pouvez d&eacute;finir d'autres constantes en utilisant la fonction
    <function>define</function>.
   </para>
   <para>
     Il est &agrave; noter que ce sont des constantes, et non pas des macros
     comme en C. Seulement les donn&eacute;es scalaires peuvent &ecirc;tre
     repr&eacute;sent&eacute;es par des constantes.
    <example>
     <title>D&eacute;finition de constantes </title>
     <programlisting role="php">
&lt;?php
define("CONSTANTE", "Bonjour le monde.");
echo CONSTANTE;
// affiche "Bonjourle monde."
?&gt;
     </programlisting>
    </example>
    <example>
     <title>Utilisation des constantes __FILE__ et __LINE__ </title>
     <programlisting role="php">
&lt;?php
function rapport_erreur($file, $line, $message) {
    echo "Une erreur est survenue dans le fichier $file &agrave; la ligne $line: $message.";
}
rapport_erreur(__FILE__,__LINE__, "Y a un probl&egrave;me!");
?&gt;
     </programlisting>
    </example>
   </para>
  </chapter>
 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 -->
