<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.18 $ -->
<chapter id="language.constants">
 <title>Les constantes</title>
  <simpara>
   Une constante est un identifiant (un nom) qui repr&eacute;sente une valeur
   simple. Comme son nom le sugg&egrave;re, cette valeur ne peut jamais &ecirc;tre
   modifi&eacute;e durant l'ex&eacute;cution du script (les constantes magiques
   <constant>__FILE__</constant> et
   <constant>__LINE__</constant> sont les seules exceptions). Le nom d'une constante
   est sensible &agrave; la casse, par d&eacute;faut. Par convention, les constantes sont
   toujours en majuscules.
  </simpara>
  <para>
   Les noms de constantes suivent les m&ecirc;mes r&egrave;gles que n'importe
   quel nom en PHP. Un nom de constante valide commence par une
   lettre ou un soulign&eacute; (<literal>_</literal>), suivi d'un nombre
   quelconque de lettre, chiffres ou soulign&eacute;s. Sous forme d'expression
   r&eacute;guli&egrave;re, cela peut s'exprimer comme ceci :
   <literal>[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*</literal>
  </para>
  <note>
   <simpara>
    Dans cette documentation, une lettre peut &ecirc;tre un des caract&egrave;res
    suivants : de a &agrave; z, de A &agrave; Z et tous les caract&egrave;res ASCII
    de 127 &agrave; 255 (0x7f-0xff).
   </simpara>
  </note>
  <simpara>
   Les constantes sont accessibles de mani&egrave;re globale. Vous pouvez la d&eacute;finir
   n'importe o&ugrave;, et y acc&egrave;der depuis n'importe quelle fonction.
  </simpara>
  <sect1 id="language.constants.syntax">
   <title>Syntaxe</title>
   <simpara>
    Vous pouvez d&eacute;finir une constante en utilisant la fonction
    <function>define</function>. Une fois qu'une constante est d&eacute;finie,
    elle ne peut jamais &ecirc;tre modifi&eacute;e, ou d&eacute;truite.
   </simpara>
   <simpara>
    Seuls les types de donn&eacute;es scalaires peuvent &ecirc;tre plac&eacute;s dans une
    constante : c'est &agrave; dire les types bool&eacute;en, entier, double et
    cha&icirc;ne de caract&egrave;res (soit &boolean;, &integer;,
    &double; et &string;).
   </simpara>
   <simpara>
    Vous pouvez acc&eacute;der &agrave; la valeur d'une constante en sp&eacute;cifiant simplement
    son nom. Contrairement aux variables, vous ne devez <emphasis>PAS</emphasis> pr&eacute;fixer
    le nom de la constante avec <literal>$</literal>.
    Vous pouvez aussi utiliser la fonction <function>constant</function>, pour
    lire dynamiquement la valeur d'une constante, dont vous obtenez le nom
    dynamiquement (retour de fonction, par exemple).
    Utilisez la fonction <function>get_defined_constants</function> pour conna&icirc;tre
    la liste de toutes les fonctions d&eacute;finies.
   </simpara>
   <note>
    <simpara>
     Les constantes et les variables globales utilisent deux espaces de
     noms diff&eacute;rents. Ce qui implique que &true; et
     <varname>$TRUE</varname> sont g&eacute;n&eacute;ralement diff&eacute;rents (en tous cas, ils
     peuvent avoir des valeurs diff&eacute;rentes).
    </simpara>
   </note>
   <simpara>
    Lorsque vous utilisez une constante non d&eacute;finie, PHP suppose que vous utilisez
    le nom de la constante. Une <link linkend="ref.errorfunc">note</link> 
    sera g&eacute;n&eacute;r&eacute;e. Utilisez la
    fonction <function>defined</function> pour savoir si une constante existe ou pas.
   </simpara>
   <para>
    Il y a des diff&eacute;rences entre les constantes et les variables :
     <itemizedlist>
      <listitem>
       <simpara>
        Les constantes ne commencent pas par le signe (<literal>$</literal>);
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Les constantes sont d&eacute;finies et accessibles &agrave; tout endroit du code,
        globalement.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Les constantes ne peuvent pas &ecirc;tre red&eacute;finies ou ind&eacute;finies 
        une fois qu'elles ont &eacute;t&eacute; d&eacute;finies.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
    Les constantes ne peuvent contenir que des scalaires.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   <para>
    <example>
     <title>Definir une constante</title>
     <programlisting>
<![CDATA[
<?php
  define("CONSTANTE", "Bonjour le monde.");
  echo CONSTANTE; // affiche "Bonjour le monde."
  echo Constante; // affiche "Constante" et une note.
?>
]]>
     </programlisting>
    </example>
   </para>
  </sect1>
  <sect1 id="language.constants.predefined">
   <title>Constantes pr&eacute;d&eacute;finies</title>
   <simpara>
    PHP fournit un grand nombre de constantes pr&eacute;d&eacute;finies. Certaines
    constantes sont d&eacute;finies par diff&eacute;rentes extensions, et ne seront
    pr&eacute;sentes que si ces extensions sont compil&eacute;es avec &php;, ou bien
    si l'extension a &eacute;t&eacute; charg&eacute;e dynamiquement.
   </simpara>

   <simpara>
    Une liste des constantes pr&eacute;d&eacute;finies est disponible dans la 
    section 
    <link linkend="reserved.constants">Constantes pr&eacute;d&eacute;finies</link>.
   </simpara>
  </sect1>
 </chapter>
 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 -->
