<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 310044 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="wrappers.php" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" role="noversion">
 <refnamediv>
  <refname>Flux d'entrée/sortie</refname>
  <refpurpose>Accès aux divers flux I/O</refpurpose>
 </refnamediv>

 <refsect1 role="description"><!-- {{{ -->
  &reftitle.description;
  <para>
   <filename>php://stdin</filename>, <filename>php://stdout</filename>
   et <filename>php://stderr</filename> donnent un accès direct aux flux correspondants
   d'entrée ou de sortie du processus PHP. Le flux représente un descripteur dupliqué
   du fichier, donc, si vous ouvrez <filename>php://stdin</filename> et que vous le
   fermez plus tard, vous fermez uniquement le descripteur, le flux référencé par
   <constant>STDIN</constant> ne sera pas affecté. Notez que le comportement de PHP
   à ce sujet est relativement instable dans les versions antérieures à 5.2.1. Il est recommandé
   d'utiliser simplement les constantes <constant>STDIN</constant>, <constant>STDOUT</constant>
   et <constant>STDERR</constant> au lieu d'ouvrir manuellement les flux en utilisant ces gestionnaires.
  </para>
  <simpara>
   <filename>php://output</filename> vous permet d'écrire dans le
   buffer de sortie, de la même manière que
   <function>print</function> et <function>echo</function>.
  </simpara>
  <simpara>
   <filename>php://input</filename> permet de lire les données brutes de la requête.
   Pour les requêtes POST, cette méthode est préférable à <varname>$HTTP_RAW_POST_DATA</varname> car
   elle ne dépend pas d'une directive de &php.ini;. De plus, cette solution est moins
   consomatrice en mémoire que l'activation de <varname>$HTTP_RAW_POST_DATA</varname> via la directive
   <link linkend="ini.always-populate-raw-post-data">always_populate_raw_post_data</link>.
   <filename>php://input</filename> n'est pas disponible avec
   <literal>enctype="multipart/form-data"</literal>.
  </simpara>
  <note>
   <simpara>
    Un flux ouvert au moyen de <filename>php://input</filename> ne peut être lu
    qu'une seule fois, le flux ne supporte pas les opérations de déplacement. En
    revanche, en fonction de la SAPI considérée, il peut être possible de réouvrir
    un deuxième flux sur <filename>php://input</filename> et recommencer la lecture.
    Ceci n'est possible que si le corps de la requête a été sauvegardé. C'est le cas
    typiquement pour les requêtes de type POST mais pas pour celles d'autres types comme
    PUT ou PROPFIND.
   </simpara>
  </note>
  <simpara>
   <filename>php://stdin</filename> et
   <filename>php://input</filename> sont en lecture seule, tandis que
   <filename>php://stdout</filename>,
   <filename>php://stderr</filename> et
   <filename>php://output</filename> sont en écriture seule.
  </simpara>

  <simpara>
   <filename>php://fd</filename> permet des accès directs au descripteur
   de fichier fourni. Par exemple, <filename>php://fd/3</filename>
   permet d'accéder au descripteur 3 du fichier.
  </simpara>

  <simpara>
   <filename>php://filter</filename> est une sorte de méta-gestionnaire,
   qui permet l'utilisation de filtre avec les données d'entrée
   au moment du démarrage du script. C'est pratique avec des fonctions
   compactes comme <function>readfile</function>, <function>file</function> et
   <function>file_get_contents</function> où il n'y a pas d'opportunité d'appliquer
   un filtre aux données lues.
  </simpara>
  <simpara>
   Le gestionnaire de <filename>php://filter</filename> prend les 'paramètres'
   suivants dans le 'chemin'.
  </simpara>
 </refsect1><!-- }}} -->

 <refsect1 role="usage"> <!-- {{{ -->
  &reftitle.options;
  <itemizedlist>
   <listitem><simpara><filename>php://stdin</filename></simpara></listitem>
   <listitem><simpara><filename>php://stdout</filename></simpara></listitem>
   <listitem><simpara><filename>php://stderr</filename></simpara></listitem>
   <listitem><simpara><filename>php://output</filename></simpara></listitem>
   <listitem><simpara><filename>php://input</filename></simpara></listitem>
   <listitem><simpara><filename>php://filter</filename> (disponible depuis PHP 5.0.0)</simpara></listitem>
   <listitem><simpara><filename>php://memory</filename> (disponible depuis PHP 5.1.0)</simpara></listitem>
   <listitem><simpara><filename>php://temp</filename> (disponible depuis PHP 5.1.0)</simpara></listitem>
   <listitem><simpara><filename>php://fd</filename> (disponible depuis PHP 5.3.6)</simpara></listitem>
  </itemizedlist>
 </refsect1> <!-- }}} -->

 <refsect1 role="options"><!-- {{{ -->
  &reftitle.options;
  <para>
   <table>
    <title>
     Résumé des gestionnaires (pour <literal>php://filter</literal>,
     voyez le résumé du filtre)
    </title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Attribut</entry>
       <entry>Supporté</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Restreint par <link linkend="ini.allow-url-fopen">allow_url_fopen</link></entry>
       <entry>Non</entry>
      </row>
      <row>
       <entry>Restreint par <link linkend="ini.allow-url-include">allow_url_include</link></entry>
       <entry>
        <literal>php://input</literal>,
        <literal>php://stdin</literal>,
        <literal>php://memory</literal> et
        <literal>php://temp</literal> uniquement.
       </entry>
      </row>
      <row>
       <entry>Autorise la lecture</entry>
       <entry>
        <literal>php://stdin</literal>,
        <literal>php://input</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> et
        <literal>php://temp</literal> uniquement.
       </entry>
      </row>
      <row>
       <entry>Autorise l'écriture</entry>
       <entry>
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://output</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> et
        <literal>php://temp</literal> uniquement.
       </entry>
      </row>
      <row>
       <entry>Autorise l'ajout</entry>
       <entry>
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://output</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> et
        <literal>php://temp</literal> uniquement. (Équivalent à l'écriture)
       </entry>
      </row>
      <row>
       <entry>Autorise la lecture et l'écriture simultanément</entry>
       <entry>
        <literal>php://fd</literal>,
        <literal>php://memory</literal> et
        <literal>php://temp</literal> uniquement.
       </entry>
      </row>
      <row>
       <entry>Support de la fonction <function>stat</function></entry>
       <entry>
        <literal>php://memory</literal> et
        <literal>php://temp</literal> uniquement.
       </entry>
      </row>
      <row>
       <entry>Support de la fonction <function>unlink</function></entry>
       <entry>Non</entry>
      </row>
      <row>
       <entry>Support de la fonction <function>rename</function></entry>
       <entry>Non</entry>
      </row>
      <row>
       <entry>Support de la fonction <function>mkdir</function></entry>
       <entry>Non</entry>
      </row>
      <row>
       <entry>Support de la fonction <function>rmdir</function></entry>
       <entry>Non</entry>
      </row>
      <row>
       <entry>Support de la fonction <function>stream_select</function></entry>
       <entry>
        <literal>php://stdin</literal>,
        <literal>php://stdout</literal>, 
        <literal>php://stderr</literal>,
        <literal>php://fd</literal> et
        <literal>php://temp</literal> uniquement.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1> <!-- }}} -->

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <example><!-- {{{ -->
   <title>/ressource=&lt;flux à filtrer&gt; (<emphasis>obligatoire</emphasis>)</title>
   <para>
    Ce paramètre doit être situé à la fin
    de votre chaîne <filename>php://filter</filename> et doit pointer sur le
    flux à filtrer.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Ceci est équivalent à :
   readfile("http://www.example.com");
   tant qu'aucun filtre n'est spécifié */

readfile("php://filter/resource=http://www.example.com");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example><!-- {{{ -->
   <title>/read=&lt;liste de filtres de la chaîne de lecture&gt; (<emphasis>optionnel</emphasis>)</title>
   <para>
    Ce paramètre prend un ou plusieurs noms de filtre, séparé par
    le caractère pipe <literal>|</literal>.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Ceci affichera le contenu de
   www.example.com entièrement en majuscule */
readfile("php://filter/read=string.toupper/resource=http://www.example.com");

/* Ceci fera la même chose que ci-dessus
   mais en plus, encodera le contenu en ROT13 */
readfile("php://filter/read=string.toupper|string.rot13/resource=http://www.example.com");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example><!-- {{{ -->
   <title>/write=&lt;liste de filtres de la chaîne d'écriture&gt; (<emphasis>optionnel</emphasis>)</title>
   <para>
    Ce paramètre prendre un ou plusieurs noms de filtre, séparé par
    le caractère pipe <literal>|</literal>.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Ceci filtrera la chaîne "Hello World"
   via le filtre rot13, puis, l'écrit dans le
   fichier example.txt du dossier courant */
file_put_contents("php://filter/write=string.rot13/resource=example.txt","Hello World");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <!-- {{{ -->
  <simpara>
   <literal>/&lt;liste de filtres des deux chaînes&gt;</literal> (<emphasis>optionnel</emphasis>)
   Tous les filtres qui ne sont pas
   préfixés avec <literal>read=</literal> ou
   <literal>write=</literal> seront appliqués aux deux chaînes de filtres,
   en lecture et en écriture.
  </simpara>

  <simpara>
   Le gestionnaire <filename>php://memory</filename> stocke les données en
   mémoire. <filename>php://temp</filename> fonctionne de la même façon,
   mais utilise des fichiers temporaires pour stocker les données lorsqu'une certaine
   limite mémoire est atteinte (par défaut, 2 Mo).
  </simpara>
  <simpara>
   Le gestionnaire <filename>php://temp</filename> prend les paramètres suivants,
   qui sont les parties du chemin :
  </simpara>
  <!-- }}} -->
  <example><!-- {{{ -->
   <title>/maxmemory:&lt;nombre d'octets&gt; (<emphasis>optionnel</emphasis>)</title>
   <para>
    Ce paramètre permet de changer la valeur
    de la limite mémoire (lorsque les données sont déplacées vers un fichier temporaire).
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$fiveMBs = 5 * 1024 * 1024;
$fp = fopen("php://temp/maxmemory:$fiveMBs", 'r+');

fputs($fp, "hello\n");

// Lit ce que nous venons d'écrire
rewind($fp);
echo stream_get_contents($fp);
?>
]]>
   </programlisting>
  </example><!-- }}} -->
 </refsect1><!-- }}} -->

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

