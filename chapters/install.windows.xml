<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.24 $ -->
<!-- EN-Revision: 1.43 Maintainer: dams Status: ready -->
  <sect1 id="install.windows">
  <title>Installation sous Windows</title>
  <para>
   Cette section s'applique aux systèmes Windows 98/Me et
   Windows NT/2000/XP. Ne vous attendez pas à ce que &php; fonctionne sur 
   les plateformes 16 bits, comme Windows 3.1. Parfois, on décrira les
   plateformes supportées sous le nom de Win32. Windows 95 n'est plus
   supporté à partir de la version 4.3.0 de &php;.
 </para>
 <para>
  Il y a deux méthodes principales pour installer &php; sous Windows :
  soit <link linkend="install.windows.manual">manuellement</link>,
  soit avec <link linkend="install.windows.installer">InstallShield</link>.
 </para>
 <para>
  Si vous avez Microsoft Visual Studio, vous pouvez aussi
  <link linkend="install.windows.build">compiler</link>
  &php; à partir des sources.
 </para>
 <para>
  Une fois que &php; est installé sur votre Windows, vous pouvez aussi
  ajouter diverses
  <link linkend="install.windows.extensions">extensions</link>.
 </para>
   
 <sect2 id="install.windows.installer">
 <title>InstallShield sous Windows</title>
 <para>
  L'installeur Windows de &php; disponible depuis les pages de
  <ulink url="&url.php.downloads;">&url.php.downloads;</ulink>, installe la version
  CGI de &php;, et configure les serveurs web IIS, PWS, et Xitami.
 </para>
 <para>
  Notez bien que bien que InstallShield soit une méthode simple
  pour installer &php;, il est limité dans son fonctionnement, puisque
  l'installation automatique des extensions n'est pas prise en compte.
  Le jeu complet des extensions &php; est disponible en téléchargeant
  et décompressant manuellement l'archive.
 </para>
 <simpara>
  Installez votre serveur <acronym>HTTP</acronym> favori sur votre
  système et assurez-vous qu'il fonctionne.
 </simpara>
 <simpara>
  Exécutez l'installeur et suivez les instructions fournies par
  l'assistant. Deux types d'installation sont fournis : standard, qui
  utilise toutes les configurations par défaut les plus pratiques,
  et avancée, qui pose un maximum de questions pour paramétrer
  le plus finement.
 </simpara>
 <simpara>
  L'assistant d'installation rassemble suffisamment d'informations pour
  configurer &php.ini; et le serveur web qui utilisera
  &php;. Pour IIS, mais aussi PWS sous NT Workstation, une liste de l'arboresence
  web est affichée, et vous pouvez sélectionner les dossiers
  qui utiliseront &php;.
 </simpara>
 <simpara>
  Une fois l'installation terminée, l'installeur vous informera que
  vous devez redémarrer. Suivez ce conseil, ou commencez à
  utiliser &php; immédiatement.
 </simpara>
 <warning>
  <para>
   Gardez bien à l'esprit que cette installation de &php; n'est pas
   sécurisée. Si vous voulez avoir une installation sécurisée de &php;,
   vous devriez commencer par lire la documentation, et choisir
   toutes vos options avec soin. Cet installeur automatique vous
   permet de réaliser l'installation en un tour de main, mais n'est
   pas destiné à l'utilisation sur des serveurs de production.
   </para>
  </warning>
 </sect2>
   <sect2 id="install.windows.manual">
    <title>Installation manuelle sous Windows</title>
    <simpara>
     Ce guide d'installation vous aide à installer manuellement et configurer
     &php; sur votre serveur web Windows. La version initiale de ce guide a été
     compilée par &link.bob;, et est disponible en anglais, à 
     <ulink url="&url.win32install;">&url.win32install;</ulink>.
     Vous devrez télécharger la distribution binaire Zip sur la page
     <ulink url="&url.php.downloads;">&url.php.downloads;</ulink>. 
    </simpara>

    <para>
     &php; 4 pour Windows est distribué en trois versions : exécutable <acronym>CGI</acronym>,
     un exécutable CLI (sapi/php.exe) et d'autres modules SAPI :
     <simplelist>
      <member>
       <filename>php4apache.dll</filename> - module Apache 1.3.x.
      </member>
      <member>
       <filename>php4apache2.dll</filename> - module Apache 2.0.x.
      </member>
      <member>
       <filename>php4isapi.dll</filename> - module ISAPI compatible avec les serveurs
       comme IIS 4.0/PWS 4.0 ou plus récents.
      </member>
      <member>
       <filename>php4nsapi.dll</filename> - module Netscape/iPlanet.
      </member>
     </simplelist>
     Cette dernière forme est nouvelle en &php; 4, et fournit des performances
     améliorées et de nouvelles fonctionnalités. La version CLI est conçue pour
     utiliser &php; en ligne de commande. Plus d'informations sur la forme
     CLI est disponible dans le chapitre 
     "<link linkend="features.commandline">utiliser &php; en ligne de commande</link>".
    </para>
    <warning>
     <simpara>
      Les modules SAPI ont été significativement
      améliorés dans la version
      4.1, mais vous pourrez rencontrer des erreurs avec le serveur ou
      d'autres modules (tels ASP), dans les autres systèmes.
     </simpara>
    </warning>
    <note>
     <title>Pré-requis DCOM et MDAC</title>
      <para>
       Si vous choisissez d'installer le module SAPI sur 
       <emphasis>Windows 95</emphasis>, assurez vous de télécharger et installer
       la mise à jour DCOM, disponible à <ulink url="&url.dcom.update;">Microsoft DCOM pages</ulink>.
       Si vous utilisez Microsoft <emphasis>Windows 9x/NT4</emphasis>, téléchargez
       la dernière version de Microsoft Data Access Components (MDAC) pour votre
       plate-forme. MDAC est disponible à <ulink url="&url.mdac;">&url.mdac;</ulink>.
     </para>
    </note>    

<para>
  Voici les différentes étapes d'installation avant les
  étapes spécifiques au serveur.
     <itemizedlist>
      <listitem>
       <simpara>
        Extrayez la distribution dans un dossier de votre choix,
        par exemple <filename>c:\</filename>. L'archive zip devient un
        dossier appelé <filename>php-4.3.1-Win32</filename> qui est supposé être
        renommé en <filename>php</filename>. Par sourci de clarté, nous supposerons
        alors que vous avez placé votre distribution dans le dossier 
        <filename>c:\php</filename>. Vous pouvez choisir un autre dossier, mais vous
        serez prudents d'éviter les espaces dans le nom du chemin au dossier 
        (par exemple <filename>c:\program files\php</filename> n'est pas une bonne idée).
        car certains serveurs web vont crasher sinon. La structure du dossier que vous
        avez extrait ressemble à ceci : 
       </simpara>
      </listitem>
     </itemizedlist>
     <example>
      <title>Structure de la distribution Windows de &php;</title>
      <programlisting>
<![CDATA[

c:\php
   |
   +--cli
   |  |
   |  |-php.exe           -- Executable CLI - UNIQUEMENT pour la ligne de commande
   |
   |
   +--dlls                -- DLL de support des extensions  --> dossier systeme Windows
   |  |
   |  |-expat.dll
   |  |
   |  |-fdftk.dll
   |  |
   |  |-...
   |
   +--extensions          -- extensions DLL pour PHP
   |  |
   |  |-php_bz2.dll
   |  |
   |  |-php_cpdf.dll
   |  |
   |  |-..
   |
   +--mibs                -- fichiers de support de SNMP
   |
   |
   +--openssl             -- fichiers de support de Openssl
   |
   |
   +--pdf-related         -- fichiers de support de PDF
   |
   |
   +--sapi                -- DLL SAPI
   |  |
   |  |-php4apache.dll
   |  |
   |  |-php4apache2.dll
   |  |
   |  |-php4isapi.dll
   |  |
   |  |-..
   |
   |-install.txt
   |
   |-..
   |
   |-php.exe              -- executable CGI
   |
   |-..
   |
   |-php.ini-dist
   |
   |-php.ini-recommended
   | 
   |-php4ts.dll           -- DLL principale --> dossier systeme Windows
   | 
   |-...


]]>
      </programlisting>
     </example> 
    </para>
    <para>
     Le binaire CGI (<filename>C:\php\php.exe</filename>), le binaire
     CLI (<filename>c:\php\cli\php.exe</filename>), et les modules SAPI
     (<filename>c:\php\sapi\*.dll</filename>) dépendent de la DLL principale
     <filename>c:\php\php4ts.dll</filename>. Vous devez vous assurer que cette
     DLL est disponible pour votre installation &php;. L'ordre des dossiers
     lors de la recherche est le suivant : 
     <simplelist>
      <member>
       Le dossier d'où <filename>php.exe</filename> est appelé.
       Lorsque vous utilisez le module SAPI, c'est le dossier d'où le
       serveur web charge la DLL (i.e. <filename>php4apache.dll</filename>).
      </member>
      <member>
       Tout dossier dans la variable d'environnement Windows <varname>PATH</varname>.
      </member>
     </simplelist>
     <itemizedlist>
      <listitem> 
       <para>
        La meilleure chose à faire est de rendre <filename>php4ts.dll</filename> accessible,
        indépendemmant de l'interface utilisée (CGI ou module SAPI). Pour cela,
        vous devez copier la DLL dans un dossier de votre PATH Windows. La meilleure
        place est alors le dossier système Windows : 
        <simplelist>
         <member>
          <filename>c:\windows\system</filename> pour Windows 9x/ME
         </member>
         <member>
          <filename>c:\winnt\system32</filename> pour Windows NT/2000 ou
          <filename>c:\winnt40\system32</filename> pour NT/2000 server
         </member>
         <member>
          <filename>c:\windows\system32</filename> pour Windows XP
         </member>
        </simplelist>
        Si vous voulez utiliser le module SAPI depuis <filename>c:\php\sapi</filename>
        et que vous ne voulez pas copier vos DLL dans le dossier système Windows,
        vous avez la possibilité de copier simplement <filename>php4ts.dll</filename> 
        dans le dossier SAPI de votre archive décompressée <filename>c:\php\sapi</filename>.
       </para>
      </listitem>
      <listitem>
       <para>
        L'étape suivante est de faire un fichier de configuration valide pour &php;,
        c'est à dire le fichier &php.ini;. Il y a deux versions de ce fichier disponibles
        dans l'archive : 
        <filename>php.ini-dist</filename> et
        <filename>php.ini-recommended</filename>. Nous vous recommandons d'utiliser
        <filename>php.ini-recommended</filename>, car nous avons optimisé les
        configurations par défaut dans ce fichier pour les performances et la sécurité.
        Lisez bien ce fichier documenté, et étudiez toutes les 
        <link linkend="configuration.file">configurations</link>, puis faites vos
        propres choix. Si vous voulez atteindre la meilleure sécurité, c'est
        la meilleure méthode. Copiez votre fichier de configuration de choix
        dans un dossier où &php; est capable de le lire, et renommez le 
        &php.ini;. Par défaut, &php; recherche &php.ini; dans votre dossier Windows : 
        <simplelist>
         <member>
          Sur Windows 9x/ME/XP, copiez le fichier &php.ini; dans votre dossier
          <filename> %WINDIR%</filename>, qui est généralement <filename>c:\windows</filename>.
         </member>
         <member>
          Sur Windows NT/2000, copiez le fichier &php.ini; dans votre dossier
          <filename>%WINDIR%</filename> ou <filename>%SYSTEMROOT%</filename>,
          qui est typiquement <filename>c:\winnt</filename> ou
         <filename>c:\winnt40</filename> pour les serveurs NT/2000.
         </member>
        </simplelist>   
       </para>
      </listitem>
      <listitem>
       <simpara>
        Si vous utilisez NTFS sur Windows NT, 2000 ou XP, assurez vous que
        l'utilisateur qui fait tourner le serveur web a les droits de lecture
        de votre fichier &php.ini; (e.g. rendez le lisible par tout le monde).
       </simpara>
      </listitem>     
     </itemizedlist>
    </para>
    <para>
     Les étapes suivantes sont optionnelles : 
     <itemizedlist>      
      <listitem>
       <para>
        Editez votre nouveau fichier &php.ini;.
        Si vous envisagez d'utiliser <link linkend="install.omnihttpd">OmniHTTPd</link>,
        ignorez l'étape suivante. Configurez 
        <link linkend="ini.doc-root">doc_root</link> pour qu'il pointe sur la racine de
        votre serveur web. Par exemple :
        <example>
          <title>Configuration de doc_root vers la racine du serveur web</title>
          <programlisting role="ini">
<![CDATA[
doc_root = c:\inetpub        // pour IIS/PWS

doc_root = c:\apache\htdocs // pour Apache
]]>
         </programlisting>
        </example>
       </para>
      </listitem>
      <listitem>
       <simpara>
        Choisissez les extensions que vous voulez que &php; démarre. Voyez la
        section sur les <link linkend="install.windows.extensions">extensions Windows</link>,
        pour les configurer, si elles ne sont pas intégrées. Notez que 
        sur une nouvelle installation, il est recommandé de commencer par faire fonctionner
        &php; avant d'ajouter ou retirer des extensions via le &php.ini;.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Sur PWS et IIS, vous pouvez utiliser la directive 
        <link linkend="ini.browscap">browscap</link> pour qu'elle pointe sur :
        <filename>c:\windows\system\inetsrv\browscap.ini</filename> sur
        Windows 9x/Me,
        <filename>c:\winnt\system32\inetsrv\browscap.ini</filename> sur
        NT/2000, et
        <filename>c:\windows\system32\inetsrv\browscap.ini</filename>
        sur XP.
       </simpara>
      </listitem>
     </itemizedlist>
    </para> 
    <para>
     Copiez le fichier <filename>php.ini-dist</filename> dans votre dossier
     <filename>%WINDOWS</filename> sous Windows 95/98, ou vers votre
     dossier <filename>%SYSTEMROOT%</filename> sous Windows NT ou Windows
     2000 et renommez-le en &php.ini;. Votre dossier
     <filename>%WINDOWS%</filename> ou <filename>%SYSTEMROOT%</filename> 
     est généralement :
     <simplelist>
     <member>c:\windows pour Windows 9x/Me</member>
     <member>c:\winnt ou c:\winnt40 pour les serveurs NT/2000</member>
     </simplelist>
    </para>
    <para>
     Il y a deux fichiers ini, distribués dans le fichier zip,
     <filename>php.ini-dist</filename> et
     <filename>php.ini-optimized</filename>. Nous vous recommandons
     d'utiliser <filename>php.ini-optimized</filename>,
     car nous l'avons optimisé d'un point de vue sécurité et
     vitesse d'exécution. Le mieux est tout de même de
     lire le fichier de configuration
     <link linkend="configuration.file">php.ini</link> et
     de choisir vos options manuellement. Si vous voulez atteindre
     un meilleur niveau de sécurité, c'est par ce moyen que vous
     pourrez le faire, même si &php; fonctionne parfaitement
     avec les configurations par défaut.
    </para>
    <para>
     Editez votre fichier &php.ini; :
     <itemizedlist>
      <listitem>
       <simpara>
        la famille <link linkend="install.iis">des serveurs Windows</link>, 
        Personal Web server (PWS) 3 et 4 ou plus récents; 
        Internet Information Server (IIS) 3 et 4 ou plus récents.
       </simpara> 
      </listitem>
      <listitem>
       <simpara>
        les serveurs Apache
        <link linkend="install.apache.windows">Apache 1.3.x</link>, et
        <link linkend="install.apache2.windows">Apache 2.x</link>.        
       </simpara>
      </listitem>
      
      <listitem>
       <simpara>
        les serveurs
        <link linkend="install.netscape.windows">Netscape/iPlanet</link>.      
       </simpara>
      </listitem>
      
      <listitem>
       <simpara>
        le serveur <link linkend="install.omnihttpd">OmniHTTPd</link>.
       </simpara>
      </listitem>

      <listitem>
       <simpara>
        le serveur <link linkend="install.oreilly">Oreilly Website Pro</link>.
       </simpara>
      </listitem>
      
      <listitem>
       <simpara>
        le serveur <link linkend="install.sambar">Sambar</link>.
       </simpara>
      </listitem>
      
      <listitem>
       <simpara>
        le serveur <link linkend="install.xitami">Xitami</link>.
       </simpara>
      </listitem>     
     </itemizedlist>
   </para>
   </sect2>

 <sect2 id="install.windows.build">
 <title>Compilation des sources</title>
 <para>
  Avant de commencer, il est bon de se poser la question suivante :
  "Pourquoi la compilation de &php; sous Windows est si difficile?".
  Deux raisons viennent immédiatement à l'esprit :
 </para>
 <orderedlist>
  <listitem>
  <simpara>
   Windows ne dispose pas (encore) d'une grande communauté de
   développeurs qui partagent librement leurs sources.
   La conséquence directe est que les investissements
   nécessaires en infrastructure pour supporter ce
   type de développement n'ont pas été faits. Ce qui fait
   que le portage des utilitaires Unix a été la solution
   pour pallier ce manque. Ne soyez donc pas surpris de
   rencontrer cette parenté de temps en temps.
   </simpara>
  </listitem>
  <listitem>
   <simpara>
   La majorité des instructions que vous allez rencontrer sont
   du type : "faire et oublier". Alors, asseyez-vous confortablement
   et suivez aussi scrupuleusement que possible les instructions.
   </simpara>
  </listitem>
 </orderedlist>

    <sect3 id="install.windows.build.requirement">
     &reftitle.required;
     <para>
      Pour compiler l'exécutable &php;, vous avez besoin d'un 
      Microsoft Development Environment. Microsoft Visual C++ 6.0 est recommendé.
      Pour extraire le fichier téléchargé, vous avez besoin d'un outil
      de décompression (e.g.: Winzip). Si vous n'avez pas encore d'utilitaire
      de décompression, vous pouvez en télécharger un chez 
      <ulink url="&url.infozip;">InfoZip</ulink>.
     </para>
     <para>
      Avant de commencer, vous devez télécharger...
     </para>
      <itemizedlist>
       <listitem>
        <simpara>
        les win32 buildtools de &php;, sur 
        <ulink url="&url.win32.buildtools;">&url.win32.buildtools;</ulink>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        le code source du résolveur de noms DNS utilisé par &php;
        sur <ulink url="&url.win32.dnsresolver;">&url.win32.dnsresolver;</ulink>. 
        C'est un remplacement pour la bibliothèque <filename>resolv.lib</filename> 
        inclue dans <filename>win32build.zip</filename>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Si vous prévoyez de compiler &php; comme module pour Apache,
        vous aurez aussi besion des 
        <ulink url="&url.apache.source;">sources d'Apache</ulink>.
       </simpara>
      </listitem>
     </itemizedlist>
     <simpara>
      Finalement, vous aurez besoin des sources &php; 4 elles-mêmes.
      Les dernières versions sont accessibles sur le serveur
      <ulink url="&url.php.anoncvs;">CVS anonyme</ulink>.
      Vous pouvez  aussi  télécharger
      <ulink url="&url.php.snapshots;">une version intermédiaire</ulink>
      ou <ulink url="&url.php.downloads;">l'archive des sources</ulink> la
      plus récente.
     </simpara>
    </sect3>
    <sect3 id="install.windows.build.install">
  <title>Compiler tout ensemble</title>
     <para>
      Après téléchargement des paquets nécessaires, vous devez les extraire
      au bon endroit.
      <itemizedlist>
       <listitem>
        <simpara>
         Créez un dossier où tous les fichiers seront placés après l'extraction,
         par exemple : <filename>c:\work</filename>.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Créez le dossier <filename>win32build</filename> dans votre dossier
         de travail (ici <filename>c:\work</filename>) et décompressez 
         <filename>win32build.zip</filename> dedans.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Créez le dossier <filename>bindlib_w32</filename> sous votre dossier
         de travail (ici <filename>c:\work</filename>)  et décompressez  
         <filename>bindlib_w32.zip</filename> dedans.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Décompressez le code source de &php; dans votre dossier de travail
         (<filename>c:\work</filename>).
        </simpara>
       </listitem>
      </itemizedlist>
      Après avoir suivi ces instructions, vous devriez obtenir un dossier 
      qui ressemble à ceci : 
      <example>
       <title>Structure de la distribution source pour compilation sous Windows</title>
       <programlisting>
<![CDATA[

+--c:\work
|  |
|  +--bindlib_w32
|  |  |
|  |  +--arpa
|  |  |
|  |  +--conf
|  |  |
|  |  +--...
|  |
|  +--php-4.x.x
|  |  |
|  |  +--build
|  |  |
|  |  +--...
|  |  |
|  |  +--win32
|  |  |
|  |  +--...
|  |
|  +--win32build
|  |  |
|  |  +--bin
|  |  |
|  |  +--include
|  |  |
|  |  +--lib

]]>
       </programlisting>
      </example>
      Créez les dossiers <filename>c:\usr\local\lib</filename>. Copiez 
      le fichier <filename>bison.simple</filename> depuis 
      <filename>c:\work\win32build\bin</filename> vers <filename>c:\usr\local\lib</filename>.
     </para>
     <note>
      <simpara>
       Les utilisateurs de <ulink url="&url.cygwin;">Cygwin</ulink> peuvent omettre la
       dernière étable. Un environnement Cygwin correctement installé fournit les
       fichiers obligatoires de <filename>bison.simple</filename> et
       <filename>bison.exe</filename>.
      </simpara>
     </note>
    </sect3>
    <sect3 id="install.windows.build.configure">
     <title>Configuration de MVC ++</title>
      <para>
       Lancez Microsoft Visual C++, et allez dans le menu
       <literal>"select Tools =&gt; Options"</literal>. Dans le dialogue, 
       sélectionnez l'onglet <literal>"directories"</literal>. 
       Modifiez les valeurs pour les éléments du menu 
       <literal>Executables</literal>, <literal>Includes</literal> 
       et <literal>Library</literal>. Votre configuration 
       doit alors ressembler à ceci.
       <itemizedlist>
        <listitem>
         <simpara>
          Fichiers exécutables : <filename>c:\work\win32build\bin</filename>,
          Utilisateurs Cygwin : <filename>cygwin\bin</filename>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Fichiers d'en-têtes : <filename>c:\work\win32build\include</filename>
         </simpara>
        </listitem>
         <listitem>
          <simpara>
          Fichiers bibliothèques : <filename>c:\work\win32build\lib</filename>
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
    </sect3>

    <sect3 id="install.windows.build.resolvlib">
     <title>Compilation de resolv.lib</title>
      <para>
       Vous devez compiler la bibliothèque <filename>resolv.lib</filename>.
       Decidez si vous avez besoin des symboles de débogage
       (bindlib - Win32 Debug) ou non (bindlib - Win32 Release).
       Compilez la configuration ad hoc : 
       <itemizedlist>
        <listitem>
         <simpara>
      Pour les utilisateurs de l'interface graphique, lancez VC++, puis sélectionnez le
      menu "File =&gt; Open Workspace" et "bindlib".  Puis sélectionnez
      "Build=&gt;Set Active Configuration" et sélectionnez la configuration
      voulue. Enfin, sélectionnez "Build=&gt;Rebuild All".
         </simpara>
        </listitem>
        <listitem>
         <simpara>
      Pour les utilisateurs en ligne de commande, assurez-vous que
      vous avez enregistré les variables d'environnement C++, ou que
      vous avez exécuté <command>vcvars.bat</command>. Exécutez
      maintenant l'une des commandes suivantes :
         </simpara>
         <itemizedlist>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Debug"</userinput>
           </simpara>
          </listitem>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Release"</userinput>
           </simpara>
          </listitem>
         </itemizedlist>
        </listitem>
       </itemizedlist>
      A ce stade, vous avez une bibliothèque <filename>resolv.lib</filename>
      utilisable, soit dans votre dossier <filename>Debug</filename>,
      soit sans le dossier <filename>Release</filename>. Copiez ce fichier
      dans votre dossier <filename>win32build\lib</filename>, en remplaçant
      le fichier du même nom.
      </para>
    </sect3>

    <sect3 id="install.windows.build.compile">
<title>Compilation</title>
 <simpara>
  La meilleure façon de compiler est de commander par la version
  CGI/exécutable.
 </simpara>
 <itemizedlist>
  <listitem>
   <simpara>
    Pour les utilisateurs GUI, lancez VC++, puis sélectionnez le
    menu "File =&gt; Open Workspace" et sélectionnez "php4ts". Ensuite,
    sélectionnez le menu "Build=&gt;Set Active Configuration",
    et sélectionnez la configuration voulue. Finalement,
    sélectionnez le menu "Build=&gt;Rebuild All".
   </simpara></listitem>
   <listitem>
    <simpara>
     Pour les utilisateurs en ligne de commande, assurez-vous que
     vous avez enregistré les variables d'environnement C++, ou que
     vous avez exécuté <command>vcvars.bat</command>. Exécutez
     maintenant l'une des commandes suivantes :
    </simpara>
    <itemizedlist>
     <listitem><simpara>
      <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Debug_TS"</userinput>
     </simpara></listitem>
     <listitem><simpara>
      <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Release_TS"</userinput>
     </simpara></listitem>
     <listitem>
      <simpara>
       A ce stade, vous avez un exécutable <filename>php.exe</filename>
       utilisable, soit dans votre dossier <filename>Debug_TS</filename>
       soit sans le dossier <filename>Release_TS</filename>.
      </simpara>
     </listitem>
    </itemizedlist>
   </listitem>
  </itemizedlist>
     <simpara>
      Il est possible de faire des modifications particulières mineures
      en éditant le fichier <filename>main/config.win32.h.in</filename>.
     </simpara>
     <simpara>
      Ensuite, vous pouvez compiler la version CLI qui est conçue pour un
      usage en <link linkend="features.commandline">ligne de commande</link>.
      Les étapes sont les mêmes que pour la compilation en mode CGI, hormis
      le fait que vous devez sélectionner <literal>php4ts_cli - Win32 Debug_TS</literal> ou
      <literal>php4ts_cli - Win32 Release_TS</literal> dans le fichier de projet.
      Après une compilation réussie, vous pouvez exécuter le fichier <filename>php.exe</filename>
      dans l'un des dossiers <filename>Release_TS\cli\</filename> ou
      <filename>Debug_TS\cli\</filename>.
     </simpara>
     <note>
      <simpara>
       Si vous voulez utiliser PEAR et l'installeur en ligne de commande,
       la version CLI-SAPI est obligatoire. Pour plus d'informations sur le projet 
       PEAR et l'installeur, lisez la documentation sur le site de
       <ulink url="&url.php.pear;manual/">PEAR</ulink>.
      </simpara>
     </note>
     <simpara>
      Afin de compiler le module SAPI (<filename>php4isapi.dll</filename>
      pour l'intégrer dans Microsoft IIS, vous devez utiliser la configuration
      <filename>php4isapi-whatever-config</filename> et compiler la DLL
      nécessaire.
     </simpara>
    </sect3>
   </sect2>
   
   <sect2 id="install.windows.extensions">
    <title>Installation des extensions sous Windows</title>
  <para>
   Après avoir installé &php; et votre serveur web sous Windows,
   vous voudrez sûrement ajouter quelques extensions bien pratiques.
   La table suivante liste une partie des extensions disponibles.
   Comme indiqué dans le manuel, vous pouvez choisir quelles
   extensions vous voulez charger en décommentant
   la ligne <literal>extension=php_*.dll</literal> dans le fichier &php.ini;.
   Vous pouvez aussi charger dynamiquement un module avec la fonction
   <function>dl</function>.
  </para>
  <para>
   Les fichiers DLLs des extensions &php; sont préfixés
   par <literal>php_</literal> en &php; 4, et <literal>php3_</literal> en &php; 3. 
   Cela évite la confusion des extensions &php; et de leurs bibliothèques.
  </para>
    <note>
     <para>
      En &php; 4.3.1, les extensions BCMath, Calendar, COM, Ctype, FTP, MySQL, ODBC, Overload,
      PCRE, Session, Tokenizer, WDDX, XML et Zlib sont 
      <emphasis>intégrées</emphasis>. Vous n'avez pas besoin d'ajouter d'autres
      extensions pour pouvoir utiliser ces fonctions. Voyez le fichier
      <filename>README.txt</filename> ou <filename>install.txt</filename>
      de votre distribution, ou  bien 
      <link linkend="install.extensions.overview">cette table</link>
      pour une liste des modules intégrés.
     </para>
    </note>

    <para>
     Editez votre fichier &php.ini; :
     <itemizedlist>
      <listitem>
       <para>
        Vous devez modifier l'option de 
        <link linkend="ini.extension-dir">extension_dir</link> pour qu'elle pointe
        sur le dossier qui contient les extensions, là où vous avez placé vos
        fichiers <filename>php_*.dll</filename>. N'oubliez surtout pas l'anti-slash
        final. Par exemple : 
        <example>
         <title>Configurez &php; sous Windows avec le slash final</title>
         <programlisting role="ini">
<![CDATA[
extension_dir = c:/php/extensions/
]]>
         </programlisting>
        </example>
       </para>
      </listitem>
     <listitem>
      <para>
       Pour activer les extensions dans le &php.ini;, il suffit de décommenter
       les lignes <literal>extension=php_*.dll</literal> dans le &php.ini;. Ceci est fait
       en effaçant le point-virgule initial de la ligne : 
       <example>
        <title>Activer l'extension <link linkend="ref.bzip2">Bzip2</link> sous Windows</title>
         <programlisting role="ini">
<![CDATA[
// changez la ligne  ...
;extension=php_bz2.dll

// ... en
extension=php_bz2.dll
]]>
         </programlisting>
        </example>      
      </para>
     </listitem>
      <listitem>
       <para>
      Certaines de ces extensions requièrent des bibliothèques DLL supplémentaires
      pour fonctionner correctement. Certaines d'entre elles sont disponibles
      dans la distribution. dans le dossier <filename>dlls</filename> mais
      certaines (comme Oracle (php_oci8.dll)), demandent des dlls qui ne sont
      pas dans la distribution.
     </para>
     <para>
      Copiez les dlls fournies depuis le dossier <filename>dlls</filename> dans
      votre <varname>PATH</varname> Windows. Les bons emplacements sont typiquement :
      <simplelist>
       <member>c:\windows\system pour Windows 9x/Me</member>
       <member>c:\winnt\system32 pour Windows NT/2000</member>
       <member>c:\windows\system32 pour Windows XP</member>
      </simplelist>
      Si vous les avez déjà d'installées sur votre système, 
      ne les écrasez que si &php; ne fonctionne pas correctement 
      (et de toutes manières, faites une sauvegarde de ces DLL, 
      en cas de problème).
       </para>
     </listitem>
    </itemizedlist>
   </para>

    <para>
     <table id="install.extensions.overview">
      <title>Extensions &php; pour Windows</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Extension</entry>
         <entry>Description</entry>
         <entry>Notes</entry>
        </row>
       </thead>
                                                     
       <tbody>
  <row>
   <entry>php_bz2.dll</entry>
   <entry>Fonctions de compression <link linkend="ref.bzip2">bzip2</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_calendar.dll</entry>
   <entry>Fonctions de conversions calendaires <link linkend="ref.calendar">Calendar</link></entry>
   <entry>Disponible depuis &php; 4.0.3</entry>
  </row>
  <row>
   <entry>php_cpdf.dll</entry>
   <entry>Fonctions <link linkend="ref.cpdf">ClibPDF</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_crack.dll</entry>
   <entry>Fonctions de <link linkend="ref.crack">CrackLib</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php3_crypt.dll</entry>
   <entry>Fonctions de Crypt</entry>
   <entry>Inconnu</entry>
  </row>
  <row>
   <entry>php_ctype.dll</entry>
   <entry>Fonctions <link linkend="ref.ctype">ctype</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_curl.dll</entry>
   <entry><link linkend="ref.curl">CURL</link>, Bibliothèque de fonctions "Client URL"</entry>
   <entry>Requiert : <filename>libeay32.dll</filename>, 
   <filename>ssleay32.dll</filename> (fournies)</entry>
  </row>
  <row>
   <entry>php_cybercash.dll</entry>
   <entry>Fonctions de paiement <link linkend="ref.cybercash">Cybercash</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_db.dll</entry>
   <entry>Fonctions <link linkend="ref.dbm">DBM</link></entry>
   <entry>Obsolètes. Utilisez DBA à la place (<filename>php_dba.dll</filename>)
   </entry>
  </row>
  <row>
   <entry>php_dba.dll</entry>
   <entry><link linkend="ref.dba">DBA</link>: DataBase Abstraction, fonctions
   d'abstraction de base de données (de type dbm)</entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_dbase.dll</entry>
   <entry>Fonctions <link linkend="ref.dbase">dBase</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php3_dbm.dll</entry>
   <entry>Fonctions Berkeley DB2</entry>
   <entry>Inconnu</entry>
  </row>
  <row>
   <entry>php_dbx.dll</entry>
   <entry>Fonctions <link linkend="ref.dbx">dbx</link></entry>
   <entry></entry>
  </row>
  <row>
   <entry>php_domxml.dll</entry>
   <entry>Fonctions de <link linkend="ref.domxml">DOM XML</link></entry>
   <entry>Requiert : <filename>libxml2.dll</filename> (fournie)</entry>
  </row>
  <row>
   <entry>php_dotnet.dll</entry>
   <entry>Fonctions <link linkend="ref.dotnet">.NET</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_exif.dll</entry>
   <entry>Fonctions de lecture des en-têtes JPEG <link linkend="function.read-exif-data">Read EXIF</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_fbsql.dll</entry>
   <entry>Fonctions de <link linkend="ref.fbsql">FrontBase</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_fdf.dll</entry>
   <entry>Fonctions <link linkend="ref.fdf">FDF</link>: Forms Data Format.</entry>
   <entry>Requiert : <filename>fdftk.dll</filename> (fournies)</entry>
  </row>
  <row>
   <entry>php_filepro.dll</entry>
   <entry>Fonctions <link linkend="ref.filepro">filePro</link></entry>
   <entry>Accès en lecture seule</entry>
  </row>
  <row>
   <entry>php_ftp.dll</entry>
   <entry>Fonctions <link linkend="ref.ftp">FTP</link></entry>
   <entry>Disponible depuis &php; 4.0.3</entry>
  </row>
  <row>
   <entry>php_gd.dll</entry>
   <entry>Fonctions de traitement des images <link linkend="ref.image">GD</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_gd2.dll</entry>
   <entry>Fonctions de traitement des images <link linkend="ref.image">GD2</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_gettext.dll</entry>
   <entry>Fonctions <link linkend="ref.gettext">Gettext</link></entry>
   <entry>&php; &lt;= 4.2.0 requiert : <filename>gnu_gettext.dll</filename> (fournie), 
   &php; &gt;= 4.2.3 requiert <filename>libintl-1.dll</filename> (fournie).</entry>
  </row>
  <row>
   <entry>php_hyperwave.dll</entry>
   <entry>Fonctions <link linkend="ref.hw">HyperWave</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_iconv.dll</entry>
   <entry>Fonctions de conversions de jeux de caractères <link linkend="ref.iconv">ICONV</link></entry>
   <entry>Requiert : <filename>iconv-1.3.dll</filename> (fournies)</entry>
  </row>
  <row>
   <entry>php_ifx.dll</entry>
   <entry>Fonctions <link linkend="ref.ifx">Informix</link></entry>
   <entry>Requiert : les bibliothèques Informix</entry>
  </row>
  <row>
   <entry>php_iisfunc.dll</entry>
   <entry>Fonctions de gestion de IIS</entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_imap.dll</entry>
   <entry>Fonctions <link linkend="ref.imap">IMAP</link>, POP3 et NNTP</entry>
   <entry>&php; 3 : <filename>php3_imap4r1.dll</filename></entry>
  </row>
  <row>
   <entry>php_ingres.dll</entry>
   <entry>Fonctions <link linkend="ref.ingres">Ingres II</link></entry>
   <entry>Requiert : bibliothèques Ingres II</entry>
  </row>
  <row>
   <entry>php_interbase.dll</entry>
   <entry>Fonctions <link linkend="ref.ibase">InterBase</link></entry>
   <entry>Requiert : <filename>gds32.dll</filename> (fournies)</entry>
  </row>
  <row>
   <entry>php_java.dll</entry>
   <entry>Extension <link linkend="ref.java">Java</link></entry>
   <entry>Requiert : <filename>jvm.dll</filename> (fournies)</entry>
  </row>
  <row>
   <entry>php_ldap.dll</entry>
   <entry>Fonctions <link linkend="ref.ldap">LDAP</link></entry>
   <entry>&php; &lt;= 4.2.0 requiert <filename>libsasl.dll</filename> (fournie), 
   &php; &gt;= 4.3.0 requiert <filename>libeay32.dll</filename>, 
   <filename>ssleay32.dll</filename> (fournies).</entry>
  </row>
  <row>
   <entry>php_mbstring.dll</entry>
   <entry>Fonctions <link linkend="ref.mbstring">chaînes multi-octets</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_mcrypt.dll</entry>
   <entry>Fonctions de chiffrement <link linkend="ref.mcrypt">Mcrypt</link></entry>
   <entry>Requiert : <filename>libmcrypt.dll</filename></entry>
  </row>
  <row>
   <entry>php_mhash.dll</entry>
   <entry>Fonctions <link linkend="ref.mhash">Mhash</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_mime_magic.dll</entry>
   <entry>Fonctions <link linkend="ref.mime-magic">Mimetype</link></entry>
   <entry>Requiert : <filename>magic.mime</filename> (fournie)</entry>
  </row>
  <row>
   <entry>php_ming.dll</entry>
   <entry>Fonctions de génération de fichiers Flash avec <link linkend="ref.ming">Ming</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_msql.dll</entry>
   <entry>Fonctions de <link linkend="ref.msql">mSQL</link></entry>
   <entry>Requiert : <filename>msql.dll</filename> (fournies)</entry>
  </row>
  <row>
   <entry>php3_msql1.dll</entry>
   <entry>mSQL 1 client</entry>
   <entry>Inconnu</entry>
  </row>
  <row>
   <entry>php3_msql2.dll</entry>
   <entry>mSQL 2 client</entry>
   <entry>Inconnu</entry>
  </row>
  <row>
   <entry>php_mssql.dll</entry>
   <entry>Fonctions <link linkend="ref.mssql">MSSQL</link></entry>
   <entry>Requiert : <filename>ntwdblib.dll</filename> (fournies)</entry>
  </row>
  <row>
   <entry>php3_mysql.dll</entry>
   <entry>Fonctions <link linkend="ref.mysql">MySQL</link></entry>
   <entry>Intégré à &php; 4</entry>
  </row>
  <row>
   <entry>php3_nsmail.dll</entry>
   <entry>Fonctions de email Netscape</entry>
   <entry>Inconnu</entry>
  </row>
  <row>
   <entry>php3_oci73.dll</entry>
   <entry>Fonctions Oracle</entry>
   <entry>Inconnu</entry>
  </row>
  <row>
   <entry>php_oci8.dll</entry>
   <entry>Fonctions <link linkend="ref.oci8">Oracle 8</link></entry>
   <entry>Requiert : bibliothèques clientes Oracle 8 </entry>
  </row>
  <row>
   <entry>php_openssl.dll</entry>
   <entry>Fonctions <link linkend="ref.openssl">OpenSSL</link></entry>
   <entry>Requiert : <filename>libeay32.dll</filename> (fournies)</entry>
  </row>
  <row>
   <entry>php_oracle.dll</entry>
   <entry>Fonctions de <link linkend="ref.oracle">Oracle 7</link></entry>
   <entry>Requiert : bibliothèques clientes Oracle 7</entry>
  </row>
  <row>
   <entry>php_overload.dll</entry>
   <entry>Fonctions relatives à <link linkend="ref.overload">la
   surcharge d'objets</link></entry>
   <entry>Intégrée depuis &php; 4.3.0</entry>
  </row>
  <row>
   <entry>php_pdf.dll</entry>
   <entry>Fonctions de <link linkend="ref.pdf">PDF</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_pgsql.dll</entry>
   <entry>Fonctions de <link linkend="ref.pgsql">PostgreSQL</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_printer.dll</entry>
   <entry>Fonctions d'<link linkend="ref.printer">impressions</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_shmop.dll</entry>
   <entry>Fonctions de <link linkend="ref.shmop">mémoire partagée</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_snmp.dll</entry>
   <entry>Fonctions <link linkend="ref.snmp">SNMP</link></entry>
   <entry>NT uniquement!</entry>
  </row>
  <row>
   <entry>php_sockets.dll</entry>
   <entry>Fonctions de <link linkend="ref.sockets">socket</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_sybase_ct.dll</entry>
   <entry>Fonctions <link linkend="ref.sybase">Sybase</link></entry>
   <entry>Requiert : bibliothèques clientes Sybase</entry>
  </row>
  <row>
   <entry>php_tokenizer.dll</entry>
   <entry><link linkend="ref.tokenizer">Tokenizer</link></entry>
   <entry>Intégrée depuis &php; 4.3.0</entry>
  </row>
  <row>
   <entry>php_w32api.dll</entry>
   <entry>Fonctions <link linkend="ref.w32api">W32api</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_xmlrpc.dll</entry>
   <entry>Fonctions <link linkend="ref.xmlrpc">XML-RPC</link></entry>
   <entry>&php; &gt;= 4.2.1 requiert <filename>iconv.dll</filename> (fournie)</entry>
  </row>
  <row>
   <entry>php_xslt.dll</entry>
   <entry>Fonctions <link linkend="ref.xslt">XSLT</link></entry>
   <entry>Requiert : <filename>sablot.dll</filename>, <filename>expat.dll</filename> (fournies)</entry>
  </row>
  <row>
   <entry>php_yaz.dll</entry>
   <entry>Fonctions <link linkend="ref.yaz">YAZ</link></entry>
   <entry>Aucune</entry>
  </row>
  <row>
   <entry>php_zib.dll</entry>
   <entry>Fonctions de compression <link linkend="ref.zip">Zip</link></entry>
   <entry>Accès en lecture seule</entry>
  </row>
  <row>
   <entry>php_zlib.dll</entry>
   <entry>Fonctions de compression <link linkend="ref.zlib">ZLib</link></entry>
   <entry>Aucune</entry>
  </row>
       </tbody>
      </tgroup>
     </table>
    </para>
   </sect2>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
