<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- Author: Wez Furlong <wez@thebrainroom.com>
  Please contact me before making any major amendments to the
  content of this section.  Splitting/Merging are fine if they are
  required for php-doc restructuring purposes - just drop me a line
  if you make a change (so I can update my local copy).
-->

 <sect1 id="streams.constants">
  <title>Constantes de fl&ocirc;ts</title>
  
  <refentry id="streams.options">
   <refnamediv>
    <refname>options d'ouverture de fl&ocirc;t</refname>
    <refpurpose>Affectent les fonctions de fl&ocirc;t</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <para>
     Plusieurs valeurs peuvent &ecirc;ter combin&eacute;es avec l'op&eacute;rateur OR.
     <variablelist>
      <varlistentry>
       <term>
        <constant>IGNORE_PATH</constant> 
       </term>
       <listitem>
        <simpara>
         C'est l'option par d&eacute;faut pour les fl&ocirc;ts. Elle indique que l'include_path 
         ne sera pas fouill&eacute; pour trouver le fichier demand&eacute;.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>
        <constant>USE_PATH</constant> 
       </term>
       <listitem>
        <simpara>
         Requiert que l'include_path soit fouill&eacute; &agrave; la recherche du fichier demand&eacute;.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>
        <constant>IGNORE_URL</constant> 
       </term>
       <listitem>
        <simpara>
         Requiert que les gestionnaires d'URL soient ignor&eacute;s pour traiter ce fl&ocirc;t.
         Les gestionnaires qui ne traitent pas d'URL seront utilis&eacute; lors du
         d&eacute;codate du chemin. Il n'y a pas de contraire &agrave; cette option : l'API
         des fl&ocirc;ts utilisera tous les gestionnaires par d&eacute;faut.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>
        <constant>IGNORE_URL_WIN</constant> 
       </term>
       <listitem>
        <simpara>
         Sous Windows, c'est l'&eacute;quivalent de IGNORE_URL.
         Sur tous les autres syst&egrave;mes, cette option n'a aucun effet.
        </simpara>
       </listitem>
      </varlistentry>
      
      <varlistentry>
       <term>
        <constant>ENFORCE_SAFE_MODE</constant> 
       </term>
       <listitem>
        <simpara>
         Requiert que le gestionnaire de fl&ocirc;t effectue les v&eacute;rifications li&eacute;es au
         safe_mode sur le fichier &agrave; ouvrir avant e le faire. En omettant cette
         option, le safe_mode sera ignor&eacute; et n'importe quel fichier sera ouvert
         par PHP, du mometn qu'il a les droits pour le faire.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>
        <constant>REPORT_ERRORS</constant> 
       </term>
       <listitem>
        <simpara>
         Si cette option est utilis&eacute;e, et qu'il y a une erreur durant l'ouverture
         du fichier ou de l'URL, l'API va appeler automatiquement la fonction 
         php_error pour vous. C'est pratique car le chemin peut contenir des
         informations le login et mot de passe, que vous souhaitez ou pas afficher
         (les afficher serait un trou de s&eacute;curit&eacute;). Lorsque les API des fl&ocirc;ts g&eacute;n&egrave;rent une
         erreur, elles commencent par supprimer les informations de login et mot
         de passe, afin que l'affichage des donn&eacute;es soit sans souci.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>
        <constant>STREAM_MUST_SEEK</constant> 
       </term>
       <listitem>
        <simpara>
         Cette option est pratique lorsque votre extension doit r&eacute;ellement
         &ecirc;tre capable d&eacute;placer le pointeur de fichier dans le fl&ocirc;t. Certains
         flots ne disposent pas d'un tel pointeur. Cette option s'assure que
         le fl&ocirc;t va supporter ce opinteur. Si il ne le fait pas, le fl&ocirc;t sera
         copi&eacute; dans un fichier temporaire (qui peut &ecirc;tre un fichier ou un
         bloc de m&eacute;moire), qui supportera le pointeur.
         Notez bien que cette option est inutile lorsque vous voulez 
         d&eacute;placer le pointeur de fichier et y &eacute;crire, car le fl&ocirc;t que vous
         allez utiliser n'est peut &ecirc;tre pas votre ressource initiale, mais un
         fichier en cache.
        </simpara>
        <note>
         <simpara>
          Si la ressource demand&eacute;e est sur le r&eacute;seau, cette option va bloquer
          la fonction d'ouverture jusqu'&agrave; ce que le contenu complet du fichier
          soit t&eacute;l&eacute;charg&eacute;.
          </simpara>
        </note>        
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>
        <constant>STREAM_WILL_CAST</constant> 
       </term>
       <listitem>
        <simpara>
         Si votre extension utilise une librairie tierce qui s'attend &agrave; recevoir
         un pointeur FILE* ou un pointeur de fichier, vous pouvez utiliser cette
         option pour demander &agrave; l'API d'ouvrir la ressource, mas d'&eacute;viter
         d'utiliser les buffers. Vous pouvez alors utiliser 
         <function>php_stream_cast</function> pour obtenir un FILE* ou
         un pointeur de fichier, que vous transmettrez &agrave; la librairie.
        </simpara>
        <simpara>
         Ceci est particuli&egrave;rement pratique lorsque vous acc&eacute;dez &agrave; des URL via
         HTTP, qui vont diffuser des donn&eacute;es, mais dont le corps ne sera
         accessible qu'apr&egrave;s une quantit&eacute;
         ind&eacute;termin&eacute;e d'en-t&ecirc;tes.
        </simpara>
        <simpara>
         Comme cette option d&eacute;sactive les buffers, vous pouvez rencontrer
         des performances moins bonnes qu'avec les API habituelles. C'est
         parfaitement compr&eacute;hensible, car vous avec indiqu&eacute; aux fl&ocirc;ts que 
         vous alliez utiliser les fonctions de bases de l'impl&eacute;mentation.
         Utilisez donc cette option uniquement si vous en avez besoin.
        </simpara>
       </listitem>
      </varlistentry>


    </variablelist>    
    </para>
   </refsect1>
  </refentry>

 </sect1>
 
 
 

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

