<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.39 $ -->
<!-- EN-Revision: 1.116 Maintainer: didou Status: ready -->
 <chapter id="configuration">
  <title>Configuration</title>
  
  <sect1 id="configuration.file">
   <title>Le fichier de configuration</title>
   <simpara>
    Le fichier de configuration (appelé <filename>php3.ini</filename>
    dans la version 3.0 de &php;, et simplement &php.ini;
    dans la version 4.0) est lu par &php; au démarrage. Si vous
    avez compilé &php; en module, le fichier n'est lu qu'une seule
    fois, au lancement du démon <acronym>HTTP</acronym>. Pour les versions
    <acronym>CGI</acronym> et <acronym>CLI</acronym> le fichier est lu à 
    chaque invocation.
   </simpara>
   <para>
    La localisation par défaut du &php.ini; est une option de compilation (voir
    cette entrée de la <link linkend="faq.installation.phpini">FAQ</link>), 
    mais elle peut être
    changée pour les versions <acronym>CGI</acronym> et <acronym>CLI</acronym> avec
    l'option de ligne de commande <literal>-c</literal> : voyez le chapitre
    sur l'utilisation de &php; en <link linkend="features.commandline">ligne de commande</link>. 
    Vous pouvez aussi utiliser la variable d'environnement <literal>PHPRC</literal> 
    pour indiquer des chemins supplémentaires pour rechercher le fichier
    &php.ini;.
   </para>
   <note>
    <para>
     Le serveur web Apache change ce dossier en dossier root au démmarage, ce qui fait 
     que &php; essaye de lire &php.ini; depuis le système de fichier racine s'il existe.
    </para>
  </note>
   <para>
    Toutes les directives &php; ne sont pas documentées ci-dessous. Pour une
    liste de toutes les directives, lisez le &php.ini;, qui est très bien
    documenté. Vous pouvez jeter un oeil à sa toute dernière version 
    <ulink url="&url.php.cvs.phpini;">dans le CVS</ulink>.
   </para>
   <note>
    <para>
     La valeur par défaut de la directive &php;
     <link linkend="ini.register-globals">register_globals</link> a été changée
     de <emphasis>on</emphasis> à <emphasis>off</emphasis> en &php;
     <ulink url="&url.php.release4.2.0;">4.2.0</ulink>.
    </para>
   </note>
   <para>
    <example>
     <title>Extrait du &php.ini;</title>
     <programlisting role="ini">
<![CDATA[
; tout texte sur une ligne, situé après un point-virgule  ";" est ignoré
[php] ; les marqueur de section (texte entre crochets) sont aussi ignorés
; Les valeurs booléenne peuvent être spécifiées comme ceci :
;    true, on, yes
; ou false, off, no, none
register_globals = off
magic_quotes_gpc = yes

; vous pouvez placer les chaînes de caractères entre guillemets
include_path = ".:/usr/local/lib/php"

; Les anti-slash sont traités comme n'importe quel caractère
include_path = ".;c:\php\lib"
]]>
     </programlisting>
    </example>
   </para>
  </sect1>

  <sect1 id="configuration.changes">
   <title>Comment modifier la configuration</title>

   <sect2 id="configuration.changes.apache">
    <title>Exécuter &php; comme module Apache</title>
    <simpara>
     Lorsque vous utilisez le module Apache, vous pouvez aussi changer
     les paramètres de configuration en utilisant les directives
     dans les fichiers de configuration d'Apache (&httpd.conf;) et dans 
     les fichiers &htaccess; (Vous aurez besoin des privilèges 
     "AllowOverride Options" ou "AllowOverride All").
    </simpara>
    <simpara>
     Dans la version 4.0, il y a de nombreuses directives
     Apache qui vous permettent de modifier la configuration de &php;
     à partir des fichiers de configuration Apache. Pour une liste des
     directives qui sont <constant>PHP_INI_ALL</constant>, 
     <constant>PHP_INI_PERDIR</constant> ou <constant>PHP_INI_SYSTEM</constant>
     reportez-vous à la documentation de <function>ini_set</function>.
    </simpara>

    <note>
     <simpara>
      Dans la version 3.0, à chaque directive de configuration
      présente dans le fichier de configuration d'Apache correspond
      une directive de configuration dans le fichier
      <filename>php3.ini</filename>, à l'exception des directives
      préfixées par <filename>php3_</filename>.
     </simpara>
    </note>
    
   <variablelist>
    <varlistentry>
     <term>
       <systemitem role="directive">php_value</systemitem>
       <parameter>nom</parameter>
       <parameter>valeur</parameter>
      </term>
      <listitem>
       <para>
        Modifie la valeur de la directive spécifiée.
    Cette instruction n'est utilisable qu'avec les directives &php; de type
    <constant>PHP_INI_ALL</constant> et <constant>PHP_INI_PERDIR</constant>.
        Pour annuler une valeur qui aurait été modifiée au préalable,
        utilisez la valeur <literal>none</literal>.
       </para>
       <note>
        <para>
         N'utilisez pas <literal>php_value</literal> pour configurer des valeurs
     booléennes. <literal>php_flag</literal> (voir plus bas) doit être utilisée.
    </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_flag</systemitem>
       <parameter>nom</parameter>
       <parameter>on|off</parameter>
      </term>
      <listitem>
       <para>
        Cette instruction est utilisée pour activer ou
        désactiver une option.
        Cette instruction n'est utilisable qu'avec les directives
        &php; de type <constant>PHP_INI_ALL</constant> et
    <constant>PHP_INI_PERDIR</constant>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_admin_value</systemitem>
       <parameter>name</parameter>
       <parameter>value</parameter>
      </term>
      <listitem>
       <para>
        Cette instruction affecte une valeur à la variable spécifiée. 
        Cette instruction NE peux PAS être utilisée dans un fichier &htaccess;.
        Toute directive de &php; configurée avec le type 
        <systemitem role="directive">php_admin_value</systemitem> ne peut pas être
        modifiée en utilisant le fichier &htaccess; ou les directives de virtualhost.
    Pour annuler une valeur qui aurait été modifiée au préalable, utilisez la 
    valeur <literal>none</literal>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_admin_flag</systemitem>
       <parameter>name</parameter>
       <parameter>on|off</parameter>
      </term>
      <listitem>
       <para>
        Cette directive est utilisée pour activer ou désactiver l'option
        précédente.
        Cette instruction NE peux PAS être utilisée dans un fichier &htaccess;.
        Toute directive de &php; configurée avec le type 
        <systemitem role="directive">php_admin_flag</systemitem> ne peut pas être
        modifiée en utilisant le fichier &htaccess;.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   <para>
    <example>
     <title>Exemple de configuration Apache</title>
     <programlisting role="ini">
<![CDATA[
<IfModule mod_php4.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php3.c>
  php3_include_path ".:/usr/local/lib/php"
  php3_safe_mode on
</IfModule>
]]>
     </programlisting>
    </example>
   </para>
    <note>
      <para>
       Les constantes &php; n'existent pas en dehors de &php;. Par
       exemple, dans le fichier &httpd.conf;,
       vous ne pouvez pas utiliser des constantes &php; telles que
       <constant>E_ALL</constant> ou <constant>E_NOTICE</constant> 
       pour fixer le niveau de <link linkend="ini.error-reporting">rapport d'erreur</link>,
       car ces constantes n'ont pas de signification pour Apache, 
       et seront remplacées par <emphasis>0</emphasis>. 
       Utilisez les valeurs numériques à la place. 
       Les constantes peuvent être utilisées dans le &php.ini;
      </para>
     </note>
    </sect2>
    
   <sect2 id="configuration.changes.windows">
    <title>Modifier la configuration de &php; dans la base de registre Windows</title>
     <simpara>
      Lorsque vous utilisez &php; sur Windows, la configuration peut
      être modifiée dossier par dossier en utilisant la base de registres
      de Windows. Les valeurs de configuration sont stockées
      avec la clé de registre 
      <literal>HKLM\SOFTWARE\PHP\Per Directory Values</literal>, 
      dans les sous-clés correspondantes aux noms de dossier. Par exemple,
      la valeur d'une option dans le dossier <literal>c:\inetpub\wwwroot</literal>
      sera stockée dans la clé 
      <literal>HKLM\SOFTWARE\PHP\Per Directory Values\c\inetpub\wwwroot</literal>. 
      La valeur de cette option sera utilisée pour tous les
      scripts qui fonctionnent dans ce dossier ou ses sous-dossiers.
      Les valeurs sous la clé doivent avoir le nom d'une
      <link linkend="configuration">direction de configuration &php;</link>,
      et la valeur correspondante. Les constantes &php; ne sont
      pas utilisables : il faut mettre la valeur entière.
     </simpara>
   </sect2>

   <sect2 id="configuration.changes.other">
    <title>Autres interfaces de configuration de &php;</title>
    <para>
     Indépendamment de l'interface de &php;, vous pouvez modifier
     certaines valeurs de la configuration durant l'exécution des
     scripts, grâce à la fonction <function>ini_set</function>. 
     La table suivante fournit une présentation des différents endroits
     où la directive peut être modifiée.
    </para>
    <para>
     <table>
     <title>Definition des constantes PHP_INI_*</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>Constante</entry>
        <entry>Valeur</entry>
        <entry>Signification</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><constant>PHP_INI_USER</constant></entry>
        <entry>1</entry>
        <entry>La directive peut être configurée dans les scripts.</entry>
       </row>
       <row>
        <entry><constant>PHP_INI_PERDIR</constant></entry>
        <entry>2</entry>
        <entry>
         La directive peut être configurée dans le fichier &php.ini;, le
         fichier &htaccess; ou encore dans le fichier
         &httpd.conf;
        </entry>
       </row>
       <row>
        <entry><constant>PHP_INI_SYSTEM</constant></entry>
        <entry>4</entry>
        <entry>
         La directive peut être configurée dans le fichier &php.ini; ou
         dans &httpd.conf;
        </entry>
       </row>
       <row>
        <entry><constant>PHP_INI_ALL</constant></entry>
        <entry>7</entry>
        <entry>La directive peut être modifiée n'importe où.</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
    </para>
     <para>
     Vous pouvez voir l'état de votre configuration en utilisant
     la fonction <function>phpinfo</function>. Vous pouvez aussi
     accéder aux valeurs de votre configuration de manière
     individuelle en utilisant les fonctions
     <function>ini_get</function> or <function>get_cfg_var</function>.
    </para>
   </sect2>
  </sect1>
  
  <sect1 id="configuration.directives">
   <title>Directives de configuration diverses</title>
   <para>
    Ceci n'est pas une liste de toutes les directives &php;. Les directives sont
    listées aux endroits appropriés, par exemple, si vous cherchez les directives
    pour les sessions, vous les trouverez dans le 
    <link linkend="ref.session">chapitre des sessions</link>.
   </para>

  <sect2 id="ini.sect.httpd-options">
   <title>Options Httpd</title>
    <para>
     <table>
      <title>Options Httpd</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Nom</entry>
         <entry>Valeur par défaut</entry>
         <entry>Modifications</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>async_send</entry>
         <entry>"0"</entry>
         <entry><constant>PHP_INI_ALL</constant></entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
    </para>
   </sect2>

  <sect2 id="ini.sect.language-options">
   <title>Options du langage</title>
   <para>
   <table>
    <title>Options du langage</title>
    <tgroup cols="3">
       <thead>
        <row>
         <entry>Nom</entry>
         <entry>Valeur par défaut</entry>
         <entry>Modifications</entry>
        </row>
       </thead>
     <tbody>
     <row>
      <entry>short_open_tag</entry>
      <entry>On</entry>
      <entry><constant>PHP_INI_SYSTEM</constant>|<constant>PHP_INI_PERDIR</constant></entry>
     </row>
     <row>
      <entry>asp_tags</entry>
      <entry>Off</entry>
      <entry><constant>PHP_INI_SYSTEM</constant>|<constant>PHP_INI_PERDIR</constant></entry>
     </row>
     <row>
      <entry>precision</entry>
      <entry>"14"</entry>
      <entry><constant>PHP_INI_ALL</constant></entry>
     </row>
     <row>
      <entry>y2k_compliance</entry>
      <entry>Off</entry>
      <entry><constant>PHP_INI_ALL</constant></entry>
     </row>
     <row>
      <entry>allow_call_time_pass_reference</entry>
      <entry>On</entry>
      <entry><constant>PHP_INI_SYSTEM</constant>|<constant>PHP_INI_PERDIR</constant></entry>
     </row>
     <row>
      <entry>expose_php</entry>
      <entry>On</entry>
      <entry><constant>PHP_INI_SYSTEM</constant></entry>
     </row>
    </tbody>
    </tgroup>
   </table>
   </para>
    
   &ini.descriptions.title; 
    
    <para>     
     <variablelist>
      <varlistentry id="ini.short-open-tag">
       <term>
        <parameter>short_open_tag</parameter>
        <type>bool</type>
       </term>
       <listitem>
        <para>
         Active le support de la forme courte des balises &php; : 
         <userinput>&lt;? ?&gt;</userinput>. Si vous voulez utiliser
         &php; avec du XML, vous pouvez désactiver cette option afin que
         vous puissiez utiliser <userinput>&lt;?xml ?&gt;</userinput>. Sinon
         vous pouvez l'afficher avec &php; comme ceci : 
         <userinput>&lt;?php echo '&lt;?xml version="1.0"'; ?&gt;</userinput>.
         Si cette directive est désactivée, vous devez utiliser la
         forme longue des balises &php; <userinput>&lt;?php ?&gt;</userinput>.
        </para>
        <note>
         <para>
          Cette directive affecte aussi les raccourcis <userinput>&lt;?=</userinput>, 
          qui est l'équivalent de <userinput>&lt;? echo</userinput>. Utiliser ce 
          raccourci impose l'activation de la directive 
          <systemitem role="directive">short_open_tag</systemitem>.
         </para>
        </note>
       </listitem>
      </varlistentry>
      <varlistentry id="ini.asp-tags">
       <term>
        <parameter>asp_tags</parameter>
        <type>bool</type>
       </term>
       <listitem>
        <para>
         Active l'utilisation des balises de type ASP &lt;% %&gt;, en plus des
         traditionnelles balises &lt;?php ?&gt; . Cela inclut l'utilisation du raccourcid
         &lt;%= $value %&gt;. Pour plus d'informations, reportez-vous à
         <link linkend="language.basic-syntax.phpmode">inclusion dans le HTML</link>.
        </para>
        <note>
         <para>
          Le support des balises ASP a été ajouté dans la version 3.0.4.
        </para>
        </note>
       </listitem>
      </varlistentry>
      <varlistentry id="ini.precision">
       <term>
        <parameter>precision</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <simpara>
         Le nombre de chiffres significatifs à afficher avec les &float;.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry id="ini.y2k-compliance">
       <term>
        <parameter>y2k_compliance</parameter>
        <type>bool</type>
       </term>
       <listitem>
        <simpara>
         Active la compatibilité an 2000 (Cela posera des problèmes avec les
         navigateurs qui ne sont pas compatibles)
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry id="ini.allow-call-time-pass-reference">
       <term>
        <parameter>allow_call_time_pass_reference</parameter>
        <type>bool</type>
       </term>
       <listitem>
        <para>
         Cette directive force le passage des arguments par référence au
         moment de l'appel des fonctions. Cette méthode est obsolète, et il
         est probable qu'elle soit abandonnée dans les futures versions de
         &php; et Zend. La méthode qui est recommandée est d'indiquer le passage
         par référence dans la déclaration de la fonction. Nous vous recommandons
         de tenter de désactiver cette directive et d'adapter vos scripts,
         afin d'en garantir leur portabilité (vous verrez une alerte s'afficher
         à chaque fois que vous utilisez cette fonctionnalité, et les
         arguments seront passés par valeur plutôt quee par référence).
        </para>
        <para>
         Voir aussi <link linkend="language.references">Les références</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.expose-php">
       <term>
        <parameter>expose_php</parameter>
        <type>bool</type>
       </term>
       <listitem>
        <para>
         Cette directive active ou non le fait que &php; est marqué comme installé
         sur le serveur web (en ajoutant sa propre signature dans les en-têtes du serveur
         web). Cet affichage n'est pas une menace en terme de sécurité, mais il permet
         de déterminer l'utilisation de &php; sur votre serveur.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

  <sect2 id="ini.sect.resource-limits">
   <title>Limitation des ressources</title>
   <para>
    <table>
     <title>Limitation des ressources</title>
     <tgroup cols="3">
       <thead>
        <row>
         <entry>Nom</entry>
         <entry>Valeur par défaut</entry>
         <entry>Modifications</entry>
        </row>
       </thead>
      <tbody>
       <row>
        <entry>memory_limit</entry>
        <entry>"8M"</entry>
        <entry><constant>PHP_INI_ALL</constant></entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry id="ini.memory-limit">
      <term>
       <parameter>memory_limit</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        Cette directive fixe la quantité maximale de mémoire, exprimée
        en octets, qu'un script peut réserver. Cela évite que des scripts
        mal écrits consomment toute la mémoire sur le serveur. Afin d'utiliser
        cette directive, vous devez l'avoir activée au moment de la compilation.
        De ce fait, vous devez trouver dans la ligne de configuration
        l'option <literal>--enable-memory-limit</literal>. Notez que vous
        pouvez lui donner la valeur de -1 si vous ne souhaitez pas de
        limitation de consommation de mémoire.
       </para>
       <para>
        Depuis &php; 4.3.2, et quand memory_limit est activé, la fonction &php;
    <function>memory_get_usage</function> est utilisable.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    Voir aussi
    <link linkend="ini.max-execution-time">max_execution_time</link>.
   </para>
  </sect2>
  <sect2 id="ini.sect.data-handling">
   <title>Gestion des données</title>
    <para>
     <table>
      <title>Options de gestion des données</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Nom</entry>
         <entry>Par défaut</entry>
         <entry>Modifiable</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>track-vars</entry>
         <entry>"On"</entry>
         <entry><constant>PHP_INI_??</constant></entry>
        </row>
        <row>
         <entry>arg_separator.output</entry>
         <entry>"&amp;"</entry>
         <entry><constant>PHP_INI_ALL</constant></entry>
        </row>
        <row>
         <entry>arg_separator.input</entry>
         <entry>"&amp;"</entry>
         <entry><constant>PHP_INI_SYSTEM</constant>|<constant>PHP_INI_PERDIR</constant></entry>
        </row>
        <row>
         <entry>variables_order</entry>
         <entry><literal>EGPCS</literal></entry>
         <entry><constant>PHP_INI_ALL</constant></entry>
        </row>
        <row>
         <entry>register_globals</entry>
         <entry>"Off"</entry>
         <entry><constant>PHP_INI_PERDIR</constant>|<constant>PHP_INI_SYSTEM</constant></entry>
        </row>
        <row>
         <entry>register_argc_argv</entry>
         <entry>"On"</entry>
         <entry><constant>PHP_INI_PERDIR</constant>|<constant>PHP_INI_SYSTEM</constant></entry>
       </row>
       <row>
        <entry>register_long_arrays</entry>
        <entry>"On"</entry>
        <entry><constant>PHP_INI_PERDIR</constant>|<constant>PHP_INI_SYSTEM</constant></entry>
       </row>
       <row>
        <entry>post_max_size</entry>
        <entry>"8M"</entry>
        <entry><constant>PHP_INI_SYSTEM</constant>|<constant>PHP_INI_PERDIR</constant></entry>
       </row>
       <row>
        <entry>gpc_order</entry>
        <entry>"GPC"</entry>
        <entry><constant>PHP_INI_ALL</constant></entry>
       </row>
       <row>
        <entry>auto_prepend_file</entry>
        <entry>""</entry>
        <entry><constant>PHP_INI_SYSTEM</constant>|<constant>PHP_INI_PERDIR</constant></entry>
       </row>
       <row>
        <entry>auto_append_file</entry>
        <entry>""</entry>
        <entry><constant>PHP_INI_SYSTEM</constant>|<constant>PHP_INI_PERDIR</constant></entry>
       </row>
        <row>
         <entry>default_mimetype</entry>
         <entry>"text/html"</entry>
         <entry><constant>PHP_INI_ALL</constant></entry>
        </row>
        <row>
         <entry>default_charset</entry>
         <entry>"iso-8859-1"</entry>
         <entry><constant>PHP_INI_ALL</constant></entry>
        </row>
        <row>
         <entry>always_populate_raw_post_data</entry>
         <entry>"0"</entry>
         <entry><constant>PHP_INI_SYSTEM</constant>|<constant>PHP_INI_PERDIR</constant></entry>
        </row>
        <row>
         <entry>allow_webdav_methods</entry>
         <entry>"0"</entry>
         <entry><constant>PHP_INI_SYSTEM</constant>|<constant>PHP_INI_PERDIR</constant></entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    
    &ini.descriptions.title;
    
    <para>
     <variablelist>
      <varlistentry id="ini.track-vars">
       <term>
        <parameter>track_vars</parameter>
        <type>bool</type>
       </term>
       <listitem>
        <para>
         Si activé, les variables de l'environnement, GET, POST, Cookie et 
         du serveur sont disponibles respectivement dans les tableaux associatifs
         <varname>$_ENV</varname>,
         <varname>$_GET</varname>,
         <varname>$_POST</varname>,
         <varname>$_COOKIE</varname> et
         <varname>$_SERVER</varname>.
        </para>
        <para>
         Notez que depuis &php; 4.0.3, 
         <systemitem role="directive">track_vars</systemitem> est toujours
         activée.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.arg-separator.output">
       <term>
        <parameter>arg_separator.output</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Le séparateur utilisé dans les URL générées par &php; pour
         séparer les arguments.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.arg-separator.input">
       <term>
        <parameter>arg_separator.input</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Liste de séparateur(s) utilisé par &php; pour analyser les 
         URL d'entrées, et en déduire les variables.
        </para>
        <note>
         <para>
          Chacun des caractères de cette directive est considéré comme
          un séparateur.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.variables-order">
       <term>
        <parameter>variables_order</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Etablit l'ordre de priorité des méthodes GET/POST/COOKIE
         et des valeurs issues de l'environnement et du serveur.
         Par défaut, cette directive est établie à <literal>EGPCS</literal>. 
         En affectant "GP" à cette directive, &php; ignorera les cookies, 
         le serveur et l'environnement et écrasera toute variable issue
         de la méthode GET par les valeurs des variables de même nom,
         issues de la méthode POST.
       </para>
        <para>
         Voir aussi <link linkend="ini.register-globals">register_globals</link>.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry id="ini.register-globals">
       <term>
        <parameter>register_globals</parameter>
        <type>bool</type>
       </term>
       <listitem>
        <para>
         Cette option active l'enregistrement des variables <literal>EGPCS</literal>
         (Environnement, GET, POST, Cookie, Serveur), en tant que
         variables globales. 
         Par exemple, si register_globals = on, l'URL suivante 
         <literal>http://www.example.com/test.php?id=3</literal> va créer 
         la variable <varname>$id</varname> dans votre script. Ou bien,
         <varname>$DOCUMENT_ROOT</varname>, issue de 
         <varname>$_SERVER['DOCUMENT_ROOT']</varname>.
         Vous pouvez désactiver cette fonction
         si vous ne voulez pas truffer vos scripts avec des
         valeurs utilisateurs. 
         Depuis &php; <ulink url="&url.php.release4.2.0;">4.2.0</ulink>,
         cette directive vaut par défaut <emphasis>off</emphasis>. Il est recommandé
         de lire la liste des <link linkend="reserved.variables">Variables prédéfinies</link>,
         pour découvrir les 
         <link linkend="language.variables.superglobals">super-globales</link> :
         <varname>$_ENV</varname>, 
         <varname>$_GET</varname>,
         <varname>$_POST</varname>, 
         <varname>$_COOKIE</varname> et
         <varname>$_SERVER</varname>. 
         Lisez aussi le chapitre sur la sécurité 
         <link linkend="security.registerglobals">Utilisation des variables super-globales</link>
         pour plus de détails.
        </para>
        <para>
         Notez que <systemitem role="directive">register_globals</systemitem>
         ne peut être modifiée durant l'exécution du script (avec <function>ini_set</function>). 
         Cependant, vous pouvez utiliser le fichier &htaccess; si
         votre hôte les supporte, comme décrit ci-dessus. Par exemple, vous pouvez
         inscrire dans votre fichier &htaccess; :
         <userinput>php_flag register_globals on</userinput>.
        </para>
        <note>
         <para>
          <systemitem role="directive">register_globals</systemitem> est combiné avec
          la directive <link linkend="ini.variables-order">variables_order</link>.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-argc-argv">
       <term>
        <parameter>register_argc_argv</parameter>
        <type>bool</type>
       </term>
       <listitem>
        <simpara>
         Indique à &php; s'il doit déclarer les variables argv et
         argc (qui contiendront alors les mêmes informations passées 
         par méthode GET).
        </simpara>
        <simpara>
         Voir aussi <link linkend="features.commandline">utiliser &php; en ligne de commande</link>.
         Cette directive a été introduite en &php; 4.0.0 et a toujours été à "on" depuis.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-long-arrays">
       <term>
        <parameter>register_long_arrays</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         Indique à &php; s'il doit enregistrer les anciens tableaux
         <varname>$HTTP_*_VARS</varname>, comme 
         <link linkend="language.variables.predefined">variables prédéfinies</link>.
         Lorsque cette option est activée (par défaut), les anciens tableaux
         tels que <varname>$HTTP_GET_VARS</varname> seront définis.
         Si vous ne les utilisez pas, il est recommandé de les désactiver,
         pour des raisons de performances. A la place, utilisez les super globales,
         telles que <varname>$_GET</varname>.
        </simpara>
        <simpara>
         Cette directive a été introduite avec &php; 5.0.0.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.post-max-size">
       <term>
        <parameter>post_max_size</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <simpara>
         Configure la taille maximale de données par méthode POST.
         Cette configuration affecte aussi le téléchargement de fichiers.
         Pour autoriser l'upload de grands fichiers, il faut que cette
         configuration soit plus grande encore, et plus grande que
         <link linkend="ini.upload-max-filesize">upload_max_filesize</link>.
        </simpara>
        <simpara>
         Si la limitation de mémoire est activée dans votre script de configuration
         <link linkend="ini.memory-limit">memory_limit</link> va aussi affecter
         le téléchargement de fichiers. En général, 
         <link linkend="ini.memory-limit">memory_limit</link> doit être plus
         grand que <parameter>post_max_size</parameter>.
        </simpara>
       </listitem>
      </varlistentry>

       <varlistentry id="ini.gpc-order">
       <term>
        <parameter>gpc_order</parameter>
        <type>string</type>
       </term>
       <listitem>
       <para>
        Configure l'ordre d'utilisation des tableaux GET/POST/COOKIE. Par défaut,
    la valeur est "GPC".
        En affectant "GP" à cette directive, &php; ignorera les cookies,
    le serveur et l'environnement et écrasera toute variable issue
    de la méthode GET par les valeurs des variables de même nom,
    issues de la méthode POST.
       </para>
       <note>
        <para>
         Cette directive est obsolète. Voyez plutôt 
         <link linkend="ini.variables-order">variables_order</link>.
        </para>
       </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.auto-append-file">
       <term>
        <parameter>auto_append_file</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Spécifie le nom d'un fichier qui sera automatiquement ajouté
         après le fichier principal. Le fichier est inclus comme s'il avait
         été appelé avec la fonction <function>include</function>,
         donc <link linkend="ini.include-path">include_path</link> est utilisé.
        </para>
        <para>
         Le mot réservé <systemitem class="constant">none</systemitem>
         désactive l'auto-appending.
        </para>
        <note>
         <para>
          Si le script s'arrête par la fonction <function>exit</function>,
          auto-append <emphasis>ne fonctionnera pas</emphasis>.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.auto-prepend-file">
       <term>
        <parameter>auto_prepend_file</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Spécifie le nom d'un fichier qui sera automatiquement ajouté
         avant le fichier principal. Le fichier est inclus comme s'il avait
         été appelé avec la fonction <function>include</function>,
         donc <link linkend="ini.include-path">include_path</link> est utilisé.
        </para>
        <para>
         Le mot réservé <systemitem class="constant">none</systemitem>
         désactive l'auto-prepending.
         </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.default-mimetype">
       <term>
        <parameter>default_mimetype</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.default-charset">
       <term>
        <parameter>default_charset</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Depuis la version 4.0b4, &php; fournit toujours une indication
         du jeu de caractères pour les fichiers générés, dans l'en-tête HTTP
         <literal>Content-type</literal>. Pour désactiver l'envoi de cette
         indication, laissez cette directive vide.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.always-populate-raw-post-data">
       <term>
        <parameter>always_populate_raw_post_data</parameter>
        <type>bool</type>
       </term>
       <listitem>
        <para>
         Force le remplissage de la variable <varname>$HTTP_RAW_POST_DATA</varname>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.allow-webdav-methods">
       <term>
        <parameter>allow_webdav_methods</parameter>
        <type>bool</type>
       </term>
       <listitem>
        <para>
         Cette directive autorise la gestion de requêtes HTTP WebDAV par &php; : 
         PROPFIND, PROPPATCH, MOVE, COPY, etc. Si vous voulez les données
         postées par ces requêtes, vous devez aussi activer
         <link linkend="ini.always-populate-raw-post-data">always_populate_raw_post_data</link>.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     Voir aussi 
     <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>,
     <link linkend="ini.magic-quotes-runtime">magic-quotes-runtime</link> et
     <link linkend="ini.magic-quotes-sybase">magic_quotes_sybase</link>.
    </para>
   </sect2>
  <sect2 id="ini.sect.path-directory">
   <title>Dossiers</title>
    <para>
     <table>
      <title>Options de dossiers</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Nom</entry>
         <entry>Par défaut</entry>
         <entry>Modifiable</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>include_path</entry>
         <entry>PHP_INCLUDE_PATH</entry>
         <entry><constant>PHP_INI_ALL</constant></entry>
        </row>
        <row>
         <entry>doc_root</entry>
         <entry>PHP_INCLUDE_PATH</entry>
         <entry><constant>PHP_INI_SYSTEM</constant></entry>
        </row>
        <row>
         <entry>user_dir</entry>
         <entry>NULL</entry>
         <entry><constant>PHP_INI_SYSTEM</constant></entry>
        </row>
        <row>
         <entry>extension_dir</entry>
         <entry>PHP_EXTENSION_DIR</entry>
         <entry><constant>PHP_INI_SYSTEM</constant></entry>
        </row>
        <row>
         <entry>cgi.fix_pathinfo</entry>
         <entry>"0"</entry>
         <entry><constant>PHP_INI_SYSTEM</constant></entry>
        </row>
        <row>
         <entry>cgi.force_redirect</entry>
         <entry>"1"</entry>
         <entry><constant>PHP_INI_SYSTEM</constant></entry>
        </row>
        <row>
         <entry>cgi.redirect_status_env</entry>
         <entry>""</entry>
         <entry><constant>PHP_INI_SYSTEM</constant></entry>
        </row>
        <row>
         <entry>fastcgi.impersonate</entry>
         <entry>"0"</entry>
         <entry><constant>PHP_INI_SYSTEM</constant></entry>
        </row>
    <row>
         <entry>cgi.rfc2616_headers</entry>
         <entry>"0"</entry>
         <entry><constant>PHP_INI_SYSTEM</constant></entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    
    &ini.descriptions.title;
    
    <para>
     <variablelist>
      <varlistentry id="ini.include-path">
       <term>
        <parameter>include_path</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Spécifie une liste de dossiers, où les fonctions 
         <function>require</function>, <function>include</function> et 
         fopen_with_path() iront chercher les fichiers. Le format est 
         le même que celui de la variable d'environnement 
         <envar>PATH</envar> : une liste de dossiers, séparés 
         par des deux points (<literal>:</literal>) sous UNIX, 
         et par des points virgules (<literal>;</literal>)
         sous Windows.
        </para>
        <para>
         <example>
          <title>UNIX include_path</title>
          <programlisting role="php.ini">
<![CDATA[
include_path=".:/php/includes"
]]>
          </programlisting>
         </example>
        </para>
        <para>
         <example>
          <title>Windows include_path</title>
          <programlisting role="php.ini">
<![CDATA[
include_path=".;c:\php\includes"
]]>
          </programlisting>
         </example>
        </para>
        <para>
         Utiliser un point (<literal>.</literal>) dans l'include_path
         permet de réaliser des inclusions relatives au dossier
         courant.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.doc-root">
       <term>
        <parameter>doc_root</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Le dossier racine de &php;. Cette directive n'est utilisée que
         si elle est définie. Si &php; est configuré en
         &safemode;, aucun fichier en dehors de ce dossier ne sera accessible.
         Si &php; n'a pas été compilé avec l'option FORCE_REDIRECT, vous 
         DEVRIEZ utiliser cette option, si vous exécutez &php; en tant que
         CGI avec serveur web autre que IIS.
         La solution alternative est d'utiliser la directive 
         <link linkend="ini.cgi.force-redirect">cgi.force_redirect</link> ci-dessous.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.user-dir">
       <term>
        <parameter>user_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Répertoire où sont stockés les fichiers &php;
         dans le répertoire d'un utilisateur. Par exemple, 
         <literal>public_html</literal>.
        </para>
       </listitem>
      </varlistentry>

     <varlistentry id="ini.extension-dir">
      <term>
       <parameter>extension_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Définit le répertoire dans lequel &php; doit chercher 
        les extensions lors du chargement dynamique. Voir aussi
        <link linkend="ini.enable-dl">enable_dl</link> et <function>dl</function>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.extension">
      <term>
       <parameter>extension</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Définit les extensions qui doivent être chargées lors du
        démarrage de &php;.
       </para>
      </listitem>
     </varlistentry>

      <varlistentry id="ini.cgi.fix_pathinfo">
       <term>
        <parameter>cgi.fix_pathinfo</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Fourni les <emphasis>vraies</emphasis> PATH_INFO/PATH_TRANSLATED
         pour le CGI.  Le comportemnt précédent de &php; était de
         donner à PATH_TRANSLATED la valeur de SCRIPT_FILENAME, et ne de pas
         utiliser PATH_INFO. Pour plus d'informations sur 
         PATH_INFO, voyez les spécifications CGI. En donnant la valeur de 1 à
         cette directive, &php; CGI va se conformer aux spécifications. 
         La valeur de zéro conserve le comportement précédent de &php;.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.cgi.force-redirect">
       <term>
        <parameter>cgi.force_redirect</parameter>
        <type>bool</type>
       </term>
       <listitem>
        <para>
         cgi.force_redirect est nécesssaire pour assurer la sécurité de
         &php;, lorsqu'il fonctionne en tant que CGI pour la plupart
         des serveurs web. Même si laissé vide, &php; va activer cette
         option par défaut. Vous pouvez la désactiver 
         <emphasis>à vos risques et périls</emphasis>.
        </para>
        <note>
         <para>
          Utilisateurs Windows : vous pouvez désactiver cette option sans problème
          avec IIS et en fait, vous DEVEZ la désactiver.
          Pour faire fonctionner OmniHTTPD ou Xitami, vous devrez aussi la désactiver.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.cgi.redirect-status-env">
       <term>
        <parameter>cgi.cgi.redirect_status_env</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Si la directive cgi.force_redirect est activée, et que vous ne
         fonctionnez pas sous Apache ou Netscape (iPlanet), vous POURRIEZ
         devoir allouer une variable d'environnement que &php; ira rechercher
         pour s'assurer qu'il peut continuer son exécution.
        </para>
        <note>
         <para>
          Allouer cette variable PEUT causer des problèmes de sécurité,
          RENSEIGNEZ VOUS AVANT DE LE FAIRE.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.fastcgi.impersonate">
       <term>
        <parameter>fastcgi.impersonate</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         FastCGI sous IIS (sur Windows NT) supporte la possibilité de
         traiter les tokens de sécurité du client. Cela permet à IIS de
         définir le contexte de sécurité à utiliser. mod_fastcgi sous Apache
         ne supporte pas encore cette fonctionnalité (17/03/2002).
         Utilisez la valeur de 1 pour l'activer sous IIS. La valeur par
         défaut est zéro.
        </para>
       </listitem>
      </varlistentry>
      
      <varlistentry id="ini.cgi.rfc2616-headers">
       <term>
        <parameter>cgi.rfc2616_headers</parameter>
        <type>int</type>
       </term>
       <listitem>
        <para>
         Indique à &php; quel type d'en-tête utiliser lorsqu'il envoie
         les en-têtes de réponse HTTP. Si cette option vaut 0, 
         &php; envoie un en-tête <literal>Status:</literal> qui est supporté
         par Apache et d'autres serveurs web. Lorsque cette option vaut
         1, &php; va envoyer des en-têtes compatibles 
         <ulink url="&url.rfc;2616">RFC 2616</ulink>. Laissez le à 0 si vous
         ne savez pas de quoi il s'agit.
        </para>
       </listitem>
      </varlistentry>

    </variablelist>
    </para>
   </sect2>
  <sect2 id="ini.sect.file_uploads">
   <title>Chargement de fichiers</title>
    <para>
     <table>
      <title>Options de configuration pour le chargement de fichiers</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Nom</entry>
         <entry>Par défaut</entry>
         <entry>Modifiable</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>file_uploads</entry>
         <entry>"1"</entry>
         <entry><constant>PHP_INI_SYSTEM</constant></entry>
        </row>
        <row>
         <entry>upload_tmp_dir</entry>
         <entry>NULL</entry>
         <entry><constant>PHP_INI_SYSTEM</constant></entry>
        </row>
        <row>
         <entry>upload_max_filesize</entry>
         <entry>"2M"</entry>
         <entry><constant>PHP_INI_SYSTEM</constant>|<constant>PHP_INI_PERDIR</constant></entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    
    &ini.descriptions.title;
    
    <para>
     <variablelist>
      <varlistentry id="ini.file-uploads">
       <term>
        <parameter>file_uploads</parameter>
        <type>bool</type>
       </term>
       <listitem>
        <para>
         Cette directive indique si les 
         <link linkend="features.file-upload">chargements de fichiers</link>
         sont supportés sur le serveur. Voir aussi
         <link linkend="ini.upload-max-filesize">upload_max_filesize</link>,
         <link linkend="ini.upload-tmp-dir">upload_tmp_dir</link> et
         <link linkend="ini.post-max-size">post_max_size</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.upload-tmp-dir">
       <term>
        <parameter>upload_tmp_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Indique le répertoire utilisé lors du chargement d'un fichier sur le
         serveur. Ce répertoire doit être accessible en écriture pour
         l'utilisateur qui exécute le script &php;, ou par le serveur web. 
         Si il n'est pas spécifié, &php; utilisera le répertoire par défaut du système.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.upload-max-filesize">
       <term>
        <parameter>upload_max_filesize</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <para>
         La taille maximale d'un fichier chargé sur le serveur. 
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

  <sect2 id="ini.sql-general">
   <title>Options de SQL</title>
    <para>
     <table>
      <title>Options de SQL</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Nom</entry>
         <entry>Par défaut</entry>
         <entry>Modifiable</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>sql.safe_mode</entry>
         <entry>"0"</entry>
         <entry><constant>PHP_INI_SYSTEM</constant></entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    
    &ini.descriptions.title;
    
    <para>
     <variablelist>
      <varlistentry id="ini.sql.safe-mode">
       <term>
        <parameter>sql.safe_mode</parameter>
        <type>bool</type>
       </term>
       <listitem>
        <para>
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

   <sect2 id="ini.sect.debugger">
    <title>Configuration des débogueurs</title>
    <caution>
     <para>
      Seul &php; 3 implémente un débogueur par défaut. Pour plus
      d'informations voyez <xref linkend="debugger"/>.
     </para>
    </caution>
    <variablelist>

     <varlistentry id="ini.debugger.host">
      <term>
       <parameter>debugger.host</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Nom DNS ou adresse IP de l'hôte du débogueur.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.port">
      <term>
       <parameter>debugger.port</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Numéro de port du débogueur.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.enabled">
      <term>
       <parameter>debugger.enabled</parameter>
       <type>bool</type>
      </term>
      <listitem>
       <para>
        Indique si le débogeur est activé ou pas.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </sect2>

  </sect1>
 </chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

