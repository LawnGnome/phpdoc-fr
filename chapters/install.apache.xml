<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
  <sect1 id="install.apache">
 <title>Installation avec le serveur Apache</title>
 <para>
  Cette section contient des notes sp&eacute;cifiques pour l'installation de PHP
  avec Apache, aussi bien pour la version
  <link linkend="install.apache.unix">Unix</link> que
  <link linkend="install.apache.windows">Windows</link>.
 </para>
 <sect2 id="install.apache.unix">
 <title>D&eacute;tails pour l'installation de PHP sous Apache sous Unix.</title>
 <simpara>
  Il y a deux m&eacute;thodes d'installation de PHP avec Apache 1.3.x
  sous Windows. L'une passe par les CGI (php.exe),
  l'autre est d'utiliser la DLL de module d'apache. Dans les deux cas,
  vous devrez arr&ecirc;ter le serveur Apache, et &eacute;diter le fichier
  <filename>srm.conf</filename> ou &httpd.conf;,
  pour configurer Apache avec PHP.
 </simpara>
 <para>
  Vous pouvez s&eacute;lectionner des options &agrave; ajouter au fichier
  <command>configure</command> &agrave; la ligne 8 depuis la
  <link linkend="install.configure">liste compl&egrave;te des options de configuration</link>.
 </para>

  <example id="install.apache.unix.longer">
  <title>Instructions d'installation avec Apache (version module)</title>
  <programlisting>
<![CDATA[
1.  gunzip apache_1.3.x.tar.gz
2.  tar xvf apache_1.3.x.tar
3.  gunzip php-x.x.x.tar.gz
4.  tar xvf php-x.x.x.tar
5.  cd apache_1.3.x
6.  ./configure --prefix=/www
7.  cd ../php-x.x.x
8.  ./configure --with-mysql --with-apache=../apache_1.3.x --enable-track-vars
9.  make
10. make install
11. cd ../apache_1.3.x
12. for PHP 3: ./configure --activate-module=src/modules/php3/libphp3.a
    for PHP 4: ./configure --activate-module=src/modules/php4/libphp4.a
13. make
14. make install
  Au lieu de cette &eacute;tape, vous pouvez aussi copier le binaire
  httpd et remplacer votre ex&eacute;cutable actuel. Assurez-vous tout
  de m&ecirc;me que le serveur est bien &eacute;teint.
15. cd ../php-x.x.x
16. for PHP 3: cp php3.ini-dist /usr/local/lib/php3.ini
    for PHP 4: cp php.ini-dist /usr/local/lib/php.ini
  Vous pouvez &eacute;diter votre fichier php.ini pour modifier
  certaines options PHP. Si vous pr&eacute;f&eacute;rez placer ce fichier ailleurs,
  utilisez --with-config-file-path=/path lors de l'&eacute;tape 8.
17. Editez votre fichier httpd.conf ou srm.conf file et ajoutez :
     Pour PHP 3:   AddType application/x-httpd-php3 .php3
     Pour PHP 4:   AddType application/x-httpd-php  .php
  Vous pouvez choisir n'importe quelle extension que vous voulez ici. .php
  est uniquement une suggestion. Vous pouvez aussi inclure .html.
18. Utilisez votre proc&eacute;dure habituelle pour d&eacute;marrer votre serveur Apache.
(vous devez l'&eacute;teindre et le red&eacute;marrer, pas seulement lui envoyer
un signal HUP ou USR1.)
]]>
  </programlisting>
 </example>
 <para>
  Suivant votre installation d'Apache et votre variante d'Unix,
  il existe de nombreuses fa&ccedil;ons d'arr&ecirc;ter et red&eacute;marrer
  Apache. Voici une liste des commandes typiques, pour diff&eacute;rentes
  installations. Remplacez <literal>/path/to/</literal> par
  le chemin d'acc&egrave;s &agrave; vos applications sur votre syst&egrave;me.
  <example>
  <title>Red&eacute;marrage d'apache</title>
   <programlisting>
<![CDATA[
[1. Nombreuses variantes Linux SysV :
/etc/rc.d/init.d/httpd restart
2. Avec les scripts apachectl :
/path/to/apachectl stop
/path/to/apachectl start
3. httpdctl et httpsdctl (utilisant OpenSSL), similaire &agrave; apachectl:
/path/to/httpsdctl stop
/path/to/httpsdctl start
4. En utilisant mod_ssl, ou un autre serveur SSL, manuellement :
/path/to/apachectl stop
/path/to/apachectl startssl
]]>
   </programlisting>
  </example>
   Les ex&eacute;cutables apachectl et http(s)dctl peuvent &ecirc;tre situ&eacute;s
  dans diff&eacute;rents dossiers. Si votre syst&egrave;me a
  <literal>locate</literal> ou <literal>whereis</literal> ou
  <literal>which</literal>, utilisez-les pour retrouver vos
  programmes.
 </para>
 <para>
  Diff&eacute;rents exemples de compilation PHP pour Apache suivent :
      <example>
      <title>Compilation sur Apache avec l'extension PostGreSQL</title>
       <programlisting role="shell">
<![CDATA[
./configure --with-apxs --with-pgsql
]]>
       </programlisting>
      </example>
     </para>
     <para>
  Cette commande va cr&eacute;er une librairie partag&eacute;e
  <filename>libphp4.so</filename> qui sera charg&eacute;e par Apache avec
  une ligne LoadModule dans le fichier &httpd.conf;.
  Le support PostgreSQL est aussi inclut dans <filename>libphp4.so</filename>.
     </para>
     <para>
      <example>
      <title>Compilation sur Apache avec l'extension PostGreSQL (librairie partag&eacute;e)</title>
       <programlisting>
<![CDATA[
./configure --with-apxs --with-pgsql=shared
]]>
       </programlisting>
      </example>
     </para>
     <para>
      Cette commande va cr&eacute;er une librairie partag&eacute;e <filename>libphp4.so</filename>
      pour Apache, mais va aussi cr&eacute;er la librairie partag&eacute;e 
      <filename>pgsql.so</filename> qui sera charg&eacute;e dans PHP avec une directive
      du fichier &php.ini; file ou en la chargeant explicitement dans le script
      avec la fonction <function>dl</function>.
     </para>
     <para>
      <example>
      <title>Compilation sur Apache avec l'extension PostGreSQL (2)</title>
       <programlisting>
<![CDATA[
./configure --with-apache=/path/to/apache_source --with-pgsql
]]>
       </programlisting>
      </example>
     </para>
     <para>
  Cette commande va cr&eacute;er une autre librairie partag&eacute;e
  <filename>libmodphp4.a</filename>, un fichier
  <filename>mod_php4.c</filename> et quelques fichiers compagnons
  dans le dossier <literal>src/modules/php4</literal> du dossier
  Apache. Puis, vous devez compiler Apache avec
  <literal>--activate-module=src/modules/php4/libphp4.a</literal>
  et le syst&egrave;me de compilation d'Apache va cr&eacute;er un fichier
  <filename>libphp4.a</filename> et le lien statiquement avec
  <filename>httpd</filename>. Le support PostgreSQL est alors
  inclus directement dans l'ex&eacute;cutable <filename>httpd</filename>,
  ce qui fait que le r&eacute;sultat final est un fichier unique
  <filename>httpd</filename>, qui inclut Apache et PHP.
     </para>
     <para>
      <example>
      <title>Compilation sur Apache avec l'extension PostGreSQL (2) (librairie partag&eacute;e)</title>
       <programlisting>
<![CDATA[
./configure --with-apache=/path/to/apache_source --with-pgsql=shared
]]>
       </programlisting>
      </example>
     </para>
     <para>
  Identique &agrave; la version pr&eacute;c&eacute;dente, mais au lieu d'inclure le
  support PostgreSQL directement dans l'ex&eacute;cutable final
  <filename>httpd</filename>, vous allez obtenir une librairie
  partag&eacute;e <filename>pgsql.so</filename> que vous pouvez charger
  dans PHP soit gr&acirc;ce au fichier de configuration
  &php.ini; ou dynamiquement avec <function>dl</function>.
 </para>
 <para>
  Lorsque vous faites le choix entre les diff&eacute;rents modes de
  compilation de PHP, vous devez prendre en compte leurs avantages
  et inconv&eacute;nients respectifs. Les objets partag&eacute;s permettent de
  compiler PHP et Apache de mani&egrave;re s&eacute;par&eacute;e, et vous n'aurez pas &agrave;
  compiler l'ensemble pour faire &eacute;voluer PHP. La compilation statique
  permet de charger et d'ex&eacute;cuter plus rapidement PHP. Pour plus
  d'informations, voyez la page web sur le 
  <ulink url="&url.apachedso;">support des DSO</ulink>.
     </para>
    <note>
     <para>
      Le fichier de configuation d'Apache actuel est fourni avec une 
      section qui ressemble &agrave; ceci : 
      <informalexample>
       <programlisting>
<![CDATA[
User nobody
Group "#-1"
]]>
       </programlisting>
      </informalexample>
      A moins que vous ne changiez cette valeur par <literal>Group nogroup</literal>
      ou quelques chose comme &ccedil;a (<literal>Group daemon</literal> est aussi classique),
      PHP ne sera pas capable d'ouvrir des fichiers.
     </para>
    </note>  
    <note>
     <para>
     Assurez-vous que vous sp&eacute;cifiez la version install&eacute;e de apxs avec l'option
     --with-apxs=/path/to/apxs. Vous ne devez PAS utiliser la version d'apxs qui est
     dans les sources d'Apache, mais celle qui est r&eacute;ellement install&eacute;e sur votre
     syst&egrave;me.
     </para>
    </note>   
   </sect2>
   <sect2 id="install.apache.windows">
    <title>Installer PHP sous Windows avec Apache 1.3.x</title>
    
 <simpara>
  Il y a deux m&eacute;thodes pour faire fonctionner PHP avec
  Apache 1.3.x sous Windows. La premi&egrave;re est d'utiliser
  l'ex&eacute;cutable CGI (php.exe), l'autre est d'utiliser les
  modules Apache DLL. Dans les deux cas, vous devez arr&ecirc;ter
  le serveur Apache, &eacute;diter votre fichier
  <literal>srm.conf</literal> ou <literal>httpd.conf</literal>
  pour configurer Apache.
 </simpara>
 <simpara>
  Bien qu'il puisse y avoir quelques diff&eacute;rences de
  configurations de PHP sous Apache, le processus reste
  simple et &agrave; la port&eacute;e du n&eacute;ophyte.  Reportez-vous
  aux documentations Apache pour plus de d&eacute;tails sur
  ces directives.
 </simpara>
 <para>
  Si vous avez d&eacute;zipp&eacute; le package dans <filename>C:\PHP\</filename>
  comme indiqu&eacute; dans <link linkend="install.windows.manual">Instructions
  G&eacute;n&eacute;rales d'installation</link>, vous devez ins&eacute;rer les lignes
  suivantes dans votre fichier <literal>srm.conf</literal> ou
  <literal>httpd.conf</literal> pour qu'il fonctionne en CGI :
     <itemizedlist>
      <listitem>
       <simpara>
        <literal>
         ScriptAlias /php/ "c:/php/"
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         AddType application/x-httpd-php .php .phtml
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         Action application/x-httpd-php "/php/php.exe"
        </literal>
       </simpara>
      </listitem>
     </itemizedlist>
 N'oubliez pas de red&eacute;marrer le serveur, avec la commande
  <literal>NET STOP APACHE</literal> suivie de
  <literal>NET START APACHE</literal>.
     </para>

    <warning>
     <para>
      En utilisant la configuration en CGI, votre serveur sera ouvert
      &agrave; plusieurs attaques potentielles. Lisez donc la section
      <link linkend="security.cgi-bin">s&eacute;curit&eacute; des CGI</link> pour savoir
      comment vous en d&eacute;fendre.
     </para>
    </warning>

    <para>
  Si vous voulez utiliser PHP comme module Apache, vous devez
  d&eacute;placer le fichier <filename>php4ts.dll</filename> dans
  le dossier <filename>windows/system</filename> (pour Windows 9x/Me)
  ou <filename>winnt/system32</filename> (pour Windows NT/2000),
  en &eacute;crasant les anciennes versions. Puis, vous devez ajouter
  les deux lignes suivantes dans le fichier de configuration
  Apache :
  <itemizedlist>
   <listitem>
    <simpara>
     <literal>
     LoadModule php4_module c:/php/sapi/php4apache.dll
     </literal>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <literal>
     AddType application/x-httpd-php .php .phtml
     </literal>
    </simpara>
   </listitem>
  </itemizedlist>

    </para>

    <simpara>
     Apr&egrave;s avoir modifi&eacute; le fichier de configuration, pensez &agrave;
     red&eacute;marrer le serveur web, par exemple avec 
     <literal>NET STOP APACHE</literal> suivi de 
     <literal>NET START APACHE</literal>, si vous utilisez Apache
     comme service Windows, ou bien utilisez les alias classiques.
    </simpara>
    
    <note>
     <simpara>
      You may find after using the windows installer for Apache
      that you need to define the <literal>AddModule</literal>
      directive for <filename>mod_php4.c</filename> in the 
      configuration file (&httpd.conf;).
      This is done by adding <literal>AddModule mod_php4.c</literal>
      to the <literal>AddModule</literal> list, near the beginning
      of the configuration file. This is especially important if
      the <literal>ClearModuleList</literal> directive is defined.
      Failure to do this may mean PHP will not be registered as an 
      Apache module.
     </simpara>
    </note>
    
    <simpara>
     Il y a deux m&eacute;thodes pour utiliser la fonctionnalit&eacute; de coloration
     syntaxique, elles d&eacute;pendent de votre installation. Si vous avez 
     configur&eacute; Apache comme module ISAPI, alors il suffit d'ajouter
     la ligne suivante dans votre fichier de configuration : 
     <literal>AddType application/x-httpd-php-source .phps</literal>
    </simpara>
    <simpara>
     Si vous choisissez de configurer Apache pour utiliser PHP comme
     ex&eacute;cutable CGI, vous aurez besoin de la fonction <function>show_source</function>. 
     Pour cela, cr&eacute;ez simplement un script PHP et ajoutez-y le code
     suivant : <literal>&lt;?php show_source ("original_php_script.php"); ?></literal>. 
     Substitutez <literal>original_php_script.php</literal> par le nom
     du fichier que vous souhaitez afficher.
    </simpara>
    
    <note>
     <simpara>
   Sous Win-Apache tous les antislash des noms de chemins tels que
   "<filename>c:\directory\file.ext</filename>", doivent &ecirc;tre convertis en
   slash c'est &agrave; dire "c:/directory/file.ext".
     </simpara>
    </note>
   </sect2>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
