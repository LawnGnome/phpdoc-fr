<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->
  <sect1 id="install.apache2">
   <title>Installation avec les serveurs Apache 2.0</title>
   <para>
    Cette section contient les notes et conseils d'installation de &php; avec le serveur 
    Apache 2.0, aussi bien pour <link linkend="install.apache2.unix">Unix</link>
    que pour <link linkend="install.apache2.windows">Windows</link> versions.
   </para>
   <warning>
    <para>
     N'utilisez pas Apache 2.0 et &php; sur un serveur de production,
     ni sur Windows, ni sur Unix.
    </para>
   </warning>
    <para>
     Il est très recommandé de lire la 
     <ulink url="&url.apache2.docs;">documentation Apache</ulink> pour avoir
     une meilleure connaissance du serveur web Apache 2.0.
    </para>

   <sect2 id="compat.apache2">
    <title>Notes sur la compatibilité de PHP avec Apache 2.0</title>
    <para>
     Les versions de &php; suivantes sont reconnues pour fonctionner avec
     la plus récente version d'Apache 2.0 :
     <itemizedlist spacing="compact">
      <listitem>
       <simpara>
        PHP 4.3.0 ou plus récent, disponible à 
        <ulink url="&url.php.downloads;">&url.php.downloads;</ulink>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Les dernières versions de développement.
        Le code source est disponible à 
        <ulink url="&url.php.snapshots;php4-latest.tar.gz">&url.php.snapshots;php4-latest.tar.gz</ulink>,
        et les exécutables compilés de Windows à 
        <ulink url="&url.php.snapshots;win32/php4-win32-latest.zip">&url.php.snapshots;win32/php4-win32-latest.zip</ulink>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Une version non stable, téléchargeable sur 
        <ulink url="&url.php.prerelease;">&url.php.prerelease;</ulink>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Vous pouvez obtenir &php; sur le 
        <ulink url="&url.php.anoncvs;">serveur CVS anonyme</ulink>.
       </simpara>
      </listitem>
     </itemizedlist>
      Ces versions de &php; sont compatibles avec Apache 2.0.40 et plus récent.
    </para>
    <note>
     <simpara>
      Le support des SAPI d'Apache 2.0 a commencé avec PHP 4.2.0.
      PHP 4.2.3 est connu pour fonctionner avec Apache 2.0.39. N'essayez pas d'utiliser
      cette version de &php; avec une autre version d'Apache 2.0.
      Nous ne recommandons pas l'utilisation de PHP 4.2.3 avec Apache 2.0.39.
     </simpara>
     <simpara>
      Toutes les versions de &php; mentionnées ici fonctionnent avec 
      Apache 1.3.x.
     </simpara>
    </note>
   </sect2>

   <sect2 id="install.apache2.unix">
    <title>Installer PHP et Apache 2 sur Linux</title>
    <para>
     Téléchargez la version la plus récente de <ulink url="&url.apache;">Apache 2.0</ulink> 
     et une version appropriée de &php;, tel que décrit ci-dessus. Ce guide rapide
     couvre les manipulations de base, nécessaires à l'installation de Apache 2.0
     et &php;. Pour plus d'informations, lisez la 
     <ulink url="&url.apache2.docs;">documentation Apache</ulink>.
     Les numéros de version sont omis ici, pour s'assurer que les instructions ne soient
     pas incorrectes. Il faudra donc remplacer les séquences 'NN' avec les valeurs
     correctes que vous utilisez.
    </para>
    <example>
     <title>Instruction d'installation (Module partagé Apache 2)</title>
     <screen>
<![CDATA[
1.  gzip -d httpd-2_0_NN.tar.gz
2.  tar xvf httpd-2_0_NN.tar
3.  gunzip php-NN.tar.gz
4.  tar -xvf php-NN.tar
5.  cd httpd-2_0_NN
6.  ./configure --enable-so
7.  make
8.  make install

    Maintenant, vous avez un dossier Apache 2.0.NN installe dans /usr/local/apache2,
    configure avec le support des modules dynamiques, et le prefork standard MPM.
    Pour tester l'installation, utilisez votre procedure standard de demarrage d'Apache :
    /usr/local/apache2/bin/apachectl start
    et pour stopper le serveur, utilisez 
    /usr/local/apache2/bin/apachectl stop.

9.  cd ../php4-NN
10. ./configure --with-apxs2=/usr/local/apache2/bin/apxs
11. make
12. make install
13. cp php.ini-dist /usr/local/lib/php.ini

    Editez votre fichier php.ini pour configurer les options PHP.
    Si vous preferez placer ce fichier a un autre endroit, utilisez l'option
    --with-config-file-path=/path en étape 10.

14. Editez votre fichier httpd.conf et verifiez la presence des lignes suivantes : 
  
   LoadModule php4_module modules/libphp4.so
   AddType application/x-httpd-php .php

  Vous pouvez installer toutes les extensions que vous souhaitez. .php est 
  simplement celle que nous suggerons.
 
  Le chemin à droite de la directive LoadModule doit indiquer le chemin
  du module PHP de votre systeme. La directive ci-dessus est correcte si vous
  avez suivi les autres etapes a la lettre.

15. Utilisez votre procedure standard pour redemarrer Apache : 
   /usr/local/apache2/bin/apachectl start
   
]]>

      </screen>
     </example>
    <para>
     Suivez les étapes ci-dessus, et vous disposerez d'un serveur Apache 2.0 
     avec le support de &php; module comme module SAPI. Bien sur, il y a 
     bien d'autres options de configuration disponibles pour les deux logiciels,
     Apache et &php;. Pour plus de détails, utilisez la commande 
     <command>./configure --help</command> dans le dossier de souces approprié.
     Si vous souhaitez compiler une version multi-threadé de Apache 2.0
     vous devrez remplacer le module standard MPM <filename>prefork</filename>
     avec <filename>worker</filename> ou <filename>perchild</filename>.
     Pour ce faire, ajoutez à la ligne de configuration de l'étape 6, l'option
     <option role="configure">--with-mpm=worker</option> ou
     <option role="configure">--with-mpm=perchild</option>. Soyez conscient des
     conséquences, et comprenez bien ce que vous faites. Pour plus de détails sur
     ce sujet, lisez la documentation Apache sur 
     <ulink url="&url.apache2.mpm;">le module MPM</ulink>.
    </para>
    <note>
     <para>
      Pour compiler une version multi-threadée d'Apache, votre système doit 
      supporter les threads. Cela implique aussi de compiler &php; avec le module
      expérimental de Zend Thread Safety (ZTS). Par conséquent, toutes les extensions
      ne seront pas disponibles. La configuration recommandée actuellement est celle 
      avec le module standard MPM <filename>prefork</filename>.
     </para>
    </note>
   </sect2>

   <sect2 id="install.apache2.windows">
    <title>Installation de PHP et Apache 2.0 sur Windows</title>
    <para>
     Lisez donc les <ulink url="&url.apache2.windows;">notes spécifiques à Windows</ulink>
     pour Apache 2.0.
    </para>
    <warning>
     <para>
      Apache 2.0 est conçu pour fonctionner sur Windows NT 4.0 et Windows 2000.
      Actuellement, le support des versions Windows 9x est incomplet.
      Apache 2.0 n'est pas prévu pour fonctionner sur ces plate-formes
      pour l'instant.
     </para>
    </warning>
    <para>
     Téléchargez la version la plus récente de <ulink url="&url.apache;">Apache 2.0</ulink> 
     et une version de PHP appropriée, tel que mentionné au début de ce chapitre.
     Suivez les instructions <link linkend="install.windows.manual">d'installation manuelle</link>
     puis revenez ici pour réaliser l'intégration de &php; et Apache.
    </para>
    <para>
     Il y a deux méthodes pour que &php; fonctionne avec 
     Apache 2.0 sous Windows. La première est l'interface CGI, et l'autre est
     le module DLL Apache. Dans les deux cas, commencez par stopper le serveur
     Apache, et éditez le fichier &httpd.conf; pour configurer
     Apache avec le support &php;.
    </para>
    <para>
     Vous devez insérer les lignes suivantes dans le fichier &httpd.conf;
     pour réaliser la configuration en mode <emphasis>CGI</emphasis>:
     <example>
      <title>Configurer la version de développement de PHP avec Apache 2.0 en CGI</title>
       <programlisting role="apache">
<![CDATA[
ScriptAlias /php/ "c:/php/"
AddType application/x-httpd-php .php
Action application/x-httpd-php "/php/php.exe"
]]>
       </programlisting>
     </example>
    </para>
    <note>
     <para>
      A partir de PHP 4.3.0, le nom de l'exécutable CGI a changé, et il est devenu
      <filename>php-cgi.exe</filename>. Prenez-le en compte, et utilisez la
      bonne directive pour Apache.
     </para>
    </note>
    <para>
     Si vous souhaitez utiliser &php; comme module dans Apache 2.0,
     placez bien le fichier <filename>php4ts.dll</filename> dans votre 
     dossier <filename>winnt/system32</filename>, en y écrasant tout autre fichier
     qui s'y trouverait. Puis vous devrez insérer les deux lignes suivantes
     dans votre fichier de configuration d'Apache &httpd.conf; 
     pour y ajouter le module PHP d'Apache 2.0 :
     <example>
      <title>Configurer PHP avec Apache 2.0 en module</title>
       <programlisting role="apache">
<![CDATA[
LoadModule php4_module c:/php/sapi/php4apache2.dll
AddType application/x-httpd-php .php
]]>
       </programlisting>
     </example>
    </para>
    <note>
     <para>
      N'oubliez pas de remplacer <filename>c:/php/</filename> par votre chemin
      réel de &php; dans les exemples ci-dessus. Ne mélangez pas votre installation
      en module (DLL) avec <emphasis>différentes versions de
      PHP</emphasis>. Vous devez utiliser uniquement les DLL et extensions qui sont fournies 
      avec la version de PHP que vous téléchargez.
     </para>
    </note>
   </sect2>

  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
