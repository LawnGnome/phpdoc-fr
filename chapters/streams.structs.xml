<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.10 $ -->
<!-- EN-Revision: 1.6 Maintainer: dams Status: ready -->
<reference id="streams.structs">
  <title>Streams Structures</title>

  <refentry id="streams.struct-php-stream-statbuf">
   <refnamediv>
    <refname>struct php_stream_statbuf</refname>
    <refpurpose>Conserve des information sur le fichier ou l'URL</refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <synopsis>
     <structname>php_stream_statbuf</structname>
     <type>struct stat</type> <structfield>sb</structfield>
     </synopsis>
    <para>
     <structfield>sb</structfield> est une structure standard, définie
     par le système de statistiques fichier.
     </para>
   </refsect1>
  </refentry>

  <refentry id="streams.struct-php-stream-dirent">
   <refnamediv>
    <refname>struct php_stream_dirent</refname>
    <refpurpose>Conserve des informations sur un fichier durant une analyse de dossier</refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <synopsis>
     <structname>php_stream_dirent</structname>
     <type>char</type> <structfield>d_name[MAXPATHLEN]</structfield>
     </synopsis>
    <para>
     <structfield>d_name</structfield> contient le nom du fichier, relativement au
     dossier actuellement analysé.
     </para>
   </refsect1>
  </refentry>
 
  <refentry id="streams.struct-php-stream-ops">
    <refnamediv>
        <refname>struct php_stream_ops</refname>
        <refpurpose>Conserve les fonctions membres d'une implémentation de flux</refpurpose>
    </refnamediv>
    <refsect1>
     &reftitle.description;
     <programlisting role="c">
<![CDATA[
        typedef struct _php_stream_ops {
             /* Tous les flux DOIVENT implémenter ces opérations */
             size_t (*write)(php_stream *stream, const char *buf, size_t count TSRMLS_DC);
             size_t (*read)(php_stream *stream, char *buf, size_t count TSRMLS_DC);
             int (*close)(php_stream *stream, int close_handle TSRMLS_DC);
             int (*flush)(php_stream *stream TSRMLS_DC);

             const char *label; /* name describing this class of stream */

             /* Ces opérations sont optionnelles, et peuvent prendre la valeur de
             NULL si le flux ne supporte pas cette opération */
            int (*seek)(php_stream *stream, off_t offset, int whence TSRMLS_DC);
            char *(*gets)(php_stream *stream, char *buf, size_t size TSRMLS_DC);
            int (*cast)(php_stream *stream, int castas, void **ret TSRMLS_DC);
            int (*stat)(php_stream *stream, php_stream_statbuf *ssb TSRMLS_DC);
        } php_stream_ops;
]]>
     </programlisting>
    </refsect1>
  </refentry>
  <refentry id="streams.struct-php-stream-wrapper">
    <refnamediv>
        <refname>struct php_stream_wrapper</refname>
        <refpurpose>Conserve les propriétés et pointeur d'un gestionnaire de flux</refpurpose>
    </refnamediv>
    <refsect1>
     &reftitle.description;
     <programlisting role="c">
<![CDATA[
        struct _php_stream_wrapper  {
            php_stream_wrapper_ops *wops;   /* operations the wrapper can perform */
            void *abstract;                 /* context for the wrapper */
            int is_url;                     /* so that PG(allow_url_fopen) can be respected */

            /* support for wrappers to return (multiple) error messages to the stream opener */
            int err_count;
            char **err_stack;
        } php_stream_wrapper;
]]>
     </programlisting>
    </refsect1>
  </refentry>
  <refentry id="streams.struct-php-stream-wrapper-ops">
    <refnamediv>
        <refname>struct php_stream_wrapper_ops</refname>
        <refpurpose>Conserve les fonctions d'un gestionnaire de flux</refpurpose>
    </refnamediv>
    <refsect1>
     &reftitle.description;
     <programlisting role="c">
<![CDATA[
        typedef struct _php_stream_wrapper_ops {
            /* Ouvre un flux */
            php_stream *(*stream_opener)(php_stream_wrapper *wrapper, char *filename, char *mode,
                    int options, char **opened_path, php_stream_context *context STREAMS_DC TSRMLS_DC);
            /* Détruit un flux */
            int (*stream_closer)(php_stream_wrapper *wrapper, php_stream *stream TSRMLS_DC);
            /* Etudie un flux */
            int (*stream_stat)(php_stream_wrapper *wrapper, php_stream *stream, php_stream_statbuf *ssb TSR$
            /* Etudie une URL */
            int (*url_stat)(php_stream_wrapper *wrapper, char *url, php_stream_statbuf *ssb TSRMLS_DC);
            /* Ouvre un dossier flux */
            php_stream *(*dir_opener)(php_stream_wrapper *wrapper, char *filename, char *mode,
                    int options, char **opened_path, php_stream_context *context STREAMS_DC TSRMLS_DC);

            const char *label;

            /* Efface un fichier */
            int (*unlink)(php_stream_wrapper *wrapper, char *url, int options, php_stream_context *context TSRMLS_DC);
        } php_stream_wrapper_ops;
]]>
     </programlisting>
    </refsect1>
  </refentry>
  <refentry id="streams.struct-php-stream-filter">
    <refnamediv>
        <refname>struct php_stream_filter</refname>
        <refpurpose>Conserve les propriétés et le pointeur de filtre</refpurpose>
    </refnamediv>
    <refsect1>
     &reftitle.description;
     <programlisting role="c">
<![CDATA[
        struct _php_stream_filter {
            php_stream_filter_ops *fops;
            void *abstract; /* Pour être utilisé par les filtres implémentés */
            php_stream_filter *next;
            php_stream_filter *prev;
            int is_persistent;

            /* Incorporez dans le flux et la chaîne */
            php_stream_filter_chain *chain;

            /* seaux protégés */
            php_stream_bucket_brigade buffer;
        } php_stream_filter;
]]>
     </programlisting>
    </refsect1>
  </refentry>
  <refentry id="streams.struct-php-stream-filter-ops">
    <refnamediv>
        <refname>struct php_stream_filter_ops</refname>
        <refpurpose>Conserver les fonctions membres pour un filtre de flux</refpurpose>
    </refnamediv>
    <refsect1>
     &reftitle.description;
     <programlisting role="c">
<![CDATA[
        typedef struct _php_stream_filter_ops {
            php_stream_filter_status_t (*filter)(
                    php_stream *stream,
                    php_stream_filter *thisfilter,
                    php_stream_bucket_brigade *buckets_in,
                    php_stream_bucket_brigade *buckets_out,
                    size_t *bytes_consumed,
                    int flags
                    TSRMLS_DC);

            void (*dtor)(php_stream_filter *thisfilter TSRMLS_DC);

            const char *label;
} php_stream_filter_ops;
]]>
     </programlisting>
    </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->