<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.27 $ -->
<!-- EN-Revision: 1.37 Maintainer: dams Status: ready -->
 <chapter id="introduction">
  <title>Introduction</title>
  
  <sect1 id="intro-whatis">
   <title>Qu'est ce que &php;?</title>
   <para>
    <acronym>PHP</acronym> (officiellement, ce sigle est un acronyme récursif pour 
    <literal>PHP: Hypertext Preprocessor</literal>) est un langage de scripts généraliste
    et Open Source, spécialement conçu pour le développement d'applications
    web. Il peut être intégré facilement au HTML.
   </para>
   <para>
    Réponse simple et claire, mais qu'est ce que cela veut dire? Un exemple :
   </para>
   <para>
    <example>
     <title>Exemple d'introduction</title>
     <programlisting role="php">
<![CDATA[
<html>
    <head>
        <title>Exemple</title>
    </head>
    <body>

        <?php 
        echo "Bonjour, je suis un script PHP!"; 
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Il est à noter la différence avec les autres scripts CGI
    écrits dans d'autres langages tels que le Perl ou le C :
    Au lieu d'écrire un programme avec de nombreuses lignes de commandes afin
    d'afficher une page HTML, vous écrivez une page HTML avec du code inclus
    à l'intérieur afin de réaliser une action précise
    (dans ce cas là, afficher du texte). Le code &php; est inclus entre
    <link linkend="language.basic-syntax.phpmode">une balise de début
    et une balise de fin</link> qui permettent au serveur web de passer en "mode &php;".
   </para>
   <para>
    Ce qui distingue &php; des langages de script comme le Javascript est que
    le code est exécuté sur le serveur. Si vous avez un script
    similaire sur votre serveur, le client ne reçoit que le
    résultat du script, sans aucun moyen d'avoir accès au code
    qui a produit ce résultat. Vous pouvez configurer votre serveur
    web afin qu'il analyse tous vos fichiers HTML comme des fichiers &php;.
    Ainsi, il n'y a aucun moyen de distinguer les pages qui sont produites
    dynamiquement des pages statiques.
   </para>
   <para>
    Le grand avantage de &php; est qu'il est extrêmement simple pour les
    néophytes, mais offre des fonctionnalités avancées pour les 
    experts. Ne craignez pas de lire la longue liste de fonctionnalités
    &php;. Vous pouvez vous plonger dans le code, et en quelques
    instants, écrire des scripts simples.
   </para>
   <para>
    Bien que le développement de &php; soit orienté vers la programmation
    pour les sites web, vous pouvez en faire bien d'autres usages.
    Lisez donc la section <link linkend="intro-whatcando">Que peut faire &php;?</link>
    ou bien le <link linkend="tutorial">tutorial d'introduction</link> si vous êtes
    uniquement intéressé dans la programmation web.
   </para>
  </sect1>

  <sect1 id="intro-whatcando">
   <title>Que peut faire &php;?</title>
   <para>
    Tout. &php; est principalement conçu pour servir de
    langage de script coté serveur, ce qui fait qu'il est capable
    de réaliser tout ce qu'un script CGI quelconque peut faire, comme
    collecter des données de formulaire, générer du contenu dynamique,
    ou gérer des cookies. Mais &php; peut en faire bien plus.
   </para>
   <para>
    Il y a trois domaines différents où &php; peut s'illustrer.
    <itemizedlist>
     <listitem>
      <simpara>
       Langage de script coté serveur. C'est l'utilisation la plus
       traditionnelle, et aussi le principal objet de &php;.
       Vous aurez besoin de trois composants pour l'exploiter : 
       un analyseur &php; (CGI ou module serveur), un serveur
       web et un navigateur web. Vous devez exécuter le serveur
       web en corrélation avec &php;. Vous pouvez accéder
       au programme &php; avec l'aide du navigateur web. Tout ceci
       peut fonctionner sur votre propre machine si vous êtes juste expérimenté
       avec la programmation en &php;. Voyez
       la section <link linkend="installation">d'installation</link>
       pour plus d'informations.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Langage de programmation en ligne de commande. Vous pouvez
       écrire des scripts &php; et l'exécuter en ligne de commande,
       sans l'aide du serveur web et d'un navigateur. Il vous suffit
       de disposer de l'exécutable &php;. Cette utilisation est idéale
       pour les scripts qui sont exécutés régulièrement (avec un cron
       sous Unix ou Linux), ou un Task Scheduler (sous Windows). Ces scripts 
       peuvent aussi être utilisés pour réaliser des opérations sur des
       fichiers texte. Voyez la section sur l'utilisation de &php; en 
       <link linkend="features.commandline">ligne de commande</link>
       pour plus d'informations.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Ecrire des applications clientes graphiques. &php; n'est probablement
       pas le meilleur langage pour écrire des applications clientes 
       graphiques, mais si vous connaissez bien &php; et que
       vous souhaitez exploiter des fonctionnalités avancées
       dans vos applications clientes, vous pouvez utiliser
       PHP-GTK pour écrire de tels programmes. Vous avez aussi la
       possibilité d'écrire des applications très portables
       avec ce langage. PHP-GTK est une extension de &php;, qui
       n'est pas fournie dans la distribution de base. Si vous êtes
       interessé par PHP-GTK, visitez 
       <ulink url="&url.php.gtk;">son site web</ulink>.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    &php; est utilisable sur la majorité des systèmes d'exploitation, comme
    Linux, de nombreuses variantes Unix (incluant HP-UX, Solaris et OpenBSD),
    Microsoft Windows, Mac OS X, RISC OS et d'autres encore.
    &php; supporte aussi la plupart des serveurs web actuels : 
    Apache, Microsoft Internet Information Server,
    Personal Web Server, Netscape et iPlanet servers, Oreilly
    Website Pro server, Caudium, Xitami, OmniHTTPd et beaucoup d'autres
    encore. Pour la majorité des serveurs web, &php; fonctionne comme
    module, et pour d'autres, il fonctionne comme exécutable CGI.
   </para>
   <para>
    Avec &php; vous avez le choix de votre système d'exploitation et
    de votre serveur web. De plus, vous avez aussi le choix d'utiliser
    la programmation procédurale ou objet, ou encore un mélange des
    deux. Bien que le support de la couche objet ne soit pas très
    standard en &php; 4 (la version stable actuelle), beaucoup de librairies
    et d'applications d'envergure (incluant la librairie PEAR) ont été écrites en utilisant uniquement
    du code orienté objet. &php; 5 a rectifié les faiblesses de la couche objet de &php; 4 et a introduit
    un modèle objet complet.
   </para>
   <para>
    Avec &php;, vous n'êtes pas limités à la production de code
    HTML. Les capacités de &php; lui permettent de générer aussi
    bien des images, des fichiers PDF, des animations Flash 
    (avec l'aide des librairies libswf et Ming), générés à la 
    volée. Vous pouvez aussi générer facilement du texte, du code
    XML ou XHTML. &php; génère tous ces fichiers, et les sauve dans
    le système de fichier, ou bien les envoie directement au navigateur
    web.
   </para>
   <para>
    Une des grandes forces de &php; est le support de nombreuses bases
    de données. Ecrire une page web exploitant une base de données est
    extrêmement simple. Les bases de données suivantes sont 
    toutes supportées par &php; : 
    <blockquote>
     <simplelist columns="3">
      <member>Adabas D</member>
      <member>dBase</member>
      <member>Empress</member>
      <member>FilePro (lecture seule)</member>
      <member>Hyperwave</member>
      <member>IBM DB2</member>
      <member>Informix</member>
      <member>Ingres</member>
      <member>InterBase</member>
      <member>FrontBase</member>
      <member>mSQL</member>
      <member>Direct MS-SQL</member>
      <member>MySQL</member>
      <member>ODBC</member>
      <member>Oracle (OCI7 et OCI8)</member>
      <member>Ovrimos</member>
      <member>PostgreSQL</member>
      <member>SQLite</member>
      <member>Solid</member>
      <member>Sybase</member>
      <member>Velocis</member>
      <member>Unix dbm</member>
     </simplelist>
    </blockquote>
    Il existe aussi des couches d'abstraction de base de données comme DBX
    qui vous permettent de vous connecter de manière transparente à toute
    base de données supportée par cette extension. De plus, &php; supporte
    ODBC, ce qui vous permet de vous connecter à toute autre base de données
    qui supporte ce standard.
   </para>
   <para>
    &php; supporte de nombreux protocoles comme
    LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (sous Windows) et
    encore d'autres. Vous pouvez ouvrir des sockets réseau,
    et intéragir avec n'importe quel autre protocole. &php; supporte
    le format complexe WDDX, qui permet de communiquer entre tous
    les langages web. En terme d'interconnexion, &php; supporte aussi
    les instanciations d'objets Java, et les utilise de manière transparente
    comme objets intégrés. Vous pouvez aussi exploiter les objets
    distants avec CORBA.
   </para>
   <para>
    &php; dispose de fonctionnalités extrêmement utiles pour le
    traitement de texte, allant des expressions rationnelles 
    POSIX étendues ou Perl aux traitements des fichiers XML,
    avec les standards SAX et DOM (&php; 4). Vous pouvez utiliser les
    transformations XSLT. &php; 5 standardise toutes les extensions XML
    sur la base solide de libxml2 et en ettendant les fonctionnalités en
    ajoutant le support de SimpleXML et XMLReader.
   </para>
   <para>
    En commerce électronique, vous trouverez des outils de paiement
    intégrés comme Cybercash, CyberMut, VeriSign Payflow
    Pro et CCVS, pour réaliser des paiements en ligne.
   </para>
   <para>
    Enfin, &php; dispose d'extensions très pratiques comme
    le moteur de recherche mnoGoSearch, la passerelle avec
    IRC, des outils de compression (gzip, bz2) et de conversion 
    calendaire, de traduction...
   </para>
   <para>
    Comme vous le voyez, cette page n'est pas assez grande pour lister
    toutes les puissantes fonctionnalités de &php;. Lisez la section
    sur <link linkend="installation">l'installation de &php;</link>
    et étudiez la <link linkend="funcref">liste de fonctions</link> 
    pour avoir plus de détails sur toutes ces technologies.
   </para>
  </sect1>
 </chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
