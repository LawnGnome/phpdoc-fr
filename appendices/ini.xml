<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.9 Maintainer: yannick Status: ready -->

 <appendix id="ini">
  <title>Liste des directives du &php.ini;</title>
  <para>
   Cette liste inclut les directives du &php.ini; que vous pouvez définir
   pour configurer votre installation de &php;. Les directives gérants les extensions
   sont listées et détaillées dans les pages du manuel consacrées à ces 
   extensions. Par exemple, les directives gérants les sessions peuvent être trouvées
   sur la <link linkend="ref.session">page des sessions</link>.
  </para>

  <sect1 id="ini.sect.httpd-options">
   <title>Options Httpd</title>
    <para>
     <table>
      &ini.table.title;
      <tgroup cols="3">
       <thead>
         &ini.table.top;
       </thead>
       <tbody>
        <row>
         <entry>async_send</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
    </para>
   </sect1>

  <sect1 id="ini.sect.language-options">
   <title>Options de Langage</title>
   <para>
   <table>
    &ini.table.title;
    <tgroup cols="3">
     <thead>
      &ini.table.top;
     </thead>
     <tbody>
     <row>
      <entry>short_open_tag</entry>
      <entry>On</entry>
      <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
     </row>
     <row>
      <entry>asp_tags</entry>
      <entry>Off</entry>
      <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
     </row>
     <row>
      <entry>precision</entry>
      <entry>"14"</entry>
      <entry>PHP_INI_ALL</entry>
     </row>
     <row>
      <entry>y2k_compliance</entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
     </row>
     <row>
      <entry>allow_call_time_pass_reference</entry>
      <entry>On</entry>
      <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
     </row>
     <row>
      <entry>expose_php</entry>
      <entry>On</entry>
      <entry>PHP_INI_SYSTEM</entry>
     </row>
     <row>
      <entry>zend.ze1_compatibility_mode</entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
     </row>
    </tbody>
    </tgroup>
   </table>
   </para>
    
   &ini.descriptions.title; 
    
    <para>
     <variablelist>
      <varlistentry id="ini.short-open-tag">
       <term>
        <parameter>short_open_tag</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Définit si les balises courtes d'ouverture de &php; 
         (<userinput>&lt;? ?&gt;</userinput>) sont autorisées ou non.
         Si vous voulez utiliser &php; avec XML, vous devez désactiver cette option
         pour pouvoir utiliser <userinput>&lt;?xml ?&gt;</userinput>.
         Sinon, vous pouvez l'écrire à l'aide de &php;, par exemple : 
         <userinput>&lt;?php echo '&lt;?xml version="1.0"'; ?&gt;</userinput>.
         Si cette option est désactivé, vous devez utiliser la version
         longue d'ouverture de balises &php; (<userinput>&lt;?php ?&gt;</userinput>).
        </para>
        <note>
         <para>
          Cette directive affecte également l'utilisation de 
          <userinput>&lt;?=</userinput>, qui est identique à 
          <userinput>&lt;? echo</userinput>. L'utilisation de cette écriture nécessite
          que l'option <systemitem role="directive">short_open_tag</systemitem>
          soit activée.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.asp-tags">
       <term>
        <parameter>asp_tags</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         Active l'utilisation des balises ASP (<literal>&lt;% %&gt;</literal>) tout en conservant
         les balises &php; (<literal>&lt;?php ?&gt;</literal>). Cela inclut l'utilisation des balises
         courtes comme <literal>&lt;%= $value %&gt;</literal>. Pour plus d'informations, 
         lisez la page 
         <link linkend="language.basic-syntax.phpmode">Sortir du mode HTML</link>.
        </simpara>
        <note>
         <para>
          Le support des balises ASP a été ajouté en &php; 3.0.4.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.precision">
       <term>
        <parameter>precision</parameter>
        &integer;
       </term>
       <listitem>
        <simpara>
         Le nombre de décimales à afficher dans les nombres à virgule flottante.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.y2k-compliance">
       <term>
        <parameter>y2k_compliance</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         Force la conformité avec l'an 2000 (peut être la cause de problème avec les 
         navigateurs qui ne sont pas conformes)
        </simpara>
       </listitem>
      </varlistentry>


      <varlistentry id="ini.allow-call-time-pass-reference">
       <term>
        <parameter>allow_call_time_pass_reference</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Active ou non la possibilité de forcer les arguments à être passés par référence
         lors de l'appel à une fonction. Cette méthode est dépréciée et sera certainement
         plus supportée dans les futures versions de &php;/Zend. Il est préférable 
         de spécifier directement dans la déclaration de la fonction si les arguments
         seront passés ou non par référence. Nous vous encourageons à désactiver cette 
         option et de vous assurer que vos scripts fonctionnent correctement comme cela
         dans le but d'assurer leurs compatibilités avec les futures versions du langage
         (vous devriez recevoir une alerte à chaque fois que vous utiliserez cette
         fonctionnalité et que l'argument est passé par valeur au lieu de l'être
         par référence).
        </para>
        <para>
         Passer les arguments par référence à l'appel de la fonction a été 
         abandonné pour rendre le code plus clair. Les fonctions risquaient
         de modifier les arguments d'une manière aléatoire si l'argument était
         passé par référence. Pour éviter ces effets de bord, il est préférable
         de spécifier le passage par référence dans le prototype de la fonction.
        </para>
        <para>
         Voir aussi <link linkend="language.references">l'explication sur les 
         références</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.expose-php">
       <term>
        <parameter>expose_php</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Décide ou non si &php; doit être affiché comme étant installé sur le serveur
         (e.g. en ajoutant sa signature dans les en-têtes du serveur web).
         Ce n'est en aucun cas une menace sur la sécurité, mais cela permet
         de déterminer si vous utilisez &php; ou non sur votre serveur.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect1>

  <sect1 id="ini.sect.resource-limits">
   <title>Limitations des Ressources</title>
   <para>
    <table>
     &ini.table.title;
     <tgroup cols="3">
      <thead>
       &ini.table.top;
      </thead>
      <tbody>
       <row>
        <entry>memory_limit</entry>
        <entry>"8M"</entry>
        <entry>PHP_INI_ALL</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry id="ini.memory-limit">
      <term>
       <parameter>memory_limit</parameter>
       &integer;
      </term>
      <listitem>
       <para>
        Cette option détermine la limite mémoire, en octets, qu'un script est autorisé
        à allouer. Cela permet de prévenir l'utilisation de toute la mémoire par un script
        mal codé. Dans le but d'utiliser cette directive, vous devez l'avoir activer
        lors de la compilation. Du coup, votre ligne de configuration devait avoir cela
        d'insérer : 
        <option role="configure">--enable-memory-limit</option>.
        Notez que vous devez positionner cette directive à -1 si vous ne voulez
        aucune limite.
       </para>
       <para>
        Depuis &php; 4.3.2 et lorsque memory_limit est activé, la fonction &php;
        <function>memory_get_usage</function> est disponible.
       </para>

       &ini.shorthandbytes;
       
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    Voir aussi : <link linkend="ini.max-execution-time">max_execution_time</link>.
   </para>
  </sect1>

  <sect1 id="ini.sect.data-handling">
   <title>Gestion des données</title>
    <para>
     <table>
      &ini.table.title;
      <tgroup cols="3">
       <thead>
        &ini.table.top;
       </thead>
       <tbody>
        <row>
         <entry>track_vars</entry>
         <entry>"On"</entry>
         <entry>PHP_INI_??</entry>
        </row>
        <row>
         <entry>arg_separator.output</entry>
         <entry>"&amp;"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>arg_separator.input</entry>
         <entry>"&amp;"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
        <row>
         <entry>variables_order</entry>
         <entry>"EGPCS"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>register_globals</entry>
         <entry>"Off"</entry>
         <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>register_argc_argv</entry>
         <entry>"On"</entry>
         <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
       </row>
       <row>
        <entry>register_long_arrays</entry>
        <entry>"On"</entry>
        <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
       </row>
       <row>
        <entry>post_max_size</entry>
        <entry>"8M"</entry>
        <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
       </row>
       <row>
        <entry>gpc_order</entry>
        <entry>"GPC"</entry>
        <entry>PHP_INI_ALL</entry>
       </row>
       <row>
        <entry>auto_prepend_file</entry>
        <entry>""</entry>
        <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
       </row>
       <row>
        <entry>auto_append_file</entry>
        <entry>""</entry>
        <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
       </row>
        <row>
         <entry>default_mimetype</entry>
         <entry>"text/html"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>default_charset</entry>
         <entry>"iso-8859-1"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>always_populate_raw_post_data</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
        <row>
         <entry>allow_webdav_methods</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    
    &ini.descriptions.title;
    
    <para>
     <variablelist>
      <varlistentry id="ini.track-vars">
       <term>
        <parameter>track_vars</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Si cette option est activée, alors les variables d'environnement, GET, POST, Cookie
         et Server peuvent être trouvées respectivement dans les tableaux associatifs 
         globaux 
         <varname>$_ENV</varname>,
         <varname>$_GET</varname>,
         <varname>$_POST</varname>,
         <varname>$_COOKIE</varname> et
         <varname>$_SERVER</varname>.
        </para>
        <para>
         Notez que depuis &php; 4.0.3, <systemitem
         role="directive">track_vars</systemitem> est toujours activée.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.arg-separator.output">
       <term>
        <parameter>arg_separator.output</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Le séparateur utilisé lorsque &php; génère des URLs pour séparer les arguments.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.arg-separator.input">
       <term>
        <parameter>arg_separator.input</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Liste de(s) séparateur(s) utilisé(s) par &php; pour analyser 
         les URLs entrantes et en déduire les variables.
        </para>
        <note>
         <para>
          Chaque caractère de cette directive est considéré comme étant un séparateur distinct !
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.variables-order">
       <term>
        <parameter>variables_order</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Définit l'ordre de parcours des variables EGPCS (Environnement, GET, POST, Cookie,
         Server). La valeur par défaut de cette directive est "EGPCS". Si vous définissez
         cette directive à "GP" par exemple, cela fera que &php; ignorera complètement
         les variables d'environnement, cookies et serveur et effacera toutes les variables
         passées en GET avec les variables de même noms passées en méthode POST.
        </para>
        <para>
         Voir aussi <link linkend="ini.register-globals">register_globals</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-globals">
       <term>
        <parameter>register_globals</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Définit si oui ou non les variables EGPCS (Environment, GET,
         POST, Cookie, Server) seront enregistrées comme des variables globales.
        </para>
        <para>
         Depuis <ulink url="&url.php.release4.2.0;">PHP 4.2.0</ulink>,
         la valeur par défaut de cette directive est <emphasis>off</emphasis>.
        </para>
        <para>
         Lisez le chapitre sur la sécurité concernant
         <link linkend="security.globals">l'utilisation de register_globals</link>
         pour plus d'informations.
        </para>
        <para>
         Notez que <systemitem role="directive">register_globals</systemitem>
         ne peut pas être définit durant le traitement (<function>ini_set</function>).
         Vous pouvez utiliser &htaccess; si votre hôte vous le permet comme décrit
         ci-dessous. Exemple d'une entrée &htaccess; : 
         <userinput>php_flag register_globals off</userinput>.
        </para>
        <note>
         <para>
          La directive <systemitem role="directive">register_globals</systemitem> 
          est affectée par la directive 
          <link linkend="ini.variables-order">variables_order</link> .
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-argc-argv">
       <term>
        <parameter>register_argc_argv</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         Dit à &php; si il doit déclarer ou pas les variables argv et argc
         (qui contiendront les informations GET).
        </simpara>
        <simpara>
         Voir aussi les <link linkend="features.commandline">lignes de commande</link>.
         Cette directive a été introduite depuis &php; 4.0.0 et valait toujours "on" avant.
        </simpara>
       </listitem>
      </varlistentry>
      
      <varlistentry id="ini.register-long-arrays">
       <term>
        <parameter>register_long_arrays</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         Dit à &php; si oui ou non il doit enregistrer les types dépréciés
         <varname>$HTTP_*_VARS</varname> comme
         <link linkend="language.variables.predefined">variables prédéfinies</link>.
         Lorsque cette directive est activé (par défaut), les variables longues &php;
         comme <varname>$HTTP_GET_VARS</varname> seront définies.
         Si vous ne les utilisez pas, il est recommandé de désactiver cette option pour
         des raisons de performance. A la place, utilisez les variables tableaux 
         super-globales comme <varname>$_GET</varname>.
        </simpara>
        <simpara>
         Cette directive est disponible depuis &php; 5.0.0.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.post-max-size">
       <term>
        <parameter>post_max_size</parameter>
        &integer;
       </term>
       <listitem>
        <simpara>
         Définit la taille maximale des données reçues par méthode POST.
         Cette option affecte également les fichiers chargés.
         Pour charger de gros fichiers, cette valeur doit être plus grande
         que la valeur de 
         <link linkend="ini.upload-max-filesize">upload_max_filesize</link>.
        </simpara>
        <simpara>
         Si la limitation de mémoire est activée par votre script de configuration, 
         <link linkend="ini.memory-limit">memory_limit</link> affectera également
         les fichiers chargés. De façon général, 
         <link linkend="ini.memory-limit">memory_limit</link> doit être plus grand
         que <parameter>post_max_size</parameter>.
        </simpara>

        &ini.shorthandbytes;

       </listitem>
      </varlistentry>

      <varlistentry id="ini.gpc-order">
       <term>
        <parameter>gpc_order</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Définit l'ordre de parcours des variables GET/POST/COOKIE. Par défaut, cette 
         directive vaut "GPC". Si vous positionnez cette directive à "GP" par exemple,
         &php; ignorera complètement les cookies et effacera 
         toutes les variables de la méthode GET avec les variables de la méthode
         POST portant le même nom.
        </para>
        <note>
         <para>
          Cette option n'est pas disponible en &php; 4.
          Utilisez <link linkend="ini.variables-order">variables_order</link>
          à la place.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.auto-prepend-file">
       <term>
        <parameter>auto_prepend_file</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Spécifie le nom d'un fichier qui sera automatiquement parcouru avant le fichier
         principal. Ce fichier est inclus comme s'il l'avait été avec la fonction
         <function>include</function>, donc 
         <link linkend="ini.include-path">include_path</link> est utilisé.
        </para>
        <para>
         La valeur spéciale <systemitem class="constant">none</systemitem>
         désactive l'ajout automatique.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.auto-append-file">
       <term>
        <parameter>auto_append_file</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Spécifie le nom du fichier qui sera automatiquement parcouru après la 
         fichier principal. Ce fichier est inclus comme s'il l'avait été avec la fonction
         <function>include</function>, donc 
         <link linkend="ini.include-path">include_path</link> est utilisé.
        </para>
        <para>
         La valeur spéciale <systemitem class="constant">none</systemitem>
         désactive l'ajout automatique.
         <note>
          <simpara>
           Si le script est terminé par la fonction <function>exit</function>,
           l'ajout automatique ne se fera <emphasis>pas</emphasis>.
          </simpara>
         </note>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.default-mimetype">
       <term>
        <parameter>default_mimetype</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.default-charset">
       <term>
        <parameter>default_charset</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Depuis &php; 4.0b4, &php; enverra toujours un jeux de caractères par défaut
         à l'en-entête HTTP <literal>Content-type: header</literal>. Pour désactiver
         l'envoi du jeux de caractères, définissez le tout simplement à une valeur
         vide.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.always-populate-raw-post-data">
       <term>
        <parameter>always_populate_raw_post_data</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Remplit toujours la variable $HTTP_RAW_POST_DATA.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.allow-webdav-methods">
       <term>
        <parameter>allow_webdav_methods</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Autorise la gestion des requête HTTP WebDav avec des scripts &php; (e.g
         PROPFIND, PROPPATCH, MOVE, COPY, etc.).
         Cette directive n'existe plus depuis &php; 4.3.2.
         Si vous voulez récupérer les données envoyées avec la méthode POST de ce type
         de requêtes, vous devez également définir
         <link linkend="ini.always-populate-raw-post-data">
         always_populate_raw_post_data</link>.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     Voir aussi 
     <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>,
     <link linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link> et
     <link linkend="ini.magic-quotes-sybase">magic_quotes_sybase</link>.
    </para>
   </sect1>

  <sect1 id="ini.sect.path-directory">
   <title>Chemins et répertoires</title>
    <para>
     <table>
      &ini.table.title;
      <tgroup cols="3">
       <thead>
        &ini.table.top;
       </thead>
       <tbody>
        <row>
         <entry>include_path</entry>
         <entry>PHP_INCLUDE_PATH</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>doc_root</entry>
         <entry>PHP_INCLUDE_PATH</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>user_dir</entry>
         <entry>NULL</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>extension_dir</entry>
         <entry>PHP_EXTENSION_DIR</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>cgi.fix_pathinfo</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>cgi.force_redirect</entry>
         <entry>"1"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>cgi.redirect_status_env</entry>
         <entry>""</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>fastcgi.impersonate</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>cgi.rfc2616_headers</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    
    &ini.descriptions.title;
    
    <para>
     <variablelist>
      <varlistentry id="ini.include-path">
       <term>
        <parameter>include_path</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Spécifie une liste de répertoires où les fonctions 
         <function>require</function>, <function>include</function>
         et <function>fopen_with_path</function> chercheront les fichiers.
         Le format est identique à la variable d'environnement système 
         <envar>PATH</envar> : une liste de répertoires séparés par deux points
         (<literal>:</literal>) sous Unix ou par un point-virgule (<literal>;</literal>)
         sous Windows.
        </para>
        <para>
         <example>
          <title>include_path sous Unix</title>
          <programlisting role="php.ini">
<![CDATA[
include_path=".:/php/includes"
]]>
          </programlisting>
         </example>
        </para>
        <para>
         <example>
          <title>include_path sous Windows</title>
          <programlisting role="php.ini">
<![CDATA[
include_path=".;c:\php\includes"
]]>
          </programlisting>
         </example>
        </para>
        <para>
         L'utilisation d'un point (<literal>.</literal>) dans le chemin d'inclusion vous
         permet de faire des inclusions relatives au répertoire courant.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.doc-root">
       <term>
        <parameter>doc_root</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Le dossier racine de &php; sur le serveur. Uniquement utilisé si non vide.
         Si &php; est configuré avec le &safemode;, aucun fichier n'est servi en dehors
         de ce répertoire.
         Si &php; n'a pas été compilé avec FORCE_REDIRECT, vous 
         <emphasis>devez</emphasis> définir le doc_root si vous utilisez &php; en tant 
         que CGI sous n'importe quel serveur web (autre que IIS). Alternativement, vous
         pouvez utiliser la configuration <link linkend="ini.cgi.force-redirect">
         cgi.force_redirect</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.user-dir">
       <term>
        <parameter>user_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Le nom de base du répertoire utilisé dans un répertoire utilisateur 
         pour les fichiers &php;, par exemple, <filename class="directory">public_html
         </filename>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.extension-dir">
       <term>
        <parameter>extension_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Spécifie le répertoire dans lequel &php; doit chercher des extensions externes
         à charger. Voir aussi <link linkend="ini.enable-dl">enable_dl</link>
         et <function>dl</function>.
        </para>
       </listitem>
      </varlistentry>
     
      <varlistentry id="ini.extension">
       <term>
        <parameter>extension</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Quelles extensions doivent être chargées dynamiquement lors du
         démarrage de &php;.
        </para>
       </listitem>
      </varlistentry>
      
      <varlistentry id="ini.cgi.fix-pathinfo">
       <term>
        <parameter>cgi.fix_pathinfo</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Fournie un <emphasis>réel</emphasis> PATH_INFO/PATH_TRANSLATED
         pour CGI. Le comportement précédent de &php; était de définir
         PATH_TRANSLATED en SCRIPT_FILENAME et de ne pas remplir 
         PATH_INFO. Pour plus d'informations sur PATH_INFO, lisez les spécificités CGI.
         Si définie à 1, &php; CGI fixera ce chemin suivant les spécifications.
         Si définie à 0, &php; appliquera l'ancien comportement.
         Par défaut, cette directive vaut 0. Vous devriez modifier vos scripts pour 
         utiliser SCRIPT_FILENAME à la place de PATH_TRANSLATED.
        </para>
       </listitem>
      </varlistentry>
      
      <varlistentry id="ini.cgi.force-redirect">
       <term>
        <parameter>cgi.force_redirect</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         cgi.force_redirect est nécessaire pour des raisons de sécurité lors de l'utilisation
         de &php; en mode CGI sous la plus part des serveurs web. Si vous ne la définissez
         pas, &php; l'activera automatiquement par défaut. Vous pouvez la désactiver
         <emphasis>à vos risques et périls</emphasis>.
        </para>
        <note>
         <para>
          Utilisateurs de Windows : Vous <emphasis>pouvez</emphasis> désactiver 
          cette option en toute sécurité si vous utilisez le serveur web IIS ; en faîte, vous le 
          <emphasis>devez</emphasis>.
          Pour faire fonctionner les serveurs web OmniHTTPD ou Xitami, 
          vous <emphasis>devez</emphasis> désactiver cette directive.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.cgi.redirect-status-env">
       <term>
        <parameter>cgi.redirect_status_env</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Si cgi.force_redirect est activé et que vous ne tournez pas sous un serveur web
         Apache ou Netscape (iPlanet), vous <emphasis>devriez</emphasis> avoir besoin
         de définir un nom de variable d'environnement que &php; utilisera
         pour voir si tout est correct pour continuer l'exécution.
        </para>
        <note>
         <para>
          La définition de cette variable <emphasis>peut</emphasis> avoir
          des conséquences sur la sécurité.
          <emphasis>Sachez ce que vous faîtes avant de faire cela</emphasis>.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.fastcgi.impersonate">
       <term>
        <parameter>fastcgi.impersonate</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         FastCGI sous IIS (sur les systèmes d'exploitation basés sur WINNT) supporte
         la possibilité de déterminer la marque de sécurité du client appelant. Cela permet
         à IIS de définir le contexte de sécurité sur lequel la requête est exécuté.
         mod_fastcgi sous Apache ne supporte actuellement pas cette fonctionnalité
         (03/17/2002). Définie à 1 si vous utilisez IIS. Par défaut, vaut 0.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.cgi.rfc2616-headers">
       <term>
        <parameter>cgi.rfc2616_headers</parameter>
        <type>int</type>
       </term>
       <listitem>
        <para>
         Dit à &php; quel type d'en-tête doit être utilisé lors de l'envoi
         du code réponse HTTP. Si définie à 0; &php; enverra une en-tête Status:
         qui est supportée par Apache et les autres serveurs web. Lorsque définie à -1, &php;
         enverra une en-tête répondant à la spécification de la 
         <ulink url="&url.rfc;2616">RFC 2616</ulink>. Laissez cette valeur à 0
         à moins que vous sachiez ce que vous faîtes.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect1>

  <sect1 id="ini.sect.file-uploads">
   <title>Chargement de fichiers</title>
    <para>
     <table>
      &ini.table.title;
      <tgroup cols="3">
       <thead>
        &ini.table.top;
       </thead>
       <tbody>
        <row>
         <entry>file_uploads</entry>
         <entry>"1"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>upload_tmp_dir</entry>
         <entry>NULL</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>upload_max_filesize</entry>
         <entry>"2M"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    
    &ini.descriptions.title;
    
    <para>
     <variablelist>
      <varlistentry id="ini.file-uploads">
       <term>
        <parameter>file_uploads</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Autorise ou non le 
         <link linkend="features.file-upload">chargement de fichiers</link> par HTTP.
         Voir aussi les directives 
         <link linkend="ini.upload-max-filesize">upload_max_filesize</link>,
         <link linkend="ini.upload-tmp-dir">upload_tmp_dir</link> et
         <link linkend="ini.post-max-size">post_max_size</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.upload-tmp-dir">
       <term>
        <parameter>upload_tmp_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Le répertoire temporaire utilisé pour sotcker les fichiers lors du chargement.
         L'utilisateur sous lequel fonctionne &php; doit avoir les droits en écriture sur 
         ce répertoire. Si non spécifié, &php; utilisera celui par défaut du système.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.upload-max-filesize">
       <term>
        <parameter>upload_max_filesize</parameter>
        &integer;
       </term>
       <listitem>
        <para>
         La taille maximale en octets d'un fichier à charger.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect1>

  <sect1 id="ini.sql-general">
   <title>SQL général</title>
    <para>
     <table>
      &ini.table.title;
      <tgroup cols="3">
       <thead>
        &ini.table.top;
       </thead>
       <tbody>
        <row>
         <entry>sql.safe_mode</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    
    &ini.descriptions.title;
    
    <para>
     <variablelist>
      <varlistentry id="ini.sql.safe-mode">
       <term>
        <parameter>sql.safe_mode</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect1>

   <sect1 id="ini.sect.debugger">
    <title>Directives de configuration de débogage</title>
    <caution>
     <para>
      Seulement &php; 3 implémente un débogueur par défaut ; voir 
      <xref linkend="debugger"/> pour plus d'informations.
     </para>
    </caution>

    <variablelist>
     <varlistentry id="ini.debugger.host">
      <term>
       <parameter>debugger.host</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Nom du DNS ou adresse IP de l'hôte utilisé par le débogueur.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.port">
      <term>
       <parameter>debugger.port</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Numéro du port utilisé par le débogueur.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.enabled">
      <term>
       <parameter>debugger.enabled</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Active ou non le débogueur.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </sect1>
 </appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
