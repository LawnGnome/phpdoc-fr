<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 304500 Maintainer: jpauli Status: ready -->
<!-- Reviewed: yes -->

<appendix xml:id="userlandnaming" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Guide de nommage de l'espace utilisateur</title>
 <para>
  Ce guide permet de choisir de la meilleure façon possible
  les noms pour les identifiants dans le code PHP de l'espace utilisateur.
  Lors du choix des noms pour n'importe quel code qui crée des symboles
  dans l'espace de noms global, il est important de prendre en compte ce guide
  afin d'éviter d'éventuels problèmes avec les futures versions de PHP et
  vos symboles.
 </para>

 <section xml:id="userlandnaming.globalnamespace">
  <title>Espace de noms global</title>
  <para>
   Ceci est une vude la construction du code qui ira dans l'espace de noms global :
  </para>

  <itemizedlist>
   <listitem><para>fonctions</para></listitem>
   <listitem><para>classes</para></listitem>
   <listitem><para>interfaces</para></listitem>
   <listitem><para>constantes (et non les constantes de classe)</para></listitem>
   <listitem>
    <para>variables définies à l'extérieur des fonctions/méthodes</para>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="userlandnaming.rules">
  <title>Règles</title>
  <para>
   La liste suivante fournit un aperçu global des règles réservées
   au projet PHP lors du choix des noms pour les nouveaux identifiants
   internes. Le guide définitif est l'officiel
   <link xlink:href="&url.userlandnaming.cs;">CODING STANDARDS</link> :
  </para>

  <itemizedlist>
   <listitem>
    <para>
     PHP possède l'espace de noms de haut niveau mais tente de trouver
     des noms descriptifs cohérents.
    </para>
   </listitem>
   <listitem>
    <para>
     Les noms des fonctions utilisent un underscore entre les mots, tandis que
     les noms des classes utilisent les notations <literal>CamelCase</literal>
     et <literal>PascalCase</literal>.
    </para>
   </listitem>
   <listitem>
    <para>
     PHP préfixe tous les symboles globaux d'une extension avec le nom
     de l'extension. (Dans le passé, il y avait quelques exceptions à cette règle)
     Exemples :
    </para>

    <itemizedlist>
     <listitem><para><function>curl_close</function></para></listitem>
     <listitem><para><function>mysql_query</function></para></listitem>
     <listitem><para>PREG_SPLIT_DELIM_CAPTURE</para></listitem>
     <listitem><para>new DOMDocument()</para></listitem>
     <listitem>
      <para>
       <function>strpos</function> (exemple d'une erreur du passé)
      </para>
     </listitem>
     <listitem><para>new SplFileObject()</para></listitem>
    </itemizedlist>
   </listitem>
   <listitem>
    <para>
     Les itérateurs et les exceptions sont cependant simplement suffixés
     par respectivement, "<literal>Iterator</literal>" et "<literal>Exception</literal>."
     Exemples :
    </para>
    <itemizedlist>
     <listitem><para><classname>ArrayIterator</classname></para></listitem>
     <listitem><para><classname>LogicException</classname></para></listitem>
    </itemizedlist>
   </listitem>
   <listitem>
    <para>
     PHP réserve tous les symboles commençant par un <literal>__</literal>
     comme étant magique. Il est recommandé de ne pas créer de symboles
     commençant par un <literal>__</literal> en PHP sauf si
     vous voulez utiliser les fonctionnalités magiques documentées.
     Exemple :
    </para>
    <itemizedlist>
     <listitem><para><function>__get</function></para></listitem>
     <listitem><para><function>__autoload</function></para></listitem>
    </itemizedlist>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="userlandnaming.tips">
  <title>Astuces</title>
  <para>
   Si vous voulez écrire du code portable, il est recommandé de préfixer
   (ou suffixer) tout ce qui va dans l'espace de noms global avec un
   préfixe non commun de 3-4 lettres (ou suffixe) séparé par un underscore.
   Il est recommandé, afin d'éviter des problèmes d'espace de noms avec d'autres
   codes de l'espace utilisateur, de faire en sorte que les projets recherchent les
   préfixes (ou les suffixes) utilisés dans les autres projets et de choisir vos préfixes
   (ou suffixe) en fonction.
   Exemples :
  </para>

  <itemizedlist>
   <listitem><para>MyPx_someFunc()</para></listitem>
   <listitem><para>Foo_Date</para></listitem>
   <listitem><para>$asdf_dbh</para></listitem>
  </itemizedlist>
 </section>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
