<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<appendix id="wrappers">
 <title>Liste des protocoles support&eacute;s</title>
 <para>
  Cette section recense une liste de protocole g&eacute;rant des URL,
  qui sont int&eacute;gr&eacute;s dans les fonctions ayant acc&egrave;s aux fichiers,
  dans PHP. Par exemple, les fonctions 
  <function>fopen</function> et <function>copy</function>.
  Ces fonctionnalit&eacute;s sont compil&eacute;es comme des pilotes externes,
  et &agrave; partir de PHP 4.3.0, vous pouvez cr&eacute;er vos propres
  pilotes, avec la fonction <function>stream_register_wrapper</function>.
 </para>

 <section id="wrappers.http">
  <title>HTTP et HTTPS</title>
   <simpara>PHP 3, PHP 4. <filename>https://</filename> depuis PHP 4.3</simpara>

  <itemizedlist>
   <listitem><simpara><filename>http://exemple.com</filename></simpara></listitem>
   <listitem><simpara><filename>http://utilisateur:motdepasse@exemple.com</filename></simpara></listitem>
   <listitem><simpara><filename>https://exemple.com</filename></simpara></listitem>
   <listitem><simpara><filename>https://utilisateur:motdepasse@exemple.com</filename></simpara></listitem>
  </itemizedlist>

  <simpara>
   Permet des acc&egrave;s en lecture uniquement, pour des fichiers accessibles sur
   le r&eacute;seau avec la m&eacute;thode GET de HTTP 1.0. Un en-t&ecirc;te <literal>Host:</literal>
   est envoy&eacute; avec la requ&ecirc;te, pour g&eacute;rer les h&ocirc;tes virtuels, bas&eacute;s sur des
   noms. Si vous avez configur&eacute; une version de navigateur avec
   l'option <link linkend="ini.user-agent">user_agent</link> dans votre 
   fichier &php.ini;, ou via le contexte de fl&ocirc;t, il sera aussi 
   utilis&eacute; dans votre requ&ecirc;te.
  </simpara>
  <simpara>
   Les redirections sont support&eacute;es depuis PHP 4.0.5; si vous utilisez
   une version plus ancienne, vous devrez ajouter vous m&ecirc;me les 
   slash finaux dans vos URL.
  </simpara>
  <simpara>
   Le fl&ocirc;t donne l'acc&egrave;s au corps (<emphasis>body</emphasis>)
   de la ressource. Les en-t&ecirc;tes sont stock&eacute;s dans la variable
   <varname>$http_response_header</varname>. Depuis PHP 4.3.0,
   les en-t&ecirc;tes sont aussi accessibles avec la fonction 
   <function>stream_get_meta_data</function>.
  </simpara>
  <simpara>
   Les connexions HTTP sont en lecture seule. Vous ne pouvez pas &eacute;crire
   dans des fichiers ouverts via le protocole HTTP.
  </simpara>
  <note>
   <simpara>HTTPS est support&eacute; depuis PHP 4.3, si vous avez compil&eacute;
   le support d'OpenSSL.
   </simpara>
  </note>
 </section>

 <section id="wrappers.ftp">
  <title>FTP and FTPS</title>
  <simpara>PHP 3, PHP 4.  <filename>ftps://</filename> depuis PHP 4.3</simpara>

  <itemizedlist>
   <listitem><simpara><filename>ftp://example.com/pub/file.txt</filename></simpara></listitem>
   <listitem><simpara><filename>ftp://user:password@example.com/pub/file.txt</filename></simpara></listitem>
   <listitem><simpara><filename>ftps://example.com/pub/file.txt</filename></simpara></listitem>
   <listitem><simpara><filename>ftps://user:password@example.com/pub/file.txt</filename></simpara></listitem>
  </itemizedlist>

  <simpara>
   Permet l'acc&egrave;s aux fichiers existants, et la cr&eacute;ation de fichiers via FTP.
   Si le serveur ne supporte pas les connexions en mode passif, la
   connexion &eacute;chouera.
  </simpara>
  <simpara>
   Vous pouvez ouvrir des fichiers en lecture et en &eacute;criture, mais
   pas les deux en m&ecirc;me temps. Si le fichier distant existe d&eacute;j&agrave;
   sur le serveur FTP, vous pourrez essayer de l'ouvrir en &eacute;criture,
   mais la connexion &eacute;chouera. Si vous devez modifier un fichier qui
   existe d&eacute;j&agrave;, utilisez <function>ftp_connect</function>.
  </simpara>
  <simpara>
   <filename>ftps://</filename> a &eacute;t&eacute; introduit en PHP 4.3.  
   C'est le m&ecirc;me que <filename>ftp://</filename>, mais il tente d'&eacute;tablir
   une connexion s&eacute;curis&eacute;e avec le serveur FTP. Si le serveur ne le supporte
   pas, la connexion sera une connexion non s&eacute;curis&eacute;e.
  </simpara>
  <note>
   <simpara>
    FTPS est support&eacute; depuis PHP 4.3.0, si vous avez compil&eacute; le 
    support d'OpenSSL.
   </simpara>
  </note>

 </section>

 <section id="wrappers.php">
  <title>Fl&ocirc;ts d'entr&eacute;e/sortie</title>
  <simpara>
   PHP 3.0.13 et plus r&eacute;scent, <filename>php://output</filename> 
   et <filename>php://input</filename> depuis PHP 4.3
  </simpara>

  <itemizedlist>
   <listitem><simpara><filename>php://stdin</filename></simpara></listitem>
   <listitem><simpara><filename>php://stdout</filename></simpara></listitem>
   <listitem><simpara><filename>php://stderr</filename></simpara></listitem>
   <listitem><simpara><filename>php://output</filename></simpara></listitem>
   <listitem><simpara><filename>php://input</filename></simpara></listitem>
  </itemizedlist>

  <simpara>
   <filename>php://stdin</filename>, <filename>php://stdout</filename> 
   et <filename>php://stderr</filename> donne acc&egrave;s au fl&ocirc;t correspondant
   d'entr&eacute;e ou de sortie du processus PHP.
  </simpara>
  <simpara>
   <filename>php://output</filename> vous permet d'&eacute;crire dans le
   buffer de sortie, de la m&ecirc;me mani&egrave;re que 
   <function>print</function> et <function>echo</function>.
  </simpara>
  <simpara>
   <filename>php://input</filename> permet de lire des donn&eacute;es POST bruts.
   C'est moins gourmand en m&eacute;moire que <varname>$HTTP_RAW_POST_DATA</varname> 
   et il n'y a pas de directive sp&eacute;ciale dans &php.ini;.
  </simpara>
  <simpara>
   <filename>php://stdin</filename> et
   <filename>php://input</filename> sont lecture seule, tandis que
   <filename>php://stdout</filename>,
   <filename>php://stderr</filename> et
   <filename>php://output</filename> sont en &eacute;criture seule.
  </simpara>

  <simpara>
   <filename>php://filter</filename> est une sorte de m&eacute;ta-gestionnaire,
   pr&eacute;vu pour qui permet l'utilisation de filtre avec les donn&eacute;es d'entr&eacute;e
   au moment du d&eacute;marrage du script. C'est pratique avec des fonctions
   compactes comme <function>readfile</function>, <function>file</function> et
   <function>file_get_contents</function> o&ugrave; il n'y a pas d'opportunit&eacute; d'appliquer
   un filtre aux donn&eacute;es lues.
  </simpara>
  <simpara>
   Le gestionaire de <filename>php://filter</filename> prend les param&egrave;tres
   suivants dans le chemin.
  </simpara>
  <itemizedlist>
   <listitem>
    <para>
     <literal>/resource=&lt;fl&ocirc;t &agrave; filtrer&gt;</literal>
     (<emphasis>obligatoire</emphasis>) Ce param&egrave;tre doit &ecirc;tre situ&eacute; &agrave; la fin
     de votre cha&icirc;ne <filename>php://filter</filename> et doit pointer sur le 
     fl&ocirc;t &agrave; filtrer.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
/* Ceci est l'&eacute;quivalent de :
   readfile("http://www.example.com");
   puisqu'aucun filtre n'est sp&eacute;cifi&eacute; */

readfile("php://filter/resource=http://www.exemple.com");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>/read=&lt;liste de filtres de la cha&icirc;ne de lecture&gt;</literal>
     (<emphasis>optionnel</emphasis>) Ce param&egrave;tre prend un ou plusieurs noms de
     filtres, s&eacute;par&eacute;s par le caract&egrave;re pipe <literal>|</literal>.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
/* Cette ligne va afficher le contenu de 
   www.exemple.com tout en majuscule */
readfile("php://filter/read=string.toupper/resource=http://www.exemple.com");

/* Cela va faire la m&ecirc;me chose que ci-dessus, mais en plus,
   le r&eacute;sultat sera chiffr&eacute; en ROT13 */
readfile("php://filter/read=string.toupper|string.rot13/resource=http://www.exemple.com");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>/write=&lt;liste de filtres de la cha&icirc;ne d'&eacute;criture&gt;</literal>
     (<emphasis>optionnel</emphasis>) Ce param&egrave;tre prend un ou plusieurs noms de
     filtres, s&eacute;par&eacute;s par le caract&egrave;re pipe <literal>|</literal>.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
/* Cette ligne va filtrer la cha&icirc;ne "Bonjour le monde"
   avec le filtre rot13, puis &eacute;crire le r&eacute;sultat dans 
   le fichier exemple.txt du dossier courant */
file_set_contents("php://filter/write=string.rot13/resource=exemple.txt","Bonjour le monde");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <simpara>
     <literal>/&lt;liste de filtres des deux cha&icirc;nes&gt;</literal>
     (<emphasis>optionnel</emphasis>)  Tous les filtres qui ne sont pas
     pr&eacute;fix&eacute; avec <literal>read=</literal> ou
     <literal>write=</literal> seront appliqu&eacute; aux deux cha&icirc;nes de filtres,
     en lecture et en &eacute;criture.
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section id="wrappers.compression">
  <title>Fl&ocirc;ts compress&eacute;s</title>
  <simpara><filename>zlib:</filename> PHP 4.0.4 - PHP 4.2.3 (syst&egrave;mes avec
  fopencookie uniquement)</simpara>
  <simpara><filename>compress.zlib://</filename> et 
  <filename>compress.bzip2://</filename> depuis PHP 4.3.0 et plus r&eacute;cent.</simpara>

  <itemizedlist>
   <listitem><simpara><filename>zlib:</filename></simpara></listitem>
   <listitem><simpara><filename>compress.zlib://</filename></simpara></listitem>
   <listitem><simpara><filename>compress.bzip2://</filename></simpara></listitem>
  </itemizedlist>

  <simpara> 
   <filename>zlib:</filename> fonctionne comme <function>gzopen</function>, hormis
   le fait que le fl&ocirc;t peut &ecirc;tre utilis&eacute; directement avec <function>fread</function> 
   et les autres fonctions de syst&egrave;me de fichier. Cette notation est obsol&egrave;te
   depuis PHP 4.3.0, &eacute;tant donn&eacute;es les ambiguit&eacute;s dues aux noms de fichiers
   contenant des deux points ':'. Utilisez plut&ocirc;t <filename>compress.zlib://</filename>.
  </simpara>

  <simpara>
   <filename>compress.zlib://</filename> et
   <filename>compress.bzip2://</filename> sont &eacute;quivalents &agrave; 
   <function>gzopen</function> et <function>bzopen</function>
   respectivement, et ils op&egrave;rent m&ecirc;me sur les syst&egrave;mes qui ne supportent pas
   fopencookie.
  </simpara>
 </section>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
