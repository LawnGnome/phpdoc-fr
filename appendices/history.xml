<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 314127 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<appendix xml:id="history" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Histoire de PHP</title>
 <para>
  PHP a suivi un long chemin depuis sa naissance au milieu de l'année 1990.
  Depuis ses débuts modestes jusqu'à devenir l'un des plus éminents
  langage de programmation pour le web, l'évolution de PHP
  est un véritable conte de fées technologique. Souvenez-vous
  combien une telle croissance n'a pas été tâche facile. Ceux d'entre
  vous qui sont intéressés par un bref récapitulatif de ce qu'a été
  l'histoire de PHP jusqu'à aujourd'hui, poursuivez la lecture de
  ce document. Si vous souhaitez récupérer des pièces uniques de l'histoire
  d'Internet, vous pouvez trouver les anciennes versions de PHP
  dans notre <link xlink:href="&url.php.museum;">musée</link>.
 </para>
 <sect1 xml:id="history.php">
  <title>Histoire de PHP</title>
  <sect2 xml:id="history.phpfi">
   <title>Outils PHP, FI, Kit de construction et PHP/FI</title>
   <para>
    PHP, tel qu'il est connu aujourd'hui, est le successeur d'un produit appelé
    PHP/FI. Crée en 1994 par Rasmus Lerdorf, la toute première incarnation
    de PHP était un simple jeu de binaires CGI écrits en langage C.
    Originairement utilisé pour suivre les visiteurs de son curriculum vitae
    en ligne, il nomme cette suite de scripts "Personal
    Home Page Tools" (ndt : Outils pour sa page personnelle), et plus
    fréquemment appelé "PHP Tools". Au fil du temps, de plus en plus
    de fonctionnalités sont demandées et Rasmus ré-écrit les outils PHP,
    produisant ainsi une implémentation plus large et plus riche.
    Ce nouveau modèle était capable d’interagir avec une base de données,
    mais aussi, fournissait un framework permettant aux utilisateurs de
    développer une application dynamique simple pour le web, comme des
    livres d'or. En Juin 1995, Rasmus 
    <link xlink:href="&url.php.release1.0.0;">fournit</link>
    le code source de PHP Tools au grand public, permettant ainsi aux
    développeurs de l'utiliser comme bon leur semblaient. Ceci a également
    permis - et encouragé - aux utilisateurs de fournir des patches pour
    corriger les bogues mais aussi pour éprouver la stabilité du produit.
   </para>
   <para>
    En septembre de cette année là, Rasmus contina d'élargir PHP et -
    pour un temps très court - supprima le nom PHP. Faisant dorénavant
    référence aux outils sous le nom de FI (abréviation pour "Forms Interpreter"
    ou interpréteur de formulaire), la nouvelle implémentation incluait plusieurs
    fonctionnalités de base que nous connaissons encore aujourd'hui.
    Il avait ces variables qui ressemblent au Perl, un système
    d'interprétation automatique des variables de formulaires, et une
    syntaxe qui s'intègre facilement dans HTML. La syntaxe elle-même
    était similaire à celle du Perl mais beaucoup plus
    limitée. Elle était simple et un peu incohérente. En fait, pour embarquer
    du code dans un fichier HTML, les développeurs devaient utiliser
    des commentaires HTML. Malgré le fait que cette méthode ne soit
    pas accueillie avec un grand enthousiasme, FI continua de rassembler
    de plus en plus de monde, et fût accepter comme outil CGI --- mais toujours
    pas comme un langage. Cependant, ceci commença à changer les mois suivants ;
    en octobre 1995, Rasmus livra une nouvelle version totalement ré-écrite.
    Reprenant le nom de PHP, il était maintenant nommé (brièvement)
    "Personal Home Page Construction Kit" et était la première version à mettre
    en avant le fait qu'il était considéré comme une interface de scripts avancée.
    Le langage fût délibérément architecturé pour ressemble à la structure du C,
    rendant ainsi son adoption facile pour les développeurs familiers avec les
    langages comme C, Perl et consorts. Dans un premier temps limité aux systèmes
    Unix et POSIX, son potentiel pour une implémentation sous Windows NT
    commença à être exploré.
   </para>
   <para>
    Le code fut de nouveau repris de zéro, et en Avril 1996,
    combinant les noms des précédentes versions, Rasmus introduisit
    PHP/FI. Cette seconde implémentation commença à faire réellement
    évoluer PHP d'une simple suite d'outils en un vrai langage de
    programmation. Il incluait un support interne pour les bases de
    données DBM, mSQL et Postgres95, un support interne pour les cookies,
    un support des fonctions définies par l'utilisateur, et bien plus.
    Ce mois de Juin, PHP/FI prenait un statut de version 2.0. Un point
    intéressant cependant était qu'il n'existait qu'une seule et unique
    version de PHP 2.0. Quand il a finalement pris le statut béta en Novembre
    1997, le moteur d'analyse interne avait été entièrement ré-écrit.
   </para>
   <para>
    Bien qu'il fournissait un cycle de développement très court, il
    continua de gagner en popularité dans ce monde où le développement web
    était encore très récent. En 1997 et 1998, PHP/FI comptait plusieurs
    milliers d'utilisateurs à travers le monde. Le site de surveillance Netcraft,
    en Mai 1998, indiquait qu'environ 60.000 domaines contenaient l'en-tête
    "PHP", indiquant ainsi que le serveur hôte l'avait d'installé.
    Ce nombre correspondait à environ 1% des domaines d'Internet de l'époque.
    Malgré ce chiffre impressionnant, la maturation de PHP/FI était condamnée
    à ses limitations ; bien qu'il y ait plusieurs contributeurs mineurs,
    il était encore principalement développé par un seul individu.
   </para>
   <para>
    <example>
     <title>Exemple de code PHP/FI</title>
     <programlisting role="html">
<![CDATA[
<!--include /text/header.html-->

<!--getenv HTTP_USER_AGENT-->
<!--ifsubstr $exec_result Mozilla-->
  Hé, vous utilisez Netscape!<p>
<!--endif-->

<!--sql database select * from table where user='$username'-->
<!--ifless $numentries 1-->
  Désolé, cette ligne n'existe pas<p>
<!--endif exit-->
  Bienvenue <!--$user-->!<p>
  Vous avez <!--$index:0--> crédits sur votre compte.<p>

<!--include /text/footer.html-->
]]>
     </programlisting>
    </example>
    </para>
   </sect2>
  <sect2 xml:id="history.php3">
   <title>PHP 3</title>
   <para>
    PHP 3.0 fut la première version du langage tel que nous le connaissons
    actuellement. Trouvant que PHP/FI 2.0 était toujours insuffisant et
    manquait de fonctionnalités nécessaires pour mettre en oeuvre des applications
    d'eCommerce, dans le cadre d'un projet universitaire, Andi Gutmans
    et Zeev Suraski de la ville de Tel Aviv (Israël) commençaient une
    autre ré-écriture complète de l'analyseur interne en 1997.
    Se rapprochant de Rasmus via le web, ils discutèrent de divers aspects
    de leur implémentation courante et de leur re-développement de PHP.
    Dans un effort pour éprouver le moteur et utilisant les bases de PHP/FI,
    Andi, Rasmus et Zeev décidèrent de collaborer dans le développement d'un nouveau
    et indépendant langage de programmation. Ce tout nouveau langage a été
    produit sous un nouveau nom, qui supprima l'implication limitée
    d'un seul homme, dont le nom de PHP/FI était issu. Il fût ainsi renommé
    tout simplement 'PHP', dont la signification devint un acronyme récursif -
    PHP: Hypertext Preprocessor.
   </para>
   <para>
    Une des améliorations notables de PHP 3.0 fut ses capacités
    d'extensions. En plus de fournir une infrastructure mature
    pour de multiples bases de données, de multiples protocoles et
    d'APIs, la facilité pour étendre le langage convainquit 
    des dizaines de développeurs, qui ont produit plusieurs modules.
    Ce fût sans aucun doute une des clés de l'énorme succès de PHP 3.0.
    Une autre de ces clés fût l'introduction d'un support de programmation
    orienté objet, ainsi qu'une syntaxe de langage plus puissante et
    plus consistante.
   </para>
   <para>
    En Juin 1998, avec plusieurs nouveaux développeurs de part le monde
    joignant le projet, PHP 3.0 fût annoncé par la nouvelle équipe de
    développement de PHP comme le successeur officiel de PHP/FI 2.0.
    Le développement actif de PHP/FI 2.0, qui avait cessé en réalité
    depuis le mois de Novembre de l'année précédente, était maintenant
    officiellement terminé. Après environ 9 mois de test public, lorsque
    l'annonce de la version officielle de PHP 3.0 fût proclamée, il
    était déjà installé sur plus de 70.000 domaines à travers le monde et
    n'était plus limité aux systèmes POSIX. Une petite partie des domaines
    rapportant une installation de PHP étaient installés sur des serveurs
    fonctionnant sous Windows 95, 98, NT, et Macintosh. À son apogée, PHP
    3.0 était installé sur approximativement 10% des serveurs webs d'Internet.
   </para>
  </sect2>
  <sect2 xml:id="history.php4">
   <title>PHP 4</title>
   <para>
    Durant l'hiver 1998, juste après la publication de PHP 3.0,
    Andi Gutmans et Zeev Suraski commencèrent la réécriture du moteur
    interne de PHP à la base. L'objectif était d'améliorer les performances
    de PHP avec les applications complexes et d'améliorer la modularité du
    code. Ces applications étaient rendues possibles par la syntaxe de PHP 3.0
    mais le logiciel n'était pas conçu pour supporter efficacement ces
    applications.
   </para>
   <para>
    Le nouveau moteur, appelé 'Zend Engine' (combinaison des noms de
    Zeev et Andi), atteint cet objectif avec succès, et la première version
    fut publiée vers la mi-1999. PHP 4.0, s'appuyant sur ce moteur
    et amélioré par un grand nombre de nouvelles fonctionnalités,
    fut publié officiellement en mai 2000, presque 2 ans après son
    prédécesseur. En plus de performances nettement plus élevées,
    PHP 4.0 apportait le support de nombreux serveurs web, les sessions
    HTTP, la bufferisation de sortie, une sécurité accrue des
    informations visiteurs et plusieurs nouvelles structures de
    langage.
   </para>
  </sect2>
  <sect2 xml:id="history.php5">
   <title>PHP 5</title>
   <para>
    PHP 5 est sorti en Juillet 2004 après un long développement et plusieurs
    pré-versions. Il est régi par son moteur, le 
    <literal>Zend Engine 2.0</literal>
    avec un nouveau modèle et des dizaines de nouvelles fonctionnalités.
   </para>
   <para>
    L'équipe de développement de PHP inclut des douzaines de développeurs,
    en plus des douzaines d'autres travaillant sur des projets en relation
    avec PHP, comme PEAR, PECL et la documentation, et un réseau d'infrastructure
    sous-jacent d'une centaine de serveurs web individuels sur 6 des 7 continents
    du monde. En s'appuyant sur une estimation basée sur les statistiques
    de l'année précédente, il est convenable de supposer que PHP est maintenant
    installé sur des centaines, voire des millions de domaines à travers
    le monde.
   </para>
  </sect2>
 </sect1>
 <sect1 xml:id="history.php.related">
  <title>Quelques projets liés à PHP</title>
  <sect2 xml:id="history.pear">
   <title>PEAR</title>
   <para>
    <link xlink:href="&url.php.pear;">PEAR</link>, signifie 
    <literal>PHP Extension and  Application Repository</literal>
    (initialement, PHP Extension and Add-on Repository) et est la première
    version des classes de base en PHP. Elle deviendra à terme le moyen
    privilégié de distribuer des extensions PHP entre développeurs.
   </para>
   <para>
    PEAR a été conçu durant les débats tenus lors des PHP Developers'
    Meeting (PDM) (Rencontres de développeurs PHP), qui ont eu lieu en
    Janvier 2000 à Tel Aviv. Il a été créé à l'initiative de
    Stig S. Bakken, et dédié à sa première fille, Malin Bakken.
   </para>
   <para>
    Depuis l'an 2000, PEAR a grossi jusqu'à devenir un projet significatif
    avec un groupe de développeurs compétents, qui travaillent à mettre en place
    une bibliothèque complète, réutilisable et commune à la communauté PHP
    entière. PEAR inclut une vaste sélection de classes de base pour réaliser
    une couche d'abstraction de bases de données, du cache, des calculs
    mathématiques et des transactions de commerce électronique.
   </para>
   <para>
    Plus d'informations sur PEAR sont disponibles dans
    <link xlink:href="&url.php.pear.manual;">le manuel</link>.
   </para>
  </sect2>
  <sect2 xml:id="history.phpqa">
   <title>Equipe d'assurance Qualité</title>
   <para>
    <link xlink:href="&url.php.prerelease;">L'équipe d'assurance Qualité</link>
    de PHP a été mise en place durant l'été 2000,
    en réponse aux critiques reçues par PHP 3.0, qui n'était pas suffisamment
    testé sur des environnements de production. L'équipe est constituée
    d'un groupe de développeurs de haut niveau, qui ont une bonne connaissance
    des sources PHP. Ces développeurs passent le plus clair de leur temps
    à localiser et supprimer les bogues trouvés dans PHP. De plus, il y a
    bien d'autres membres du groupe PHP qui testent et fournissent un
    compte-rendu fidèle de l'utilisation de PHP sur différentes plate-formes.
   </para>
  </sect2>
  <sect2 xml:id="history.phpgtk">
   <title>PHP-GTK</title>
   <para>
    <link xlink:href="&url.php.gtk;">PHP-GTK</link> est la
    solution PHP pour écrire des applications avec interface, coté client.
    Andrei Zmievski se souvient de la création de PHP-GTK :
   </para>
   <blockquote>
    <para>
     La programmation d'interface GUI a toujours été une passion pour moi,
     et je pensais que Gtk+ était une excellente bibliothèque, hormis le fait
     qu'elle était écrite en C, ce qui était plutôt laborieux.
     Après avoir assisté aux implémentations de PyGtk et GTK-Perl,
     j'ai décidé de  voir si PHP pouvait disposer de sa propre interface
     avec Gtk+, même minimale. J'ai commencé au mois d'août 2000,
     alors que j'avais un peu plus de temps libre, et j'ai réalisé les
     premières expérimentations. Mon guide principal fut l'implémentation de
     PyGtk, qui était plutôt complète et avait une interface orientée
     objet. James Henstridge, l'auteur de PyGtk, fut d'une aide précieuse au
     démarrage du projet.
    </para>
    <para>
     Réécrire toutes les interfaces de Gtk+ à la main était hors de question
     et j'ai pensé à réaliser un générateur de code, exactement comme
     PyGtk l'avait fait. Le générateur de code était un programme PHP qui
     lisait un ensemble de fichiers <filename>.defs</filename>, contenant
     les classes, constantes
     et méthodes Gtk+, puis générait le code d'interface de PHP. Ce qui ne
     pouvait pas être généré automatiquement était traité à la main,
     dans le fichier <filename>.overrides</filename>.
    </para>
    <para>
     Travailler sur le générateur de code et sur l'infrastructure prit
     un peu de temps, car je n'avais pas beaucoup de temps à consacrer
     à PHP-GTK durant l'automne 2000. Après que j'ai montré PHP-GTK à
     Frank Kromann, il s'y intéressa et commença à m'aider sur le générateur
     et l'implémentation Win32. Lorsque nous écrivîmes le premier programme
     'Hello World', ce fut extrêmement excitant. Cela a pris encore
     quelques mois pour avoir une version initiale. Elle fut publiée en
     mars 2001. Cela a encore pris quelques mois pour que le projet soit dans
     une forme présentable. Ce projet fut rapidement présenté sur SlashDot.
    </para>
    <para>
     Anticipant que PHP-GTK serait un projet à part entière, j'ai installé
     des listes de diffusion et un serveur CVS indépendants, de même que
     le site gtk.php.net, avec l'aide de Colin Viebrock. La documentation
     demandait aussi de l'aide, et James Moore vint me porter une aide
     précieuse.
    </para>
    <para>
     Depuis sa publication PHP-GTK a gagné en popularité. Nous avons
     notre propre équipe de documentation, et le manuel s'améliore de
     plus en plus. Des extensions ont été écrites pour PHP-GTK et des
     applications de plus en plus importantes sont conçues.
    </para>
   </blockquote>
  </sect2>
 </sect1>
 <sect1 xml:id="history.php.books">
  <title>Livres traitant de PHP</title>
  <para>
   Comme PHP a évolué, il a été reconnu comme une
   plate-forme de développement populaire. Un des signes qui ne trompent
   pas est que le nombre de livres dédiés à PHP a
   évolué parallèlement.
  </para>
  <para>
   À notre connaissance, le premier livre dédié à
   PHP fut 'PHP - tvorba interaktivních internetových aplikací'
   (<emphasis>PHP - Créé des applications interactives pour Internet</emphasis>)
   - un livre tchèque publié en avril 1999, écrit par Jirka Kosek. Le mois
   suivant parut un livre allemand écrit par Egon Schmid, Christian
   Cartus et Richard Blume. Le premier livre en anglais sur PHP fut
   publié juste après : 'Core PHP Programming' par Leon Atkinson.
   Ces livres se rapportaient à PHP 3.0.
  </para>
  <para>
   Même si ces livres restent uniques dans leur genre, ils
   furent rapidement suivis par un grand nombre d'autres livres,
   de différents éditeurs. Il y a plus de 400 livres en anglais,
   plus de 100 en allemand et plus de 50 en français ou espagnol !
   De plus, on peut maintenant trouver des livres sur PHP dans de
   nombreuses autres langues, comme le coréen, le japonais ou l'hébreu.
  </para>
  <para>
   Ce grand nombre de livres, écrits par
   différents auteurs et publiés par différents
   éditeurs, ainsi que leur disponibilité en différentes langues,
   témoigne clairement du succès planétaire de PHP.
  </para>
 </sect1>
 <sect1 xml:id="history.php.publications">
  <title>Publications sur PHP</title>
  <para>
   À notre connaissance, le premier article consacré à PHP
   dans un magazine papier fut publié dans un magazine français,
   vers la fin 1998 et se rapportait à PHP 3.0. Comme pour les livres, ce
   fut le premier d'une longue série d'articles publiés dans différents
   magazines.
  </para>
  <para>
   Des articles sur PHP ont été publiés dans Dr. Dobbs, Linux Enterprise,
   Linux Magazine et bien d'autres. Il existe même des articles sur la migration 
   d'applications ASP vers PHP sous Windows dans la bibliothèque
   <acronym>MSDN</acronym> de <productname>Microsoft</productname>.
  </para>
 </sect1>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->