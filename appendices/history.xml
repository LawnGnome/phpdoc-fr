<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.25 $ -->
<!-- EN-Revision: 1.25 Maintainer: dams Status: ready -->
<appendix id="history">
 <title>Histoire de &php;</title>
 <para>
  L'évolution de &php; s'est faite en quelques années.
  Devenir l'un des langages les plus importants du web ne fut pas une
  évolution simple. Pour ceux que ça intéresse, voici comment &php; a
  évolué jusqu'à aujourd'hui.
  Les vieilles versions de &php; sont disponibles dans le
  <ulink url="&url.php.museum;">musée &php;</ulink>.
 </para>
 <sect1 id="history.php">
  <title>Histoire de &php;</title>
  <sect2 id="history.phpfi">
   <title>&php;/FI</title>
   <para>
    &php; a pris la suite d'un langage plus ancien, appelé &php;/FI.
    &php;/FI a été créé par Rasmus Lerdorf, en 1995.
    C'était initialement une bibliothèque de scripts Perl, dont il se
    servait pour noter les accès à son CV en ligne. Il donna le nom de
    'Personnal Home Page Tools' à cette bibliothèque. Au fur et à
    mesure qu'il ajoutait de nouvelles fonctionnalités, Rasmus a
    transformé la bibliothèque en une implémentation en C, capable de
    communiquer avec les bases de données, et de créer des
    applications dynamiques et simples pour le web. Rasmus décida alors
    de publier <ulink url="&url.php.release1.0.0;">son code</ulink>, pour
    que tout le monde puisse l'utiliser et en
    profiter. Cela appela aussi aux contributions et aux améliorations du
    code.
   </para>
   <para>
    &php;/FI, qui signifie Personal Home Page / Forms Interpreter,
    (Home Page personnelle, Interpreteur de Formulaires), incluait plusieurs
    fonctionnalités de base que nous connaissons encore aujourd'hui.
    Il avait ces variables qui ressemblent au Perl, un système
    d'interprétation automatique des variables de formulaires, et une
    syntaxe qui s'intègre facilement dans HTML. La syntaxe elle-même
    était similaire à celle du Perl mais beaucoup plus
    limitée. Elle était simple et un peu incohérente.
   </para>
   <para>
    En 1997, &php;/FI 2.0, la seconde version en langage C, avait déjà une 
    audience estimée de plusieurs milliers d'utilisateurs dans le monde, et
    environ 50,000 noms de domaine indiquaient qu'ils avaient installé &php;.
    Cela représentait environ 1% des noms de domaine sur l'Internet. Même si
    le nombre de contributeurs était plutôt élevé, &php; était toujours le
    projet d'un seul homme.
   </para>
   <para>
    &php;/FI 2.0 fut publié officiellement en novembre 1997, après avoir
    passé l'essentiel de sa vie en version bêta. Peu de temps après, une version
    alpha de &php; 3.0 était publiée.
   </para>
  </sect2>
  <sect2 id="history.php3">
   <title>&php; 3</title>
   <para>
    &php; 3.0 fut la première version du langage tel que nous le connaissons
    actuellement. Il fut créé par Andi Gutmans et Zeev
    Suraski en 1997, sous forme de réécriture complète de &php;/FI, lorsqu'ils
    s'aperçurent que &php;/FI était sous-performant pour leur application de
    commerce électronique. Dans un effort de coopération et de compatibilité
    avec les anciennes versions de &php;/FI, Andi, Rasmus et
    Zeev décidèrent de coopérer et d'annoncer &php; 3.0 comme le successeur
    officiel de &php;/FI. Le développement de &php;/FI 2.0 fut complètement
    arrêté.
   </para>
   <para>
    Une des améliorations notables de &php; 3.0 fut ses capacités
    d'extensions. En plus de fournir une solide infrastructure
    aux utilisateurs finaux, des accès à de nombreuses bases
    de données et protocoles, &php; 3.0 proposait une API modulaire,
    qui attira des douzaines de développeurs. Ceux-ci réalisèrent et
    partagèrent de nouvelles extensions. Sans doute, ce fut la clé
    du succès retentissant de &php; 3.0. Les autres améliorations de
    &php; 3.0 furent le support de la syntaxe objet, et une syntaxe de
    langage plus robuste et cohérente.
   </para>
   <para>
    Le nouveau langage fut publié sous un nouveau nom, qui indiquait
    clairement que le projet n'était plus un projet personnel, comme
    l'était &php;/FI 2.0. Il fut nommé '&php;' avec une nouvelle signification :
    '&php;: Hypertext Preprocessor'. C'est un acronyme récursif, c'est-à-dire
    qu'il se définit lui-même. En français, cela donne :
    'Le préprocesseur Hypertexte, c'est &php;'.
   </para>
   <para>
    A la fin de 1998, &php; avait conquis une base de plusieurs dizaines de
    milliers d'utilisateurs, et des centaines de milliers de sites indiquaient
    qu'ils l'utilisaient. Au plus fort de son utilisation, &php; 3.0 était
    installé sur 10% du parc mondial de serveurs web.
   </para>
   <para>
    &php; 3.0 fut officiellement publié en Juin 1998, après 9 mois de tests.
   </para>
  </sect2>
  <sect2 id="history.php4">
   <title>&php; 4</title>
   <para>
    Durant l'hiver 1998, juste après la publication de &php; 3.0,
    Andi Gutmans et Zeev Suraski commencèrent la réécriture du moteur
    interne de &php; à la base. L'objectif était d'améliorer les performances
    de &php; avec les applications complexes et d'améliorer la modularité du
    code. Ces applications étaient rendues possibles par la syntaxe de &php; 3.0
    mais le logiciel n'était pas conçu pour supporter efficacement ces
    applications.
   </para>
   <para>
    Le nouveau moteur, appelé 'Zend Engine' (combinaison des noms de
    Zeev et Andi), atteint ces objectifs avec succès, et la première version
    fut publiée vers la mi-1999. &php; 4.0, s'appuyant sur ce moteur
    et amélioré par un grand nombre de nouvelles fonctionnalités,
    fut publié officiellement en mai 2000, presque 2 ans après son
    prédécesseur. En plus de performances nettement plus élevées,
    &php; 4.0 apportait le support de nombreux serveurs web, les sessions
    HTTP, la bufferisation de sortie, une sécurité accrue des
    informations visiteurs et plusieurs nouvelles structures de
    langage.
   </para>
   <para>
    Actuellement, &php; est utilisé par des centaines de milliers de 
    développeurs, et plusieurs millions de sites web indiquent qu'ils sont
    configurés avec &php;, ce qui représente environ 20% des noms de domaine sur
    Internet.
   </para>
   <para>
    L'équipe de développement de &php; inclut des douzaines de développeurs, et
    d'autres équipes travaillent à des projets liés tels que PEAR ou la
    documentation.
   </para>
  </sect2>
  <sect2 id="history.php5">
   <title>&php; 5</title>
   <para>
    &php; 5 est sorti en Juillet 2004 après un long développement et plusieurs
    pré-versions. Il est régi par son moteur, le 
    <literal>Zend Engine 2.0</literal>
    avec un nouveau modèle et des dizaines de nouvelles fonctionnalités.
    Pour plus d'informations concernant ce moteur, lisez
    <ulink url="&url.zend.future;">cette page web</ulink>.
   </para>
  </sect2>
 </sect1>
 <sect1 id="history.php.related">
  <title>Quelques projets liés à &php;</title>
  <!-- Hope Stig and/or Egon can do this
  <sect2 id="history.phpdoc">
   <title>&php; Documentation Project</title>
   <para>
   </para>
  </sect2>
  -->
  <sect2 id="history.pear">
   <title>PEAR</title>
   <para>
    <ulink url="&url.php.pear;">PEAR</ulink>, signifie 
    '<literal>&php; Extension and  Application Repository</literal>'
    (initialement, &php; Extension and Add-on Repository) et est la première
    version des classes de base en &php;. Elle deviendra à terme le moyen
    privilégié de distribuer des extensions &php; entre développeurs.
   </para>
   <para>
    PEAR a été conçu durant les débats tenus lors des &php; Developers'
    Meeting (PDM) (Rencontres de développeurs &php;), qui ont eu lieu en
    Janvier 2000 à Tel Aviv. Il a été crée à l'initiative de
    Stig S. Bakken, et dédié à sa première fille, Malin Bakken.
   </para>
   <para>
    Depuis l'an 2000, PEAR a grossi jusqu'à devenir un projet significatif
    avec un groupe de développeurs compétents, qui travaillent à mettre en place
    une bibliothèque complète, réutilisable et commune à la communauté &php;
    entière. PEAR inclut une vaste sélection de classes de base pour réaliser
    une couche d'abstraction de bases de données, du cache, des calculs
    mathématiques et des transactions de commerce électronique.
   </para>
   <para>
    Plus d'informations sur PEAR sont disponibles dans
    <ulink url="&url.php.pear.manual;">le manuel</ulink>.
   </para>
  </sect2>
  <sect2 id="history.phpqa">
   <title>Equipe d'assurance Qualité</title>
   <para>
    <ulink url="&url.php.prerelease;">L'équipe d'assurance Qualité</ulink>
    de &php; a été mise en place durant l'été 2000,
    en réponse aux critiques reçues par &php; 3.0, qui n'était pas suffisamment
    testé sur des environnements de production. L'équipe est constituée
    d'un groupe de développeurs de haut niveau, qui ont une bonne connaissance
    des sources &php;. Ces développeurs passent le plus clair de leur temps
    à localiser et supprimer les bogues trouvés dans &php;. De plus, il y a
    bien d'autres membres du groupe &php; qui testent et fournissent un
    compte-rendu fidèle de l'utilisation de &php; sur différentes plate-formes.
   </para>
  </sect2>
  <sect2 id="history.phpgtk">
   <title><literal>PHP-GTK</literal></title>
   <para>
    <ulink url="&url.php.gtk;"><literal>PHP-GTK</literal></ulink> est la
    solution &php; pour écrire des applications avec interface, coté client.
    Andrei Zmievski se souvient de la création de <literal>PHP-GTK</literal> :
   </para>
   <blockquote>
    <para>
     La programmation d'interface GUI a toujours été une passion pour moi,
     et je pensais que Gtk+ était une excellente bibliothèque, hormis le fait
     qu'elle était écrite en C, ce qui était plutôt laborieux.
     Après avoir assisté aux implémentations de PyGtk et GTK-Perl,
     j'ai décidé de  voir si &php; pouvait disposer de sa propre interface
     avec Gtk+, même minimale. J'ai commencé au mois d'août 2000,
     alors que j'avais un peu plus de temps libre, et j'ai réalisé les
     premières expérimentations. Mon guide principal fut l'implémentation de
     PyGtk, qui était plutôt complète et avait une interface orientée
     objet. James Henstridge, l'auteur de PyGtk, fut d'une aide précieuse au
     démarrage du projet.
    </para>
    <para>
     Réécrire toutes les interfaces de Gtk+ à la main était hors de question
     et j'ai pensé à réaliser un générateur de code, exactement comme
     PyGtk l'avait fait. Le générateur de code était un programme &php; qui
     lisait un ensemble de fichiers <filename>.defs</filename>, contenant
     les classes, constantes
     et méthodes Gtk+, puis générait le code d'interface de &php;. Ce qui ne
     pouvait pas être généré automatiquement était traité à la main,
     dans le fichier <filename>.overrides</filename>.
    </para>
    <para>
     Travailler sur le générateur de code et sur l'infrastructure prit
     un peu de temps, car je n'avais pas beaucoup de temps à consacrer
     à &php;-GTK durant l'automne 2000. Après que j'ai montré &php;-GTK à
     Frank Kromann, il s'y intéressa et commença à m'aider sur le générateur
     et l'implémentation Win32. Lorsque nous écrivîmes le premier programme
     'Hello World', ce fut extrêmement excitant. Cela a pris encore
     quelques mois pour avoir une version initiale. Elle fut publiée en
     mars 2001. Cela a encore pris quelques mois pour que le projet soit dans
     une forme présentable. Ce projet fut rapidement présenté sur SlashDot.
    </para>
    <para>
     Anticipant que &php;-GTK serait un projet à part entière, j'ai installé
     des listes de diffusion et un serveur CVS indépendants, de même que
     le site gtk.php.net, avec l'aide de Colin Viebrock. La documentation
     demandait aussi de l'aide, et James Moore vint me porter une aide
     précieuse.
    </para>
    <para>
     Depuis sa publication &php;-GTK a gagné en popularité. Nous avons
     notre propre équipe de documentation, et le manuel s'améliore de
     plus en plus. Des extensions ont été écrites pour &php;-GTK et des
     applications de plus en plus importantes sont conçues.
    </para>
   </blockquote>
  </sect2>
 </sect1>
 <sect1 id="history.php.books">
  <title>Livres traitant de &php;</title>
  <para>
   Comme &php; a évolué, il a été reconnu comme une
   plate-forme de développement populaire. Un des signes qui ne trompent
   pas est que le nombre de livres dédiés à &php; a
   évolué parallèlement.
  </para>
  <para>
   A notre connaissance, le premier livre dédié à
   &php; fut '&php; - tvorba interaktivních internetových aplikací'
   - un livre tchèque publié en avril 1999, écrit par Jirka Kosek. Le mois
   suivant parut un livre allemand écrit par Egon Schmid, Christian
   Cartus et Richard Blume. Le premier livre en anglais sur &php; fut
   publié juste après : 'Core &php; Programming' par Leon Atkinson.
   Ces trois livres se rapportaient à &php; 3.0.
  </para>
  <para>
   Même si ces livres restent uniques dans leur genre, ils
   furent rapidement suivis par un grand nombre d'autres livres,
   de différents éditeurs. Il y a plus de 40 livres en anglais,
   50 en allemand et plus de 20 en français. De plus, on peut maintenant
   trouver des livres sur &php; dans de nombreuses autres langues, comme
   l'espagnol, le coréen, le japonais ou l'hébreu.
  </para>
  <para>
   Ce grand nombre de livres, écrits par
   différents auteurs et publiés par différents
   éditeurs, ainsi que leur disponibilité en différentes langues,
   témoigne clairement du succès planétaire de &php;.
  </para>
 </sect1>
 <sect1 id="history.php.publications">
  <title>Publications sur &php;</title>
  <para>
   A notre connaissance, le premier article consacré à &php;
   dans un magazine papier fut publié dans un magazine français,
   vers la fin 1998 et se rapportait à &php; 3.0. Comme pour les livres, ce
   fut le premier d'une longue série d'articles publiés dans différents
   magazines.
  </para>
  <para>
   Des articles sur &php; ont été publiés dans Dr. Dobbs, Linux Enterprise,
   Linux Magazine et bien d'autres. Il existe même des articles sur la migration 
   d'applications ASP vers &php; sous Windows dans la bibliothèque
   <acronym>MSDN</acronym> de <productname>Microsoft</productname>.
  </para>
 </sect1>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
