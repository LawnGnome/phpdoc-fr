<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.52 $ -->
<!-- EN-Revision: 1.51 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

 <appendix id="migration5">
  <title>Migration de &php; 4 à &php; 5</title>

  <section id="migration5.changes">
   <title>Nouveautés de &php; 5</title>
   <para>
    Les modifications apportées à &php; 5 et au Zend Engine 2
    augmentent considérablement les capacités et les performances de &php;.
    Une attention toute particulière a été apportée à ce que cette nouvelle 
    version soit la plus compatible possible avec les scripts antérieurs.
    Ainsi la migration de votre code de &php; 4 vers &php; 5 devrait être
    aisée. La plupart des scripts &php; 4 devraient être prêts à
    fonctionner sans nécessiter la moindre modification. Il existe
    toutefois <link linkend="migration5.incompatible">quelques 
    différences</link> et vous devriez tester vos codes avant de changer de
    version en production.
   </para>
  </section>
  <section id="migration5.incompatible">
   <title>Incompatibilités avec les version antérieures</title>
   <para>
    Bien que la plupart des scripts &php; 4 existants devraient fonctionner,
    il convient de noter quelques incompatibilités avec les versions
    antérieures de &php; :
   </para>
   <itemizedlist>
    <listitem>
     <simpara>
      Il y a quelques <link linkend="reserved.keywords">nouveaux mots
      réservés</link>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>strrpos</function> et <function>strripos</function> utilisent
      maintenant une chaîne de caractères complète (un seul caractère 
      auparavant) en tant qu'élément de recherche.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      L'utilisation d'index illégaux sur une chaîne de caractères entraîne
      maintenant un message <constant>E_ERROR</constant> au lieu d'un
      message <constant>E_WARNING</constant> auparavant. 
      Voici un exemple incorrect : 
      <literal>$str = 'abc'; unset($str[0]);</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      La fonction <function>array_merge</function> a été modifiée pour 
      n'accepter que des tableaux. Pour chaque variable passée en paramètre
      autre qu'un tableau, un message <constant>E_WARNING</constant> sera
      envoyé. Soyez attentifs car votre script pourrait émettre des
      <constant>E_WARNING</constant> de façon inopinée.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      La variable de serveur PATH_TRANSLATED n'est plus définie implicitement
      avec Apache2 SAPI contrairement à auparavant (&php; 4) où elle était fixée
      avec la même valeur que SCRIPT_FILENAME lorsqu'Apache ne
      la renseignait pas. Cette modification a été apportée afin d'être
      en conformité avec les <ulink
      url="&url.cgispecs;">spécifications CGI</ulink>. Merci de consulter
      le <ulink url="&url.php.bugs;23610">bogue #23610</ulink> pour plus 
      d'informations, ainsi que la description de 
      <link linkend="reserved.variables.server">$_SERVER['PATH_TRANSLATED']</link>
      du manuel. Ce problème affecte également &php; &gt;= 4.3.2.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      La constante <constant>T_ML_CONSTANT</constant> n'est plus
      définie par l'extension <link linkend="ref.tokenizer">Tokenizer</link>.
      Si error_reporting est réglée à <constant>E_ALL</constant>, &php; va 
      générer un avertissement. Bien que <constant>T_ML_CONSTANT</constant>
      n'ait jamais été utilisée, elle était définie dans &php; 4. Avec &php; 4
      et &php; 5, // et /* */ sont assimilés à la constante
      <constant>T_COMMENT</constant>.
      Toutefois les commentaires de style &php;Doc <literal>/** */</literal>,
      qui sont analysés depuis &php; 5, sont reconnus en tant que
      <constant>T_DOC_COMMENT</constant>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <varname>$_SERVER</varname> contient dorénavant
      <varname>argc</varname> et <varname>argv</varname> si votre
      <link linkend="ini.variables-order">variables_order</link> inclus "S". Si
      vous avez configuré votre système pour qu'il ne
      crée pas <varname>$_SERVER</varname>, ils n'existeront bien sûr pas.
      Cette modification a été effectuée afin que <varname>argc</varname> et
      <varname>argv</varname> soient
      toujours accessibles dans la version CLI quelle que soit la valeur de
      <link linkend="ini.variables-order">variables_order</link>. Ainsi, la
      version CLI renseignera dorénavant toujours les variables 
      <varname>$argc</varname> et <varname>$argv</varname>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Un objet sans propriété n'est plus considéré comme vide
      (<function>empty</function>).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Dans certains cas, les classes doivent être déclarées avant d'être
      utilisées. Cela survient uniquement si les nouvelles fonctionnalités de
      &php; 5 (comme les <link linkend="language.oop5.interfaces">interfaces</link>)
      sont utilisées. Sinon, le comportement sera le même qu'avant.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Les fonctions <function>get_class</function>, 
      <function>get_parent_class</function>
      et <function>get_class_methods</function> retournent désormais le nom de 
      la classe comme elle a été déclarée (sensible à la casse), ce qui peut
      causer des problèmes dans vos anciens scripts qui utilisent le
      comportement précédent (le nom de la classe était toujours retourné en
      minuscules). Une solution possible est de rechercher ces fonctions
      dans tous vos anciens scripts et d'utiliser la fonction
      <function>strtolower</function>.
     </simpara>
     <simpara>
      Ces changements de sensibilité à la casse sont également appliqués aux
      <link linkend="language.constants.predefined">constantes magiques
      prédéfinies</link> <constant>__CLASS__</constant>,
      <constant>__METHOD__</constant> et <constant>__FUNCTION__</constant>.
      Les valeurs sont retournées exactement comme elles ont été déclarées
      (sensible à la casse).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      La fonction <function>ip2long</function> retourne maintenant &false;
      lorsqu'une adresse IP invalide est entrée comme argument de la fonction,
      et non plus <literal>-1</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Lorsque des fonctions sont définies dans un fichier inclus, elles peuvent être
      utilisées dans le fichier principal, qu'elles soient définies
      avant ou après l'instruction <function>return</function>. Si le fichier
      est inclus deux fois, &php; 5 émet une erreur fatale car les fonctions sont
      toujours déclarées, tandis que &php; 4 n'a aucun problème avec ça.
      Il est recommandé d'utiliser l'instruction <function>include_once</function>
      au lieu de vérifier si le fichier a déjà été inclus et de retourner,
      conditionnellement, l'inclusion du fichier.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>include_once</function> et <function>require_once</function>
      normalisent d'abord le chemin du fichier à inclure sous Windows. Donc
      inclure le fichier A.php et le fichier a.php revient à n'inclure qu'une
      seule fois ce fichier.
     </simpara>
    </listitem>
   </itemizedlist>
   <para>
    <example>
     <title><function>strrpos</function> et <function>strripos</function> 
     recherchent maintenant une chaîne de caractères dans une autre</title>
     <programlisting role="php">
<![CDATA[
<?php
var_dump(strrpos('ABCDEF','DEF')); //int(3)

var_dump(strrpos('ABCDEF','DAF')); //bool(false)
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    <example>
     <title>
      Un objet sans propriété n'est plus considéré comme vide 
      (<function>empty</function>)
     </title>
     <programlisting role="php">
<![CDATA[
<?php
class test { }
$t = new test();

var_dump(empty($t)); // echo bool(false)

if ($t) {
    // Cette portion de code sera exécutée
}
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    <example>
     <title>
      Dans certains cas, les classes doivent être déclarées 
      avant d'être utilisées
     </title>
     <programlisting role="php">
<![CDATA[
<?php

// fonctionne sans erreur :
$a = new a();
class a {
}


// ici, une erreur :
$a = new b();

interface c{
}
class b implements c {
}

?>
]]>
     </programlisting>
    </example>
   </para>
  </section>
  <section id="migration5.cli-cgi">
   <title>CLI et CGI</title>
   <para>
    &php; 5 introduit des modifications dans les noms des fichiers CLI et CGI.
    Avec &php; 5, la version CGI s'appelle maintenant
    <filename>php-cgi.exe</filename> (auparavant
    <filename>php.exe</filename>) et la version CLI se trouve maintenant dans
    le répertoire principal de &php; (auparavant 
    <filename>cli/php.exe</filename>).
   </para>
   <para>
    Un nouveau mode a également été introduit avec &php; 5 :
    <filename>php-win.exe</filename>. Cette version est équivalente à la version
    CLI sauf qu'elle n'ouvre pas de fenêtre de console DOS au lancement.
    Ce comportement est similaire à celui de php-gtk.
   </para>
   <para>
    Avec &php; 5, la version CLI renseignera toujours les variables
    globales <varname>$argc</varname> et <varname>$argv</varname>
    en accord avec toutes les directvies du &php.ini;. Même si vous avez 
    la directive 
    <link linkend="ini.register-argc-argv">register_argc_argv</link> configurée
    à <literal>Off</literal>, cela n'aura pas d'effet sur la version CLI.
   </para>
   <para>
    Voir aussi la documentation sur 
    <link linkend="features.commandline">la ligne de commande</link>.
   </para>
  </section>
  <section id="migration5.configuration">
   <title>Migration des fichiers de configuration</title>
   <para>
    Les modules ISAPI ayant changé de nom (php4xxx vers php5xxx), il
    est nécessaire de faire quelques modifications dans vos fichiers de
    configuration. Des modifications des noms des versions CLI et CGI ont
    également été faites. Consultez la <link
    linkend="migration5.cli-cgi">section correspondante</link> pour plus
    d'informations.
   </para>
   <para>
    La migration du fichier de configuration Apache est très facile.
    Consultez l'exemple ci-dessous afin de connaître les modifications
    que vous devez faire :
    <example>
     <title>Migration des fichiers de configuration Apache</title>
     <programlisting role="apache-conf">
<![CDATA[
# changez cette ligne :
LoadModule php4_module /php/sapi/php4apache2.dll

# en :
LoadModule php5_module /php/php5apache2.dll
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Si votre serveur web utilise &php; en mode CGI, il vous faut noter que
    la version CGI a changé de nom, passant de <filename>php.exe</filename>
    à <filename>php-cgi.exe</filename>. Voici la modification à faire,
    pour Apache :
    <example>
    <title>Migration des fichiers de configuration Apache, en mode CGI</title>
     <programlisting role="apache-conf">
<![CDATA[
# changez cette ligne :
Action application/x-httpd-php "/php/php.exe"

# en :
Action application/x-httpd-php "/php/php-cgi.exe"
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Si vous utilisez un serveur web autre que Apache, vous devez également
    changer le nom de fichier du module ISAPI ou du CGI.
   </para>
  </section>
  <section id="migration5.functions">
   <title>Nouvelles fonctions</title>
   <para>
    &php; 5 introduit de nouvelles fonctions. En voici la liste :
   </para>
   <para><link linkend="ref.array">Tableaux</link> :</para>
    <itemizedlist>
    <listitem>
     <simpara>
      <function>array_combine</function> : créé un tableau en combinant un 
      tableau pour les clés et un autre pour les valeurs 
      correspondantes.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>array_diff_uassoc</function> : renvoie la différence entre deux
      tableaux avec la possibilité de vérifier les index par l'appel d'une
      fonction utilisateur de callback.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>array_udiff</function> : renvoie la différence entre deux
      tableaux en utilisant une fonction de callback pour la comparaison 
      des valeurs.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>array_udiff_assoc</function> : renvoie la différence entre deux
      tableaux avec la possibilité de vérifier les index. Les valeurs sont, elles,
      comparées grâce à une fonction utilisateur de callback.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>array_udiff_uassoc</function> : renvoie la différence entre deux
      tableaux avec la possibilité de vérifier les index. Les valeurs sont
      comparées grâce à une fonction utilisateur de callback ; les index sont
      également comparés grâce à une (autre) fonction utilisateur de callback.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>array_walk_recursive</function> : applique une fonction
      utilisateur de façon récursive à chaque élément d'un tableau.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>array_uintersect_assoc</function> : calcule l'intersection
      de deux tableaux avec une vérification des index. Les données sont 
      comparées en utilisant une fonction de callback.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>array_uintersect_uassoc</function> : calcule l'intersection
      de deux tableaux avec une vérification des index. Les données et 
      les index sont comparés en utilisant des fonctions de callback.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>array_uintersect</function> : calcule l'intersection de
      deux tableaux.
      Les données sont comparées en utilisant une fonction de callback.
     </simpara>
    </listitem>
   </itemizedlist>

   <para><link linkend="ref.ibase">InterBase</link> : </para>
   <itemizedlist>
    <listitem>
     <simpara>
      <function>ibase_affected_rows</function> : renvoie le nombre de lignes
      modifiées par la requête précédente.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_backup</function> : lance une tâche de sauvegarde dans le
      gestionnaire de services et rend la main immédiatement.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_commit_ret</function> : permet de valider une transaction
      sans avoir à la fermer.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_db_info</function> : renvoie des statistiques sur une
      base de données.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_drop_db</function> : supprime une base de données.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_errcode</function> : renvoie un code d'erreur.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_free_event_handler</function> : annule un gestionnaire
      d'événements enregistré.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_gen_id</function> : incrémente le générateur donné et
      renvoie sa nouvelle valeur.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_maintain_db</function> : exécute une commande de
      maintenance sur le serveur de base de données.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_name_result</function> : assigne un nom à un jeu de
      résultats.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_num_params</function> : renvoie le nombre de paramètres
      d'une requête préparée.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_param_info</function> : renvoie des informations sur un
      paramètre spécifique d'une requête préparée.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_restore</function> : lance une restauration dans le
      gestionnaire de services et rend la main immédiatement.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_rollback_ret</function> : annule la
      transaction et conserve son contexte.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_server_info</function> : renvoie des statistiques sur une
      base de données.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_service_attach</function> : initie une connexion au
      gestionnaire de services.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_service_detach</function> : arrête une connexion au
      gestionnaire de services.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_set_event_handler</function> : permet d'enregistrer
      une fonction de callback appelée lorsque des événements sont postés.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ibase_wait_event</function> : attend qu'un événement
      soit posté par la base de données.
     </simpara>
    </listitem>
   </itemizedlist>

   <para><link linkend="ref.iconv">iconv</link> :</para>
   <itemizedlist>
    <listitem>
     <simpara>
      <function>iconv_mime_decode</function> : décode un champ d'en-tête MIME.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>iconv_mime_decode_headers</function> : décode plusieurs champs
       d'en-tête MIME en une seule fois.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>iconv_mime_encode</function> : crée un champ d'en-tête MIME.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>iconv_strlen</function> : renvoie le nombre de caractères de
      la chaîne.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>iconv_strpos</function> : trouve la position de la première
      occurrence d'une chaîne donnée dans une autre chaîne.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>iconv_strrpos</function> : trouve la position de la dernière
      occurrence dans une chaîne
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>iconv_substr</function> : supprime un morceau de chaîne.
     </simpara>
    </listitem>
   </itemizedlist>

   <para><link linkend="ref.stream">Flux</link> :</para>
   <itemizedlist>
    <listitem>
     <simpara>
      <function>stream_copy_to_stream</function> : copie les données d'un 
      flux vers un autre.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>stream_get_line</function> : récupère une ligne d'un flux donné
      jusqu'au délimiteur fourni.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>stream_socket_accept</function> : accepte une connexion sur un
      socket créé avec<function>stream_socket_server</function>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>stream_socket_client</function> : ouvre une connexion socket 
      sur un domaine Unix ou Internet.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>stream_socket_get_name</function> : récupère le nom des sockets
      locaux ou distants.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>stream_socket_recvfrom</function> : reçoit des données 
      d'un socket, qu'il soit connecté ou non.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>stream_socket_sendto</function> : envoie un message 
      vers un socket, qu'il soit connecté ou non.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>stream_socket_server</function> : créé un socket de domaine 
      Unix ou Internet.
     </simpara>
    </listitem>
   </itemizedlist>
   <para><link linkend="ref.datetime">Date et heure</link> :</para>
   <itemizedlist>
    <listitem>
     <simpara>
      <function>idate</function> : formate une date/heure en tant qu'entier.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>date_sunset</function> : renvoie l'heure du coucher du soleil 
      pour un jour et un endroit donnés.
    </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>date_sunrise</function> : renvoie l'heure du lever du soleil 
      pour un jour et un endroit donnés.
    </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>time_nanosleep</function> : marque une pause exprimée 
      en secondes et nanosecondes.
    </simpara>
    </listitem>
   </itemizedlist>
   <para><link linkend="ref.strings">Chaîne de caractères</link> :</para>
   <itemizedlist>
    <listitem>
     <simpara>
      <function>str_split</function> : convertit une chaîne en tableau.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>strpbrk</function> : recherche dans une chaîne l'un des 
      caractères d'une liste.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>substr_compare</function> : compare deux chaînes depuis un 
      offset jusqu'à une longueur en caractères, d'une façon sécurisée contre
      les données binaires et, optionnellement, insensible à la casse.
     </simpara>
    </listitem>
   </itemizedlist>
   <para>Autres :</para>
   <itemizedlist>
    <listitem>
     <simpara>
      <function>convert_uudecode</function> : décode une chaîne au format 
      <literal>uuencode</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>convert_uuencode</function> : encode une chaîne au format 
      <literal>uuencode</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>curl_copy_handle</function> : copie un descripteur cURL avec
      toutes ses préférences.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>dba_key_split</function> : sépare une clé sous
      forme de chaîne en représentation sous forme de tableau.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>dbase_get_header_info</function> : récupère les informations
      d'en-tête d'une base de données dBase.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>dbx_fetch_row</function> : récupère une ligne à partir d'un
      résultat de requête ayant le marqueur DBX_RESULT_UNBUFFERED.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>fbsql_set_password</function> : change le mot de passe d'un
      utilisateur donné.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>file_put_contents</function> : écrit une chaîne dans un fichier.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ftp_alloc</function> : alloue de l'espace pour un fichier
      à uploader.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>get_declared_interfaces</function> : renvoie un tableau 
      contenant toutes les interfaces déclarées.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>get_headers</function> : renvoie tous les en-têtes envoyés
      par le serveur en réponse à une requête HTTP.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>headers_list</function> : renvoie la liste des en-têtes de
      réponse envoyés (ou prêts à être envoyés).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>http_build_query</function> : renvoie une requête encodée
      sous forme d'URL.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>image_type_to_extension</function> : renvoie l'extension
      de fichier pour le type d'image retourné par <function>getimagesize</function>,
      <function>exif_read_data</function>,
      <function>exif_thumbnail</function>,
      <function>exif_imagetype</function>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imagefilter</function> : applique un filtre sur une image en
      utilisant des arguments spécialisés.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imap_getacl</function> : récupère la valeur de l'ACL pour 
      une boîte aux lettres donnée.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>ldap_sasl_bind</function>: établit une liaison à un répertoire
      LDAP en utilisant SASL.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mb_list_encodings</function> : retourne un tableau contenant 
      tous les encodages supportés.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>pcntl_getpriority</function> : renvoie la priorité d'un
      processus.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>pcntl_wait</function> : attend ou renvoie le statut d'un
      processus enfant comme défini par l'appel système 
      <literal>waitpid()</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>pg_version</function> : renvoie un tableau contenant les
      versions du client, du protocole et du serveur PostGreSQL, si disponibles.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>php_check_syntax</function> : vérifie la syntaxe d'un
      fichier donné.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>php_strip_whitespace</function> : renvoie la source en 
      supprimant les commentaires et les espaces.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>proc_nice</function> : change la priorité du processus courant.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>pspell_config_data_dir</function> : change l'emplacement 
      des fichiers de langues.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>pspell_config_dict_dir</function> : change l'emplacement 
      de la liste principale de mots.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>setrawcookie</function> : envoie un cookie sans encodage url de
      la valeur.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>scandir</function> - Liste les fichiers et les dossiers d'un chemin
      spécifique.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>snmp_read_mib</function> : lit et analyse un fichier MIB dans
      l'arbre actif MIB.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>sqlite_fetch_column_types</function> : renvoie un tableau
      contenant les types des colonnes pour une table spécifiée.
     </simpara>
    </listitem>
   </itemizedlist>
   <note>
    <para>
     L'API de l'extension <link linkend="ref.tidy">Tidy</link> a changé du
     tout au tout.
    </para>
   </note>
  </section>
  <section id="migration5.newconf">
   <title>Nouvelles Directives</title>
   <para>
    De nouvelles directives pour le fichier &php.ini; ont été ajoutées 
    avec &php; 5. En voici une liste :
   </para>
   <itemizedlist>
    <listitem>
     <simpara>
      mail.force_extra_parameters : permet de forcer l'ajout du paramètre
      spécifié en tant que paramètre supplémentaire pour sendmail. Ces
      paramètres prendront la place du cinquième paramètre de la fonction
      <function>mail</function> quoi qu'il arrive, même en safe mode.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <link linkend="ini.register-long-arrays">register_long_arrays</link> :
      permet/interdit à &php; d'utiliser les tableaux
      <varname>$HTTP_*_VARS</varname>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <link linkend="ini.session.hash-function">session.hash_function</link> :
      permet de choisir une fonction de hachage (MD5 ou SHA-1).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <link linkend="ini.session.hash-bits-per-character">session.hash_bits_per_character</link> : 
      permet de définir le nombre de bits utilisés pour chaque caractère lors
      de conversions de données binaires en éléments lisibles (de 4 à 6).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <link linkend="ini.zend.ze1-compatibility-mode">zend.ze1_compatibility_mode</link> :
      active le mode de compatibilité avec le Zend Engine 1 (&php; 4).
     </simpara>
    </listitem>
   </itemizedlist>
  </section>
  <section id="migration5.databases">
   <title>Bases de données</title>
   <para>
    Certaines modifications ont été apportées au support des bases de données
    (MySQL et SQLite).
   </para>
   <para>
    &php; 5 n'intègre pas les bibliothèques clientes MySQL par défaut, entre autres pour des
    raisons de licence. Pour plus d'informations, lisez la
    <link linkend="faq.databases.mysql.php5">FAQ</link>.
   </para>
   <para>
    Il existe également une nouvelle extension, 
    <link linkend="ref.mysqli">MySQLi
    (Improved MySQL)</link>, créée pour fonctionner avec MySQL 4.1 et
    supérieur.
   </para>
   <para>
    À partir de &php; 5, l'extension <link linkend="ref.sqlite">SQLite</link> 
    est intégrée à &php;. SQLite est un moteur de bases de données embarqué, il
    ne s'agit pas simplement d'une bibliothèque cliente permettant de se
    connecter à un serveur de bases de données (comme MySQL ou PostgreSQL). La
    bibliothèque SQLite lit et écrit ses bases de données directement dans des
    fichiers sur le disque.
   </para>
  </section>
  <section id="migration5.oop">
   <title>Nouveau Modèle Objet</title>
   <para>
    &php; 5 inclut un nouveau modèle objet. Le traitement des objets en &php; a 
    complètement été réécrit pour arriver à de meilleures performances et plus
    de fonctionnalités. Dans les versions précédentes de &php;, les objets étaient
    traités comme des types primitifs (par exemple les entiers ou les chaînes de
    caractères). L'inconvénient de cette méthode était que sémantiquement, l'objet
    en entier était copié lorsqu'une variable était assignée ou passée comme
    paramètre à une fonction. Dans la nouvelle approche, les objets sont
    référencés par un pointeur et non pas leur valeur (on peut penser à un
    pointeur en tant qu'identifiant d'objet).
   </para>
   <para>
    Beaucoup de développeurs &php; ne se rendent pas compte des caprices lors
    de la copie dans l'ancien modèle objet et, par conséquent, la majorité des
    applications &php; devrait fonctionner directement ou avec
    très peu de modifications.
   </para>
   <para>
    Le nouveau modèle objet est documenté dans la partie de <link
    linkend="language.oop5">référence du langage</link>.
   </para>
   <para>
    Voir aussi la directive <link linkend="ini.zend.ze1-compatibility-mode">
    zend.ze1_compatibility_mode</link> pour la compatibilité avec &php; 4.
   </para>
  </section>
  <section id="migrating5.errorrep">
   <title>Rapport d'erreurs</title>
   <para>
    En &php; 5, la nouvelle constante de rapport d'erreurs
    <constant>E_STRICT</constant> a été introduite avec comme valeur 2048. Cela
    permet à &php;, lors de l'exécution, de faire des suggestions sur
    l'interopérabilité et le suivi de votre code. Ceci vous permet de toujours
    utiliser les meilleures méthodes de codage et les plus récentes :
    par exemple les messages stricts vous avertiront sur l'utilisation de
    fonctions obsolètes.
   </para>
   <note>
    <simpara>
     <constant>E_ALL</constant> n'inclut pas <constant>E_STRICT</constant>;
     il n'est donc pas activé par défaut.
    </simpara>
   </note>
  </section>
 </appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->