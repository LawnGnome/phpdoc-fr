<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.64 $ -->
<!-- EN-Revision: 1.73 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

 <appendix xml:id="reserved" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Mots réservés en &php;</title>
  <para>
   Cette annexe est une liste d'identifiants prédéfinis en &php;. Aucun
   des identifiants utilisés ici ne doit être repris comme nom de
   variable ou de fonction dans vos scripts. Ces identifiants incluent
   des mots-clés, des constantes, des classes, et des variables
   prédéfinies. Ces listes ne sont pas complètes ou exhaustives.
  </para>

  <sect1 xml:id="reserved.keywords">
   <title>Liste de mots-clés</title>
   <simpara>
    Ces mots ont un sens spécial en &php;. Certains représentent des objets
    qui ressemblent à des fonctions, d'autres à des constantes, et ainsi de
    suite, mais ils n'en sont pas vraiment : ce sont des structures de langage.
    Vous ne pourrez pas les utiliser comme constante, nom de classe, nom de fonctions ou
    nom de méthodes.
    Vous pouvez les utiliser comme nom de variables, mais cela risque d'entrainer
    des confusions.
   </simpara>

   <table>
    <title>Mots réservés en &php;</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <link linkend="language.operators.logical">and</link>
       </entry>
       <entry>
        <link linkend="language.operators.logical">or</link>
       </entry>
       <entry>
        <link linkend="language.operators.logical">xor</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__FILE__</link>
       </entry>
       <entry>
        <link linkend="reserved.classes.php5">exception</link> (&php; 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.constants.predefined">__LINE__</link>
       </entry>
       <entry>
        <function>array</function>
       </entry>
       <entry>
        <link linkend="control-structures.foreach">as</link>
       </entry>
       <entry>
        <link linkend="control-structures.break">break</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">case</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="keyword.class">class</link>
       </entry>
       <entry>
        <link linkend="language.oop5.constants">const</link>
       </entry>
       <entry>
        <link linkend="control-structures.continue">continue</link>
       </entry>
       <entry>
        <link linkend="control-structures.declare">declare</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">default</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>die</function>
       </entry>
       <entry>
        <link linkend="control-structures.do.while">do</link>
       </entry>
       <entry>
        <function>echo</function>
       </entry>
       <entry>
        <link linkend="control-structures.else">else</link>
       </entry>
       <entry>
        <link linkend="control-structures.elseif">elseif</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>empty</function>
       </entry>
       <entry>
        <link linkend="control-structures.declare">enddeclare</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endfor</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endforeach</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endif</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.alternative-syntax">endswitch</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endwhile</link>
       </entry>
       <entry>
        <function>eval</function>
       </entry>
       <entry>
        <function>exit</function>
       </entry>
       <entry>
        <link linkend="keyword.class">extends</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.for">for</link>
       </entry>
       <entry>
        <link linkend="control-structures.foreach">foreach</link>
       </entry>
       <entry>
        <link linkend="functions.user-defined">function</link>
       </entry>
       <entry>
        <link linkend="language.variables.scope">global</link>
       </entry>
       <entry>
        <link linkend="control-structures.if">if</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>include</function>
       </entry>
       <entry>
        <function>include_once</function>
       </entry>
       <entry>
        <function>isset</function>
       </entry>
       <entry>
        <function>list</function>
       </entry>
       <entry>
        <link linkend="keyword.class">new</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>print</function>
       </entry>
       <entry>
        <function>require</function>
       </entry>
       <entry>
        <function>require_once</function>
       </entry>
       <entry>
        <function>return</function>
       </entry>
       <entry>
        <link linkend="language.variables.scope">static</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.switch">switch</link>
       </entry>
       <entry>
        <function>unset</function>
       </entry>
       <entry>
        <link linkend="language.namespaces">use</link>
       </entry>
       <entry>
        <link linkend="keyword.class">var</link>
       </entry>
       <entry>
        <link linkend="control-structures.while">while</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.constants.predefined">__FUNCTION__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__CLASS__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__METHOD__</link>
       </entry>
       <entry>
        <link linkend="language.oop5.final">final</link> (depuis &php; 5)
       </entry>
       <entry>
        <link linkend="reserved.classes.php5">php_user_filter</link> (depuis &php; 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.interfaces">interface</link> (depuis &php; 5)
       </entry>
       <entry>
        <link linkend="language.oop5.interfaces">implements</link> (depuis &php; 5)
       </entry>
       <entry>
        <link linkend="language.operators.type">instanceof</link> (depuis &php; 5)
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">public</link> (depuis &php; 5)
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">private</link> (depuis &php; 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.visibility">protected</link> (depuis &php; 5)
       </entry>
       <entry>
        <link linkend="language.oop5.abstract">abstract</link> (depuis &php; 5)
       </entry>
       <entry>
        <link linkend="language.oop5.cloning">clone</link> (depuis &php; 5)
       </entry>
       <entry>
        <link linkend="language.exceptions">try</link> (depuis &php; 5)
       </entry>
       <entry>
        <link linkend="language.exceptions">catch</link> (depuis &php; 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.exceptions">throw</link> (depuis &php; 5)
       </entry>
       <entry>
        cfunction (&php; 4 uniquement)
       </entry>
       <entry>
        old_function (&php; 4 uniquement)
       </entry>
       <entry>
        <link linkend="keyword.class">this</link> (depuis &php; 5)
       </entry>
       <entry>
        <link linkend="language.oop5.final">final</link> (depuis &php; 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.namespaces">__NAMESPACE__</link> (depuis &php; 5.3)
       </entry>
       <entry>
        <link linkend="language.namespaces">namespace</link> (depuis &php; 5.3)
       </entry>
       <entry>
        goto (&php; 6 uniquement)
       </entry>
       <entry> 
        <link linkend="language.constants.predefined">__DIR__</link> (depuis &php; 5.3)
       </entry>
       <entry>        
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect1>
 
  <sect1 xml:id="reserved.classes">
   <title>Classes prédéfinies</title>
   <para>
    Cette section liste les classes standards prédéfinies. Les autres extensions
    qui définissent d'autres classes sont décrites dans leur référence.
   </para>

   <sect2 xml:id="reserved.classes.standard">
    <title>Classes standards</title>

    <simpara>
     Ces classes sont définies dans le jeu de classe standard
     de &php;, inclus dans toutes les versions de &php;.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>Directory</classname></term>
      <listitem>
       <simpara>
        La classe qui permet d'instancier <link linkend="class.dir">dir</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>stdClass</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>__PHP_Incomplete_Class</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>
   
   <sect2 xml:id="reserved.classes.php5">
    <title>Classes prédéfinies en &php; 5</title>
    
    <simpara>
     Ces classes supplémentaires ont été ajoutées en &php; 5.0.0.
    </simpara>
    
    <variablelist>
     <varlistentry>
      <term><classname>exception</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>php_user_filter</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

  </sect1>

  &appendices.reserved.constants;

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
