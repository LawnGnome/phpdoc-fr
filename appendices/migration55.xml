<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328734 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<!-- Based on UPGRADING version 322438. Work in progess !-->

<appendix xml:id="migration55" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Migration de PHP 5.4.x à PHP 5.5.x</title>
 <simpara>
  &manual.migration.seealso;
  <link linkend="migration5">5.0.x</link>,
  <link linkend="migration51">5.1.x</link>,
  <link linkend="migration52">5.2.x</link>,
  <link linkend="migration53">5.3.x</link> et
  <link linkend="migration53">5.4.x</link>.
 </simpara>

 <sect1 xml:id="migration55.changes">
  <title>Qu'est-ce qui a changé en PHP 5.5.x</title>
  <simpara>
   La plupart des modifications en PHP 5.5.x n'ont aucun impacte sur
   le code existant. Il y a 
   <link linkend="migration55.incompatible">quelques incompatibilités</link>
   ainsi que <link linkend="migration55.new-features">quelques nouvelles
   fonctionalités</link> que vous devez prendre en compte, et votre
   code doit être testé avant de changer de version PHP en environnement
   de production.
  </simpara>
  <simpara>
   Pour les systèmes se mettant à jour depuis une version de PHP encore
   plus ancienne, la documentation correspondante est disponible :
  </simpara>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="migration54">Notes de mise à jour pour PHP 5.4.x</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration53">Notes de mise à jour pour PHP 5.3.x</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration52">Notes de mise à jour pour PHP 5.2.x</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration51">Notes de mise à jour pour PHP 5.1.x</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration5">Migrer de PHP 4 à PHP 5</link>.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 xml:id="migration55.incompatible">
  <title>Modifications apportant une incompatibilité ascendante</title>
  <simpara>
   Malgré le fait que la plupart du code PHP 5 existant devrait fonctionner
   sans aucune modification, vous devez prendre en considération quelques
   incompatibilités ascendantes :
  </simpara>
  
  <sect2 xml:id="migration55.incompatible.windows">
   <title>Suppression du support de Windows XP et 2003</title>
   
   <para>
    Le support de Windows XP et 2003 a été supprimé. Les binaires Windows
    de PHP requièrent maintenant Windows Vista ou supérieur.
   </para>
  </sect2>

  <sect2 xml:id="migration55.incompatible.case">
   <title>Plus d'insensibilité à la casse spécifique à la locale utilisée</title>
   
   <para>
    Les noms des fonctions, des classes, et des constantes sont maintenant
    indépendantes de la locale utilisée, et respectent les règles ASCII.
    Ceci permet une meilleure prise en charge des langues utilisant l'alphabet latin
    avec des règles d'assemblage inhabituelles, comme le truc et l'azerbaïdjan.
   </para>
   <para>
    Ceci peut avoir des impacts sur le code qui utilise l'insensibilité à la casse
    pour les caractères non-ASCII avec les jeux de caractères multi-octets
    (incluant l'UTF-8), comme les caractères accentués pour les langues européennes.
    Si vous avez du code basé sur des langues non-anglaises, et non-ASCII, alors
    vous devriez tester que vous n'êtes pas impacté par ce changement de comportement
    avant de déployer PHP 5.5 en environnement de production.
   </para>
  </sect2>

  <sect2 xml:id="migration55.incompatible.guid">
   <title>Suppression des logos PHP GUIDs</title>

   <para>
    Les GUIDs, qui précédemment afficher divers logos PHP ont été supprimés.
    Ceci inclut la suppression des fonctions qui retournaient ces GUIDs.
    Voici une liste des fonctions supprimées :
   </para>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>php_logo_guid</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>php_egg_logo_guid</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>php_real_logo_guid</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>zend_logo_guid</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="migration55.incompatible.execution">
   <title>Modification dans l'exécution interne</title>

   <para>
    Les auteurs d'extension doivent noter que la fonction
    <command>zend_execute()</command> ne peut plus être surchargée,
    que de nombreux changements ont été effectués sur la structure
    <literal>execute_data</literal> ainsi que les fonctions associées,
    mais aussi sur la méthode de gestion de l'opcode.
   </para>

   <para>
    La plupart des extensions ne sont pas affectées,par ces modifications,
    mais celles qui vont profondément dans le moteur Zend le seront, et
    nous recommandons à leurs auteurs de lire 
    <link linkend="migration55.internals">les notes relatives à ces
     modifications</link>.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.new-features">
  <title>Nouvelles fonctionalités</title>

  <sect2 xml:id="migration55.new-features.generators">
   <title>Ajout des <link linkend="language.generators">générateurs</link></title>

   <para>
    Le support des <link linkend="language.generators">générateurs</link> a été
    ajouté via le mot clé <command>yield</command>. Les générateurs permettent
    d'implémenter simplement des itérateurs sans impact sur le coût ou la
    complexité d'implémenter une classe implémentant l'interface
    <classname>Iterator</classname>.
   </para>

   <para>
    Un exemple simple qui ré-implémente la fonction <function>range</function>
    sous la forme d'un générateur (ou tout du moins, pour les valeurs positives
    de <literal>step</literal>) :
   </para>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function xrange($start, $limit, $step = 1) {
    for ($i = $start; $i <= $limit; $i += $step) {
        yield $i;
    }
}

echo 'Chiffres impaires simplement : ';

/* Notez que le tableau n'est jamais créé, ni retournée
 * ce qui préserve la mémoire */ 
foreach (xrange(1, 9, 2) as $number) {
    echo "$number ";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Chiffres impaires simplement : 1 3 5 7 9 
]]>
    </screen>
   </informalexample>
  </sect2>

  <sect2 xml:id="migration55.new-features.finally">
   <title>Ajout du mot clé <link linkend="language.exceptions"><literal>finally</literal></link></title>

   <para>
    Les blocs <literal>try</literal>-<literal>catch</literal> supporte désormais un bloc
    <link linkend="language.exceptions"><literal>finally</literal></link>
    pour le code qui doit être exécuté suivant si une exception a été lancée ou non.
   </para>
  </sect2>

  <sect2 xml:id="migration55.new-features.foreach-list">
   <title><link linkend="control-structures.foreach"><literal>foreach</literal></link> supporte maintenant <function>list</function></title>

   <para>
    La structure de contrôle <link linkend="control-structures.foreach">foreach</link>
    supporte désormais les tableaux imbriqués dans des variables séparées via la
    structure <function>list</function>. Par exemple :
   </para>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$array = [
    [1, 2],
    [3, 4],
];

foreach ($array as list($a, $b)) {
    echo "A: $a; B: $b\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
A: 1; B: 2
A: 3; B: 4
]]>
    </screen>
   </informalexample>

   <para>
    La documentation complète est disponible sur la page du manuel consacrée à
    <link linkend="control-structures.foreach.list">foreach</link>.
   </para>
  </sect2>

  <sect2 xml:id="migration55.new-features.empty">
   <title><function>empty</function> supporte les expressions arbitraires</title>

   <para>
    Passer une expression arbitraire au lieu d'une variable à la fonction
    <function>empty</function> est maintenant supporté. Par exemple :
   </para>

   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function always_false() {
    return false;
}

if (empty(always_false())) {
    echo 'Ceci sera affiché.';
}

if (empty(true)) {
    echo 'Ceci ne sera pas affiché.';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
This will be printed.
]]>
    </screen>
   </informalexample>
  </sect2>

  <sect2 xml:id="migration55.new-features.const-dereferencing">
   <title>Déréférencement litéral des <type>array</type> et <type>string</type></title>

   <para>
    Les valeurs litérales des <type>Array</type> et <type>string</type>
    peuvent maintenant être déréférencées directement pour accéder aux éléments et
    caractères individuels :

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
echo 'Déréférencement d'un tableau : ';
echo [1, 2, 3][0];
echo "\n";

echo 'Déréférencement d'une chaîne de caractères : ';
echo 'PHP'[0];
echo "\n";
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
Déréférencement d'un tableau : 1
Déréférencement d'une chaîne de caractères : P
]]>
     </screen>
    </informalexample>
   </para>
  </sect2>

  <sect2 xml:id="migration55.new-features.password">
   <title>Nouvelle API d'hachage de mot de passe</title>

   <para>
    Une <link linkend="book.password">nouvelle API de hachage de mot de passe</link>,
    rendant plus simple de sécuriser le hachage et gérer les mots de passe,
    en utilisant une bibliothèque sous-jacente identique à celle utilisée par
    la fonction <function>crypt</function> a été ajoutée à PHP. Voir la
    documentation sur la fonction <function>password_hash</function> pour plus
    de détails.
   </para>
  </sect2>

  <sect2 xml:id="migration55.new-features.windows-apache">
   <title>Le gestionnaire Apache 2.4 est maintenant supporté sous Windows</title>

   <para>
    Le gestionnaire SAPI Apache 2.4 est maintenant supporté sous Windows.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.deprecated">
  <title>Fonctionalités devenues obsolètes en PHP 5.5.x</title>

  <sect2 xml:id="migration55.deprecated.mysql">
   <title>Obsoléscence dans l'extension <link linkend="book.mysql">ext/mysql</link></title>

   <para>
    L'<link linkend="book.mysql">extension MySQL original</link> est maintenant
    obsolète, et génèrera des alertes de niveau <constant>E_DEPRECATED</constant>
    lors de la connexion à la base de données. A la place, utilisez
    l'extension <link linkend="book.mysqli">MySQLi</link> ou l'extension
    <link linkend="ref.pdo-mysql">PDO_MySQL</link>.
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.deprecated.preg-replace-e">
   <title>Le modificateur <literal>/e</literal> de la fonction <function>preg_replace</function></title>

   <para>
    Le modificateur <literal>/e</literal> de la fonction
    <function>preg_replace</function>  est maintenant obsolète. A la place, utilisez
    la fonction <function>preg_replace_callback</function>.
   </para>
  </sect2>

  <sect2 xml:id="migration55.deprecated.intl">
   <title>Obsoléscence dans l'extension <link linkend="book.intl">intl</link></title>

   <para>
    La méthode <methodname>IntlDateFormatter::setTimeZoneID</methodname> et la fonction
    <function>datefmt_set_timezone_id</function> deviennent obsolètes.
    Utilisez à la place, respectivement, la méthode <methodname>IntlDateFormatter::setTimeZone</methodname>
    et la fonction <function>datefmt_set_timezone</function>.
   </para>
  </sect2>

  <sect2 xml:id="migration55.deprecated.mcrypt">
   <title>Obsoléscence dans l'extension <link linkend="book.mcrypt">mcrypt</link></title>

   <simpara>
    Les fonctions suivantes deviennent obsolètes :
   </simpara>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>mcrypt_cbc</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mcrypt_cfb</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mcrypt_ecb</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mcrypt_ofb</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.changed-functions">
  <title>Fonctions modifiées</title>

  <sect2 xml:id="migration55.changed-functions.core">
   <title>PHP Core</title>

   <itemizedlist>
    <listitem>
     <simpara>
      La fonction <function>set_error_handler</function> peut désormais être appelée
      avec &null; comme argument pour réinitialiser le gestionnaire d'erreur.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Lorsqu'appelée avec &null;, la fonction <function>set_error_handler</function> et
      la fonction <function>set_exception_handler</function> retournent désormais la
      précédente erreur ou la précédente exception, respectivement.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Les fonctions <function>pack</function> et <function>unpack</function>
      supporte désormais le format <literal>Z</literal> pour les chaînes complètes nulles.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Le format <literal>a</literal> de la fonction <function>unpack</function>
      ne supprime pas le dernier octet nul, s'allignant ainsi sur le comportement de Perl.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Le format <literal>A</literal> de la fonction <function>unpack</function>
      va désormais supprimer tous les espaces ASCII de fin, s'allignant ainsi sur le
      comportement de Perl.
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="migration55.changed-functions.intl">
   <title><link linkend="book.intl">intl</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      La méthode <methodname>MessageFormatter::format</methodname> ainsi que les
      fonctions associées acceptent maintenant les arguments nommés en plus
      des arguments numériques, lorsque PHP est lié à ICU 4.8 ou supérieur.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      La méthode <methodname>MessageFormatter::format</methodname> ainsi que les
      fonctions associées ne produisent plus d'erreur lorsque le nombre d'arguments
      fournis n'est pas suffisant. Au lieu de cela, les marqueurs ne seront pas
      substitués.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Les méthodes <methodname>MessageFormatter::format</methodname> et
      <methodname>MessageFormatter::parse</methodname> ne sont plus limitées à
      la seconde précision lors de l'utilisation de durées.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      La méthode <methodname>IntlDateFormatter::__construct</methodname> et la fonction
      <function>datefmt_create</function> acceptent maintenant les objets
      <classname>IntlTimeZone</classname> et <classname>DateTimeZone</classname> pour l'argument
      pour l'argument <parameter>calendar</parameter>. De plus, si le fuseau horaire
      est omis, et que le paramètre <parameter>calendar</parameter> ne spécifie pas
      une durée temporelle, le fuseau horaire par défaut de PHP, issue de la directive
      <function>date_default_timezone_get</function> sera alors utilisé
      au lieu du fuseau horaire par défaut d'ICU.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      La méthode <methodname>IntlDateFormatter::getCalendar</methodname> et la fonction
      <function>datefmt_get_calendar</function> retournent &false; si l'objet
      <classname>IntlDateFormatter</classname> a été créé avec une instance
      <classname>IntlCalendar</classname> au lieu d'une constante
      <classname>IntlDateFormatter</classname>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      La méthode <methodname>IntlDateFormatter::setCalendar</methodname> et la fonction
      <function>datefmt_set_calendar</function> acceptent désormais des objets
      <classname>IntlCalendar</classname> en plus des constantes
      <classname>IntlDateFormatter</classname>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      La méthode <methodname>IntlDateFormatter::format</methodname> et la fonction
      <function>datefmt_format</function> acceptent désormais les objets
      <classname>IntlCalendar</classname>.
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.new-functions">
  <title>Nouvelles fonctions</title>

  <sect2 xml:id="migration55.new-functions.core">
   <title>Coeur de PHP</title>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>boolval</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_get_info</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_hash</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_needs_rehash</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_verify</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="migration55.new-functions.hash">
   <title><link linkend="book.hash">Hash</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>hash_pbkdf2</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.new-functions.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>datefmt_format_object</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_get_calendar_object</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_get_timezone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_set_timezone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_get_calendar_object</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_create_instance</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_keyword_values_for_locale</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_now</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_available_locales</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_add</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_after</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_before</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_roll</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_clear</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_field_difference</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_actual_maximum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_actual_minimum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_day_of_week_type</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_first_day_of_week</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_greatest_minimum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_least_maximum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_locale</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_maximum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_minimal_days_in_first_week</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_minimum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_type</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_weekend_transition</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_in_daylight_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_equivalent_to</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_lenient</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_set</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_weekend</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_first_day_of_week</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_lenient</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_equals</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_repeated_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_skipped_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_repeated_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_skipped_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_from_date_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_to_date_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_error_code</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_error_message</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_create_instance</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_set_gregorian_change</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_get_gregorian_change</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_is_leap_year</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_default</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_id</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_gmt</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_unknown</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_enumeration</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_count_equivalent_ids</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_time_zone_id_enumeration</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_canonical_id</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_region</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_tz_data_version</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_equivalent_id</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_use_daylight_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_offset</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_raw_offset</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_has_same_rules</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_display_name</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_dst_savings</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_from_date_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_to_date_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_error_code</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_error_message</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 xml:id="migration55.new-features.spl">
   <title><link linkend="book.spl">SPL</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <methodname>SplFixedArray::__wakeup</methodname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.classes">
  <title>Nouvelles classes et interfaces</title>

  <sect2 xml:id="migration55.classes.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <classname>IntlCalendar</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlGregorianCalendar</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlTimeZone</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlBreakIterator</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlRuleBasedBreakIterator</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlCodePointBreakIterator</classname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.new-methods">
  <title>Nouvelles méthodes</title>

  <sect2 xml:id="migration55.new-methods.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <itemizedlist>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::formatObject</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::getCalendarObject</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::getTimeZone</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::setTimeZone</methodname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.extensions-other">
  <title>Autres modifications dans les extensions</title>

  <sect2 xml:id="migration55.extensions-other.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <para>
    L'extension <link linkend="book.intl">intl</link> requière désormais ICU 4.0
    ou supérieur.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.global-constants">
  <title>Nouvelles constantes globales</title>

  <sect2 xml:id="migration55.global-constants.mysqli">
   <title><link linkend="book.mysqli">MySQLi</link></title>

   <para>
    L'option <constant>MYSQLI_SERVER_PUBLIC_KEY</constant> a été ajoutée pour une
    utilisation avec la fonction <function>mysqli_options</function>.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.ini">
  <title>Modification dans la gestion des fichiers INI</title>

  <sect2 xml:id="migrations55.ini.intl">
   <title><link linkend="book.intl">Intl</link></title>

   <para>
    La directive de configuration <literal>intl.use_exceptions</literal> a été ajoutée,
    laquelle contrôle le comportement d'intl lorsque les erreurs globales surviennent,
    en conjonction avec la directive de configuration existante <literal>intl.error_level</literal>.
   </para>
  </sect2>

  <sect2 xml:id="migration55.ini.mysqlnd">
   <title><link linkend="book.mysqlnd">MySQLnd</link></title>

   <para>
    La directive de configuration <literal>mysqlnd.sha256_server_public_key</literal>
    a été ajoutée pour permettre à <link linkend="book.mysqli">mysqli</link> d'utiliser
    le nouveau protocole d'authentification MySQL.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="migration55.internals">
  <title>Modifications internes à PHP</title>

  <itemizedlist>
   <listitem>
    <simpara>
     Les extensions ne peuvent plus surcharger <command>zend_execute()</command>
     et doivent maintenant surcharger <command>zend_execute_ex()</command> à la place.
     <literal>EG(current_execute_data)</literal> est déjà initialisé dans
     <command>zend_execute_ex()</command>, aussi, pour rester compatible, les extensions
     doivent utiliser <literal>EG(current_execute_data)-&gt;prev_execute_data</literal>
     à la place.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Suppression de <literal>EG(arg_types_stack)</literal>,
     <literal>EX(fbc)</literal>, <literal>EX(called_scope)</literal> et
     <literal>EX(current_object)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Ajout de <literal>op_array-&gt;nested_calls</literal>, qui est calculé
     au moment de la compilation.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Ajout de <literal>EX(call_slots)</literal>, qui est un tableau permettant
     de stocker les informations sur les appels imbriqués (i.e.
     <literal>foo(bar())</literal>) et est pré-alloué avec
     <literal>execute_data</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Ajout de <literal>EX(call)</literal>, qui est un pointeur vers la fonction
     appelante courante, et est un élément de <literal>EX(call_slots)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Les opcodes
     <link linkend="internals2.opcodes.init-method-call">INIT_METHOD_CALL</link>,
     <link linkend="internals2.opcodes.init-static-method-call">ZEND_INIT_STATIC_METHOD_CALL</link>,
     <link linkend="internals2.opcodes.init-fcall-by-name">ZEND_INIT_FCALL_BY_NAME</link>
     et
     <link linkend="internals2.opcodes.init-ns-fcall-by-name">ZEND_INIT_NS_FCALL_BY_NAME</link>
     utilisent <literal>result.num</literal> comme index dans
     <literal>EX(call_slots)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     L'opcode <link linkend="internals2.opcodes.new">ZEND_NEW</link> utilise
     <literal>extended_value</literal> comme index dans
     <literal>EX(call_slots)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Les opcodes <link linkend="internals2.opcodes.do-fcall">ZEND_DO_FCALL</link>
     et
     <link linkend="internals2.opcodes.do-fcall-by-name">ZEND_DO_FCALL_BY_NAME</link>
     utilisent <literal>op2.num</literal> comme index dans
     <literal>EX(call_slots)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Ajout de <literal>op_array-&gt;used_stack</literal>, qui est calculé au moment
     de la compilation ; l'espace de la pile correspondant est pré-alloué avec
     <literal>execute_data</literal>. Comme résultat, les opcodes ZEND_SEND* et
     ZEND_DO_FCALL* n'ont plus besoin de vérifier les éventuels dépassements de pile.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Suppression du champ <literal>execute_data-&gt;Ts</literal>.Les variables temporaires
     VM sont toujours allouées immédiatement avant la structure
     <literal>execute_data</literal>, et peuvent être maintenant accédées par leur
     position depuis le pointeur de base <literal>execute_data</literal> au lieu
     d'utiliser <literal>execute_data-&gt;Ts</literal>. Le compilateur stocke les
     nouvelles positions dans <literal>op_array-&gt;opcodes[*].op?.num</literal>.
     Les macros <command>EX_TMP_VAR()</command> et <command>EX_TMP_VAR_NUM()</command>
     peuvent être utilisées pour accéder aux variables temporaires par leur position
     ou leur numéro. Vous pouvez convertir le numéro en position en utilisant
     <command>EX_TMP_VAR_NUM(0,num)</command> ou la position en numéro en utilisant
     <command>(EX_TMP_VAR_NUM(0,0)-EX_TMP_VAR(0,offset))</command>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Suppression du champ <literal>execute_data-&gt;CVs</literal>.
     Les variables VM compilées sont toujours allouées immédiatement
     après la structure <literal>execute_data</literal>, et peuvent être maintenant
     accédées par leur position depuis le pointeur de base
     <literal>execute_data</literal> au lieu d'utiliser
     <literal>execute_data-&gt;CVs</literal>. Vous pouvez utiliser la macro
     <command>EX_CV_NUM()</command> pour accéder aux variables par leur
     numéro.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
