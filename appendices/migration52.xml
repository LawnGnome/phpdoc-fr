<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.24 Maintainer: yannick Status: ready -->

<appendix xml:id="migration52" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Passer de &php; 5.1.x à &php; 5.2.x</title>

 <section xml:id="migration52.changes">
  <title>Ce qui a changé en &php; 5.2.x</title>
  <para>
   La majorité des améliorations de &php; 5.2.x n'a aucun impact sur le code
   existant. Il y a <link linkend="migration52.incompatible">quelques incompatibilités</link>
   et de <link linkend="migration52.error-messages">nouveaux messages d'erreur</link>
   qui doivent être pris en compte, et le code doit être testé avant de changer
   la version des serveurs en production.
  </para>
  <para>
   Si la version de &php; en production est .0.x, la section
   <link linkend="migration51">Notes de mise à jour pour &php; 5.1.x</link>
   doit être lue également.
  </para>
  <para>
   Similairement, si la version d'origine est une version 4, la section
   <link linkend="migration5">Migration de &php; 4 à &php; 5</link>
   doit être lue.
  </para>
 </section>

 <section xml:id="migration52.incompatible">
  <title>Changements incompatibles avec les versions précédentes</title>
  <para>
   Même si la majorité du code &php; 5 devrait marcher sans modification,
   il est recommandé de surveiller les points suivants, qui introduisent
   des incompatibilités avec les versions précédentes.
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     La fonction <function>getrusage</function> retourne &null; quand on lui passe
     des arguments incorrects depuis &php; 5.2.1.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.ziparchive-setCommentName"><function>ZipArchive::setCommentName</function></link>
     retourne &true; en cas de succès depuis &php; 5.2.1.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.ziparchive-setcommentindex"><function>ZipArchive::setCommentIndex</function></link>
     retourne &true; en cas de succès depuis &php; 5.2.1.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>SplFileObject::getFilename</function> retourne
     le nom du fichier, et non plus le chemin relatif jusqu'au fichier,
     depuis &php; 5.2.1.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Changement de priorité de la constante d'environnement <constant>PHPRC</constant>
     sur Windows 32.
    </simpara>
    <simpara>
     La variable d'environnement PHPRC a priorité sur la valeur
     enregistrée dans la base de registre Windows.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     CLI SAPI ne cherche plus dans cwd le fichier &php.ini; ni le fichier
     <filename>php-cli.ini</filename>
    </simpara>
    <simpara>
     En &php; 5.1.x, une fonctionnalité non-documentée a été ajoutée à la version CLI de &php;, pour
     recherche dans le dossier courant un fichier de configuration &php;, menant à des comportements
     inattendus, si des fichiers inopinés étaient trouvés. Cette fonctionnalité a été supprimée
     en &php; 5.2.0, et &php; ne cherche plus dans le dossier de travail courant le fichier
     &php.ini; ni le fichier <filename>php-cli.ini</filename>. Voyez aussi la section sur la
     <link linkend="features.commandline">ligne de commande</link> du manuel.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Ajout d'une alerte lors de calcul de modulo 0
    </simpara>
    <simpara>
     Dans les versions précédentes de &php;, effectuer un calcul de modulo 0
     ne donnait aucun message d'alerte, mais retourne la valeur inattendue &false;.
     Depuis &php; 5.2.0, cette tentative conduit à l'émission d'un alerte de type
     <constant>E_WARNING</constant>, comme lorsque des divisions par zéro sont effectuées.
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
print 10 % 0;
/* Warning:  Division by zero in filename on line n */
?>
]]>
     </programlisting>
    </informalexample>
   </listitem>
   <listitem>
    <simpara>
     Désormais, <function>__toString</function> est appelé à chaque fois que c'est possible.
    </simpara>
    <simpara>
     La méthode magique <function>__toString</function> est maintenant appelée dans tout
     contexte de chaîne, c'est à dire à chaque fois qu'un objet est utilisé comme chaîne
     de caractères.
    </simpara>
    <simpara>
     Le comportement par défaut qui retournait une chaîne représentant l'identifiant de
     l'objet a été abandonné en &php; 5.2.0. Il était devenu problématique, car un identifiant
     d'objet ne peut pas être considéré comme unique. Ce changement implique que votre
     application est erronée si elle utilise les identifiants d'objets comme valeur de
     retour. Une tentative d'utilisation de cette valeur comme chaîne de caractères
     produit maintenant une erreur fatale.
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
class foo {}
$foo = new foo;
print $foo;
/* Erreur fatable interceptable : les objets de classe foo ne peuvent
   pas être convertis en chaîne, dans le fichier x */
?>
]]>
     </programlisting>
    </informalexample>
    <simpara>
     Même avec <function>__toString</function>, les objets ne peuvent pas être utilisés
     comme des tableaux, avec des index ou des clés. Nous envisageons d'ajouter un support
     natif de hachage ultérieurement, mais pour les versions 5.2.x, vous devrez
     fournir votre propre système, ou bien utiliser la nouvelle fonction SPL
     <function>spl_object_hash</function>.
    </simpara>
    <simpara>
     <function>__toString</function> ne peut pas émettre d'exception.
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
class foo {
    public function __toString() {
        throw new Exception;
    }
}

try {
    print new foo;
    /* Fatal error:  Method foo::__toString() must
       not throw an exception in filename on line n */
} catch(Exception $e) {}
?>
]]>
     </programlisting>
    </informalexample>
   </listitem>
   <listitem>
    <simpara>
     Abandon des fonctions de classes statiques et abstraites.
    </simpara>
    <simpara>
     A cause d'une inattention, &php; 5.0.x et 5.1.x permettaient les méthodes statiques
     abstraites dans les classes. Depuis &php; 5.2.x, seules les interfaces peuvent en avoir.
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
abstract class foo {
    abstract static function bar();
    /* Strict Standards:  Static function foo::bar()
       should not be abstract in filename on line n */
}
?>
]]>
     </programlisting>
    </informalexample>
   </listitem>
   <listitem>
    <simpara>
     Ajout du support de la RFC2397 (flux <literal>data:</literal>).
    </simpara>
    <simpara>
     L'introduction du flux de type 'data' peut conduire à un changement de comportement
     sous Windows. Si vous travaillez avec un système de fichiers <acronym>NTFS</acronym>
     et que vous utilisez vos propres meta-flux dans vos applications, et que vous 
     avez déjà baptisé l'un des fichiers du nom de 'data:', accessible dans aucune
     information de chemin, sachez qu'il ne fonctionnera plus. Le correctif est d'utiliser
     le protocole 'file:' pour y accéder.
    </simpara>
    <simpara>
     Voyez aussi la <link xlink:href="&url.rfc;2397">RFC 2397</link> 
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
/* lorsque allow_url_include vaut OFF (valeur par défaut) */
include "data:;base64,PD9waHAgcGhwaW5mbygpOz8+";
/* Warning:  include(): URL file-access is disabled
   in the server configuration in filename on line n */
?>
]]>
     </programlisting>
    </informalexample>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.error-messages">
  <title>Nouveaux messages d'erreurs</title>
  <para>
   Trouvez ci-dessous les nouveaux messages d'erreurs qui n'ont pas encore été abordés
   dans ce document.
  </para>
  <para>
   <example>
    <title>Dans le coeur de &php;</title>
    <programlisting role="php">
<![CDATA[
<?php
echo " ";
session_regenerate_id();
/*  Warning:  session_regenerate_id(): Cannot regenerate
    session id - headers already sent in filename on line n */

str_word_count("string", 4);
/* Warning:  str_word_count(): Invalid format value 4
   in filename on line n */

strripos("foo", "f", 4);
/* Notice:  strripos(): Offset is greater than the
   length of haystack string in filename on line n */

strrpos("foo", "f", 4);
/* Notice:  strrpos(): Offset is greater than the
   length of haystack string in filename on line n */

/* As of PHP 5.2.1, when allow_url_include is OFF (default) */
include "php://input";
/* Warning:  include(): URL file-access is disabled
   in the server configuration in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Dans le coeur <link linkend="language.oop5">orienté objet</link> de &php;</title>
    <programlisting role="php">
<![CDATA[
<?php
interface foo {
}
class bar implements foo, foo {
}
/* Fatal error: Class bar cannot implement previously
   implemented interface foo in filename on line n */


class foo {
    public $bar;
    function __get($var)
    {
        return $this->bar;
    }
}

$foo = new foo;
$bar =& $foo->prop;
/* Notice: Indirect modification of overloaded property
   foo::$prop has no effect in filename on line n */


class foo implements iterator {
    public function current() {
    }
    public function next() {
    }
    public function key() {
    }
    public function valid() {
    }
    public function rewind() {
    }
}

$foo = new foo();
foreach($foo as &$ref) {}
/* Fatal error: An iterator cannot be used with foreach
   by reference in filename on line n */


class foo {
    private function __construct() {
    }
}
class bar extends foo {
    public function __construct() {
        parent::__construct();
        /* Fatal error:  Cannot call private
           foo::__construct() in filename on line n */
    }
}
new bar;


stream_filter_register("", "class");
/* Warning:  stream_filter_register(): Filter name
   cannot be empty in filename on line n */


stream_filter_register("filter", "");
/* Warning:  stream_filter_register(): Class name
   cannot be empty in filename on line n */
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Dans l'extension <link linkend="ref.bzip2">bzip2</link></title>
    <programlisting role="php">
<![CDATA[
<?php
bzopen("", "w");
/* Warning:  bzopen(): filename cannot be empty
   in filename on line n */

bzopen("foo", "a");
/* Warning:  bzopen(): 'a' is not a valid mode for
   bzopen(). Only 'w' and 'r' are supported in
   filename on line n */

$fp = fopen("foo", "w");
bzopen($fp, "r");
/* Warning:  bzopen(): cannot read from a stream
   opened in write only mode in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Dans l'extension <link linkend="ref.datetime">datetime</link></title>
    <programlisting role="php">
<![CDATA[
<?php
strtotime("today", "now");
/* Warning:  strtotime() expects parameter 2 to be
   long, string given in filename on line n */

/* As of PHP 5.2.1 */
new DateTime(new stdclass);
/* Fatal error: Uncaught exception 'Exception' with
   message 'DateTime::__construct() expects parameter
   1 to be string, object given' in filename:n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Dans l'extension <link linkend="ref.dbase">dBase</link></title>
    <programlisting role="php">
<![CDATA[
<?php
dbase_open("foo", -1);
/* Warning: Invalid access mode -1 in filename on line n */

/* As of PHP 5.2.1 */
dbase_open("foo", null);
/* Warning: The filename cannot be empty in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Dans l'extension <link linkend="ref.mcrypt">mcrypt</link></title>
    <programlisting role="php">
<![CDATA[
<?php
$key = "this is a secret key";
$td = mcrypt_module_open('tripledes', '', 'ecb', '');
$iv = mcrypt_create_iv (mcrypt_enc_get_iv_size($td),
                        MCRYPT_RAND);
mcrypt_generic_init($td, $key, $iv);
$encrypted_data = mcrypt_generic($td, "");
/* Warning: mcrypt_generic(): An empty string was
   passed in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Dans l'extension <link linkend="ref.oci8">oci8</link></title>
    <programlisting role="php">
<![CDATA[
<?php
oci_connect("user", "pass", "db", "bogus_charset");
/* Warning: Invalid character set name:
   bogus_charset in filename on line n */

$oci = oci_connect("user", "pass", "db");
oci_password_change($oci, "", "old", "new");
/* Warning: username cannot be empty in filename
   on line n */

oci_password_change($oci, "user", "", "new");
/* Warning: old password cannot be empty in filename
   on line n */

oci_password_change($oci, "user", "old", "");
/* Warning: new password cannot be empty in filename
   on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Dans l'extension <link linkend="ref.spl">SPL</link></title>
    <programlisting role="php">
<![CDATA[
<?php
$obj = new SplFileObject(__FILE__);
$obj->fgetcsv("foo");
/* Warning:  SplFileObject::fgetcsv(): delimiter must
   be a character in filename on line n */

$obj->fgetcsv(",", "foo");
/* Warning:  SplFileObject::fgetcsv(): enclosure must
   be a character in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Dans l'extension <link linkend="ref.sem">Semaphore</link> (sysvmsg)</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Warning:  maximum size of the message has to be
   greater then zero in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Un exemple en &php; 5.2.1+ de <link linkend="ref.zip">Zip</link></title>
    <programlisting role="php">
<![CDATA[
<?php
$obj = new ZipArchive();
$obj->open('archive.zip');
$obj->setCommentName('', 'comment');
/* Notice:  ZipArchive::setCommentName(): Empty string
   as entry name in filename on line n */

/* As of PHP 5.2.1 */
$obj->getCommentName('');
/* Notice:  ZipArchive::getCommentName(): Empty string
   as entry name in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
 </section>

 <section xml:id="migration52.datetime">
  <title>Modification dans le support &php; de <link linkend="ref.datetime">datetime</link></title>

  <para>
   Depuis &php; 5.1.0, il existe une extension <literal>date</literal> dans le coeur de &php;.
   C'est une nouvelle implémentation du support des dates et heures en &php;. Même
   si &php; tente de deviner le fuseau horaire tout seul, il est recommandé de le configurer
   manuellement. Vous pouvez le faire de trois manières :
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     dans votre fichier &php.ini; avec la directive
     <link linkend="ini.date.timezone">date.timezone</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     dans votre système, avec la variable d'environnement <constant>TZ</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     dans le script, en utilisant la fonction
     <link linkend="function.date-default-timezone-get"><function>date_default_timezone_set</function></link>
    </simpara>
   </listitem>
  </itemizedlist>
  <para>
   Tous les <link linkend="timezones">fuseaux horaires</link> supportés sont listés dans le
   manuel &php;.
  </para>
  <para>
   Avec l'arrivée de &php; 5.2.x, il y a une représentation objet des
   dates et fuseaux horaires, qui portent respectivement le nom anglais de
   DateTime et DateTimeZone. Les méthodes associées sont directement reliées à leurs
   cousines procédurales.
  </para>
 </section>

 <section xml:id="migration52.parameters">
  <title>Nouveaux paramètres</title>
  <para>
   Certaines fonctions ont reçu de nouveaux paramètres optionnels en &php; 5.2.x :
  </para>

  <para>Coeur de &php; :</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>htmlentities</function>
     - ajout du paramètre <parameter>double_encode</parameter> en &php; 5.2.3.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>htmlspecialchars</function>
     - ajout du paramètre <parameter>double_encode</parameter> en &php; 5.2.3.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>base64_decode</function>
     - ajout du paramètre <parameter>strict</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>setcookie</function>
     - ajout du paramètre <parameter>httponly</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>setrawcookie</function>
     - ajout du paramètre <parameter>httponly</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>session_set_cookie_params</function>
     - ajout du paramètre <parameter>httponly</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>memory_get_usage</function>
     - ajout du paramètre <parameter>real_usage</parameter>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.curl">curl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>curl_multi_info_read</function>
     - ajout du paramètre <parameter>msgs_in_queue</parameter>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.datetime">datetime</link></para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>date</function>
     - ajout du caractère de format "u" (millisecondes) en &php; 5.2.2
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.imap">imap</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>imap_open</function>
     - ajout du paramètre <parameter>n_retries</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>imap_reopen</function>
     - ajout du paramètre <parameter>n_retries</parameter>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.mbstring">mbstring</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>mb_strrpos</function>
     - ajout du paramètre <parameter>offset</parameter>
    </simpara>
    <warning>
     <simpara>
      Le paramètre <parameter>offset</parameter> a été ajouté à la place
      du paramètre <parameter>encoding</parameter>. La compatibilité ascendante a été
      assurée en permettant au paramètre <parameter>encoding</parameter> d'être précisé comme
      troisième paramètre. L'utilisation du mode de compatibilité n'est pas recommandé,
      car il sera supprimé dans une version ultérieure.
     </simpara>
    </warning>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.ming">ming</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="function.swfmovie.streammp3"><function>swfmovie::streamMP3</function></link>
     - ajout du paramètre <parameter>skip</parameter> en &php; 5.2.1
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.openssl">openssl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>openssl_verify</function>
     - ajout du paramètre <parameter>signature_algo</parameter>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.pgsql">pgsql</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>pg_escape_bytea</function>
     - ajout du paramètre <parameter>connection</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>pg_escape_string</function>
     - ajout du paramètre <parameter>connection</parameter>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.simplexml">simplexml</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="function.simplexml-element-construct"><function>SimpleXMLElement::__construct</function></link>
     - ajout du paramètre <parameter>is_prefix</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.simplexml-element-attributes"><function>SimpleXMLElement::attributes</function></link>
     - ajout du paramètre <parameter>is_prefix</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.simplexml-element-children"><function>SimpleXMLElement::children</function></link>
     - ajout du paramètre <parameter>is_prefix</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>simplexml_load_file</function>
     - ajout du paramètre <parameter>is_prefix</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>simplexml_load_string</function>
     - ajout du paramètre <parameter>is_prefix</parameter>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.spl">spl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     array iterator_to_array(Traversable it [, bool use_keys = true])
     - ajout du paramètre <parameter>use_keys</parameter> en &php; 5.2.1
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.xmlreader">xmlreader</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="function.xmlreader-open"><function>XMLReader::open</function></link>
     - ajout du paramètre <parameter>encoding</parameter>
     et <parameter>options</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.xmlreader-xml"><function>XMLReader::XML</function></link>
     - ajout du paramètre <parameter>encoding</parameter>
     et du paramètre <parameter>options</parameter>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.xmlwriter">XMLWriter</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="function.xmlwriter-write-element"><function>XMLWriter::WriteElement</function></link>
     - le paramètre <parameter>content</parameter> est devenu optionnel en &php; 5.2.3
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.xmlwriter-write-element-ns"><function>XMLWriter::WriteElementNs</function></link>
     - le paramètre <parameter>content</parameter> est devenu optionnel en &php; 5.2.3
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.functions">
  <title>Nouvelles fonctions</title>
  <para>
   &php; 5.2.x présente de nouvelles fonctions :
  </para>

  <para>Coeur de &php; :</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>array_fill_keys</function>
     - Crée un tableau en utilisant les éléments du premier argument comme clé,
     et ceux du second argument comme valeur associée.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>error_get_last</function>
     - Lit la dernière erreur, sous forme de tableau associatif. Retourne &null;
     s'il n'y a pas encore eu d'erreur.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>image_type_to_extension</function>
     - Retourne l'extension du type d'image fournit par getimagesize,
     exif_read_data, exif_thumbnail, exif_imagetype
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>memory_get_peak_usage</function>
     - Retourne le maximum de mémoire consommé par &php;
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>sys_get_temp_dir</function>
     - Retourne le dossier utilisé pour les fichier temporaire (ajouté en &php; 5.2.1).
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>timezone_abbreviations_list</function>
     - Retourne un tableau associatif contenant l'heure d'été, le décalage et le fuseau horaire.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>timezone_identifiers_list</function>
     - Retourne un tableau numérique avec tous les identifiants de fuseau.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>timezone_name_from_abbr</function>
     - Retourne l'abréviation du fuseau.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>stream_socket_shutdown</function>
     - Force la fermeture de toute ou partie d'une socket full-duplex (ajouté en &php; 5.2.1).
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.image">Image</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>imagegrabscreen</function>
     - Prend une capture de tout l'écran. Depuis &php; 5.2.2.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>imagegrabwindow</function>
     - Capture une image d'une fenêtre. Depuis &php; 5.2.2.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.mbstring">mbstring</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>mb_list_encodings_alias_names</function>
     - Retourne un tableau avec tous les encodages supportés.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_list_mime_names</function>
     - Retourne un tableau ou une chaîne avec tous les types MIME supportés
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_stripos</function>
     - Trouve la position de la première occurrence d'une chaîne dans une autre,
     sans tenir compte de la casse.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_stristr</function>
     - Trouve la première occurrence d'une chaîne dans une autre, sans tenir compte de la
     casse.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_strrchr</function>
     - Trouve la dernière occurrence d'un caractère dans une chaîne.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_strrichr</function>
     - Trouve la dernière occurrence d'un caractère dans une chaîne, sans tenir compte de la casse.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_strripos</function>
     - Trouve la position de la dernière occurrence d'une chaîne dans une autre,
     sans tenir compte de la casse.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_strstr</function>
     - Trouve la première occurrence d'une chaîne dans une autre.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.ming">ming</link> (depuis &php; 5.2.1):</para>
  <itemizedlist>
   <listitem>
    <simpara>
     void ming_setSWFCompression(int num)
     - Configure la compression de sortie.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void swfmovie::namedanchor(string name)
     - Crée une ancre.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void swfmovie::protect([string pasword])
     - Protège par mot de passe.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.openssl">openssl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>openssl_csr_get_public_key</function>
     - Extrait la clé publique d'un CERT et prépare son utilisation.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>openssl_csr_get_subject</function>
     - Retourne le sujet du CERT.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>openssl_pkey_get_details</function>
     - Retourne un tableau avec les détails sur la clé (bits, pkey, type).
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.spl">spl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>spl_object_hash</function>
     - Retourne un identifiant hash d'un objet.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int iterator_apply(Traversable it, mixed function [, mixed params])
     - Appelle une fonction pour chaque élément d'un itérateur.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.pcre">pcre</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>preg_last_error</function>
     - Retourne le code d'erreur de la dernière expression rationnelle.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.pgsql">pgsql</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>pg_field_table</function>
     - Retourne le nom de la table auquel appartient le fichier, ou bien l'oid du
     tableau si oid_only est vrai.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.posix">posix</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>posix_initgroups</function>
     - calcule la liste d'accès de groupe pour un utilisateur.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.gmp">gmp</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>gmp_nextprime</function>
     - Recherche le prochain nombre premier.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.xmlwriter">xmlwriter</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>xmlwriter_full_end_element</function>
     - Ferme l'élément courant. Retourne &false; en cas d'erreur.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_write_raw</function>
     - Écrit le texte. Retourne &false; en cas d'erreur.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_start_dtd_entity</function>
     - Crée une entité DTD. Retourne &false; en cas d'erreur.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_end_dtd_entity</function>
     - Ferme une entité DTD Entity. Retourne &false; en cas d'erreur.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_write_dtd_entity</function>
     - Écrit une balise DTD complète. Retourne &false; en cas d'erreur.
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.methods">
  <title>Nouvelles méthodes</title>
  <para>
   De nouvelles méthodes on été introduites en &php; 5.2.0 :
  </para>

  <para><link linkend="ref.dom">dom</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="function.dom-domdocument-registernodeclass"><function>DOMDocument::registerNodeClass</function></link>
     - Enregistre une classe étendue pour créer un noeud de base.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.dom-domelement-setidattribute"><function>DOMElement::setIDAttribute</function></link>
     - Déclare l'attribut identifié par son nom, de type ID.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.dom-domelement-setidattributenode"><function>DOMElement::setIDAttributeNode</function></link>
     - Déclare l'attribut identifié par son noeud, de type ID.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="function.dom-domelement-setidattributens"><function>DOMElement::setIDAttributeNS</function></link>
     - Déclare l'attribut identifié par son nom local, de type ID.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     DOMNode::C14N([bool exclusive [, bool with_comments [, array xpath [, array ns_prefixes]]]])
     - Canonise les noeuds dans une chaîne.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     DOMNode::C14NFile(string uri [, bool exclusive [, bool with_comments [, array xpath [, array ns_prefixes]]]])
     - Canonise les noeuds dans un fichier.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     DOMNode::getNodePath()
     - Obtient un xpath pour un noeud.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.soap">soap</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     SoapServer::setObject(object obj)
     - Configure un objet pour gérer les requêtes SOAP.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.spl">spl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     int ArrayObject::asort(void)
     - Trie les éléments par valeur.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int ArrayObject::ksort(void)
     - Trie les éléments par clé.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int ArrayObject::natcasesort(void)
     - Trie les entrées par clé, en utilisant le tri naturel insensible à la casse.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int ArrayObject::natsort(void)
     - Trie les éléments par valeur, en utilisant un algorithme naturel.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int ArrayObject::uasort(callback cmp_function)
     - Trie les éléments par valeur, avec une fonction utilisateur.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int ArrayObject::uksort(callback cmp_function)
     - Trie les éléments par clé, avec une fonction utilisateur.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     ArrayIterator AppendIterator::getArrayIterator()
     - Donne accès à ArrayIterator interne.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int AppendIterator::getIteratorIndex()
     - Lit l'index de l'itérateur.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     bool CachingIterator::getCache()
     - Retourne le cache.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int CachingIterator::getFlags()
     - Retourne les options internes.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     bool CachingIterator::offsetExists(mixed index)
     - Indique si l'index demandé existe.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     string CachingIterator::offsetGet(mixed index)
     - Retourne le cache interne s'il est utilisé.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void CachingIterator::offsetSet(mixed index, mixed newval)
     - Spécifie l'index donné dans le cache.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void CachingIterator::offsetUnset(mixed index)
     - Supprime l'index donné du cache.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void CachingIterator::setFlags()
     - Configure les options internes.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     array("delimiter" =>, "enclosure" =>) SplFileObject::getCsvControl(void)
     - Retourne les délimiteurs et séparateurs utilisés par fgetcsv.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void SplFileObject::setCsvControl([string delimiter = ',' [, string enclosure = '"']])
     - Configure les délimiteurs et séparateurs utilisés par fgetcsv.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.tidy">Tidy</link></para>
  <itemizedlist>
   <listitem>
    <simpara>
     tidyNode <link linkend="function.tidynode-getparent">tidyNode::getParent(void)</link>
     - Retourne le noeud parent du noeud courant (ajoutée en &php; 5.2.2).
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.xmlreader">XMLReader</link></para>
  <itemizedlist>
   <listitem>
    <simpara>
     boolean XMLReader::setSchema(string filename)
     - Utilise le schéma W3C XSD pour valider le document tel qu'il est traité.
     L'activation n'est possible qu'avant la première lecture avec Read().
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.zip">zip</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="function.ziparchive-addemptydir">ZipArchive::addEmptyDir()</link>
     - Crée un dossier vide dans une archive.
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.removed-extensions">
  <title>Extensions supprimées</title>
  <para>
   Ces extensions ont été rangées dans PECL et ne font plus partie de
   la distribution de &php;. Les paquets PECL de ces extensions seront
   créés sur demande.
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ref.filepro">filePro</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ref.hwapi">Hyperwave API</link>
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.new-extensions">
  <title>Nouvelles extensions</title>
  <para>
   Les extensions suivantes ont été ajoutées à la distribution standard de &php;, depuis &php; 5.2.1 :
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ref.filter">Filter</link>
     - valide et filtre les données. Cette extension est conçue pour être utilisée avec
     des données utilisateurs entrantes. Cette extension est activée par défaut ; le
     mode par défaut est RAW (brut), et n'a aucun impact sur les données.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ref.json">JSON</link>
     - implémente le format d'échange de données JavaScript Object Notation (JSON).
     Cette extension est activée par défaut.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ref.zip">Zip</link>
     - permet l'utilisation transparente des fichiers d'archives compressées ZIP.
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.classes">
  <title>New Classes</title>
  <para>
   Les classes suivantes ont été introduites en &php; 5.2.0 :
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ref.datetime">DateTime</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ref.datetime">DateTimeZone</link>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     RegexIterator, étend FilterIterator ; implémente Iterator,
     Traversable, OuterIterator
    </simpara>
    <simpara>
     Constantes :
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       <constant>RegexIterator::ALL_MATCHES</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::GET_MATCH</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::MATCH</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::REPLACE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::SPLIT</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::USE_KEY</constant>
      </simpara>
     </listitem>
    </itemizedlist>
    <simpara>
     Propriétés :
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       public <property>replacement</property>
      </simpara>
     </listitem>
    </itemizedlist>
    <simpara>
     Méthodes:
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       RegexIterator::__construct(Iterator it, string regex [, int mode [, int flags [, int preg_flags]]])
       - Crée un RegexIterator à partir d'un autre itérateur et une expression rationnelle.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::accept()
       - Applique l'expression rationnelle à (string) current().
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::getFlags()
       - Retourne les options de l'opération courante.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::getMode()
       - Retourne le mode d'opération courant.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::getPregFlags()
       - Retourne les options PREG courantes (si elles sont utilisées, sinon &null;).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::setFlags(int new_flags)
       - Configure les options d'opération.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::setMode(int new_mode)
       - Configure le nouveau mode d'opération.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::setPregFlags(int new_flags)
       - Configure les options PREG.
      </simpara>
     </listitem>
    </itemizedlist>
   </listitem>

   <listitem>
    <simpara>
     RecursiveRegexIterator
    </simpara>
    <simpara>
     Constantes :
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::ALL_MATCHES</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::GET_MATCH</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::MATCH</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::REPLACE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::SPLIT</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::USE_KEY</constant>
      </simpara>
     </listitem>
    </itemizedlist>
    <simpara>
     Méthodes :
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       RecursiveRegexIterator::__construct(RecursiveIterator it, string regex [, int mode [, int flags [, int preg_flags]]])
       - Crée un RecursiveRegexIterator à partir d'un autre itérateur récursif, et d'une
       expression rationnelle.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       RecursiveRegexIterator RecursiveRegexIterator::getChildren()
       - Retourne le fils interne d'un itérateur contenu dans RecursiveRegexIterator.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RecursiveRegexIterator::hasChildren()
       - Vérifie si l'itérateur interne a un fils.
      </simpara>
     </listitem>
    </itemizedlist>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.global-constants">
  <title>Nouvelles constantes globales</title>

  <para>Coeur de &php; :</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>M_EULER</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>M_LNPI</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>M_SQRT3</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>M_SQRTPI</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PATHINFO_FILENAME</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_BACKTRACK_LIMIT_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_BAD_UTF8_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_INTERNAL_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_NO_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_RECURSION_LIMIT_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>UPLOAD_ERR_EXTENSION</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>STREAM_SHUT_RD</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>STREAM_SHUT_WR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>STREAM_SHUT_RDWR</constant>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.curl">curl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>CURLE_FILESIZE_EXCEEDED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLE_FTP_SSL_FAILED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLE_LDAP_INVALID_URL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPAUTH_DEFAULT</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPAUTH_SSL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPAUTH_TLS</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPSSL_ALL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPSSL_CONTROL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPSSL_NONE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPSSL_TRY</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_FTP_SSL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_FTPSSLAUTH</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_TCP_NODELAY</constant>
    </simpara>
    <simpara>
     Ajoutée en &php; 5.2.1.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_TIMEOUT_MS</constant>
    </simpara>
    <simpara>
     Ajoutée en &php; 5.2.3
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_CONNECTTIMEOUT_MS</constant>
    </simpara>
    <simpara>
     Ajoutée en &php; 5.2.3
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.gmp">GMP</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>GMP_VERSION</constant>
    </simpara>
    <simpara>
     Ajoutée en &php; 5.2.2.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.ming">ming</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>SWFTEXTFIELD_USEFONT</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWFTEXTFIELD_AUTOSIZE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_NOT_COMPRESSED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_ADPCM_COMPRESSED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_MP3_COMPRESSED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_NOT_COMPRESSED_LE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_NELLY_COMPRESSED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_5KHZ</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_11KHZ</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_22KHZ</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_44KHZ</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_8BITS</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_16BITS</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_MONO</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_STEREO</constant>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.openssl">openssl</link> :</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>OPENSSL_VERSION_NUMBER</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>OPENSSL_VERSION_TEXT</constant>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.snmp">snmp</link> :</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>SNMP_OID_OUTPUT_FULL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SNMP_OID_OUTPUT_NUMERIC</constant>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.sem">Semaphore</link> :</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>MSG_EAGAIN</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>MSG_ENOMSG</constant>
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.class-constants">
  <title>Nouvelles constantes de classe</title>

  <para><link linkend="ref.pdo">pdo</link> :</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>PDO::ATTR_DEFAULT_FETCH_MODE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PDO::FETCH_PROPS_LATE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PDO::FETCH_KEY_PAIR</constant>
    </simpara>
    <simpara>
     Lit un résultat de deux colonnes dans un tableau associatif. (Ajouté en &php; 5.2.3)
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.spl">spl</link> :</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>CachingIterator::FULL_CACHE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CachingIterator::TOSTRING_USE_INNER</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SplFileObject::READ_AHEAD</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SplFileObject::READ_CSV</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SplFileObject::SKIP_EMPTY</constant>
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.newconf">
  <title>Nouvelles directives INI</title>
  <para>
   Les nouvelles directives &php.ini; introduites en &php; 5.2.0 :
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ini.allow-url-include">allow_url_include</link>
    </simpara>
    <simpara>
     Cette option pratique permet de faire la différence entre les opérations
     de fichiers et les inclusions de code. Alors que les premiers sont souvent
     utiles, les seconds sont des risques de sécurité, lorsqu'ils sont autorisés
     naïvement. Depuis &php; 5.2.0, vous pouvez autoriser les opérations sur les
     fichiers distants, mais interdire les inclusions de fichiers locaux. En fait,
     c'est la configuration par défaut.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ini.pcre.backtrack-limit">pcre.backtrack_limit</link>
    </simpara>
    <simpara>
     Limitation du suivi de PCRE.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ini.pcre.recursion-limit">pcre.recursion_limit</link>
    </simpara>
    <simpara>
     Limite de récursion de PCRE. Notez que si vous donnez à cette directive une
     valeur trop grande, vous pouvez consommer toute la pile d'exécution, et
     planter &php; (due à une limite de pile imposée par le système d'exploitation).
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ini.session.cookie-httponly">session.cookie_httponly</link>
    </simpara>
    <simpara>
     Configure le cookie comme n'étant accessible que par protocole HTTP. Cela signifie
     que le cookie ne peut pas être accessible par des langages comme JavaScript.
     Cette configuration peut aider à prévenir le vol de cookie via des attaques
     XSS (même si tous les navigateurs ne la supportent pas encore).
    </simpara>
   </listitem>
  </itemizedlist>
  <para>
   Nouvelles directives de &php; 5.2.2 :
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ini.max-input-nesting-level">max_input_nesting_level</link>
    </simpara>
    <simpara>
     Limite le nombre de dimensions autorisées pour les
     <link linkend="language.variables.external">variables d'entrées</link>
     à plusieurs dimensions.
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.errorrep">
  <title>Rapports d'erreur</title>
  <para>
   Certaines des conditions <constant>E_ERROR</constant> ont été converties en
   erreurs qui peuvent être interceptées par un gestionnaire d'erreur local. Si
   <link linkend="errorfunc.constants"><constant>E_RECOVERABLE_ERROR</constant></link>
   n'est pas géré, il sera géré de la même manière que
   <constant>E_ERROR</constant> dans les autres versions de &php;. Les erreurs
   de ce type sont identifiées comme <literal>Catchable fatal error</literal>.
  </para>
  <para>
   Cette modification signifie que la valeur de la constante <constant>E_ALL</constant>
   <link linkend="ini.error-reporting">error_reporting</link> est maintenant de
   6143, alors qu'elle était de 2047 auparavant. Commme les constantes &php; n'ont pas
   de signification hors de &php;, il arrive que la valeur entière soit utilisée
   à la place de la constante, et il faudra alors modifier ces valeurs. Par exemple,
   configurer le rapport d'erreur dans le fichier
   <link linkend="apache.configuration">httpd.conf</link> ou dans les fichiers
   <filename>.htaccess</filename> doit se faire maintenant avec la valeur 6143.
   Cela s'applique aussi aux valeurs numériques utilisées directement dans les scripts.
  </para>
  <para>
   Un effet secondaire de la modification faite pour éviter les messages récurrents
   avec <link linkend="ini.track-errors">track_errors</link> à
   <literal>On</literal>, est qu'il est désormais nécessaire de retourner &false; depuis
   le gestionnaire d'erreur pour remplir la variable
   <link linkend="reserved.variables.phperrormsg">$php_errormsg</link>. Cela fournit
   un contrôle fin sur les messages stockés.
  </para>
 </section>

 <section xml:id="migration52.other">
  <title>Améliorations</title>
  <itemizedlist>
   <listitem>
    <simpara>
     Amélioration du gestionnaire de mémoire, et augmentation du niveau de mémoire
     par défaut.
    </simpara>
    <simpara>
     Le nouveau gestionnaire de mémoire consomme moins de mémoire et travaille plus
     vite que sa version précédente. Il demande de la mémoire au système par gros
     bloc, puis gère son stocke lui-même. La valeur de memory_limit dans &php.ini; est
     vérifiée non plus pour chaque appel à emalloc() mais pour chaque allocation de
     bloc. Cela signifie que memory_limit est bien plus précis qu'avant, car le vieux
     gestionnaire de mémoire ne calculait pas toute la mémoire consommée par les
     allocations.
    </simpara>
    <simpara>
     Grâce à cette nouvelle précision, la quantité de mémoire semble avoir augmenté,
     mais ce n'est pas le cas. Pour s'adapter à cette augmentation artificielle,
     la directive memory_limit a été augmentée de 8 à 16 Mo.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Ajout du support des constructeurs dans les interfaces, pour forcer la signature
     des constructeurs via les interfaces.
    </simpara>
    <simpara>
     Depuis &php; 5.2.0, les interfaces peuvent contenir des constructeurs. Toutefois, si vous
     choisissez de déclarer un constructeur dans une interface, cette interface DOIT
     inclure un constructeur avec une signature qui correspond à l'interface de base. Par
     signature, nous signifions les paramètres et les types retournés, incluant les
     types de paramètres, et leur passage par référence ou par valeur.
    </simpara>
   </listitem>
  </itemizedlist>
 </section>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->