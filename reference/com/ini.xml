<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->
<section id="com.configuration">
 &reftitle.runtime;
 &extension.runtime;
 <para>
 <table>
  &ini.table.title;
  <tgroup cols="4">
   <thead>
    &ini.table.top;
   </thead>
   <tbody>
    <row>
     <entry>com.allow_dcom</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Disponible depuis &php; 4.0.5.</entry>
    </row>
    <row>
     <entry>com.autoregister_typelib</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>PHP_INI_SYSTEM en &php; 4. Disponible depuis &php; 4.1.0.</entry>
    </row>
    <row>
     <entry>com.autoregister_verbose</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>PHP_INI_SYSTEM en &php; 4. Disponible depuis &php; 4.1.0.</entry>
    </row>
    <row>
     <entry>com.autoregister_casesensitive</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>PHP_INI_SYSTEM en &php; 4. Disponible depuis &php; 4.1.0.</entry>
    </row>
    <row>
     <entry>com.code_page</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible depuis &php; 5.0.0.</entry>
    </row>
    <row>
     <entry>com.typelib_file</entry>
     <entry>""</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Disponible depuis &php; 4.0.5.</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 &ini.php.constants;
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry id="ini.com.allow-dcom">
    <term>
     <parameter>com.allow_dcom</parameter>
    </term>
    <listitem>
    <para>
     Si cette directive est activée, &php; aura la permission d'opérer comme
     un client D-COM (Distributed COM) et permettra à &php; d'instancier des
     objets COM sur un serveur distant.
    </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.com.autoregister-typelib">
    <term>
     <parameter>com.autoregister_typelib</parameter>
    </term>
    <listitem>
    <para>
     Si cette directive est activée, &php; essayera de déclarer des constantes
     provenant de la bibliothèque typelibrary des objets qu'il instancie, si ces 
     objets implémentent l'interface demandée pour obtenir les données demandées.
     La sensibilité des constantes à la casse est contrôlée par la directive
     de configuration <xref
     linkend="ini.com.autoregister-casesensitive"/>.
    </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.com.autoregister-verbose">
    <term>
     <parameter>com.autoregister_verbose</parameter>
    </term>
    <listitem>
    <para>
     Quand cette directive est activée, tout problème rencontré lors 
     du chargement d'une typelibrary durant l'instanciation de l'objet
     sera reportée en utilisant le mécanisme d'erreurs de &php;. Par
     défaut, elle est désactivée, ce qui ne donne aucune indication sur
     l'échec de l'opération lors d'une recherche ou d'un chargement de
     la bibliothèque de type.
    </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.com.autoregister-casesensitive">
    <term>
     <parameter>com.autoregister_casesensitive</parameter>
    </term>
    <listitem>
    <para>
     Cette directive est activée par défaut et fait que les constantes
     trouvées dans les bibliothèques de types seront enregistrées en mode 
     sensible à la casse. Voyez <function>com_load_typelib</function> 
     pour plus de détails.
    </para>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.com.code-page">
    <term>
     <parameter>com.code_page</parameter>
    </term>
    <listitem>
    <para>
     Cette directive permet de spécifier le code-page des jeux de caractères à
     utiliser lors de l'envoi et la réception de chaînes vers des objets COM.
     Si elle est vide, &php; pensera que vous voulez <constant>CP_ACP</constant>,
     qui est le code page système ANSI par défaut.
    </para>
    <para>
     Si le texte dans vos scripts est encodé avec un différent encodage ou jeu
     de caractères par défaut, configurer cette directive vous évitera d'avoir
     à passer tout votre code comme paramètre du constructeur de la classe <xref
     linkend="class.com"/>. Notez qu'en utilisant cette directive (comme toute
     configuration de &php;), votre code &php; perd en portabilité. Vous devez
     utiliser le paramètre du constructeur à chaque fois que possible.
    </para>
    <note>
     <simpara>
      Cette directive a été introduite en &php; 5.
     </simpara>
    </note>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.com.typelib-file">
    <term>
     <parameter>com.typelib_file</parameter>
    </term>
    <listitem>
    <para>
     Lorsqu'elle est configurée, cette directive doit être le chemin vers un
     fichier qui contient une liste de bibliothèques à charger au démarrage.
     Chaque ligne sera interprétée comme le nom de la bibliothèque de types et
     chargée comme si vous aviez utilisé <function>com_load_typelib</function>.
     Les constantes seront enregistrée de façon persistante, pour que la bibliothèque
     ne soit chargée qu'une seule fois. Si le nom d'une bibliothèque de types
     se termine par <literal>#cis</literal> ou <literal>#case_insensitive</literal>,
     alors les constantes de cette bibliothèque de types sera enregistrée en mode
     insensible à la casse.
    </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

