<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.com-print-typeinfo" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>com_print_typeinfo</refname>
  <refpurpose>Affiche une définition de classe PHP pour une interface répartissable</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>com_print_typeinfo</methodname>
   <methodparam><type>object</type><parameter>comobject</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>dispinterface</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>wantsink</parameter></methodparam>
  </methodsynopsis>
  <para>
   Aide à générer un squelette de classe pour l'utiliser comme évier
   d'événement. Vous pouvez également l'utiliser pour générer une
   sauvegarde de n'importe quel objet COM, à condition qu'il supporte
   assez d'interfaces d'introspection et que vous connaissiez le nom
   de l'interface que vous désirez afficher.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>comobject</parameter></term>
     <listitem>
      <para>
       <parameter>comobject</parameter> doit être soit une instance d'un objet COM,
       soit le nom d'une bibliothèque type (qui doit être résolu en accord des règles
       définies dans la fonction <function>com_load_typelib</function>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dispinterface</parameter></term>
     <listitem>
      <para>
       Le nom d'une interface descendante <literal>IDispatch</literal>
       que vous souhaitez afficher.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>wantsink</parameter></term>
     <listitem>
      <para>
       Si le paramètre <parameter>wantsink</parameter> vaut &true;,
       l'interface d'évier correspondante sera affichée à la place.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>com_event_sink</function></member>
    <member><function>com_load_typelib</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->