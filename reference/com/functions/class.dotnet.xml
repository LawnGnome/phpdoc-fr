<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.2 Maintainer: yannick Status: ready -->
 <refentry id="class.dotnet">
  <refnamediv>
   <refname>DOTNET</refname>
   <refpurpose>La classe DOTNET</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
  <synopsis>$obj = new <classname>DOTNET</classname>("assembly", "classname")</synopsis>
  </refsynopsisdiv>
  <refsect1 id="class.dotnet.class">
   &reftitle.description;
   <simpara>
    La classe DOTNET vous autorise d'instancier une classe depuis un ensemble .NET et
    d'appeler ces propriétés ainsi que d'accéder à ces propriétés.
   </simpara>
  </refsect1>
  <refsect1 id="class.dotnet.constructor">
   <title>Méthodes</title>
    <methodsynopsis>
     <type>string</type><methodname>DOTNET::DOTNET</methodname>
     <methodparam><type>string</type><parameter>assembly_name</parameter></methodparam>
     <methodparam><type>string</type><parameter>class_name</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>codepage</parameter></methodparam>
    </methodsynopsis>
   <para>
    Le construction de la classe DOTNET. <parameter>assembly_name</parameter>
    spécifie quel ensemble doit être chargé, et <parameter>class_name</parameter>
    spécifie quelle classe de l'ensemble doit être instanciée. Vous pouvez spécifier optionnellement
    un <parameter>codepage</parameter> à utiliser pour les transformations des chaînes
    unicodes ; voir <xref linkend="class.com"/> la classe pour plus de détails sur les 
    <parameter>codepage</parameter>.
   </para>

   <para>
    L'objet retourné est un objet surchargé, ce qui signifie que &php; ne voit
    aucune méthode fixe comme il le fait avec les classes habituelles ; au lieu de celà, 
    chaque accès à une propriété ou une méthode est effectué à travers COM et depuis
    DOTNET. En d'autres mots, l'objet .NET est tracé à travers la couche d'interopérabilité
    de COM fournie par le moteur .NET.
   </para>

   <para>
    Dès que vous avez créé l'objet DOTNET, &php; l'utilise comme n'importe quel autre objet COM ;
    Toutes les mêmes règles y sont appliquées.
   </para>
   
   <para>
    <example id="example.dotnet">
     <title>Exemple DOTNET</title>
     <programlisting role="php">
<![CDATA[
<?php
  $stack = new DOTNET("mscorlib", "System.Collections.Stack"); 
  $stack->Push(".Net"); 
  $stack->Push("Bonjour "); 
  echo $stack->Pop() . $stack->Pop(); 
?>
]]>
     </programlisting>
    </example>
   </para>

   <note>
    <para>
     Vous devez installer le moteur .NET sur votre serveur Web pour tirer avantage de ces
     fonctionnalités.
    </para>
   </note>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
