<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.13 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

  <refentry xml:id='function.com-load-typelib' xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>com_load_typelib</refname>
    <refpurpose>Charge un Typelib</refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>bool</type><methodname>com_load_typelib</methodname>
      <methodparam><type>string</type><parameter>typelib_name</parameter></methodparam>
      <methodparam choice="opt"><type>bool</type><parameter>case_insensitive</parameter></methodparam>
     </methodsynopsis>
    <para>
     Charge un Typelib et enregistre son contenu dans le moteur, comme s'ils avaient été définis
     en utilisant <function>define</function>. Le paramètre 
     <parameter>case_insensitive</parameter> se comporte comme le paramètre du même nom
     de la fonction <function>define</function>.
    </para>
    <para>
     <parameter>typelib_name</parameter> peut être une des valeurs suivantes :
     <itemizedlist>
      <listitem>
       <para>
        Le nom d'un fichier <literal>.tlb</literal> ou le module exécutable contenant
        le Typelib.
       </para>
      </listitem>
      <listitem>
       <para>
        Le GUID du Typelib, suivi du numéro de version ; par exemple  
        <literal>{00000200-0000-0010-8000-00AA006D2EA4},2,0</literal>.
       </para>
      </listitem>
      <listitem>
       <para>
        Le nom du Typelib, e.g <literal>Microsoft OLE DB ActiveX Data
        Objects 1.0 Library</literal>.
       </para>
      </listitem>
     </itemizedlist>

     &php; va essayer de résoudre le Typelib dans cet ordre, et le processus
     prendra de plus en plus de ressources pour arriver à la fin de la liste ; 
     la recherche du Typelib par son nom est manipulée physiquement
     en énumérant le registre jusqu'à ce qu'un résultat y soit trouvé.
    </para>

    <para>
     Notez qu'il est plus efficace d'utiliser <xref linkend="ini.com.typelib-file"/> l'option
     de configuration pour précharger et enregistrer les constantes, même si cela
     est moins flexible.
    </para>

    <para>
     Si vous devez activer  <xref linkend="ini.com.autoregister-typelib"/>, alors &php;
     essayera d'enregistrer automatiquement les constantes associées à l'objet COM
     lorsque vous l'instancierez. Cela dépendra de l'interface fourni par l'objet COM
     lui-même et ne sera pas toujours possible.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
