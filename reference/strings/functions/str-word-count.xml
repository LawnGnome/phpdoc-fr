<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
<!-- EN-Revision: 1.7 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: yes -->
<refentry id="function.str-word-count">
 <refnamediv>
  <refname>str_word_count</refname>
  <refpurpose>Compte le nombre de mots utilisés dans une chaîne</refpurpose>
 </refnamediv>

 <refsect1>
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>str_word_count</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>format</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>charlist</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>str_word_count</function> compte le nombre de mots dans
   la chaîne <parameter>string</parameter>. Si le paramètre optionnel
   <parameter>format</parameter> n'est pas spécifié, alors la valeur
   retournée sera un entier, représentant le nombre de mots trouvés.
   Si <parameter>format</parameter> est spécifié, la valeur retournée
   sera un tableau, qui dépend du format <parameter>format</parameter>.
   Les valeurs possibles pour <parameter>format</parameter> sont listées plus
   bas.
  </para>
  <para>
   Dans cette fonction, la notion de "mot" dépend de la configuration
   de localisation. C'est une chaîne qui contient tous les caractères
   alphabétiques, et qui peut contenir, mais pas commencer par
   &quot;'&quot; et &quot;-&quot;.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La chaîne de caractères
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       Spécifie la valeur de retour de cette fonction. Les valeurs
       actuellement supportées sont :
       <itemizedlist>
        <listitem>
         <simpara>
          0 - retourne le nombre de mots trouvés
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          1 - retourne un tableau contenant tous les mots trouvés à
          l'intérieur de <parameter>string</parameter>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          2 - retourne un tableau associatif, où la clé indique la position
          numérique du mot à l'intérieur de <parameter>string</parameter> et
          la valeur est le mot actuel
         </simpara>
        </listitem> 
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>charlist</parameter></term>
     <listitem>
      <para>
       Une liste des caractères additionnels qui seront considérés comme un
       'mot'
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau ou un entier, dépendamment du
   <parameter>format</parameter> choisi.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Ajout du paramètre <parameter>charlist</parameter>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>str_word_count</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$str = "Salut l'ami, vous
        avez          une b3lle mine !";

print_r(str_word_count($str, 1));
print_r(str_word_count($str, 2));
print_r(str_word_count($str, 1, 'àáãç3'));

echo str_word_count($str);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[

Array
(
    [0] => Salut
    [1] => l'ami
    [2] => vous
    [3] => avez
    [4] => une
    [5] => b
    [6] => lle
    [7] => mine
)

Array
(
    [0] => Salut
    [6] => l'ami
    [13] => vous
    [26] => avez
    [40] => une
    [44] => b
    [46] => lle
    [50] => mine
)

Array
(
    [0] => Salut
    [1] => l'ami
    [2] => vous
    [3] => avez
    [4] => une
    [5] => belle
    [6] => mine
)

8
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>explode</function></member>
    <member><function>preg_split</function></member>
    <member><function>split</function></member>
    <member><function>count_chars</function></member>
    <member><function>substr_count</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
