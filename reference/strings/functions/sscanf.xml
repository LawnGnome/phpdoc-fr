<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.33 -->
  <refentry id="function.sscanf">
   <refnamediv>
    <refname>sscanf</refname>
    <refpurpose>
     Analyse une cha&icirc;ne &agrave; l'aide d'un format
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>mixed</type><methodname>sscanf</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
      <methodparam><type>string</type><parameter>format</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>var1</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>sscanf</function> est l'inverse de la fonction
     <function>printf</function>. <function>sscanf</function> lit
     des donn&eacute;es dans la cha&icirc;ne <parameter>str</parameter>, et
     l'interpr&egrave;te en fonction du format <parameter>format</parameter>.
     Si seuls deux param&egrave;tres sont fournis, les valeurs trouv&eacute;es
     seront retourn&eacute;es sous forme de tableau. Sinon, les valeurs seront
     plac&eacute;es dans les arguments <parameter>var1</parameter>.
    </para>
    <para>
     Tous les caract&egrave;res blancs dans la cha&icirc;ne <parameter>format</parameter> correspondent
     &agrave; un caract&egrave;re blanc dans la cha&icirc;ne <parameter>str</parameter>. Cela signifie que
     m&ecirc;me une tabulation      dans la cha&icirc;ne de format peut correspondre &agrave;
     un simple espace dans la cha&icirc;ne <parameter>str</parameter>.
    </para>
    <para>
     <example>
      <title>Exemple avec <function>sscanf</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// Lecture d'un num&eacute;ro de s&eacute;rie
  $serial = sscanf("SN/2350001","SN/%d");
// et la date de fabrication
  $mandate = "January 01 2000";
  list($month, $day, $year) = sscanf($mandate,"%s %d %d");
  echo "Le produit $serial a &eacute;t&eacute; fabriqu&eacute; le : $year-".substr($month,0,3)."-$day\n";
?>
]]>
      </programlisting>
     </example>
     Si des param&egrave;tres optionnels sont pass&eacute;s, <function>sscanf</function> retournera
     le nombre de valeurs assign&eacute;es. Les param&egrave;tres optionnels doivent &ecirc;tre pass&eacute;s
     par r&eacute;f&eacute;rence.
     <example>
      <title>Exemple avec <function>sscanf</function> : utilisation des param&egrave;tres optionnels</title>
      <programlisting role="php">
<![CDATA[
<?php
// lit les informations d'auteur, et g&eacute;n&egrave;re une entr&eacute;e DocBook
  $auth = "24    Lewis Carroll";
  $n = sscanf($auth,"%d    %s %s", &$id, &$first, &$last);
  echo "<author id="$id">
    <firstname>$first</firstname>
    <surname>$last</surname>
</author>\n";
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
		 Voir aussi
		 <function>fscanf</function>,
		 <function>printf</function> et 
		 <function>sprintf</function>.
		</para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
