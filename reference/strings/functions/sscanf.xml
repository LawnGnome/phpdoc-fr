<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/strings.xml, last change in rev 1.42 -->
<!-- last change to 'sscanf' in en/ tree in rev 1.33 -->
 <refentry id="function.sscanf">
  <refnamediv>
   <refname>sscanf</refname>
   <refpurpose>Analyse une fonction en fonction d'un format</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>mixed</type><methodname>sscanf</methodname>
     <methodparam><type>string</type><parameter>str</parameter></methodparam>
     <methodparam><type>string</type><parameter>format</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>var1</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>sscanf</function> est le compl&eacute;mentaire de
    <function>printf</function>. <function>sscanf</function> lit les
    donn&eacute;es de la cha&icirc;ne <parameter>str</parameter> et
    interpr&egrave;te son contenu en fonction du format
    <parameter>format</parameter>. Si seulement deux param&egrave;tres
    sont pass&eacute;s &agrave; <function>sscanf</function>,
    les valeurs obtenues seront retourn&eacute;es sous forme d'un tableau.
    <example>
     <title>Exemple avec <function>sscanf</function></title>
     <programlisting role="php">
&lt;?php
// lecture d'un num&eacute;ro de s&eacute;rie
$serial = sscanf("SN/2350001","SN/%d");
// et la date de fabrication
$mandate = "January 01 2000";
list($month, $day, $year) = sscanf($mandate,"%s %d %d");
echo "Le produit $serial a &eacute;t&eacute; fabriqu&eacute; le: $year-".substr($month,0,3)."-$day&#92;n";
?&gt;
     </programlisting>
    </example>
    Si les param&egrave;tres optionnels sont pass&eacute;s,
    <function>sscanf</function> retournera le nombre de valeurs
    assign&eacute;es. Les options doivent &ecirc;tre pass&eacute;es
    par r&eacute;f&eacute;rence.
    <example>
     <title>Utilisation des options avec <function>sscanf</function></title>
     <programlisting role="php">
&lt;?php
// Lecture des informations d'auteur, et g&eacute;n&eacute;ration
// d'une entr&eacute;e DocBook
$auth = "24&#92;tVictor Hugo";
$n = sscanf($auth,"%d&#92;t%s %s", &amp;$id, &amp;$first, &amp;$last);
echo "&lt;auteur id='$id'&gt;
    &lt;Pr&eacute;nom&gt;$first&lt;/firstname&gt;
    &lt;Nom&gt;$last&lt;/surname&gt;
&lt;/auteur&gt;&#92;n";
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Voir aussi
    <function>fscanf</function>,
    <function>printf</function> et
    <function>sprintf</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
