<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry id="function.htmlentities">
   <refnamediv>
    <refname>htmlentities</refname>
    <refpurpose>
     Convertit tous les caract&egrave;res &eacute;ligibles en entit&eacute;s HTML
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>htmlentities</methodname>
      <methodparam><type>string</type><parameter>string</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>quote_style</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>charset</parameter></methodparam>
     </methodsynopsis>
    <para>
     <methodname>htmlentities</methodname> est identique &agrave; la fonction
     <function><function><function>htmlspecialchars</function><\/function><\/function>, sauf que tous les caract&egrave;res
     qui ont des &eacute;quivalents en entit&eacute;s HTML sont effectivement
     traduits. Comme <function><function><function>htmlspecialchars</function><\/function><\/function>, cette
     fonction prend un deuxi&egrave;me argument optionnel, qui indique
     comment doivent &ecirc;tre trait&eacute; les guillemets doubles et simples.
     Vous pouvez utiliser l'une des constantes suivantes : 
     <constant>ENT_COMPAT</constant>, la constante par d&eacute;faut,
     va convertir les guillemets doubles, et ignorer les guillemets
     simples; <constant>ENT_QUOTES</constant> va convertir les guillemets doubles
     et les guillemets simples ; <constant>ENT_NOQUOTES</constant> 
     va ignorer les guillemets doubles et les guillemets simples.
    </para>
    <para>
     Actuellement, le jeu de caract&egrave;res ISO-8859-1 est utilis&eacute; par
     d&eacute;faut. Le support pour le second argument optionnel a &eacute;t&eacute; 
     ajout&eacute; en PHP 3.0.17 et PHP 4.0.3.
    </para>
    <para>
     Comme <function><function><function>htmlspecialchars</function><\/function><\/function>, cette fonction prend un
     troisi&egrave;me argument optionnel qui d&eacute;finit le jeux de caract&egrave;res
     utilis&eacute; durant la conversion. Le support de cet argumetn a &eacute;t&eacute;
     ajout&eacute; en PHP 4.1.0.
    </para>
    <para>
     Il n'y a pas de fonction inverse de cette fonction. Toutes fois, vous 
     pouvez en cr&eacute;er une facilement. Voici comment faire : 
    </para>
    <example>
     <title>Inverse de <function><function><function>htmlentities</function><\/function><\/function></title>
     <programlisting role="php">
<![CDATA[
<?php
  function unhtmlentities ($string){
	$trans_tbl = get_html_translation_table (HTML_ENTITIES);
	$trans_tbl = array_flip ($trans_tbl);
	return strtr ($string, $trans_tbl);
  }
?>
]]>
     </programlisting>
    </example>
    <para>
     Voir aussi
     <function><function><function>htmlspecialchars</function><\/function><\/function> et
     <function><function><function>nl2br</function><\/function><\/function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
