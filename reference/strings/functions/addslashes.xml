<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333487 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.addslashes">
 <refnamediv>
  <refname>addslashes</refname>
  <refpurpose>Ajoute des antislashs dans une chaîne</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>addslashes</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retourne la chaîne <parameter>str</parameter>, après avoir échappé tous
   les caractères qui doivent l'être, pour être utilisée.
   Ces caractères sont les guillemets simples
   (<literal>'</literal>), guillemets doubles (<literal>"</literal>),
   antislash (<literal>\</literal>) et NULLE (le caractère &null;).
  </para>
  <para>
   Un exemple d'utilisation d'<function>addslashes</function> est lorsque
   vous entrez des données dans une chaîne de caractères à évaluer par PHP.
   Par exemple, pour insérer le nom <literal>O'reilly</literal> dans la
   chaîne de caractères $str, vous aurez besoin de protéger
   $str. (i.e. eval("echo '".addslashes($str)."';"); )
  </para>
  <para>
   Pour échapper les paramètres de base de données, vous devez
   utiliser les fonctions d'échappement spécifiques à votre
   base de données (i.e. <function>mysqli_real_escape_string</function>
   pour MySQL ou <function>pg_escape_literal</function>,
   <function>pg_escape_string</function> pour PostgreSQL) et ce,
   pour des raisons de sécurité. Les DBMs ont des spécifications
   d'échappement différents pour les identifiants (i.e. Nom de
   table, nom de champ) et pour les paramètres. Quelques DBMS, comme
   PostgreSQL, fournissent des fonctions d'échapement pour les
   identifiants, <function>pg_escape_identifier</function>, mais
   ce n'est pas le cas pour tous les DBMS. Si c'est le cas, référez-vous
   au manuel système de votre base de données pour utiliser les
   bonnes méthodes d'échappement.
  </para>
  <para>
   Si votre DBMS n'a pas de fonction d'échappement, et qu'elle
   utilise le caractère <literal>\</literal> pour échapper les caractères
   spéciaux, vous pouvez utiliser cette fonction, mais uniquement
   si elle est adéquate pour votre base de données. Veuillez garder à
   l'esprit qu'utiliser la fonction <function>addslashes</function>
   pour échapper les paramètres de base de données peut être
   une faille de sécurité pour la plupart des bases de données.
  </para>
  <para>
   La directive PHP 
   <link linkend="ini.magic-quotes-gpc"><option>magic_quotes_gpc</option></link>
   est à <literal>on</literal> par défaut avant PHP 5.4, et elle appelle
   <function>addslashes</function> sur toutes les données GET, POST et COOKIE.
   N'utilisez pas <function>addslashes</function> sur des données déjà protégées
   avec <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> sinon vous
   doublerez les protections. La fonction <function>get_magic_quotes_gpc</function>
   est utile pour vérifier ce paramètre.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       La chaîne à échapper.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la chaîne échappée.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>addslashes</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$str = "Votre nom est-il O'reilly ?";

// Affiche : Votre nom est-il O\'reilly ?
echo addslashes($str);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>stripcslashes</function></member>
    <member><function>stripslashes</function></member>
    <member><function>addcslashes</function></member>
    <member><function>htmlspecialchars</function></member>
    <member><function>quotemeta</function></member>
    <member><function>get_magic_quotes_gpc</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->