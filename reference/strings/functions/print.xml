<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.13 $ -->
<!-- EN-Revision: 1.12 Maintainer: yannick Status: ready -->
  <refentry id="function.print">
   <refnamediv>
    <refname>print</refname>
    <refpurpose>Affiche une chaîne de caractères</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>print</methodname>
      <methodparam><type>string</type><parameter>arg</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <methodname>print</methodname> affiche la chaîne de caractères
     <parameter>arg</parameter>. <methodname>print</methodname> retourne toujours
     &one;.
    </simpara>
    <para>
     <function>print</function> n'est pas vraiment une fonction (c'est
     techniquement une structure du langage). Cela fait que vous n'êtes
     pas obligés d'utiliser des parenthèses. 
    </para>
    <para>
     <example>
      <title>Exemples avec <function>print</function></title>
      <programlisting role="php">
<![CDATA[
<?php
  print("Bonjour le monde");

  print "print() fonctionne aussi sans les parenthèses.";

  print "Ce print() se
répartit sur plusieurs lignes. Il affiche aussi les
nouvelles lignes";

  print "Ce print() se\nrépartit sur plusieurs lignes. Il affiche aussi les\nnouvelles lignes";

  print "L'échappement de caractères se fait : \"comme ceci\".";

// Vous pouvez utiliser des variables avec print
$foo = "foobar";
$bar = "barbaz";

print "foo vaut $foo"; // foo vaut foobar

// Vous pouvez aussi utiliser des tableaux
$bar = array("clef" => "foo");

print "c'est {$bar['clef']} !"; // c'est foo !

// Les guillemets simples annulent le remplacement des variables
print 'foo vaut $foo'; // foo vaut $foo

// Si vous n'utilisez pas d'autres caractères, vous 
// pouvez afficher simplement vos variables comme ceci
print $foo; // foobar

print <<<END
Cette syntaxe s'intitule le "here document" et 
permet d'afficher plusieurs lignes avec de 
l'interpolation de variables. Notez que la fin de
la syntaxe doit apparaître sur une nouvelle ligne,
avec uniquement un point-virgule, et pas d'espace
de plus !
END;
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Pour une brève discussion à propos des différences
     entre <function>print</function> et <function>echo</function>,
     consultez cet article des FAQTs Knowledge Base : <ulink
     url="&url.echo-print;">&url.echo-print;</ulink>
    </simpara>
   &note.language-construct;
    <simpara>
     Voir aussi
     <function>echo</function>, 
     <function>printf</function> et
     <function>flush</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
