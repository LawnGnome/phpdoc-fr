<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 304388 Maintainer: jpauli Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.htmlspecialchars" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>htmlspecialchars</refname>
  <refpurpose>Convertit les caractères spéciaux en entités HTML</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>htmlspecialchars</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>ENT_COMPAT</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>charset</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>double_encode</parameter><initializer>true</initializer></methodparam>
  </methodsynopsis>
  <para>
   Certains caractères ont des significations spéciales en HTML,
   et doivent être remplacés par des entités HTML pour être affichés.
   <function>htmlspecialchars</function> remplace tous ces caractères
   par leur équivalent dans la chaîne <parameter>string</parameter>.
   Cette conversion est très pratique pour la programmation
   web. Si vous devez remplacer tous les caractères, utilisez 
   plutôt <function>htmlentities</function> à la place.
  </para>
  <simpara>
   <function>htmlspecialchars</function> est pratique pour éviter que
   des données fournies par les utilisateurs contiennent des balises HTML,
   comme pour un forum ou un chat.
  </simpara>
  <para>
   Les remplacements effectués sont :
   <itemizedlist>
    <listitem>
     <simpara>
      "<literal>&amp;</literal>" (et commercial) devient "<literal>&amp;amp;</literal>"
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      "<literal>&quot;</literal>" (guillemets doubles) devient
      "<literal>&amp;quot;</literal>" lorsque <constant>ENT_NOQUOTES</constant>
      n'est pas utilisée.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      "<literal>&#039;</literal>" (guillemet simple) devient
      "<literal>&amp;#039;</literal>" uniquement lorsque
      <constant>ENT_QUOTES</constant> est utilisée.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      "<literal>&lt;</literal>" (inférieur à) devient "<literal>&amp;lt;</literal>"
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      "<literal>&gt;</literal>" (supérieur à) devient "<literal>&amp;gt;</literal>"
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La chaîne à convertir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       L'argument optionnel <parameter>flags</parameter> indique
       comment doivent être traités les guillemets doubles, simples, ainsi que les
       caractères mutli-octets invalides.
       Vous pouvez utiliser l'une des constantes suivantes :
       <constant>ENT_COMPAT</constant>, la constante par défaut,
       va convertir les guillemets doubles et ignorer les guillemets
       simples; <constant>ENT_QUOTES</constant> va convertir les guillemets doubles
       et les guillemets simples; <constant>ENT_NOQUOTES</constant>
       va ignorer les guillemets doubles et les guillemets simples.
       De plus, depuis PHP 5.3.0, ces constantes peuvent être combinées avec
       <constant>ENT_IGNORE</constant>. Dans ce cas, les chaines qui contiennent des
       caractères invalides sont retournées sans ces caractères, plutot que de
       retourner une chaine vide. Evitez d'utiliser cet effet car cela peut introduire
       des vulnérabilités dans vos scripts.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>charset</parameter></term>
     <listitem>
      <para>
       Jeu de caractères utilisé lors de la conversion.
       Par défaut, vaut ISO-8859-1.
      </para>
      <para>
       Pour cette fonction, les jeux de caractères
       <literal>ISO-8859-1</literal>, <literal>ISO-8859-15</literal>,
       <literal>UTF-8</literal>, <literal>cp866</literal>,
       <literal>cp1251</literal>, <literal>cp1252</literal>, et
       <literal>KOI8-R</literal> sont équivalents, dans le sens où
       les caractères affectés par la fonction
       <function>htmlspecialchars</function> occupent la même position
       dans tous ces jeux de caractères.
      </para>
      &reference.strings.charsets;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>double_encode</parameter></term>
     <listitem>
      <para>
       Lorsque le paramètre <parameter>double_encode</parameter> est désactivé,
       PHP n'encodera pas les entités html existants ; par défaut, tout est converti.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   La chaîne convertie.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.3</entry>
       <entry>
        Ajout du paramètre <parameter>double_encode</parameter>.
       </entry>
      </row>
      <row>
       <entry>4.1.0</entry>
       <entry>
        Ajout du paramètre <parameter>charset</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>htmlspecialchars</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$new = htmlspecialchars("<a href='test'>Test</a>", ENT_QUOTES);
echo $new; // &lt;a href=&#039;test&#039;&gt;Test&lt;/a&gt;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Notez que cette fonction ne fait aucun autre remplacement que ceux
    qui sont listés ci-dessus. Pour faire un remplacement total,
    voyez plutôt <function>htmlentities</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_html_translation_table</function></member>
    <member><function>htmlspecialchars_decode</function></member>
    <member><function>strip_tags</function></member>
    <member><function>htmlentities</function></member>
    <member><function>nl2br</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->