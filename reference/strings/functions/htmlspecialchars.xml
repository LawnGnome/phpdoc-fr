<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/strings.xml, last change in rev 1.42 -->
<!-- last change to 'htmlspecialchars' in en/ tree in rev 1.2 -->
 <refentry id="function.htmlspecialchars">
  <refnamediv>
   <refname>htmlspecialchars</refname>
   <refpurpose>
    Convertit tous les caract&egrave;res sp&eacute;ciaux en entit&eacute; HTML.
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>htmlspecialchars</methodname>
     <methodparam><type>string</type><parameter>string</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>quote_style</parameter></methodparam>
    </methodsynopsis>
   <para>
    Certains caract&egrave;res ont une valeur avec HTML, et doivent
    &ecirc;tre remplac&eacute;s par des balises HTML pour conserver
    leur valeur. <function>htmlspecialchars</function> retourne une
    cha&icirc;ne dont tous les caract&egrave;res sensibles ont
    &eacute;t&eacute; remplac&eacute;s par leur &eacute;quivalent.
   </para>
   <simpara>
    <function>htmlspecialchars</function> est utile pour emp&ecirc;cher
    un utilisateur de fournir un texte avec un sens HTML, comme dans
    un livre d'or.
   </simpara>
   <simpara>
    <function>htmlspecialchars</function> est pratique pour &eacute;viter que
    les textes fournis par les utilisateurs contiennent des balises HTML,
    comme dans le cas d'un livre d'or ou d'une tribune.
    <function>htmlspecialchars</function>
    prend un argument optionnel qui indique ce qui doit &ecirc;tre fait
    avec les guillemets simples et doubles. <constant>ENT_COMPAT</constant>
    (par d&eacute;faut) convertira les guillemets doubles, et ignorera
    les guillemets simples. <constant>ENT_QUOTES</constant> convertira
    les deux types de guillemets et <constant>ENT_NOQUOTES</constant>
    les ignorera tous les deux.
   </simpara>
   <para>
    Actuellement, PHP remplace les valeurs suivantes :
    <itemizedlist>
     <listitem>
      <simpara>
       '&amp;' (et commercial) devient '&amp;amp;'
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       '&quot;' (guillemet double) devient '&amp;quot;' si ENT_NOQUOTES n'est pas actif
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       '&#039;' (guillemet simple) devient '&amp;#039;' si ENT_QUOTES est actif
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       '&lt;' (inf&eacute;rieur &agrave;) devient '&amp;lt;'
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       '&gt;' (sup&eacute;rieur &agrave;) devient '&amp;gt;'
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <example>
    <title>Exemple avec <function>htmlspecialchars</function></title>
    <programlisting role="php">
&lt;?php
$new = htmlspecialchars("&lt;a href='test'&gt;Test&lt;/A&gt;", ENT_QUOTES);
?&gt;
    </programlisting>
   </example>
   <para>
    Notez bien que <function>htmlspecialchars</function> ne fait aucun
    autre remplacement que ceux list&eacute;s ci-dessus. Pour une
    traduction compl&egrave;te de toutes les balises, reportez-vous &agrave;
    <function>htmlentities</function>.  Notez que l'argument optionnel
    a &eacute;t&eacute; ajout&eacute; PHP 3.0.17 et PHP 4.0.3.
   </para>
   <para>
    Voir aussi
    <function>htmlentities</function> et
    <function>nl2br</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
