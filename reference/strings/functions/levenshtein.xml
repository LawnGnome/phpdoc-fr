<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/strings.xml, last change in rev 1.42 -->
<!-- last change to 'levenshtein' in en/ tree in rev 1.12 -->
 <refentry id="function.levenshtein">
  <refnamediv>
   <refname>levenshtein</refname>
   <refpurpose>
    Calcule la distance Levenshtein entre deux cha&icirc;nes
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>levenshtein</methodname>
     <methodparam><type>string</type><parameter>str1</parameter></methodparam>
     <methodparam><type>string</type><parameter>str2</parameter></methodparam>
    </methodsynopsis>
    <methodsynopsis>
     <type>int</type><methodname>levenshtein</methodname>
     <methodparam><type>string</type><parameter>str1</parameter></methodparam>
     <methodparam><type>string</type><parameter>str2</parameter></methodparam>
     <methodparam><type>int</type><parameter>cost_ins</parameter></methodparam>
     <methodparam><type>int</type><parameter>cost_rep</parameter></methodparam>
     <methodparam><type>int</type><parameter>cost_del</parameter></methodparam>
    </methodsynopsis>
    <methodsynopsis>
     <type>int</type><methodname>levenshtein</methodname>
     <methodparam><type>string</type><parameter>str1</parameter></methodparam>
     <methodparam><type>string</type><parameter>str2</parameter></methodparam>
     <methodparam><type>function</type><parameter>cost</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>levenshtein</function> retourne la distance Levenshtein
    entre les deux cha&icirc;nes <parameter>str1</parameter> et
    <parameter>str1</parameter> ou -1 si un des arguments exc&egrave;de
    la limite de 255 caract&egrave;res.
   </para>
   <para>
    La distance Levenshtein est d&eacute;finie comme le nombre
    minimal de caract&egrave;res qu'il faut
    remplacer, ins&eacute;rer ou effacer pour transformer la
    cha&icirc;ne <parameter>str1</parameter> en <parameter>str2</parameter>.
    La complexit&eacute; de l'algorithme est en <literal>O(m*n)</literal>,
    o&ugrave; <literal>n</literal> et <literal>m</literal> sont les
    longueurs respectives de <parameter>str1</parameter> et
    <parameter>str2</parameter> (ceci est plut&ocirc;t un bon
    r&eacute;sultat, compar&eacute; &agrave; <function>similar_text</function>,
    qui est en O(max(n,m)**3), mais cela reste co&ucirc;teux en terme de ressources).
   </para>
   <para>
    Dans sa forme la plus simple, la fonction va prendre uniquement
    deux cha&icirc;nes en param&egrave;tres, et calculer uniquement le nombre
    d'insertions, remplacements et effacements n&eacute;cessaires pour transformer
    la cha&icirc;ne <parameter>str1</parameter> en <parameter>str2</parameter>.
   </para>
   <para>
    Une variante prend trois param&egrave;tres additionnels, qui d&eacute;finissent
    le co&ucirc;t des insertions, des remplacements et des effacement.
    C'est une version plus g&eacute;n&eacute;rale et plus souple que la version
    simple, mais qui n'est pas aussi efficace.
   </para>
   <para>
    La deuxi&egrave;me variante n'est pas encore impl&eacute;ment&eacute;e.
    Elle est encore plus g&eacute;n&eacute;rale, et plus souple, mais plus lente.
    Elle appellera une fonction utilisateur qui d&eacute;terminera le co&ucirc;t
    de chaque op&eacute;ration.
   </para>
   <para>
    La fonction utilisateur sera appel&eacute;e avec les arguments suivants :
    <itemizedlist>
     <listitem>
      <simpara>
       op&eacute;ration a appliquer : 'I', 'R' or 'D'
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       caract&egrave;re courant de la cha&icirc;ne <parameter>str1</parameter>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       caract&egrave;re courant de la cha&icirc;ne <parameter>str2</parameter>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       position courante de la cha&icirc;ne <parameter>str1</parameter>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       position courante de la cha&icirc;ne <parameter>str2</parameter>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       caract&egrave;res restants dans la cha&icirc;ne <parameter>str1</parameter>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       caract&egrave;res restants dans la cha&icirc;ne <parameter>str2</parameter>
      </simpara>
     </listitem>
    </itemizedlist>
    La fonction utilisateur doit retourner un entier positif, qui
    d&eacute;crira le co&ucirc;t de cette op&eacute;ration particuli&egrave;re. Elle peut ne
    prendre en compte que certains arguments, et non leur
    totalit&eacute;.
   </para>
   <para>
    L'utilisation d'une fonction utilisateur permet de prendre en
    compte la diff&eacute;rence entre certains caract&egrave;res, ou
    leur contexte pour d&eacute;terminer le co&ucirc;t d'une op&eacute;ration
    d'insertion, remplacement ou effacement. Elle accro&icirc;t la charge de calcul
    demand&eacute;e au CPU, et annule l'optimisation des autres variantes.
   </para>
   <para>
    Voir aussi
    <function>soundex</function>,
    <function>similar_text</function> et
    <function>metaphone</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
