<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.19 $ -->
<!-- EN-Revision: 1.18 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.substr">
 <refnamediv>
  <refname>substr</refname>
  <refpurpose>Retourne un segment de chaîne</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>substr</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>int</type><parameter>start</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retourne le segment de <parameter>string</parameter> défini par
   <parameter>start</parameter> et <parameter>length</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La chaîne d'entrée.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>start</parameter></term>
     <listitem>
      <para>
       Si <parameter>start</parameter> est positif, la chaîne
       retournée commencera au caractère numéro <parameter>start</parameter>,
       dans la chaîne <parameter>string</parameter>. Le premier caractère
       est numéroté zéro. Actuellement, dans la chaîne '<literal>abcdef</literal>',
       le caractère à la position <literal>0</literal> est '<literal>a</literal>',
       le caractère à la position <literal>2</literal> est '<literal>c</literal>',
       et ainsi de suite.
      </para>
      <para>
       Si <parameter>start</parameter> est négatif, la chaîne retournée
       commencera au caractère numéro <parameter>start</parameter> à compter
       de la fin de la chaîne <parameter>string</parameter>.
      </para>
      <para>
       Si <parameter>string</parameter> est plus petit ou égal à 
       <parameter>start</parameter> caractères de long, &false; sera retourné.
      </para>
       <para>
       <example>
        <title>Exemple de <parameter>start</parameter> négatif</title>
        <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", -1);    // retourne "f"
$rest = substr("abcdef", -2);    // retourne "ef"
$rest = substr("abcdef", -3, 1); // retourne "d"
?>
]]>
        </programlisting>
       </example>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Si <parameter>length</parameter> est fourni et est positif,
       la chaîne retournée contiendra au plus <parameter>length</parameter>
       caractères, en commençant à partir du caractère
       <parameter>start</parameter> (en fonction de la taille de la chaîne
       <parameter>string</parameter>).
      </para>
      <para>
       Si <parameter>length</parameter> est fourni et négatif, alors le même
       nombre de caractères sera omis, en partant de la fin de la chaîne
       <parameter>string</parameter>. Si <parameter>start</parameter> représente
       une position hors de la chaîne, une chaîne vide sera retournée.
      </para>
      <example>
       <title>Utilisation d'une valeur négative pour <parameter>length</parameter></title>
       <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", 0, -1);  // retourne "abcde"
$rest = substr("abcdef", 2, -1);  // retourne "cde"
$rest = substr("abcdef", 4, -4);  // retourne ""
$rest = substr("abcdef", -3, -1); // retourne "de"
?>
]]>
       </programlisting>
      </example>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la partie extraite de la chaîne.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>substr</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo substr('abcdef', 1);     // bcdef
echo substr('abcdef', 1, 3);  // bcd
echo substr('abcdef', 0, 4);  // abcd
echo substr('abcdef', 0, 8);  // abcdef
echo substr('abcdef', -1, 1); // f

// Accéder à un simple caractère dans une chaîne
// peut également être réalisé en utilisant des crochets
$string = 'abcdef';
echo $string[0];                 // a
echo $string[3];                 // d
echo $string[strlen($string)-1]; // f

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strrchr</function></member>
    <member><function>substr_replace</function></member>
    <member><function>preg_match</function></member>
    <member><function>trim</function></member>
    <member><function>mb_substr</function></member>
    <member><function>wordwrap</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->