<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/strings.xml, last change in rev 1.42 -->
<!-- last change to 'wordwrap' in en/ tree in rev 1.142 -->
 <refentry id="function.wordwrap">
  <refnamediv>
   <refname>wordwrap</refname>
   <refpurpose>
    Ajoute une c&eacute;sure &agrave; une cha&icirc;ne tous les n caract&egrave;res
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>wordwrap</methodname>
     <methodparam><type>string</type><parameter>str</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>width</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>break</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>cut</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>wordwrap</function> ajoute la c&eacute;sure <parameter>str</parameter>
    au num&eacute;ro de colonne <parameter>width</parameter>. La ligne est
    c&eacute;sur&eacute;e avec la cha&icirc;ne <parameter>break</parameter>.
   </para>
   <para>
    <function>wordwrap</function> ajoute la c&eacute;sure automatiquement
    &agrave; la ligne 75 et utilise '<literal>&#92;n</literal>' (nouvelle ligne) si
    <parameter>width</parameter> ou <parameter>break</parameter> sont omis.
   </para>
   <para>
    Si <parameter>cut</parameter> vaut 1, la cha&icirc;ne sera toujours
    coup&eacute;e &agrave; la taille sp&eacute;cifi&eacute;e. Dans ce cas,
    les mots qui d&eacute;passeront, seront coup&eacute;s :
    voyez le second exemple.
   </para>
   <note>
    <para>
     Le param&egrave;tre <parameter>cut</parameter> a &eacute;t&eacute;
     ajout&eacute; dans  PHP 4.0.3.
    </para>
   </note>
   <para>
    <example>
     <title>Exemple <function>wordwrap</function></title>
     <programlisting role="php">
&lt;?php
$text = "Ma&icirc;tre corbeau jura, mais un peu tard, qu'on ne l'y prendrait plus.";
$newtext = wordwrap( $text, 20 );
echo "$newtext&#92;n";
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Cet exemple va afficher :
   </para>
   <para>
    <informalexample>
     <literallayout>
       <computeroutput>
Ma&icirc;tre corbeau
 jura, mais un peu t
ard, qu'on ne l'y pr
endrait plus.
       </computeroutput>
     </literallayout>
    </informalexample>
   </para>
   <para>
    <example>
     <title>Exemple avec <function>wordwrap</function></title>
     <programlisting role="php">
&lt;?php
$text = "Un tr&egrave;s tr&egrave;s long mooooooooooooooooooooooooot.";
$newtext = wordwrap( $text, 8, "&#92;n", 1);
echo "$newtext&#92;n";
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Cet exemple va afficher
   </para>
   <para>
    <informalexample>
     <literallayout>
       <computeroutput>
Un tr&egrave;s
tr&egrave;s
long
mooooooo
oooooooo
oooooooo
oot.
       </computeroutput>
     </literallayout>
    </informalexample>
   </para>
   <para>
    Voir aussi
    <function>nl2br</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
