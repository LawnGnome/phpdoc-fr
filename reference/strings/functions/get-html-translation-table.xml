<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry id="function.get-html-translation-table">
   <refnamediv>
    <refname>get_html_translation_table</refname>
    <refpurpose>
     Returns the translation table used by
     <function>htmlspecialchars</function> and
     <function>htmlentities</function>
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>get_html_translation_table</methodname>
      <methodparam><type>int</type><parameter>table</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>quote_style</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>get_html_translation_table</function> retourne la table
     de traduction des entit&eacute;s utilis&eacute;e en interne par les fonctions
     <function>htmlspecialchars</function> et
     <function>htmlentities</function>. Il existe deux constantes 
     (<constant>HTML_ENTITIES</constant> et 
     <constant>HTML_SPECIALCHARS</constant>), qui vous permettent de
     sp&eacute;cifier la table que vous souhaitez. Et comme dans les fonctions
     <function>htmlspecialchars</function> et
     <function>htmlentities</function>, vous pouvez optionnellement
     sp&eacute;cifier le type de guillemets que vous voulez utiliser. Le comportement
     par d&eacute;faut est le mode ENT_COMPAT. Pour la description de ces modes,
     reportez vous &agrave; <function>htmlspecialchars</function>.
     <example>
      <title>Exemple avec la table de traduction</title>
      <programlisting role="php">
<![CDATA[
<?php
  $trans = get_html_translation_table(HTML_ENTITIES);
  $str = "Hallo & <Frau> & Kr&auml;mer";
  $encoded = strtr($str, $trans);
?>
]]>
      </programlisting>
     </example>
     La variable <literal>$encoded</literal> contient maintenant
     <literal>"Hallo &amp;amp; &amp;lt;Frau&amp;gt; &amp;amp;
     Kr&amp;auml;mer".</literal>
    </para>
    <para>
     Un truc pratique est d'utiliser <function>array_flip</function> pour
     changer la direction de la traduction.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
  $trans = array_flip($trans);
  $original = strtr($encoded, $trans);
?>
]]>
      </programlisting>
     </informalexample>
      Le contenu de <literal>$original</literal> sera alors : 
      <literal>"Hallo &amp; &lt;Frau> &amp; Kr&auml;mer"</literal>.
    </para>
    <para>
     Voir aussi
     <function>htmlspecialchars</function>,
     <function>htmlentities</function>, 
     <function>strtr</function> et 
     <function>array_flip</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
