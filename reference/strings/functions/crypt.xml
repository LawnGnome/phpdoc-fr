<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry id="function.crypt">
   <refnamediv>
    <refname>crypt</refname>
    <refpurpose>Chiffrage ind&eacute;chiffrable (hashing)</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>crypt</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>salt</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function><function>crypt</function><\/function> retourne la cha&icirc;ne <parameter>str</parameter>
     chiffr&eacute;e avec l'algorithme standard Unix <abbrev>DES</abbrev>, ou bien
     un des algorithme qui est disponible sur la machine. L'argument
     optionnel <parameter>salt</parameter> sera utilis&eacute;e comme base pour le
     chiffrement. Reportez vous aux pages de manuel Unix pour plus de d&eacute;tails
     sur votre fonction crypt.
    </para>
    <simpara>
     Si l'argument <parameter>salt</parameter> n'est pas fourni, PHP
     en g&eacute;n&eacute;rera un lui-m&ecirc;me.
    </simpara>
    <simpara>
     Certains syst&egrave;mes supoprtent plus d'un type de chiffrage. En fait, 
     il arrive que le chiffrage DES standard soit remplac&eacute; par un
     algorithme de chiffrage MD5. Le choix du type de chiffrage est
     effectu&eacute; en se basant sur la valeur du <parameter>salt</parameter>.
     A l'installation, PHP d&eacute;termine les possibitilit&eacute;s de
     la fonction crypt(), et acceptera des <parameter>salt</parameter>
     pour d'autres types de chiffrages. Is aucun <parameter>salt</parameter>
     n'est fourni, PHP va en g&eacute;n&eacute;rer un de deux caract&egrave;res, &agrave; moins que le
     syst&egrave;me par d&eacute;faut soit MD5, auquel cas un <parameter>salt</parameter>
     compatible MD5 sera g&eacute;n&eacute;r&eacute;. PHP d&eacute;finit une constante appel&eacute;e
     CRYPT_SALT_LENGTH qui vous dira si un <parameter>salt</parameter>
     de deux caract&egrave;res s'applique &agrave; votre syst&egrave;me, ou bien si c'est 
     un <parameter>salt</parameter> de 12 caract&egrave;res.
    </simpara>
    <simpara>
     Si vous utiilsez le <parameter>salt</parameter> g&eacute;n&eacute;r&eacute;, pensez bien que
     le <parameter>salt</parameter> est g&eacute;n&eacute;r&eacute; une seule fois. Si vous appelez
     cette fonction r&eacute;cursivement, cela peut avoir des impacts sur la s&eacute;curit&eacute;
     et l'apparence du r&eacute;sultat.
    </simpara>
    <simpara>
     <function><function>crypt</function><\/function>, lorsqu'elle est utilis&eacute;e avec 
     le chiffrement standard DES, retourne le <parameter>salt</parameter>
     dans les deux premiers caract&egrave;res de la cha&icirc;ne retourn&eacute;e. Elle
     n'utilise que les 8 premiers caract&egrave;res de <parameter>str</parameter>, 
     ce qui fait que toutes les cha&icirc;nes plus longues, qui ont les m&ecirc;mes
     premiers 8 octets retourneront le m&ecirc;me r&eacute;sultat (tant que le
     salt est toujours le m&ecirc;me).
    </simpara>
    <simpara>
     Sur les syt&egrave;mes où crypt() supporte plusieurs types de
     chiffrements, les constantes suivantes sont mises &agrave; 1 ou 0,
     suivant que le type correspondant est disponible : 
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       CRYPT_STD_DES - Chiffrement DES standard &agrave; 2 caract&egrave;res
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       CRYPT_EXT_DES - Chiffrement DES &eacute;tendu &agrave; 9 caract&egrave;res
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       CRYPT_MD5 - Chiffrement MD5 &agrave; 12 caract&egrave;res commen&ccedil;ant par $1$
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       CRYPT_BLOWFISH - Chiffrement Blowfish &agrave; 16 caract&egrave;res commen&ccedil;ant par $2$
      </simpara>
     </listitem>
    </itemizedlist>
    <note>
     <simpara>
      Il n'existe pas de fonction de d&eacute;chiffrement, car la fonction <function><function>crypt</function><\/function>
      utilise un algorithme &agrave; un seul sens (injection).
     </simpara>
     </note>
    <example>
     <title>Exemple avec <function><function>crypt</function><\/function></title>
     <programlisting role="php">
<![CDATA[
<?php
$mot_de_passe = crypt("MonM0TdEPa&&e"); 
// laissons le salt initialis&eacute; par PHP

/*
  Il vaut mieux passer le r&eacute;sultat complet de crypt() comme salt n&eacute;cessaire
  pour le chiffrage du mot de passe, pour &eacute;viter les probl&egrave;mes entre les
  algorithmes utilis&eacute;s (comme nous le disons ci-dessus, le chiffrage
  standard DES utilise un salt de 2 caract&egrave;res, mais un chiffrement 
  MD5 utilise un salt de 12.
*/
if (crypt($utilisateur_input,$mot_de_passe_input) == $mot_de_passe) {
   echo "Mot de passe correct!";
}
?>
]]>
     </programlisting>
    </example>
    <simpara>
     Voir aussi 
     <function><function>md5</function><\/function> et
     <link linkend="ref.mcrypt">l'extension Mcrypt</link>.
    </simpara>
   </refsect1>
  </refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
