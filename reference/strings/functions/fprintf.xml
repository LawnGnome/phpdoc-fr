<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
  <refentry id="function.fprintf">
   <refnamediv>
    <refname>fprintf</refname>
    <refpurpose>Ecrit une cha&icirc;ne format&eacute;e dans un fl&ocirc;t</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>fprintf</methodname>
      <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
      <methodparam><type>string</type><parameter>format</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>args</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>fprintf</function> &eacute;crit la cha&icirc;ne produite avec
     le format <parameter>format</parameter> dans le fl&ocirc;t repr&eacute;sent&eacute;
     par <parameter>handle</parameter>.
    </simpara>
    <simpara>
     Le param&egrave;tre <parameter>format</parameter> est compos&eacute; de
     z&eacute;ro, une ou plusieurs directives : des caract&egrave;res ordinaires
     (excluant <literal>%</literal>) qui sont copi&eacute;s directement
     dans le r&eacute;sultat sans modification, et des 
     <emphasis>sp&eacute;cifications de conversion</emphasis>, qui sont exploit&eacute;es
     avec un des param&egrave;tres suivants. Cette technique s'applique
     &agrave; <function>fprintf</function>, <function>sprintf</function>
     et <function>printf</function>.
    </simpara>
    <para>
     Chaque sp&eacute;cification de conversion est constitu&eacute;e d'un signe pourcentage,
     (<literal>%</literal>), suivi par un ou plusieurs &eacute;l&eacute;ments, dans cet
     ordre : 
     <orderedlist>
      <listitem>
       <simpara>
        Un <emphasis>remplisseur</emphasis> optionnel qui indique
        quel caract&egrave;re sera utilis&eacute; pour compl&eacute;ter le r&eacute;sultat
        jusqu'&agrave; la longueur requise. Ce peut &ecirc;tre le caract&egrave;re d'espace,
        ou le caract&egrave;re <literal>0</literal>. Par d&eacute;faut, le remplissage
        se fait avec des espaces. Un autre caract&egrave;re de remplissage peut
        &ecirc;tre sp&eacute;cifi&eacute; en le pr&eacute;fixant avec un guillemet simple 
        (<literal>'</literal>) : voir les exemples ci-dessous.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Un <emphasis>sp&eacute;cificateur d'alignement</emphasis> qui indique
        si le r&eacute;sultat doit &ecirc;tre align&eacute; &agrave; gauche ou &agrave; droite. Par
        d&eacute;faut, le r&eacute;sultat est align&eacute; &agrave; gauche. Le caract&egrave;re
        <literal>-</literal> fera que le r&eacute;sultat est align&eacute; &agrave; droite.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Un nombre optionnel, <emphasis>sp&eacute;cificateur de taille</emphasis>
        indique le nombre minimum de caract&egrave;res que cette conversion doit
        fournir en r&eacute;sultat.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Un <emphasis>sp&eacute;cificateur de pr&eacute;cision</emphasis> qui indique
        le nombre de d&eacute;cimales qui doivent &ecirc;tre affich&eacute;es pour les nombres
        &agrave; virgule flottante. Cette option n'a pas d'effet pour les autres
        types que <type>float</type>. Une auter fonction pratique pour
        formatter les nombres &agrave; virgule flottante est <function>number_format</function>.
       </simpara>
      </listitem>
      <listitem>
       <para>
        Un <emphasis>sp&eacute;cificateur de type</emphasis> qui indique le type
        avec lequel l'argument sera trait&eacute;. Plusieurs types possibles :
        <simplelist>
         <member>
          <literal>%</literal> - un caract&egrave;re de pourcentage lit&eacute;ral.
          Aucun argument n'est n&eacute;cessaire.
         </member>
         <member>
          <literal>b</literal> - l'argument est trait&eacute; comme un entier,
          et pr&eacute;sent&eacute; comme un nombre binaire.
         </member>
         <member>
          <literal>c</literal> - l'argument est trait&eacute; comme un entier,
          et pr&eacute;sent&eacute; comme le caract&egrave;re de code ASCII correspondant.
         </member>
         <member>
          <literal>d</literal> - l'argument est trait&eacute; comme un entier,
          et pr&eacute;sent&eacute; comme un nombre d&eacute;cimal sign&eacute;.
         </member>
         <member>
          <literal>u</literal> - l'argument est trait&eacute; comme un entier,
          et pr&eacute;sent&eacute; comme un nombre d&eacute;cimal non sign&eacute;.
         </member>
         <member>
          <literal>f</literal> - l'argument est trait&eacute; comme un nombre &agrave; 
          virgule flottante (type <type>float</type>), et pr&eacute;sent&eacute; comme un nombre &agrave; 
          virgule flottante.
         </member>
         <member>
          <literal>o</literal> - l'argument est trait&eacute; comme un entier,
          et pr&eacute;sent&eacute; comme un nombre octal.
         </member>
         <member>
          <literal>s</literal> - l'argument est trait&eacute; et 
          pr&eacute;sent&eacute; comme une cha&icirc;ne de caract&egrave;res.
         </member>
         <member>
          <literal>x</literal> - l'argument est trait&eacute; comme un entier,
          et pr&eacute;sent&eacute; comme un nombre hexad&eacute;cimal (les lettres en minuscules).
         </member>
         <member>
          <literal>X</literal> - l'argument est trait&eacute; comme un entier,
          et pr&eacute;sent&eacute; comme un nombre hexad&eacute;cimal (les lettres en majuscules).
         </member>
        </simplelist>
       </para>
      </listitem>
     </orderedlist>
    </para>
    <simpara>
     Voir aussi 
     <function>printf</function>,
     <function>sprintf</function>,
     <function>sscanf</function>, 
     <function>fscanf</function>, 
     <function>vsprintf</function> et
     <function>number_format</function>.
    </simpara>
   </refsect1>
   <refsect1>
    <title>Exemples</title>
    <para>
     <example>
      <title>Entiers avec z&eacute;ros initiaux <function>sprintf</function></title>
      <programlisting role="php">
<![CDATA[
<?php
  $isodate = sprintf("%04d-%02d-%02d", $year, $month, $day);
?>
]]>
      </programlisting>
     </example>
     <example>
      <title>Format mon&eacute;taire avec <function>sprintf</function></title>
      <programlisting role="php">
<![CDATA[
<?php
  $money1 = 68.75;
  $money2 = 54.35;
  $money = $money1 + $money2;
  // $money contient "123.1";
  $formatted = sprintf("%01.2f", $money);
  // $formatted contient "123.10"
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
