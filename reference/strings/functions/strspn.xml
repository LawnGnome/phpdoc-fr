<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strspn">
 <refnamediv>
  <refname>strspn</refname>
  <refpurpose>
   Trouve la longueur du premier segment d'une chaîne contenant
   tous les caractères d'un masque donné
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>strspn</methodname>
   <methodparam><type>string</type><parameter>subject</parameter></methodparam>
   <methodparam><type>string</type><parameter>mask</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>start</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retourne la longueur du premier groupe de caractères consécutifs
   du masque <parameter>mask</parameter> trouvé dans la chaîne
   <parameter>subject</parameter>.
  </para>
  <para>
   Si les paramètres <parameter>start</parameter> et <parameter>length</parameter>
   sont omis, alors toutes les chaînes <parameter>subject</parameter> seront
   analysées. S'ils sont fournis, alors les effets seront identiques à appeler
   <literal>strspn(substr($subject, $start, $length), $mask)</literal>
   (voir <xref linkend="function.substr" /> pour plus d'informations).
  </para>
  <para>
   Le code suivant :
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$var = strspn("42 est la réponse, mais quelle est la question.", "1234567890");
?>
]]>
    </programlisting>
   </informalexample>
   assigne <literal>2</literal> à la variable <varname>$var</varname>,
   car la chaîne "42" est le plus long segment du paramètre
   <parameter>subject</parameter> dont les caractères sont contenus dans
   "1234567890".
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       La chaîne à analyser.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mask</parameter></term>
     <listitem>
      <para>
       La liste des caractères autorisés à être inclus dans les segments
       comptés.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>start</parameter></term>
     <listitem>
      <para>
       La position dans la chaîne <parameter>subject</parameter> à
       partir de laquelle nous devons chercher.
      </para>
      <para>
       Si <parameter>start</parameter> est fourni et n'est pas négatif,
       alors <function>strspn</function> commencera à analyser la chaîne
       <parameter>subject</parameter> à la position <parameter>start</parameter>.
       Par exemple, dans la chaîne '<literal>abcdef</literal>', le caractère
       à la position <literal>0</literal> est '<literal>a</literal>', le caractère
       à la position <literal>2</literal> est '<literal>c</literal>', et ainsi
       de suite.
      </para>
      <para>
       Si <parameter>start</parameter> est fourni et est négatif,
       alors <function>strspn</function> commencera à analyser la chaîne
       <parameter>subject</parameter> à la position <parameter>start</parameter>
       depuis la fin de la chaîne <parameter>subject</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       La longueur de la chaîne à analyser.
      </para>
      <para>
       Si <parameter>length</parameter> est fourni et n'est pas négatif,
       alors <parameter>subject</parameter> sera examiné sur
       <parameter>length</parameter> caractères après la position de départ.
      </para>
      <para>
       Si <parameter>length</parameter> est fourni et est négatif,
       alors <parameter>subject</parameter> sera examiné depuis la position
       de départ sur <parameter>length</parameter> caractères depuis la fin
       de la chaîne <parameter>subject</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la taille du segment initial
   de la chaîne <parameter>str1</parameter> qui est entièrement
   constitué de caractères contenus dans <parameter>str2</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Ajout des paramètres <parameter>start</parameter> et <parameter>length</parameter>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>strspn</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo strspn("foo", "o", 1, 2); // Affiche : 2
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strcspn</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
