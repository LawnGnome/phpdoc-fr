<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/math.xml, last change in rev 1.11 -->
<!-- last change to 'number-format' in en/ tree in rev 1.2 -->
 <refentry id="function.number-format">
  <refnamediv>
   <refname>number_format</refname>
   <refpurpose>Formate un nombre pour l'affichage</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>number_format</methodname>
      <methodparam><type>float</type><parameter>number</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>decimals</parameter></methodparam>
     </methodsynopsis>
     <methodsynopsis>
      <type>string</type><methodname>number_format</methodname>
      <methodparam><type>float</type><parameter>number</parameter></methodparam>
      <methodparam><type>int</type><parameter>decimals</parameter></methodparam>
      <methodparam><type>string</type><parameter>dec_point</parameter></methodparam>
      <methodparam><type>string</type><parameter>thousands_sep</parameter></methodparam>
     </methodsynopsis>   <para>
    <function>number_format</function> retourne une cha&icirc;ne
    repr&eacute;sentant <parameter>number</parameter> format&eacute;.
    <function>number_format</function> accepte un, deux ou 4 param&egrave;tres
    (mais pas trois).
   </para>
   <para>
    Si seul le param&egrave;tre <parameter>number</parameter> est donn&eacute;,
    il sera format&eacute; sans partie d&eacute;cimale, mais avec une
    virgule entre chaque millier.
   </para>
   <para>
    Si les deux param&egrave;tres <parameter>number</parameter> et
    <parameter>decimals</parameter> sont fournis, <parameter>number</parameter> sera
    format&eacute; avec <parameter>decimals</parameter> d&eacute;cimales,
    un point (".") comme s&eacute;parateur d&eacute;cimal et une virgule entre chaque
    millier.
   </para>
   <para>
    Avec quatre param&egrave;tres, <parameter>number</parameter> sera
    format&eacute; avec <parameter>decimals</parameter> d&eacute;cimales,
    <parameter>dec_point</parameter> comme s&eacute;parateur d&eacute;cimal, et
    <parameter>thousands_sep</parameter> comme s&eacute;parateur de milliers.
   </para>
   <note>
    <para>
     Seul le premier caract&egrave;re du param&egrave;tre <parameter>thousands_sep</parameter>
     est utilis&eacute;. Par exemple, si vous utilisez <literal>foo</literal> comme
     s&eacute;parateur de milliers, sur le nombre <literal>1000</literal>,
     <function>number_format</function> retournera <literal>1f000</literal>.
    </para>
   </note>
   <para>
    En notation fran&ccedil;aise, on utilise g&eacute;n&eacute;ralement deux chiffres
    apr&egrave;s la virgule, une virgule comme s&eacute;parateur d&eacute;cimal, et un
    espace comme s&eacute;parateur de milliers. Cela donne :
    <example>
     <title>Exemple avec <function>number_format</function></title>
     <programlisting role="php">
<![CDATA[
<?php
  $nombre = 1234.56;
// Notation anglaise (par d&eacute;faut)
  $english_format_number = number_format($nombre);
// 1,234.56
// Notation fran&ccedil;aise
  $nombre_format_francais = number_format($nombre, 2, ',', ' ');
// 1 234,56
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Voir aussi
    <function>sprintf</function>,
    <function>printf</function> et
    <function>sscanf</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
