<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.23 $ -->
<!-- EN-Revision: 1.17 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strrpos">
 <refnamediv>
  <refname>strrpos</refname>
  <refpurpose>Trouve la position de la dernière occurrence d'un caractère dans une chaîne</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>strrpos</methodname>
   <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
   <methodparam><type>string</type><parameter>needle</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retourne la position numérique de la dernière occurrence du caractère
   <parameter>needle</parameter> dans la chaîne <parameter>haystack</parameter>.
   Notez que <parameter>needle</parameter> doit être un caractère unique
   en PHP 4. Si une chaîne est passée dans ce paramètre, seul le premier
   caractère sera utilisé.
  </para>
  <para>
   Si <parameter>needle</parameter> n'est pas trouvé, <function>strrpos</function>
   retournera &false;.
  </para>
  <para>
   Il est facile de confondre le résultat "caractère trouvé à la
   position 0" et "caractère non trouvé". Voici comment faire la différence :
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php

// À partir de PHP 4.0.0 :
$pos = strrpos($mystring, "b");
if ($pos === false) { // note : trois signes égal
    // pas trouvé...
}

// en versions plus anciennes que 4.0.0 :
$pos = strrpos($mystring, "b");
if (is_bool($pos) && !$pos) {
    // pas trouvé...
}
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   Si <parameter>needle</parameter> n'est pas une chaîne, il est
   converti en entier, et utilisé comme caractère de code ASCII
   correspondant.
  </para>
  <note>
   <simpara>
    Depuis PHP 5.0.0, <parameter>offset</parameter> peut être spécifié
    pour commencer à rechercher un nombre de caractères arbitraires dans la
    chaîne. Les valeurs négatives vont stopper la recherche à partir d'un
    point arbitraire avant la fin de la chaîne.
   </simpara>
  </note>
  <note>
   <simpara>
    Le paramètre <parameter>needle</parameter> peut être composé de plus
    d'un caractère à partir de PHP 5.0.0.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strpos</function></member>
    <member><function>strripos</function></member>
    <member><function>strrchr</function></member>
    <member><function>substr</function></member>
    <member><function>stristr</function></member>
    <member><function>strstr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
