<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334621 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strrpos">
 <refnamediv>
  <refname>strrpos</refname>
  <refpurpose>Cherche la position de la dernière occurrence d'une sous-chaîne dans une chaîne</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>strrpos</methodname>
   <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
   <methodparam><type>string</type><parameter>needle</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Cherche la position numérique de la dernière occurrence de
   <parameter>needle</parameter> dans la chaîne <parameter>haystack</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
       La chaîne dans laquelle chercher.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      <para>
       Si <parameter>needle</parameter> n'est pas une &string;,
       il sera converti en un entier et utilisé comme valeur
       ordinale du caractère.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Si spécifié, la recherche commencera à ce nombre de caractères,
       compté depuis le début de la chaîne. Si la valeur est
       négative, la recherche commencera depuis ce nombre de caractères,
       depuis la fin de la chaîne, en cherchant en arrière.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la position à laquelle l'occurrence a été trouvée
   relativement au debut de la chaîne <parameter>haystack</parameter>
   (indépendamment de la direction de recherche ou de l'offset).
  </para>
  <para>
   Retourne &false; si l'occurrence n'a pas été trouvée.
  </para>
  &return.falseproblem;
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Le paramètre <parameter>needle</parameter> peut maintenant
        être une &string; composée de plus d'un caractère.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Vérifie si une occurrence est trouvée dans une chaîne</title>
    <para>
     Il est facile de faire une erreur quant à la valeur retournée
     entre "caractère trouvé à la position 0" et "caractère non trouvé".
     Voici comme détecter cette différence :
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$pos = strrpos($mystring, "b");
if ($pos === false) { // note : 3 signes "="
    // non trouvé ...
}

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Recherche avec positions</title>
    <programlisting role="php">
<![CDATA[
<?php
$foo = "0123456789a123456789b123456789c";

var_dump(strrpos($foo, '7', -5));  // Commence à cherche en arrière de 5 positions
                                   // depuis la fin. Résultat : int(17)

var_dump(strrpos($foo, '7', 20));  // Commence à chercher à partir de la 20ème positions
                                   // dansla chaîne. Résultat : int(27)

var_dump(strrpos($foo, '7', 28));  // Résultat : bool(false)
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strpos</function></member>
    <member><function>stripos</function></member>
    <member><function>strripos</function></member>
    <member><function>strrchr</function></member>
    <member><function>substr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
