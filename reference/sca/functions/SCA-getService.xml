<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- Generated by xml_proto.php v2.2. Found in /scripts directory of phpdoc. -->
<!-- EN-Revision: 1.6 Maintainer: dams Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.sca-getservice" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SCA::getService</refname>
  <refpurpose>
   Obtient un proxy pour un service
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type>
   <methodname>SCA::getService</methodname>
   <methodparam>
    <type>string</type>
    <parameter>target</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>string</type>
    <parameter>binding</parameter>
   </methodparam>   
   <methodparam choice="opt">
    <type>array</type>
    <parameter>config</parameter>
   </methodparam>   
  </methodsynopsis>

  &warn.experimental.func;

  <para> 
   Examine la cible, et initialise puis retourne un proxy approprié.
   Si la cible est un composant PHP local, le proxy retourné sera de type 
   <classname>SCA_LocalProxy</classname>. Si la cible est un composant PHP 
   distant, le proxy retourné  sera de type  <classname>SCA_SoapProxy</classname>.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
  <variablelist>
    <varlistentry>
     <term>
      <parameter>target</parameter>
     </term>
     <listitem>
      <para> 
       Un chemin absolu ou relatif jusqu'au service cible, ou la 
       description du service (e.g. an URL vers une script de service en
       json-rpc, un composant PHP, un fichier WSDL, etc.). Une chemin relatif,
       si spécifié, est résolu relativement à la position du script qui émet
       l'appel à <function>getService</function>, et non relativement à 
       include_path, ou le dossier de travail courant.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>binding</parameter>
     </term>
     <listitem>
      <para> 
       L'interface à utiliser (i.e. le protocole) avec le service
       (e.g binding.jsonrpc pour un service json-rpc).  Notez que certaines
       types de services peuvent être déduits du paramètre de cible 
       (e.g. si l'URL de cible finit par .wsdl alors SCA va supposer qu'il faut
       utiliser binding.soap). Tout protocole qui peut être spécifié dans 
       une annotation peut être spécifié dans ce paramètre. Par exemple,
       'binding.soap' est équivalent à l'annotation '@binding.soap'.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>config</parameter>
     </term>
     <listitem>
      <para> 
       Toute configuration supplémentaire pour le protocole (e.g.
       array('location' => 'http://example.org')). Toute configuration 
       supplémentaire peut aussi être configurée dans une annotation.
       Par exemple, 'location' est équivalent à l'annotation '@location',
       pour configurer la destination du service SOAP.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   The SCA_LocalProxy or SCA_SoapProxy.
  </para>
 </refsect1>

 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->


 <!-- Use when a CHANGELOG exists
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Enter the PHP version of change here
       <entry>Description of change
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 -->


 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>SCA::getService</function></title>
    <para>
     Cet exemple montre comment obtenir un proxy pour un service SOAP
     de email, décrit par <filename>EmailService.wsdl</filename> et 
     situé located at 
    <filename>http://example.org</filename>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
include 'SCA/SCA.php';
$service = SCA::getService('EmailService.wsdl', 'binding.soap', array('location' => 'http://example.org'));
$service->send(...);
?>
]]>
    </programlisting>
    &example.outputs;
   </example>
  </para>
 </refsect1>


 <!-- Use when adding See Also links
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function></function></member>
    <member>Or <link linkend="somethingelse">something else</link></member>
   </simplelist>
  </para>
 </refsect1>
 -->


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
