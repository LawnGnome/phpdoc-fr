<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.13 Maintainer: yannick Status: ready -->
<!-- Purpose: basic.php -->
<!-- Membership: core -->
<!-- Reviewed: yes -->

 <reference id="ref.outcontrol">
  <title>Bufferisation de sortie</title>
  <titleabbrev>Bufferisation de sortie</titleabbrev>
  <partintro>
   <section id="outcontrol.intro">
    &reftitle.intro;
    <para>
    Les fonctions de bufferisation de sortie vous permettent de contrôler
    quand les données ont été envoyées par le script. Cela peut
    être utile dans certaines situations, notamment si vous devez
    envoyer des en-têtes au navigateur après avoir envoyé
    des données. Ces fonctions n'affectent pas les en-têtes
    envoyés par la fonction <function>header</function> ou les
    cookies envoyés par <function>setcookie</function>. Seules les
    fonctions telles que <function>echo</function> et les données entre
    blocs &php; sont affectées.
    </para>
   </section>
   <section id="outcontrol.requirements">
    &reftitle.required;
    &no.requirement;
   </section>

   <section id="outcontrol.installation">
    &reftitle.install;
    &no.install;
   </section>

   &reference.outcontrol.ini;

   <section id="outcontrol.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   <section id="outcontrol.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section id="outcontrol.examples">
   &reftitle.examples;
    <para>
     <example>
      <title>Exemple de bufferisation de sortie</title>
      <programlisting role="php">
<![CDATA[
<?php

ob_start();
echo "Bonjour\n";

setcookie("nom_du_cookie", "valeur_du_cookie");

ob_end_flush();

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
    Dans l'exemple ci-dessus, la fonction <function>echo</function>
    est stockée dans un buffer jusqu'à l'appel de la fonction
    <function>ob_end_flush</function>. Dans le même
    temps, l'appel à <function>setcookie</function> a réussi
    à créer un cookie, sans générer d'erreur.
    (D'habitude, vous devez envoyer les en-têtes avant les données).
   </para>
   <note>
     <para>
      Lorsque vous passez de &php; 4.1 ou 4.2 à 4.3, assurez-vous que
      <literal>implict_flush</literal> est à <literal>OFF</literal> dans
      votre &php.ini;, sinon la fonction
      <function>ob_start</function> ne masquera pas les affichages engendrés.
     </para>
    </note>
   </section>

   <section id="outcontrol.seealso">
    &reftitle.seealso;
    <para>
     Voir aussi
     <function>header</function> et
     <function>setcookie</function>.
   </para>
   </section>
  </partintro>

&reference.outcontrol.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

