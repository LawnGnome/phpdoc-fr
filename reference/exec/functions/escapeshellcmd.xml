<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/exec.xml, last change in rev 1.6 -->
<!-- last change to 'escapeshellcmd' in en/ tree in rev 1.2 -->
 <refentry id="function.escapeshellcmd">
  <refnamediv>
   <refname>escapeshellcmd</refname>
   <refpurpose>Protège les caractères spéciaux du Shell</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
      <type>string</type><methodname>escapeshellcmd</methodname>
      <methodparam><type>string</type><parameter>command</parameter></methodparam>
     </methodsynopsis>
   <para>
    <function>escapeshellcmd</function> échappe tous les
    caractères de la chaîne <parameter>command</parameter>
    qui pourraient avoir une signification spéciale dans une
    commande shell. Cette fonction permet de s'assurer que la commande sera
    correctement passée à l'exécuteur de commande shell
    <function>exec</function> et <function>system</function>, ou encore
    à
    <link linkend="language.operators.execution">guillemets obliques</link>.
    Généralement, cette fonction est utilisée comme ceci :
   </para>
   <para>
    <example>
     <title>Exemple avec <function>escapeshellcmd</function></title>
     <programlisting role="php">
<![CDATA[
<?php
  system(escapeshellcmd($cmd));
?>
]]>
     </programlisting>
    </example>
   </para>
    <para>
		 Voir aussi
		 <function>escapeshellarg</function>,
		 <function>exec</function>,
		 <function>popen</function> et 
		 <function>system</function>.
		</para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
