<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.10 $ -->

<!-- splitted from ./fr/functions/exec.xml, last change in rev 1.6 -->
<!-- last change to 'exec' in en/ tree in rev 1.2 -->
 <refentry id="function.exec">
  <refnamediv>
   <refname>exec</refname>
   <refpurpose>Exécute un programme externe</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>exec</methodname>
      <methodparam><type>string</type><parameter>command</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>output</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>return_var</parameter></methodparam>
     </methodsynopsis>
   <para>
    <function>exec</function> execute la commande
    <parameter>command</parameter>, mais ne renvoie rien comme retour,
    hormis la dernière ligne du résultat de la
    commande. Pour exécuter une commande et obtenir le
    résultat sans aucun traitement, il faut utiliser la
    fonction <function>passthru</function>.
   </para>
   <para>
    Si l'argument <parameter>output</parameter> est présent,
    alors ce tableau sera rempli par les lignes retournées par
    la commande. Il faut noter que si ce tableau contient des
    éléments, <function>exec</function> ajoutera
    les nouvelles lignes à la fin du tableau. Si vous ne
    voulez pas que les nouveaux éléments soient
    concaténés, utilisez la fonction
    <function>unset</function> avec ce tableau avant
    de le passer à <function>exec</function>.
   </para>
   <para>
    Si l'argument <parameter>return_var</parameter> est présent
    en plus du tableau <parameter>output</parameter>, alors le statut
    de retour d'exécution sera inscrit dans cette variable.
   </para>
   <para>
    Notez que si vous allez fournir des commandes qui proviennent
    d'un utilisateur, il est avisé d'utiliser la fonction
    <function>escapeshellcmd</function> pour s'assurer que
    l'utilisateur n'essaie pas de profiter des caractères
    spéciaux pour tromper le système.
   </para>
    <note>
     <para>
      Si vous démarrez un programme en utilisant cette fonction, et que vous voulez
      qu'il continue de fonctionner en tâche de fond, vous devez vous assurez que
      le résultat de ce programme est redirigé vers un fichier ou une autre méthode
      d'archivage, car sinon, &php; va attendre la fin de l'exécution du programme.
     </para>
    </note>
    <para>
		 Voir aussi
		 <function>system</function>,
		 <function>passthru</function>,
		 <function>popen</function> et 
		 <function>escapeshellcmd</function>.
		</para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
