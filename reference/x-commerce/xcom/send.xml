<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328062 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="xcom.send" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Xcom::send</refname>
  <refpurpose>Envoi un message</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>int</type><methodname>Xcom::send</methodname>
   <methodparam><type>string</type><parameter>topic</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>json_schema</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>http_headers</parameter></methodparam>
  </methodsynopsis>
  <para>
   Envoi un message vers une capacité (fournisseur API) pour un topic.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   Si le paramètre <parameter>json_schema</parameter> est spécifié,
   le paramètre <parameter>data</parameter> doit être un objet, et encodé
   sous la forme d'un message avro.
  </para>
  <para>
   Si le paramètre <parameter>json_schema</parameter> n'est pas spécifié,
   le paramètre <parameter>data</parameter> sera converti en une chaîne
   de caractères, puis envoyé.
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>topic</parameter></term>
     <listitem>
      <para>
       Le chemin du topic (ie, /store/get/orders).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Les données à envoyer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>json_schema</parameter></term>
     <listitem>
      <para>
       Le schéma JSON avro, si le paramètre <parameter>data</parameter>
       est un objet ; s'il est vide, aucun encodage avro ne sera
       effectué.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>http_headers</parameter></term>
     <listitem>
      <para>
       En-têtes du client HTTP (comme User-Agent, Accept, etc.)
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne le code réponse HTTP, ou &false; si une erreur survient.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>Xcom::send</function> (avro)</title>
    <programlisting role="php">
<![CDATA[
<?php

$schema = file_get_contents('http://api.x.com/ocl/com.x.example.v1/OrderFulfillment/OrderShipped/1.2.0/');

$data = new stdClass();
$data->orderID = "123495585343";

$xcom = new Xcom(XCOM_FABRIC_SANDBOX, "fabric_token", "capability_token");

var_dump($xcom->send("/com.x.example.v1/OrderFulfillment/OrderShipped", $data, $schema));

/*
* Affiche :
* int(200)
*/
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Exemple avec <function>Xcom::send</function> (charge arbitraire)</title>
    <programlisting role="php">
<![CDATA[
<?php

$xcom = new Xcom(XCOM_FABRIC_SANDBOX, "fabric_token", "capability_token");

var_dump($xcom->send("/get/profile", 'request-payload'));

/*
* Affiche :
* int(200)
*/
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>Xcom::sendAsync</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
