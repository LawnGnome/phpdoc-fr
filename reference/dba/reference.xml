<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.16 $ -->
<!-- EN-Revision: 1.23 Maintainer: dams Status: ready -->
<reference id="ref.dba">
 <title>DBA</title>
 <titleabbrev>DBA</titleabbrev>
  <partintro>
   <section id="dba.intro">
    &reftitle.intro;
    <para>
     Ces fonctions constituent l'interface avec les bases de type Berkeley.
    </para>
    <para>
     C'est une couche générale pour plusieurs bases de
     données sur fichiers. En tant que telles, les fonctionnalités
     sont limitées à une partie des fonctionnalités des
     bases de données modernes, comme
     <ulink url="&url.sleepycat;">Sleepycat Software's DB2</ulink> (à ne pas
     confondre avec IBM's DB2 software, qui fonctionne avec <link
     linkend="ref.uodbc">ODBC</link>).
    </para>
   </section>

   <section id="dba.requirements">
   &reftitle.required;
   <para>
    Le comportement de certaines fonctions dépend de la base de
    données utilisée. Par exemple
    <function>dba_optimize</function> et <function>dba_sync</function>
    n'auront pas le même effet d'une base à l'autre.
   </para>
   <para>
    Lors de l'utilisation de la fonction <function>dba_open</function> ou de
    <function>dba_popen</function>, une des bibliothèques suivantes doit
    être fournie comme argument. La liste complète des bibliothèques
    supportées par votre configuration est disponible avec la fonction
    <function>phpinfo</function>. (Pour inclure le support de l'une
    de ces bibliothèques, ajoutez l'option de configuration
    <literal>--with-XXXX</literal>).

    <table>
     <title>Liste des bibliothèques DBA</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Bibliothèque</entry>
        <entry>Notes</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><literal>dbm</literal></entry>
        <entry>
         Dbm est la plus ancienne des base de données de type Berkeley.
         Il vaut mieux l'éviter, si possible. Les fonctions de
         compatibilités codées dans DB2 et gdbm
         ne sont pas supportées, car elles ne sont compatibles qu'au
         niveau du code source et ne peuvent pas gérer le format dbm
         originel.
        </entry>
       </row>

       <row>
        <entry><literal>ndbm</literal></entry>
        <entry>
         ndbm est un nouveau type de dbm plus flexible. Il a cependant
         la majorité des limitations du genre. (il est donc déconseillé)
        </entry>
       </row>

       <row>
        <entry><literal>gdbm</literal></entry>
        <entry>
         gdbm est <ulink url="&url.gdbm;">la base dbm GNU</ulink>.
        </entry>
       </row>

       <row>
        <entry><literal>db2</literal></entry>
        <entry>
         db2 est <ulink url="&url.sleepycat;">DB2 de Sleepycat Software</ulink>.
         Elle se décrit comme un "ensemble d'outils qui fournissent une
         base de données performante, tant pour les applications
         indépendantes que pour le client/serveur".
        </entry>
       </row>

       <row>
        <entry><literal>db3</literal></entry>
        <entry>
         DB3 est le <ulink url="&url.sleepycat;">DB3 de Sleepycat
         Software</ulink>.
        </entry>
       </row>

       <row>
        <entry><literal>db4</literal></entry>
        <entry>
         DB4 est le <ulink url="&url.sleepycat;">Sleepycat Software's
         DB4</ulink>. Elle est disponible depuis &php; 4.3.2.
        </entry>
       </row>

       <row>
        <entry><literal>cdb</literal></entry>
        <entry>
         cdb est "un package rapide, robuste, léger pour créer et
         lire des bases de données constantes". C'est l'auteur de qmail
         qui l'a écrit, et elle est disponible <ulink
         url="&url.cdb;">ici</ulink>. Puisque
         c'est une base constante, elle ne supporte que la lecture. Mais
         depuis &php; 4.3.0, le support de l'écriture a été ajouté (mais
         pas celui de la modification), grâce aux bibliothèques internes de cdb.
        </entry>
       </row>

       <row>
        <entry><literal>cdb_make</literal></entry>
        <entry>
         Depuis &php; 4.3.0, la création de fichier cdb est supportée,
         lorsque la bibliothèque cdb, distribuée avec &php; est utilisée.
        </entry>
       </row>

       <row>
        <entry><literal>flatfile</literal></entry>
        <entry>
         Depuis &php; 4.3.0, et pour assurer la compatibilité avec le gestionnaire
         <link linkend="ref.dbm">dbm</link> qui est obsolète et doit être évité,
         &php; supporte aussi un gestionnaire de fichiers. Il est recommandé
         de l'utiliser lorsque vous devez accéder à des fichiers au format dbm.
         Cela arrive lorsque vous ne pouvez pas trouver les bibliothèques dbm
         pour compiler &php; avec.
        </entry>
       </row>

       <row>
        <entry><literal>inifile</literal></entry>
        <entry>
         Ceci est disponible depuis &php; 4.3.3 pour pouvoir modifier les fichiers
         php.ini depuis les scripts &php;. Lorsque vous travaillez avec des fichiers ini,
         vous pouvez passer des tableaux de la forme array(0 => groupe, 1=>nom_valeur)
         ou des chaînes de la forme "[groupe]nom_valeur" où groupe est optionnel. Comme
         les fonctions <function>dba_firstkey</function> et <function>dba_nextkey</function>
         retournent des représentations de la clé au format chaîne, il existe une nouvelle
         fonction, <function>dba_key_split</function>, disponible depuis &php; 5 qui permet
         de convertir la chaîne de caractères de clefs en tableau de clefs sans perdre &false;.
        </entry>
       </row>

       <row>
        <entry><literal>qdbm</literal></entry>
        <entry>
         This is available since PHP 5.0.0. The qdbm library can be loaded from
         <ulink url="http://qdbm.sourceforge.net">http://qdbm.sourceforge.net</ulink>.
        </entry>
       </row>

      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
    Lors de l'utilisation de la fonction <function>dba_open</function> ou de
    <function>dba_popen</function>, une des bibliothèques suivantes doit
    être fournie comme argument. La liste complète des bibliothèques
    supportées par votre configuration est disponible avec la fonction
    <function>phpinfo</function>.
   </para>
  </section>
  &reference.dba.configure;

  <section id="dba.runtime">
   &reftitle.runtime;
   &no.config;
  </section>

  <section id="dba.resources">
   &reftitle.resources;
   <para>
    Les fonctions <function>dba_open</function> et
    <function>dba_popen</function> retourne une ressource qui représente la
    base de données ouverte, et qui est utilisées par toutes les autres
    fonctions dba.
   </para>
  </section>

  <section id="dba.constants">
   &reftitle.constants;
   &no.constants;
  </section>

  <section id="dba.examples">
   &reftitle.examples;
   <para>
    <example>
     <title>Exemple DBA (1)</title>
     <programlisting role="php">
<![CDATA[
<?php

$id = dba_open ("/tmp/test.db", "n", "db2");

if (!$id) {
    echo "dba_open a échoué\n";
    exit;
}

dba_replace ("cle", "Ceci est un exemple!", $id);

if (dba_exists ("cle", $id)) {
    echo dba_fetch ("cle", $id);
    dba_delete ("cle", $id);
}

dba_close ($id);
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    DBA gère les données binaires et n'a pas de limites
    arbitraires. Elle hérite de toutes les limites de la base
    sous-jacente.
   </para>
   <para>
    Toutes les bases de données sur fichiers doivent fournir un moyen
    de changer le mode d'accès au fichier d'une base et, si possible,
    de toutes les bases. Le mode d'accès est généralement
    passé en quatrième argument à <function>dba_open</function>
    ou <function>dba_popen</function>.
   </para>
   <para>
    Vous pouvez accéder à toutes les entrées d'une
    base d'une manière linéaire, avec les fonctions
    <function>dba_firstkey</function> et <function>dba_nextkey</function>.
    Vous ne devez pas modifier une base lorsque vous la traversez ainsi.
   </para>
   <para>
    <example>
     <title>Passer en revue une base</title>
     <programlisting role="php">
<![CDATA[
<?php

// ...ouverture de la base...

$key = dba_firstkey ($id);

while ($key != false) {
    if (...) {
    // conserver la clé pour faire d'autres opérations plus tard
        $handle_later[] = $key;
    }
    $key = dba_nextkey ($id);
}

for ($i = 0; $i < count($handle_later); $i++)
    dba_delete ($handle_later[$i], $id);

?>
]]>
     </programlisting>
    </example>
   </para>
  </section>
 </partintro>
 &reference.dba.functions;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

