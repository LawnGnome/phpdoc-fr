<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 317663 Maintainer: jpauli Status: ready -->
<!-- Reviewed: no -->

<section xml:id="mongo.testing" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Lancer les tests du pilote</title>

 <para>
  Le paquet PECL n'est pas inclus dans les tests, mais sont disponibles sur
  <link xlink:href="&url.mongodb.github;">Github</link>. Il y a
  2 types de tests : les tests PHPUnit et les tests C.
 </para>

 <section>
  <title>Tests PHPUnit</title>
  <para>
   Pour exécuter les tests, vous devez télécharger le driver depuis
   Github (les tests sont dans le dossier <literal>tests/</literal>).
   Vous aurez également besoin de
   <link xlink:href="&url.phpunit.install;">PHPUnit</link> pour les exécuter.
   PHPUnit peut être installé via PEAR (regardez également les instructions
   d'installation, il nécessite quelques pré-requis).
  </para>
  <para>
   Quelques tests attendent des alertes ou des erreurs, aussi, vous
   devez définir <literal>error_reporting</literal> dans votre
   <literal>php.ini</literal> à <literal>E_STRICT | E_ALL</literal>
   afin qu'ils puissent être réalisés. Si vous ne le faîtes pas, vous
   obtiendrez des erreurs qui indiquent que le test attendait une alerte ou
   une erreur.
  </para>
  <para>
   Pour exécuter ces tests, assurez-vous qu'il y a un serveur MongoDB
   fonctionnant localement sur le port 27017. Avant de rapporter des erreurs,
   essayez d'exécuter ces tests sur la dernière version de développement
   de MongoDB : en effet, il y a des tests sur des fonctionnalités qui ne
   sont pas encore sur la version stable.
  </para>
  <para>
   La suite de tests utilise la base de données "phpunit". Si vous utilisez
   une base de données portant un tel nom dans votre application, assurez-vous
   de pointer MongoDB sur un dossier de données différent avant d'exécuter les
   tests.
  </para>
  <para>
   Assurez-vous d'être dans le dossier principal des sources du driver
   téléchargé depuis Github. Puis, exécutez :
  </para>
  <programlisting>
<![CDATA[

$ phpunit tests/MongoSuite.php

]]>
 </programlisting>
 </section>

 <section>
  <title>Tests C</title>
  <para>
   Les tests C vérifie principalement les fonctions internes qui ne sont pas
   exposées via PHP. Si vous souhaitez exécuter ces tests, vous devez
   compiler PHP avec l'option <literal>--enable-embed</literal>. Puis,
   placez-vous dans le dossier <filename>tests</filename> et exécutez
   <literal>make</literal>. Ceci va créer un binaire appelé
   <literal>unit</literal>.  Exécutez ce binaire <literal>unit</literal>
   pour lancer les tests. Ils ne requièrent pas de base de données pour
   être exécutés.
  </para>

  <para>
   Si un test passe, il affichera un point (".").  Si un test
   échoue, les tests s'arrêteront. Rapportez tous les échecs.
  </para>

  <para>
   Si <literal>make</literal> ne peut trouver la bibliothèque PHP embarqué
   (libphp5.so) ou les fichiers d'en-têtes, vous devez les spécifier
   dans la variable <literal>PHP_PATH</literal>.
  </para>

  <para>
   Exécuter <literal>make clean</literal> pour supprimer tous les
   objets utilisés pour les tests.
  </para>

  <para>
   Si vous exécutez ces tests avec <filename>valgrind</filename>,
   vous ne devriez pas avoir d'erreurs sur les accès à la mémoire.
  </para>
 </section>

 <section>
  <title>Rapport des erreurs</title>
  <para>
   Veuillez rapporter tous les échecs ou les erreurs dans
   <link xlink:href="&url.mongodb.jira;">l'outil de suivi des bogues</link>.
   Il se peut que des tests ne soient pas exécuter, c'est normal et vous
   pouvez les ignorer.
  </para>
  <para>
   Les nouveaux tests sont toujours les bienvenus ! Vous pouvez contribuer
   en proposant des nouveaux tests sur toutes les fonctionnalités.
  </para>
 </section>
</section>
