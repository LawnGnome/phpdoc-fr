<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 305112 Maintainer: jpauli Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocollection.ensureindex" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::ensureIndex</refname>
  <refpurpose>
   Crée un index sur un champ donné
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>boolean</type><methodname>MongoCollection::ensureIndex</methodname>
   <methodparam><type>array</type><parameter>keys</parameter></methodparam>
   <methodparam><type>array</type><parameter>options</parameter></methodparam>
  </methodsynopsis>
  <para>
   Un index unique ne peut être créé dans un champ si plusieurs documents existants
   ne contiennent pas ce champ. Le champ vaut effectivement &null; pour ces documents
   et ces derniers ne sont déjà pas uniques.
  </para>
 </refsect1>
 
 <refsect1 role="parameters"> 
  &reftitle.parameters; 
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>keys</parameter>
     </term>
     <listitem>
      <para>
       Le ou les champs à indexer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Ce paramètre est un tableau associatif sous la forme
       <literal>array("optionname" => &lt;boolean&gt;, ...)</literal>.
       Actuellement, les options supportées sont :
       <itemizedlist>
        <listitem>
         <para>
          <literal>"unique"</literal>
         </para>
         <para>
          Crée un index unique.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"dropDups"</literal>
         </para>
         <para>
          Si un index unique est sur le point d'être créé et que les
          valeurs dupliquées existent, les valeurs existantes seront supprimées.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"background"</literal>
         </para>
         <para>
          Si vous utilisez la version 1.3.2+ de MongoDB, vous pouvez créer des index en
          arrière plan pendant que d'autres opérations se déroulent. Par défaut, la création
          des index est synchrone. Si vous précisez &true; à cette option, la création d'index
          sera asynchrone.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"safe"</literal>
         </para>
         <para>
          Depuis la version 1.0.4 du driver, vous pouvez spécifier une valeur booléenne
          pour vérifier si la création de l'index a réussi. Le driver lancera
          une exception MongoCursorException si la création de l'index échoue.
         </para>
         <para>
          Si vous utilisez la réplication et que le maitre a changé, utiliser "safe"
          fera que le pilote se déconnectera du maitre, enverra une exception, et tentera
          de trouver un nouveau maitre à l'opération suivante (votre application doit
          décider si oui ou non l'opération devra être rééssayée sur le nouveau maitre).
         </para>
         <para>
          Si vous n'utilisez <emphasis>pas</emphasis> "safe" avec une paire de réplication
          et que le maitre change, il n'y aura aucun moyen pour le pilote d'avoir connaissance
          de ce changement et il continuera des écritures en échec.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"name"</literal>
         </para>
         <para>
          Après la version 1.0.4 du driver (la version 1.0.4 n'est pas concernée),
          vous pouvez spécifier le nom de l'index. Ceci peut être utile si vous
          indexez plusieurs clés et que Mongo vous indique que les noms des index
          sont trop longs.
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns &true;.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.0.2</entry>
       <entry>
        Le paramètre "options" passe de booléen à un tableau.
        En version Pre-1.0.2, le second paramètre était une valeur booléenne
        optionnelle spécifiant un index unique.
       </entry>
       <entry>1.0.11</entry>
       <entry>
        "safe" déclenchera le failover du maitre, si nécessaire.
       </entry>
       <entry>
        <classname>MongoException</classname> sera envoyée si le nom de l'index
        (généré ou pas) est plus long que 128 octets.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Envoi <classname>MongoException</classname> si le nom de l'index est plus grand que
   128 octets. (Version 1.0.11+)
  </para>
  <para>
   Envoi <classname>MongoCursorException</classname> si l'option "safe" est utilisée et
   que la création d'index échoue.
  </para>
  <para>
   Envoi <classname>MongoCursorTimeoutException</classname> si l'option "safe" est utilisée
   et a une valeur plus grande que 1 et que la base de données ne peut pas répliquer
   l'opération avant <literal>MongoCollection::$wtimeout</literal> millisecondes.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoCollection::ensureIndex</function></title>
   <programlisting role="php">
<![CDATA[
<?php

$c = new MongoCollection($db, 'foo');

// Crée un index montant sur 'x'
$c->ensureIndex(array('x' => 1));

// Crée un index montant sur 'z' et descendant sur 'zz'
$c->ensureIndex(array('z' => 1, 'zz' => -1));

// Crée un index unique sur 'x'
$c->ensureIndex(array('x' => 1), array("unique" => true));
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Exemple de suppression de données dupliquées</title>
   <programlisting role="php">
<![CDATA[
<?php

$collection->insert(array("username" => "joeschmoe"));
$collection->insert(array("username" => "joeschmoe"));

/*
 * La création d'index a échoué, vous ne pouvez pas créer d'index unique
 * sur une clé ne possédant pas de valeurs non-uniques
 */
$collection->ensureIndex(array("username" => 1), array("unique" => 1));

/*
 * La création d'index a réussi : un des documents est supprimé de la collection
 */
$collection->ensureIndex(array("username" => 1), array("unique" => 1, "dropDups" => 1));

/*
 * Maintenant que nous avons un index unique, les prochaines insertions
 * avec le même nom d'utilisateur (comme ci-dessous) échoueront
 */
$collection->insert(array("username" => "joeschmoe"));

?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Indexation géospatiales</title>
   <para>
    Mongo supporte l'indexation géospatiales, vous permettant de chercher des documents
    se trouvant près d'un endroit donné, ou dans une forme. Par exemple, pour créer
    un index géospatial sur le champ "loc" :
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$collection->ensureIndex(array("loc" => "2d"));

?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   Documentation de MongoDB concernant les<link xlink:href="&url.mongodb.dochub.indexes;">index</link>
   et les <link xlink:href="&url.mongodb.dochub.geo;">indexes géospatiales</link>.
  </para>
 </refsect1>
 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
