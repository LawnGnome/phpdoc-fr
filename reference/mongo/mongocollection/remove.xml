<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 319495 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="mongocollection.remove" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::remove</refname>
  <refpurpose>Supprime un enregistrement d'une collection</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool|array</type><methodname>MongoCollection::remove</methodname>
   <methodparam choice="opt"><type>array</type><parameter>criteria</parameter><initializer>array()</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;    
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>criteria</parameter>
     </term>
     <listitem>
      <para>
       La description des enregistrements à supprimer.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Options pour l'effacement.
       <itemizedlist>
        <listitem>
         <para>
          <literal>"justOne"</literal>
         </para>
         <para>
          Efface un seul enregistrement correspondant aux critères.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"safe"</literal>
         </para>
         <para>
          Peut être un booléen ou un entier, et vaut par défaut &false;.
          Si vaut &false;, le programme continue l'exécution sans attendre
          la réponse de la base de données. Si vaut &true;, le programme
          attendra la réponse de la base de données et lancera une exception
          <classname>MongoCursorException</classname> si l'insertion a échouée.
         </para>
         <para>
          Si vous utilisez la réplication et que le maitre a changé, utiliser "safe"
          fera que le pilote se déconnectera du maitre, enverra une exception, et tentera
          de trouver un nouveau maitre à l'opération suivante (votre application doit
          décider si oui ou non l'opération devra être rééssayée sur le nouveau maitre).
         </para>
         <para>
          Si vous n'utilisez <emphasis>pas</emphasis> "safe" avec une paire de réplication
          et que le maitre change, il n'y aura aucun moyen pour le pilote d'avoir connaissance
          de ce changement et il continuera des écritures en échec.
         </para>
         <para>
          Si <literal>safe</literal> est un entier, l'insertion sera répliquée
          sur l'ensemble des machines avant de retourner le succès de l'opération
          (ou lancera une exception si la réplication échoue). Cette valeur écrase
          la variable w définie sur la collection.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"fsync"</literal>
         </para>
         <para>
          Booléen et vaut par défaut &false;. Force l'insertion à être synchronisée
          sur le disque avant de retourner le succès de l'opération. Si vaut &true;,
          une insertion sécurisée sera effectuée et le paramétrage de
          <literal>safe</literal> sera automatiquement valorisé à &false;.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"timeout"</literal>
         </para>
         <para>
          Entier, par défaut, vaut <literal>MongoCursor::$timeout</literal>.
          Si "safe" est défini, il définira (en millisecondes) le temps d'attente
          du client d'une réponse de la base de données. Si la base de données ne
          répond pas dans la période de timeout, une exception
          <classname>MongoCursorTimeoutException</classname> sera émise.
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Si le paramètre <parameter>safe</parameter> est défini, retourne un tableau contenant
   le statut de l'effacement. Sinon, retourne un booléen représentant le fait que
   le tableau n'était pas vide (un tableau vide ne sera pas inséré). Ce champ
   de ce tableau est décrit dans la documentation de la méthode
   <function>MongoCollection::insert</function>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lance une exception <classname>MongoCursorException</classname>
   si l'option "safe" est définie et que l'effacement échoue.
  </para>
  <para>
   Lance une exception <classname>MongoCursorTimeoutException</classname>
   si l'option "safe" est définie et que l'opération prend plus
   de temps que <varname>MongoCollection::$wtimeout</varname> millisecondes.
   Ceci ne tue pas le processus serveur, mais uniquement le délai
   d'attente côté client.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.0.5</entry>
       <entry>
        Modification du second paramètre en un tableau d'options.
        Pre-1.0.5, le second paramètre était un booléen indiquant
        l'option "justOne" et il n'y avait pas d'option "safe".
       </entry>
      </row>
      <row>
       <entry>1.0.9</entry>
       <entry>
        Ajout de la capacité de passer des entiers aux options "safe" (n'acceptaient que
        des booléens avant) et ajout de l'option "fsync".
       </entry>
      </row>
      <row>
       <entry>1.0.9</entry>
       <entry>
        Le type retourné a été modifié en un tableau contenant les informations
        de l'erreur si l'option "safe" est utilisée, sinon, ce sera un booléen
        comme auparavant.
       </entry>
      </row>
       <row>
       <entry>1.0.11</entry>
       <entry>
        Se déconnecte lors d'erreurs "not master" si "safe" est utilisé.
       </entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry>
        Ajout de l'option timeout.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoCollection::remove</function> et <parameter>justOne</parameter></title>
   <programlisting role="php">
<![CDATA[
<?php

$radioactive = $db->radioactive;

// compte la quantité de plutonium
$remaining = $radioactive->count(array('type' => 94));

$halflife = $remaining/2;

// Suppression de la moitié
while ($halflife > 0) {
    $radioactive->remove(array('type' => 94), array("justOne" => true));
    $halflife--;
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoCollection::insert</function></member>
   <member><function>MongoCollection::update</function></member>
   <member>Documentation de MongoDB <link xlink:href="&url.mongodb.dochub.remove;">concernant  remove</link>.</member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
