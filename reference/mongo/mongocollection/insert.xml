<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 319012 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="mongocollection.insert" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::insert</refname>
  <refpurpose>Insère un tableau dans la collection</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>MongoCollection::insert</methodname>
   <methodparam><type>array</type><parameter>a</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
   Toutes les chaînes envoyées à la base de données doivent être en UTF-8.
   Si une chaîne n'est pas UTF-8, une exception <classname>MongoException</classname>
   sera émise. Pour insérer (ou chercher) une chaîne non-UTF-8, utilisez la méthode
   <classname>MongoBinData</classname>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>a</parameter>
     </term>
     <listitem>
      <para>
       Un tableau.
      </para>
     </listitem>
    </varlistentry>  
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Options d'insertion.
       <itemizedlist>
        <listitem>
         <para>
          <literal>"safe"</literal>
         </para>
         <para>
          Peut être un booléen ou un entier, et vaut par défaut &false;.
          Si vaut &false;, le programme continue l'exécution sans attendre
          la réponse de la base de données. Si vaut &true;, le programme
          attendra la réponse de la base de données et lancera une exception
          <classname>MongoCursorException</classname> si l'insertion a échouée.
         </para>
         <para>
          Si vous utilisez la réplication et que le maitre a changé, utiliser "safe"
          fera que le pilote se déconnectera du maitre, enverra une exception, et tentera
          de trouver un nouveau maitre à l'opération suivante (votre application doit
          décider si oui ou non l'opération devra être rééssayée sur le nouveau maitre).
         </para>
         <para>
          Si vous n'utilisez <emphasis>pas</emphasis> "safe" avec une paire de réplication
          et que le maitre change, il n'y aura aucun moyen pour le pilote d'avoir connaissance
          de ce changement et il continuera des écritures en échec.
         </para>
         <para>
          Si <literal>safe</literal> est un entier, l'insertion sera répliquée
          sur l'ensemble des machines avant de retourner le succès de l'opération
          (ou lancera une exception si la réplication échoue). Cette valeur écrase
          la variable w définie sur la collection.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"fsync"</literal>
         </para>
         <para>
          Booléen et vaut par défaut &false;. Force l'insertion à être synchronisée
          sur le disque avant de retourner le succès de l'opération. Si vaut &true;,
          une insertion sécurisée sera effectuée et le paramétrage de
          <literal>safe</literal> sera automatiquement valorisé à &false;.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"timeout"</literal>
         </para>
         <para>
          Entier, par défaut, vaut <literal>MongoCursor::$timeout</literal>.
          Si "safe" est défini, il définira (en millisecondes) le temps d'attente
          du client d'une réponse de la base de données. Si la base de données ne
          répond pas dans la période de timeout, une exception
          <classname>MongoCursorTimeoutException</classname> sera émise.
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Si le paramètre <parameter>safe</parameter> a été défini, retourne un tableau
   contenant le statut de l'insertion. Sinon, retourne un booléen indiquant si
   le tableau est non vide (un tableau vide ne peut être inséré).
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lance une exception <classname>MongoCursorTimeoutException</classname>
   si l'option "safe" est définie et que l'insertion échoue. (Version 1.0.1+)
  </para>
  <para>
   Lance une exception <classname>MongoCursorTimeoutException</classname>
   si l'option "safe" est définie et que l'opération prend plus
   de temps que <varname>MongoCollection::$wtimeout</varname> millisecondes.
   Ceci ne tue pas le processus serveur, mais uniquement le délai
   d'attente côté client.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.0.5</entry>
       <entry>
        Modification du second paramètre en un tableau d'options.
        Avant la version 1.0.5, le second paramètre était un booléen
        indiquant l'option "safe".
       </entry>
      </row>
      <row>
       <entry>1.0.9</entry>
       <entry>
        Ajout de la possibilité de passer des entiers à l'option
        "safe" (auparavant, seuls les booléens étaient acceptés)
        et ajout de l'option "fsync".
       </entry>
      </row>
       <row>
       <entry>1.0.11</entry>
       <entry>
        Se déconnecte lors d'erreurs "not master" si "safe" est utilisé.
       </entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry>
        Ajout de l'option timeout.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoCollection::insert</function></title>
   <para>
    L'insertion d'un objet ajoutera un champ _id sauf s'il est passé par référence.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$m = new Mongo();
$db = $m->selectDB('test');
$collection = new MongoCollection($db, 'phpmanual');

$a = array('x' => 12);
$collection->insert($a);
var_dump($a);

$b = array('x' => 12);
$ref = &$b;
$collection->insert($ref);
var_dump($ref);

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
array(2) {
  ["x"]=>
  int(12)
  ["_id"]=>
  object(MongoId)#4 (0) {
  }
}
array(12) {
  ["x"]=>
  int(1)
}
]]>
   </screen>
  </example>
  
  <example>
   <title>Exemple avec <function>MongoCollection::insert</function> en mode sécurisé</title>
   <para>
    Cet exemple montre l'insertion de 2 éléments avec le même _id,
    ce qui entraine l'émission d'une exception
    <classname>MongoCursorException</classname> vu que le paramètre
    <parameter>safe</parameter> a été défini.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$person = array("name" => "Joe", "age" => 20);
$collection->insert($person, true);

// Maintenant, $person a un champ _id, aussi, si vous le sauvegardez à nouveau,
// une exception sera émise
try {
    $collection->insert($person, true);
} catch(MongoCursorException $e) {
    echo "Vous ne pouvez pas sauvegarder la même personne 2 fois !\n";
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoCollection::batchInsert</function></member>
   <member><function>MongoCollection::update</function></member>
   <member><function>MongoCollection::find</function></member>
   <member><function>MongoCollection::remove</function></member>
   <member>Documentation de MongoDB <link xlink:href="&url.mongodb.dochub.insert;">concernant insert</link>.</member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
