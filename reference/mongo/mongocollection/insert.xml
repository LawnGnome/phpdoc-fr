<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328545 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="mongocollection.insert" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::insert</refname>
  <refpurpose>Insère un tableau dans la collection</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool|array</type><methodname>MongoCollection::insert</methodname>
   <methodparam><type>array</type><parameter>a</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
   Toutes les chaînes envoyées à la base de données doivent être en UTF-8.
   Si une chaîne n'est pas UTF-8, une exception <classname>MongoException</classname>
   sera émise. Pour insérer (ou chercher) une chaîne non-UTF-8, utilisez la méthode
   <classname>MongoBinData</classname>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>a</parameter>
     </term>
     <listitem>
      <para>
       Un tableau.
      </para>
     </listitem>
    </varlistentry>  
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Options d'insertion.
       <itemizedlist>
        &mongo.writes.parameters.writeconcern;
        &mongo.writes.parameters.fsync;
        &mongo.writes.parameters.timeout;
        &mongo.writes.parameters.safe;
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau contenant le statut de l'insertion si l'option
   <literal>"w"</literal> est définie. Sinon, retourne &true; si le tableau
   inséré n'est pas vide (une exception <classname>MongoException</classname>
   sera lancée si le tableau inséré est vide).
  </para>
  <para>
   Si un tableau est retourné, les clés suivantes peuvent être
   présentes :
   <variablelist>
    <varlistentry>
     <term>
      <parameter>ok</parameter>
     </term>
     <listitem>
      <para>
       Doit toujours valoir 1 (à moins que last_error échoue).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>err</parameter>
     </term>
     <listitem>
      <para>
       Si ce champ est non-nul, une erreur est survenue lors de la dernière
       opération. Si ce champ est défini, il sera une chaîne de caractères
       décrivant l'erreur survenue.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>code</parameter>
     </term>
     <listitem>
      <para>
       Si une erreur de base de données est survenue, le code erreur
       de cette erreur sera passé au client.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>errmsg</parameter>
     </term>
     <listitem>
      <para>
       Ce champ est défini si quelque chose a échoué avec une commande de base
       de données. Il est couplé avec <literal>ok</literal> qui vaudra alors 0.
       Par exemple, si <literal>w</literal> est défini et que le délai maximal
       d'attente est atteint, errmsg sera défini à "timed
       out waiting for slaves" et <literal>ok</literal> vaudra 0. Si ce champ
       est défini, il sera une chaîne de caractères décrivant l'erreur survenue.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>n</parameter>
     </term>
     <listitem>
      <para>
       Si la dernière opération était une insertion, une mise à jour ou une suppression,
       le nombre d'objets affectés sera retourné.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>wtimeout</parameter>
     </term>
     <listitem>
      <para>
       Si l'option précédente a expiré en attendant la réplication.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>waited</parameter>
     </term>
     <listitem>
      <para>
       Le temps que l'opération doit attendre avant d'expirer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>wtime</parameter>
     </term>
     <listitem>
      <para>
       Si <literal>w</literal> a été défini et que l'opération réussit,
       ce sera le temps prit pour la réplication vers les
       <literal>w</literal> serveurs.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>upserted</parameter>
     </term>
     <listitem>
      <para>
       Si un upsert survient, ce champ contiendra le champ
       <literal>_id</literal> du nouvel enregistrement. Pour les upserts,
       soit ce champ, soit le champ <literal>updatedExisting</literal>
       sera présent (à moins qu'une erreur ne survienne).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>updatedExisting</parameter>
     </term>
     <listitem>
      <para>
       Si un upsert met à jour un élément existant, ce champ vaudra &true;.
       Pour les upserts, soit ce champ, soit le champ upserted sera présent
       (à moins qu'une erreur ne survienne).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lance une exception <classname>MongoCursorTimeoutException</classname>
   si le tableau inséré est vide.
  </para>
  &mongo.errors.exceptions.writeconcern;
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.3.0</entry>
       <entry>
        Le paramètre <parameter>options</parameter> n'accepte plus
        de booléen pour indiquer une insertion reconnue.
        A la place, ceci doit maintenant être effectué via
        <literal>array('w' => 1)</literal> (Le comportement par défaut de
        <classname>MongoClient</classname>).
       </entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry>
        Ajout de l'option <literal>"timeout"</literal>.
       </entry>
      </row>
      <row>
       <entry>1.0.11</entry>
        <entry>
         Se déconnecte lors d'erreurs "not master" si <literal>"safe"</literal> est utilisé.
        </entry>
      </row>
      <row>
       <entry>1.0.9</entry>
       <entry>
        <para>
         Ajout de la possibilité de passer des entiers à l'option
         <literal>"safe"</literal> (auparavant, seuls les booléens étaient acceptés).
        </para>
        <para>
         Ajotu de l'option <literal>"fsync"</literal>.
        </para>
        <para>
         Le type retourné a changé. C'est maintenant un tableau contenant
         les informations d'erreur si l'option <literal>"safe"</literal> est utilisée,
         sinon, c'est un booléen, comme auparavant.
        </para>
       </entry>
      </row>
      <row>
       <entry>1.0.5</entry>
       <entry>
        Modification du second paramètre en un tableau d'options.
        Avant la version 1.0.5, le second paramètre était un booléen
        indiquant l'option <literal>"safe"</literal>.
       </entry>
      </row>
      <row>
       <entry>1.0.1</entry>
       <entry>
        Lance une exception <classname>MongoCursorException</classname>
        si l'option <literal>"safe"</literal> est définie et que l'insertion échoue.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoCollection::insert</function></title>
   <para>
    L'insertion d'un objet ajoutera un champ _id sauf s'il est passé par référence.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$m = new MongoClient();
$db = $m->selectDB('test');
$collection = new MongoCollection($db, 'phpmanual');

$a = array('x' => 12);
$collection->insert($a);
var_dump($a);

$b = array('x' => 12);
$ref = &$b;
$collection->insert($ref);
var_dump($ref);

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
array(2) {
  ["x"]=>
  int(12)
  ["_id"]=>
  object(MongoId)#4 (0) {
  }
}
array(12) {
  ["x"]=>
  int(1)
}
]]>
   </screen>
  </example>
  
  <example>
   <title>Exemple d'une écriture reconnue avec <function>MongoCollection::insert</function></title>
   <para>
    Cet exemple montre l'insertion de 2 éléments avec le même _id,
    ce qui entraine l'émission d'une exception
    <classname>MongoCursorException</classname> vu que le paramètre
    <parameter>w</parameter> a été défini.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$person = array("name" => "Joe", "age" => 20);
$collection->insert($person);

// Maintenant, $person a un champ _id, aussi, si vous le sauvegardez à nouveau,
// une exception sera émise
try {
    $collection->insert($person, array("w" => 1));
} catch(MongoCursorException $e) {
    echo "Vous ne pouvez pas sauvegarder la même personne 2 fois !\n";
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoCollection::batchInsert</function></member>
   <member><function>MongoCollection::update</function></member>
   <member><function>MongoCollection::find</function></member>
   <member><function>MongoCollection::remove</function></member>
   <member>Documentation de MongoDB <link xlink:href="&url.mongodb.dochub.insert;">concernant insert</link>.</member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
