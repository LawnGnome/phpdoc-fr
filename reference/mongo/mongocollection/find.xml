<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 299506 Maintainer: jpauli Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="mongocollection.find" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::find</refname>
  <refpurpose>Interroge une collection</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCollection::find</methodname>
   <methodparam choice="opt"><type>array</type><parameter>query</parameter><initializer>array()</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>fields</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;  
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>query</parameter>
     </term>
     <listitem>
      <para>
       Les champs à chercher.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>fields</parameter>
     </term>
     <listitem>
      <para>
       Les champs du résultat à retourner.
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un curseur pour les résultats de recherche.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoCollection::find</function></title>
   <para>
    Cet exemple montre comment rechercher un intervalle.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// recherche les documents dont l'identifiant est entre 5 < x < 20
$rangeQuery = array('x' => array( '$gt' => 5, '$lt' => 20 ));

$cursor = $collection->find($rangeQuery);

?>
]]>
   </programlisting>
   <para>
     Voyez <classname>MongoCursor</classname> pour plus d'informations sur le
     fonctionnement des curseurs.
   </para>
  </example>
  <example>
   <title>Exemple pour <function>MongoCollection::find</function> en utilisant $where</title>
   <para>Cet exemple montre comment chercher dans une collection en utilisant du code
    javascript pour réduire les résultats retournés.</para>
   <programlisting role="php">
<![CDATA[
<?php

$collection = $db->my_db->articles;

$js = "function() {
  return this.type == 'homepage' || this.featured == true;
}";
$articles = $collection->find(array('$where' => $js));

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Exemple pour <function>MongoCollection::find</function> utilisant $in</title>
   <para>Cet exemple montre comment chercher dans une collection en utilisant l'opérateur $in.</para>
   <programlisting role="php">
<![CDATA[
<?php

$collection = $db->my_db->articles;
$articles = $collection->find(array(
  'type' => array('$in' => array('homepage', 'editorial'))
));

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   Documentation de MongoDB <link xlink:href="&url.mongodb.dochub.find;">concernant find</link>.
  </para>
 </refsect1>
 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
