<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330401 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongoclient.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoClient::__construct</refname>
  <refpurpose>Crée un nouvel objet de connexion à une base de données</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier> <methodname>MongoClient::__construct</methodname>
   <methodparam choice="opt"><type>string</type><parameter>server</parameter><initializer>"mongodb://localhost:27017"</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array("connect" => &true;)</initializer></methodparam>
  </constructorsynopsis>
  <para>
   Si aucun paramètre n'est passé, la connexion se fera sur "localhost:27017" (ou ce qui
   a été spécifié dans php.ini pour
   <link linkend="ini.mongo.default-host">mongo.default_host</link> et
   <link linkend="ini.mongo.default-port">mongo.default_port</link>).
  </para>
  <para>
   <parameter>server</parameter> doit être de la forme : 
   <programlisting>
<![CDATA[
mongodb://[username:password@]host1[:port1][,host2[:port2:],...]/db
]]>
   </programlisting>
  </para>
  <para>
   La chaine de connexion débute toujours par <literal>mongodb://</literal>.
  </para>
  <para>
   Si <literal>username</literal> et <literal>password</literal> sont précisés,
   le constructeur tentera d'authentifier la connexion à la base. Username et password
   sont optionnels et doivent être suivis d'une <literal>@</literal>, si renseignés.
  </para>
  <para>
   Au moins un hôte doit être précisé (port optionnel, par défaut 27017) et plusieurs
   hôtes vers lesquels se connecter peuvent être passés. Les noms d'hôtes sont séparés
   par des virgules et le constructeur exécutera sans erreur si au moins un des hôtes
   peut être connecté. Si il ne peut se connecter à aucun hôte, il enverra une
   <classname>MongoConnectionException</classname>. Veuillez vous reporter à la section
   sur les <link linkend="mongo.connecting.rs">jeux de réplication</link> pour plus
   d'informations sur la façon dont on se connecte aux jeux de réplication.
  </para>
  <para>
   Si vous avez précisé un username et un password, vous devez préciser une base
   de données envers laquelle s'authentifier. Si <literal>db</literal> n'est pas
   renseigné, "admin" sera utilisé.
  </para>
  <para>
   Une chaîne optionnelle de la requête peut être utilisée pour spécifier
   d'autres options. Les mêmes options sont également supportées via le tableau
   <parameter>options</parameter>, et y sont décrites. Voir les <link
   linkend="mongo.mongoclient.construct.examples">exemples ci-dessous</link>
   pour connaitre la façon pour définir ces options.
  </para>
  <para>
   Une partie de ces options concerne la façon dont le driver lit
   depuis des noeuds secondaires dans un environnement de jeu de réplication.
   Vous pouvez trouver plus d'informations sur la méthode de fonctionnement
   des préférences de lecture via la page de la documentation relative
   aux <link linkend="mongo.readpreferences">préférences de lecture</link>.
  </para>
 </refsect1>

 <refsect1 role="parameters" xml:id="mongo.mongoclient.construct.parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>server</parameter>
     </term>
     <listitem>
      <para>
       Le nom du serveur.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Un tableau d'options pour la connexion. Les options disponibles sont :
       <itemizedlist>
        <listitem>
         <para>
          <literal>"connect"</literal>
         </para>
         <para>
          Si le constructeur doit se connecter avant de retourner l'objet. Par défaut
          &true;. Lorsque vaut &false;, le driver va
          <emphasis>automatiquement</emphasis> se connecter au serveur chaque
          fois qu'il est nécessaire d'y faire une requête. Mais vous pouvez aussi
          exécuter la méthode <function>MongoClient::connect</function> manuellement.
         </para>
         <warning>
          <para>
           Cette option n'est pas supportée via la chaîne de connexion.
          </para>
         </warning>
        </listitem>
        <listitem>
         <para>
          <literal>"connectTimeoutMS"</literal>
         </para>
         <para>
          Durée pendant laquelle une connexion peut rester ouverte avant
          de se fermer.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"db"</literal>
         </para>
         <para>
          La base de données sur laquelle l'authentification doit s'effectuer ;
          elle peut être spécifiée ici au lieu de l'inclure dans la liste des hôtes.
          Ce paramètre écrase une base de données fournie dans la liste des hôtes.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"fsync"</literal>
         </para>
         <para>
          Lorsque <literal>fsync</literal> est défini, toutes les opérations
          en écriture sur la base de données seront bloquantes tant que le
          serveur de base de données n'aura pas écrit les fichiers sur le
          disque. Ceci rend les opérations en écriture bien plus lentes,
          mais garantie le succès de l'opération d'écriture ainsi que l'écriture
          sur le disque. Vous devriez éviter <emphasis>l'utilisation</emphasis>
          de cette option et préférer plutôt l'option <literal>journal</literal>
          avec l'option <literal>w</literal>.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"journal"</literal>
         </para>
         <para>
          Lorsque <literal>journal</literal> est défini, toutes les opérations
          d'écriture sur la base de données seront bloquantes tant que le serveur
          de base de données n'a pas écrit le journal sur le disque. Cette option
          rend les opérations d'écriture légèrement plus lentes, mais garantie
          que les opérations en écriture réussissent, et que l'opération peut
          retrouvée lors d'une erreur totale du système.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"password"</literal>
         </para>
         <para>
          Le mot de passe peut être spécifié ici, au lieu de l'inclure dans la
          liste des hôtes. Ceci est utile tout spécialement si le mot de
          passe contient le caractère "@". Ce paramètre écrase le mot de passe
          défini dans la liste des hôtes.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"readPreference"</literal>
         </para>
         <para>
          Spécifie le type de préférence de lecture. Les préférences de lecture
          vous permettent de contrôler quel secondaire sera utilisé pour lire
          les données.
         </para>
         <para>
          Les valeurs possibles sont : <constant>MongoClient::RP_PRIMARY</constant>,
          <constant>MongoClient::RP_PRIMARY_PREFERRED</constant>,
          <constant>MongoClient::RP_SECONDARY</constant>,
          <constant>MongoClient::RP_SECONDARY_PREFERRED</constant> et
          <constant>MongoClient::RP_NEAREST</constant>.
         </para>
         <para>
          Voir la documentation sur les <link linkend="mongo.readpreferences">préférences
          de lecture</link> pour plus d'informations.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"readPreferenceTags"</literal>
         </para>
         <para>
          Spécifie les tags pour les préférences de lecture. Les tags peuvent
          être utilisés en combinaison de l'option <literal>readPreference</literal>
          afin de contrôler le type de données que l'on doit lire depuis le secondaire.
         </para>
         <para>
          Voir la documentation sur les <link linkend="mongo.readpreferences">préférences
          de lecture</link> pour plus d'informations.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"replicaSet"</literal>
         </para>
         <para>
          Nom du pool de réplicats sur lequel se connecter. Si fourni, le primaire
          sera déterminé en utilisant la commande <literal>ismaster</literal> sur les
          serveurs, ainsi le pilote peut se connecter à un serveur qui n'était même pas
          listé. Voyez l'exemple après pour plus de détails.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"socketTimeoutMS"</literal>
         </para>
         <para>
          La durée maximale de réception ou d'envoi sur un socket avant
          d'échouer.
          <note>
           <simpara>
            C'est une durée maximale côté client. Si une requête
            <literal>insert</literal> survient sur <literal>"socketTimeoutMS"</literal>,
            il n'y a aucun moyen de savoir si le serveur a bien reçu ou non
            l'écriture.
           </simpara>
          </note>
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"username"</literal>
         </para>
         <para>
          Le nom d'utilisateur peut être spécifié ici, au lieu de l'inclure
          dans la liste des hôtes. Ceci est utile tout spécialement si
          le nom d'utilisateur contient un caractère ":".
          Ce paramètre écrase le nom d'utilisateur défini dans
          la liste des hôtes.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"w"</literal>
         </para>
         <para>
          L'option <literal>w</literal> contrôle la
          <link linkend="mongo.writeconcerns">durée de blocage</link> du driver
          lors d'une écriture.La valeur par défaut est <literal>1</literal>.
         </para>
         <para>
          Une valeur entière positive contrôle le <emphasis>nombre</emphasis>
          de noeuds dans un jeu de réplication qui ont reçu une instruction
          d'écriture avant que le driver ne continue. Une valeur de
          <literal>3</literal> signifie que l'écriture a été appliquée au primaire
          ainsi qu'à deux autres membres du jeu de réplication.
         </para>
         <para>
          Une chaîne est utilisée pour contrôler quels jeux de tags seront pris
          en compte pour les écritures. La chaîne <literal>"majority"</literal>
          est spéciale et s'assure que les opérations d'écriture ont été appliquées
          à la majorité (plus de 50%) des noeuds concernés.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"wTimeoutMS"</literal>
         </para>
         <para>
          Cette option est utilisée avec l'option "w". Elle permet de contrôler
          le nombre de millisecondes d'attente du serveur pour les opérations
          d'écriture. Si ces opérations prennent plus de temps, alors le serveur
          le signale au driver et ce dernier lancera une exception de type
          <classname>MongoCursorException</classname>.
         </para>
        </listitem>
       </itemizedlist>
      </para>
      <para>
       Les options suivantes sont obsolètes et ne doivent plus être utilisées :
       <itemizedlist>
        <listitem>
         <para>
          <literal>"timeout"</literal>
         </para>
         <para>
          Alias obsolète pour "connectTimeoutMS".
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"wTimeout"</literal>
         </para>
         <para>
          Alias obsolète pour "wTimeoutMS".
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un nouvel objet de connexion à la base de données Mongo.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Emet une exception <classname>MongoConnectionException</classname> si la connexion
   échoue avec les identifiants pour la base de données considérée ou si les identifiants
   sont invalides. Voyez la documentation de <classname>MongoConnectionException</classname>
   pour en savoir plus sur les exceptions courantes et leurs causes.
  </para>
 </refsect1>

 <refsect1 role="examples" xml:id="mongo.mongoclient.construct.examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoClient::__construct</function> et un pool de réplicats</title>
   <para>
    Cet exemple montre comment se connecter avec le driver à un pool de réplicats. Il
    suppose un jeu de trois serveurs : sf1.example.com, sf2.example.com et ny1.example.com.
    Le primaire peut être l'un de ces serveurs.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// Passer une liste séparée par une virgule de noms de serveurs au constructeur.
// Notez que vous n'avez pas besoin de passer tous les membres du jeu de réplication,
// le driver va dériver la liste complète.
$m1 = new MongoClient("mongodb://sf2.example.com,ny1.example.com", array("replicaSet" => "myReplSet"));

?>
]]>
   </programlisting>
   <para>
    Si le primaire courant échoue, le pilote calculera quel serveur secondaire deviendra le
    nouveau primaire et utilisera sa connexion. Le failover ne fonctionnera pas correctement
    si <literal>replicaSet</literal> n'est pas spécifié.
   </para>
   <para>
    Au moins un serveur dans la liste doit fonctionner pour que le pilote se connecte au
    pool de replica.
   </para>
   <para>
    Si vous incluez des serveurs depuis deux pools de réplicats distincts, le comportement est
    alors indéfini.
   </para>
   <para>Voyez la
    <link xlink:href="&url.mongodb.dochub.rs;">documentation du coeur</link> sur la réplication.
   </para>
  </example>
  <example>
   <title>Connexion via socket UNIX</title>
   <para>
    Dans les versions 1.0.9+, vous pouvez utiliser un socket du domaine UNIX pour vous connecter à
    une instance de MongoDB locale. Ceci devrait être plus rapide qu'une connexion réseau.
   </para>
   <para>
    Dans la version 1.5.0, Le serveur MongoDB ouvre automatiquement un socket à
    /tmp/mongodb-&lt;port&gt;.sock. Vous pouvez vous y connecter en précisant le chemin dans la chaine
    de connexion :
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// Serveur MongoDB local sur le port 20000
$m = new MongoClient("mongodb:///tmp/mongodb-20000.sock");

?>
]]>
   </programlisting>
   <para>
    Vous pouvez combiner cela avec d'autres connexions :
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// Essaye la connexion socket UNIX, utilise localhost sinon
$m = new MongoClient("mongodb:///tmp/mongodb-27017.sock,localhost:27017");

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Exemple d'authentification <function>MongoClient::__construct</function></title>
   <para>
    Un utilisateur doit exister dans la base de données admin avant de lancer
    l'authentification. Vous pouvez créer un utilisateur avec la commande shell
    Mongo suivante :
   </para>
   <programlisting>
<![CDATA[
> use admin
switched to db admin
> db.addUser("testUser", "testPass");
{
        "_id" : ObjectId("4b21272fd9ab21611d19095c"),
        "user" : "testUser",
        "pwd" : "03b9b27e0abf1865e2f6fcbd9845dd59"
}
>
]]>
   </programlisting>
   <para>
    Après avoir crée un utilisateur, dans notre cas de nom "testUser" et password
    "testPass", vous pouvez créer une connexion authentifiée :
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$m = new MongoClient("mongodb://testUser:testPass@localhost");

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Exemple avec <function>MongoClient::__construct</function> et des préférences de lecture</title>
   <programlisting role="php">
<![CDATA[
<?php

// Préfère le serveur le plus proche dans le centre de données "east"
$uri  = 'mongodb://rs1.example.com,rs2.example.com/';
$uri .= '?readPreference=nearest';
$uri .= '&readPreferenceTags=dc:east';
$m = new MongoClient($uri, array('replicaSet' => 'rs'));
]]>
   </programlisting>
   <para>
    Voir la section relative aux <link linkend="mongo.readpreferences">préférences
    de lecture</link> de ce manuel pour plus d'informations.
   </para>
  </example>

  <example>
   <title>Exemple avec <function>MongoClient::__construct</function> et des options</title>
   <para>
    Les options peuvent être passées à la fois directement dans la chaîne
    de requête dans la connexion, ou comme tableau passé comme second
    argument du constructeur.
   </para>
   <para>
    Ici, nous définissons l'option journal à &true; et readPreference
    au secondaire préféré, comme défaut pour toutes les opérations
    en écriture :
   </para>
   <programlisting>
<![CDATA[
<?php
$m = new MongoClient("mongodb://localhost/?journal=true&readPreference=secondary");
?>
]]>
   </programlisting>
   <para>
    Et maintenant, nous faisons la même chose mais via le tableau d'options :
   </para>
   <programlisting>
<![CDATA[
<?php
$options = array(
    'journal' => true,
    'readPreference' => 'secondary',
);
$m = new MongoClient("mongodb://localhost/", $options);
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Exemple avec <function>MongoClient::__construct</function> et les préférences de lecture</title>
   <programlisting role="php">
<![CDATA[
<?php

// Préfère le serveur le plus proche dans le centre de données "east"
$uri  = 'mongodb://rs1.example.com,rs2.example.com/';
$uri .= '?readPreference=nearest';
$uri .= '&readPreferenceTags=dc:east';
$m = new MongoClient($uri, array('replicaSet' => 'rs'));
]]>
   </programlisting>
   <para>
    Voir la section sur les <link linkend="mongo.readpreferences">préférences de lecture</link>
    de ce manuel pour plus d'informations.
   </para>
  </example>

 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.4.0</entry>
       <entry>
        <para>
         Ajout de l'option <literal>"wTimeoutMS"</literal> en tant que remplacement
         de l'option <literal>"wTimeout"</literal>.
        </para>
       </entry>
      </row>
      <row>
       <entry>1.3.4</entry>
       <entry>
        <para>
         Ajout des options <literal>"connectTimeoutMS"</literal> et
         <literal>"socketTimeoutMS"</literal>.
        </para>
       </entry>
      </row>
      <row>
       <entry>1.3.0</entry>
       <entry>
        <para>
         Ajout des options <literal>"readPreference"</literal>,
         <literal>"readPreferenceTags"</literal>, <literal>"w"</literal> et
         <literal>"wTimeout"</literal>.
        </para>
       </entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry>
        <para>
         Ajout des options <literal>"username"</literal> et
         <literal>"password"</literal>.
        </para>
        <para>
         Suppression de l'option <literal>"persist"</literal>, toutes les 
         connexions sont désormais persistantes.
         Le paramètre peut tout de même être utilisé, il sera simplement ignoré.
        </para>
        <variablelist>
         <varlistentry>
          <term>
           <parameter>"persist"</parameter>
          </term>
          <listitem>
           <para>
            Si la connexion doit être persistante. La chaine représentant la valeur est
            utilisée comme identifiant de connexion, ainsi deux instances de
            <classname>MongoClient</classname> qui sont initialisées avec
            <literal>array("persist" => "foobar")</literal> vont partager la même
            connexion à la base, alors que une instance initialisée avec
            <literal>array("persist" => "barbaz")</literal> utilisera une connexion
            différente.
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
        <para>
         Le paramètre <literal>"replicaSet"</literal> accepte maintenant une
         chaine, pas un booléen.
        </para>
       </entry>
      </row>
      <row>
       <entry>1.0.9</entry>
       <entry>
        Ajout de l'option <literal>"replicaSet"</literal>.
       </entry>
      </row>
      <row>
       <entry>1.0.2</entry>
       <entry>
        <para>
         Le constructeur a changé pour accepter une tableau. Avant 1.0.2, le constructeur
         acceptait les paramètres suivants :
        </para>
        <variablelist>
         <varlistentry>
          <term>
           <parameter>server</parameter>
          </term>
          <listitem>
           <para>
            Nom du serveur.
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term>
           <parameter>connect</parameter>
          </term>
          <listitem>
           <para>
            Paramètre optionnel indiquant si le constructeur doit se connecter à la base
            avant de retourner l'objet. Par défaut &true;.
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term>
           <parameter>persistent</parameter>
          </term>
          <listitem>
           <para>
            Si la connexion doit être persistante.
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term>
           <parameter>paired</parameter>
          </term>
          <listitem>
           <para>
            Si la connexion doit être pairée.
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
