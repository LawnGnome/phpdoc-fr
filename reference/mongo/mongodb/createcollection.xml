<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 290998 Maintainer: dams Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongodb.createcollection" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoDB::createCollection</refname>
  <refpurpose>Crée une collection</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCollection</type><methodname>MongoDB::createCollection</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>capped</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>size</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>max</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;    
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>name</parameter>
     </term>
     <listitem>
      <para>
       Le nom de la collection.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>capped</parameter>
     </term>
     <listitem>
      <para>
       Si la collection est de taille fixe ou pas.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>size</parameter>
     </term>
     <listitem>
      <para>
       Si la collection est de taille fixe, sa taille, en octets.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>max</parameter>
     </term>
     <listitem>
      <para>
       Si la collection est de taille fixe, le nombre maximal 
       d'éléments à stocker dans la collection. 
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un objet <classname>MongoCollection</classname>,
   qui représente la nouvelle collection.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoDB::createCollection</function></title>
   <para>
    Une collection plafonnée est un type spécial de collection qui a soit
    des éléments fixes, soit un nombre d'éléments fixes. Une fois que la collection
    est pleine, les éléments les plus anciens seront effacés lors de l'ajout de
    nouveaux éléments. Les collections plafonnées sont vraiment utiles pour
    les applications qui historisent et que vous souhaitez réserver une certaine
    quantitié d'espaces à l'historisation sans vous soucier de leurs évolutions.
   </para>
   <para>
    Cet exemple crée une petite collection qui conserve un maximum de 10 documents.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$log = $db->createCollection("logger", true, 10*1024, 10);

for ($i = 0; $i < 100; $i++) {
    $log->insert(array("level" => WARN, "msg" => "Message simple #$i", "ts" => new MongoDate()));
}

$msgs = $log->find();

foreach ($msgs as $msg) {
    echo $msg['msg']."\n";
}

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
Message simple #90
Message simple #91
Message simple #92
Message simple #93
Message simple #94
Message simple #95
Message simple #96
Message simple #97
Message simple #98
Message simple #99
   </screen>
  </example>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
