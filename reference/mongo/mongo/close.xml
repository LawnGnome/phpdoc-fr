<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 308234 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongo.close" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Mongo::close</refname>
  <refpurpose>Ferme la connexion</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Mongo::close</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Cette méthode n'a pas besoin d'être appelée, sauf dans des cas exceptionnels.
   Le driver fermera proprement la connexion à la base de données lorsque
   cette instance Mongo sortira du scope.
  </para>
  <para>
   Si les objets ne sortent pas du scope entre les requêtes, vous devriez
   vouloir appeler cette méthode à la fin de votre programme pour éviter
   de perdre les vieilles connexions. Cependant, il peut être plus efficace
   d'utiliser les connexions persistantes, qui créeront automatiquement
   une connexion si nécessaire, et l'utiliseront pour toutes les requêtes
   possibles.
  </para>
  <para>
   Si vous êtes connecté à un jeu de réplication, close() ne fermera
   que la connexion au primaire.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; si la connexion a pu être fermée.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
