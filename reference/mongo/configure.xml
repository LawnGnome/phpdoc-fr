<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 296365 Maintainer: dams Status: ready -->
<!-- Reviewed: no -->

<section xml:id="mongo.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.install;
 <para>
  &pecl.moved;
  &pecl.info;
  <link xlink:href="&url.pecl.package;mongo">&url.pecl.package;mongo</link>.
 </para>
 
 <itemizedlist>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.nix">Installation sous *NIX</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.manual">Installation manuelle</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.osx">OS X</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.gentoo">Gentoo</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.fedora">Fedora</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.windows">Installation sous Windows</link>
   </para>
  </listitem>
  <listitem>
   <para>
    <link xlink:href="#mongo.installation.thirdparty">Instructions d'installation tierces</link>
   </para>
  </listitem>
 </itemizedlist>
 
 <section xml:id="mongo.installation.nix">
  <title>Installation sur les systèmes *NIX</title>
  
  <para>
   Lancez:
   <programlisting>
<![CDATA[

$ sudo pecl install mongo

]]>
   </programlisting>
  </para>
  
  <para>
   Ajoutez les lignes suivantes à votre fichier php.ini:
   <programlisting>
<![CDATA[

extension=mongo.so

]]>
   </programlisting>
  </para>
  
  <para>
   Si pecl échoue en raison d'un manque de mémoire vive, assurez-vous que l'option
   memory_limit de votre php.ini est définie à au moins 32M.
  </para>
 </section>
 
 <section xml:id="mongo.installation.manual">
  <title>Installation manuelle</title>
  
  <para>Pour les développeurs des pilotes ou les personnes intéréssées par les derniers correctifs
   de bugs, vous pouvez compiler le pilote depuis
   <link xlink:href="&url.mongodb.github;">Github</link>.
   Allez sur Github et cliquez sur "download". Lancez ensuite:
   
   <programlisting>
<![CDATA[

$ tar zxvf mongodb-mongodb-php-driver-<commit_id>.tar.gz
$ cd mongodb-mongodb-php-driver-<commit_id>
$ phpize
$ ./configure
$ sudo make install

]]>
   </programlisting>
  </para>
  
  <para>
   Effectuez ces changements à votre fichier php.ini:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     1. La construction vous précisera où est installée l'extension grâce à un affichage
     ressemblant à ceci:
     <programlisting>
<![CDATA[

      Installing '/usr/lib/php/extensions/no-debug-zts-20060613/mongo.so'

]]>
     </programlisting>
     
     Vérifiez bien qu'il s'agisse du même dossier d'extensions que celui de votre PHP en lançant:
     
     <programlisting>
<![CDATA[

      $ php -i | grep extension_dir
        extension_dir => /usr/lib/php/extensions/no-debug-zts-20060613 =>
      /usr/lib/php/extensions/no-debug-zts-20060613  

]]>
     </programlisting>
     
     Si ce n'est pas le cas, changez extension_dir de php.ini ou placez manuellement mongo.so.
    </para>
   </listitem>
   <listitem>
    <para>
     2. Pour chargez l'extension au démarrage de PHP, ajoutez cette ligne:
     
     <programlisting>
<![CDATA[

      extension=mongo.so

]]>
     </programlisting>
     
    </para>
   </listitem>
  </itemizedlist>
  
  <section xml:id="mongo.installation.osx">
   <title>Systèmes OS X</title>
   
   <para>
    Si votre système ne peut trouver autoconf, vous devrez installer Xcode 
    (disponible sur le DVD d'installation de votre OS).
   </para>
   
   <para>
    Si vous utilisez XAMPP, vous devriez pouvoir compiler le driver avec la commande
    suivante :
    <programlisting>
<![CDATA[

sudo /Applications/XAMPP/xamppfiles/bin/pecl install mongo

]]>
    </programlisting>
   </para>
   
   <para>
    Si vous utilisez MAMP (ou XAMPP et que la commande ci-dessus ne fonctionne pas),    
    des binaires précompilés sont disponibles sur
    <link xlink:href="&url.mongodb.github.downloads;">Github</link>
    (téléchargez le dernier qui a pour nom "osx" et la version de PHP que vous utilisez).
    Extraire mongo.so depuis l'archive et ajoutez-le dans le dossier de l'extension
    MAMP ou XAMPP. Ajoutez
    <programlisting>
<![CDATA[

      extension=mongo.so

]]>
    </programlisting>
    au fichier php.ini utilisé puis redémarrez le serveur web.
   </para>
  </section>
  
  <section xml:id="mongo.installation.gentoo">
   <title>Gentoo</title>
   <para>Sur Gentoo, l'utilisation de PECL peut vous envoyer un message d'erreur indiquant
    que la version de libtool utilisée n'est pas bonne. Pour compiler depuis les sources,
    vous devrez lancer aclocal et autoconf.
    
    <programlisting>
<![CDATA[

$ phpize && aclocal && autoconf && ./configure && make && make install

]]>
    </programlisting>
    
    (Merci à <link xlink:href="&url.mongodb.tweet.gentoo;">@riklaunim</link>)
   </para>
  </section>
  
  <section xml:id="mongo.installation.fedora">
   <title>Fedora</title>
   <para>
    Si vous ne voulez pas modifier directement votre php.ini, vous pouvez
    créer un fichier mongo.ini séparé. Dans le dossier /etc/php.d, créez un
    sous-dossier nommé mongo (ou un autre nom, à votre convenance). Dans ce dossier,
    créez un fichier mongo.ini file et placez-y ceci :
    <programlisting>
<![CDATA[

extension=mongo.so

; n'importe quel option Mongo que vous souhaitez utiliser (voir la section sur la configuration à l'exécution) 

]]>
    </programlisting>
   </para>
  </section>
 </section>
 
 <section xml:id="mongo.installation.windows">
  <title>Installation sous Windows</title>
  
  <para>
   Les binaires précompilés pour chaque version sont disponibles sur
   <link xlink:href="&url.mongodb.github.downloads;">Github</link> pour une
   grande variété de combinaison de versions, de sécurité de threads, et de
   bibliothèques VC. Décompressez l'archive et placez php_mongo.dll dans votre
   dossier d'extension PHP ("ext" par défaut).
  </para>
  
  <para>
   Le code le plus récent (non publié) est compilé avec les binaires Windows à
   chaque modification. L'archive Zip contient les fichiers php_mongo.dll et
   version.txt. Conservez le fichier version.txt ; ainsi, si vous avez une question
   ou un problème, vous pourrez indiquer aux développeurs l'exacte version que vous
   utilisez. (Le nombre est assez long et absurde, mais il a du sens pour les
   développeurs ;) )
  </para>
  <para>
   Pour récupérer les dernière corrections de bogues, téléchargez le binaire
   correspondant à la version de PHP que vous avez d'installée :
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc652;">
      PHP 5.2 VC6 Non-Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc6ts52;">
      PHP 5.2 VC6 Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc6;">
      PHP 5.3 VC6 Non-Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc6ts;">
      PHP 5.3 VC6 Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc8;">
      PHP 5.3 VC8 Non-Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc8ts;">
      PHP 5.3 VC8 Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc9;">
      PHP 5.3 VC9 Non-Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.vc9ts;">
      PHP 5.3 VC9 Thread-Safe Mongo extension
     </link>
    </para>
   </listitem>
  </itemizedlist>
  
  <para>
   Ajoutez la ligne suivante à votre fichier php.ini :
   <programlisting>
<![CDATA[
extension=php_mongo.dll
]]>
   </programlisting>
  </para>
 </section>
 
 <section xml:id="mongo.installation.thirdparty">
  <title>Instructions d'installation tierces</title>
  
  <para>
   Beaucoup de personnes ont créés d'excellents tutoriels sur l'installation
   du driver PHP.
  </para>
  
  <itemizedlist>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.video;">
      PHP 5.3.1 avec Xdebug, MongoDB et Lithium sous Ubuntu 9.10 / Apache 2.2
     </link>
    </para>
    <para>
     Une excellent vidéo qui vous explique l'installation étape par étape
     d'Apache, PHP, Xdebug, MongoDB, et Lithium par Jon Adams.
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.ubuntu.9.04;">
      Installation de MongoDB et du driver PHP sous Ubuntu 9.04
     </link>
    </para>
    <para>
     Article espagnol par Javier Aranda (<link xlink:href="&url.mongodb.ubuntu.9.04.en;">
     traduction anglaise</link>).
    </para>
   </listitem>
   <listitem>
    <para>
     <link xlink:href="&url.mongodb.osx;">
      OS X: Installation de MongoDB et du driver PHP Mongo
     </link>
    </para>
    <para>
     Par Matt Butcher.
    </para>
   </listitem>
  </itemizedlist>
 </section>
 
</section>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
