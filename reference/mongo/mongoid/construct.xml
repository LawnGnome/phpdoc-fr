<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 298918 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="mongoid.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoId::__construct</refname>
  <refpurpose>Crée un nouvel identifiant</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <methodname>MongoId::__construct</methodname>
   <methodparam choice="opt"><type>string</type><parameter>id</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>id</parameter>
     </term>
     <listitem>
      <para>
       Une chaîne à utiliser comme identifiant. Doit être une chaîne
       de 24 caractères héxadécimals. Si une chaîne invalide est passée au
       constructeur, le constructeur l'ignorera et créera un nouvel identifiant.
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un nouvel identifiant.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoId::__construct</function></title>
   <para>
    Cet exemple montre comment crée un nouvel identifiant.
    C'est rarement nécessaire, car le pilote ajoute automatiquement les
    identifiants avant de les stocker en base.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$id1 = new MongoId();
echo "$id1\n";

$id2 = new MongoId();
echo "$id2\n";

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
49a7011a05c677b9a916612a
49a702d5450046d3d515d10d
]]>
   </screen>
  </example>
  <example>
   <title>Exemple avec <function>MongoId::__construct</function> et des paramètres</title>
   <para>
    Cet exemple montre comment utiliser une chaîne de paramètres
    pour initialiser un objet <classname>MongoId</classname> avec
    une valeur donnée.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
  $id1 = new MongoId();

  // Crée un nouvel identifiant pour $id1
  $id2 = new MongoId("$id1");

  // montre que $id1 et $id2 ont la même valeur hexadécimal
  var_dump($id1 == $id2);
  ?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
bool(true)
]]>
   </screen>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>MongoId::__toString</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
