<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
<!-- EN-Revision: 1.12 Maintainer: dams Status: ready -->

 <refentry id="function.get-class-methods">
  <refnamediv>
   <refname>get_class_methods</refname>
   <refpurpose>Retourne les noms des méthodes d'une classe</refpurpose>
  </refnamediv>
  <refsect1>
   &reftitle.description;
     <methodsynopsis>
      <type>array</type><methodname>get_class_methods</methodname>
      <methodparam><type>mixed</type><parameter>class_name</parameter></methodparam>
     </methodsynopsis>
   <para>
    <function>get_class_methods</function> retourne un tableau contenant les
    noms des méthodes de la classe <parameter>class_name</parameter>.
    En cas d'erreur, &null; est retourné.
   </para>
    <note>
     <para>
      À partir de &php; 4.0.6, vous pouvez spécifier l'objet lui-même, au lieu
      de sa classe <parameter>class_name</parameter>. Par exemple :
      <example>
       <title>
        Passer l'objet ou la classe à <function>get_class_methods</function>
       </title>
       <programlisting role="php">
<![CDATA[
<?php
$class_methods = get_class_methods($my_object); // Voir plus loin l'exemple complet
?>
]]>
       </programlisting>
      </example>
     </para>
    </note>
    <para>
     <example>
      <title>Exemple avec <function>get_class_methods</function></title>
      <programlisting role="php">
<![CDATA[
<?php

class maclasse {
    // constructeur
    function maclasse()
    {
        return(TRUE);
    }

    // méthode 1
    function myfunc1()
    {
        return(TRUE);
    }

    // méthode 2
    function mafunc2()
    {
        return(TRUE);
    }
}

$class_methods = get_class_methods('maclasse');
// ou
$class_methods = get_class_methods(new maclasse());

foreach ($class_methods as $method_name) {
    echo "$method_name\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
maclasse
myfunc1
mafunc2
]]>
      </screen>
     </example>
    </para>
    <warning>
     <para>
      Depuis &php; 5, cette fonction retourne le nom des méthodes comme
      elles ont été déclarées (sensible à la casse). En &php; 4, elles étaient
      converties en minuscule.
     </para>
    </warning>
   <simpara>
    Voir aussi
    <function>get_class</function>,
    <function>get_class_vars</function> et
    <function>get_object_vars</function>.
   </simpara>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->