<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.11 Maintainer: dams Status: ready -->
<!-- Reviewed: yes -->
  <refentry id="function.mysql-insert-id">
   <refnamediv>
    <refname>mysql_insert_id</refname>
    <refpurpose>
     Retourne l'identifiant généré par la dernière
     requête INSERT MySQL
    </refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>int</type><methodname>mysql_insert_id</methodname>
      <methodparam choice="opt"><type>resource</type><parameter>link_identifier</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>mysql_insert_id</function> retourne le dernier identifiant
     généré par un champ de type AUTO_INCREMENT,
     sur la connexion MySQL courante ou sûr la connexion
     spécifiée par <parameter>link_identifier</parameter>.
     Si <parameter>link_identifier</parameter> est omis, la dernière connexion
     ouverte est utilisée.
    </para>
    <para>
     <function>mysql_insert_id</function> retourne 0 si la dernière
     requête SQL n'a pas généré de valeur AUTO_INCREMENT. Si vous devez
     lire cette valeur pour la conserver et l'utiliser ultérieurement,
     appelez la fonction <function>mysql_insert_id</function> juste après
     l'exécution de la requête, pour obtenir cette valeur non parasitée.
    </para>
    <note>
     <para>
      La fonction MySQL <literal>LAST_INSERT_ID()</literal> contient toujours
      la valeur AUTO_INCREMENT la plus récente, et n'est pas remise à zéro entre
      deux requêtes.
    </para>
    </note>
    <warning>
     <para>
      <function>mysql_insert_id</function> convertit le type de valeur retourné
      par la fonction C de MySQL C
      <literal>mysql_insert_id()</literal> en type &php;
      <literal>long</literal> (appelé <type>int</type> en &php;).
      Si votre colonne de type AUTO_INCREMENT est une colonne de type BIGINT,
      la valeur retournée par <function>mysql_insert_id</function>
      sera incorrecte. A la place, utilisez la fonction interne MySQL 
      <literal>LAST_INSERT_ID()</literal> dans une requête SQL.
     </para>
    </warning>
    <example>
     <title>Exemple avec <function>mysql_insert_id</function></title>
     <programlisting role="php">
<![CDATA[
<?php
    mysql_connect("localhost", "mysql_user", "mysql_password") or
        die("Impossible de se connecter : " . mysql_error());
    mysql_select_db("mydb");

    mysql_query("INSERT INTO mytable (product) values ('kossu')");
    printf ("Le dernier ID inséré dans est le %d\n", mysql_insert_id());
?>
]]>
     </programlisting>
    </example>
    <para>
     Voir aussi
     <function>mysql_query</function> et
     <function>mysql_info</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
