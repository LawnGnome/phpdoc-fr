<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.11 Maintainer: dams Status: ready -->
  <refentry id="function.mysql-fetch-assoc">
   <refnamediv>
    <refname>mysql_fetch_assoc</refname>
    <refpurpose>
     Lit une ligne de résultat MySQL dans un tableau associatif
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>mysql_fetch_assoc</methodname>
      <methodparam><type>resource</type><parameter>result</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>mysql_fetch_assoc</function> retourne un tableau associatif
     qui contient la ligne lue dans le résultat <parameter>result</parameter>, 
     ou bien &false;, s'il ne reste plus de lignes à lire.
    </para>
    <para>
     <function>mysql_fetch_assoc</function> est équivalente à
     <function>mysql_fetch_array</function> utilisée avec l'option
     MYSQL_ASSOC.
     Elle ne retourne qu'un tableau associatif. C'est le fonctionnement
     original de <function>mysql_fetch_array</function>. Si vous avez besoin
     d'indices numériques, utilisez <function>mysql_fetch_array</function>.
    </para>
    <para>
     Si plusieurs colonnes portent le même nom, la dernière aura la priorité.
     Pour accéder aux autres colonnes du même nom, vous devez utiliser
     <function>mysql_fetch_array</function> et les indices numériques.
    </para>
    <para>
     Une chose importante à noter est que <function>mysql_fetch_assoc</function>
     <emphasis>N'est PAS</emphasis> significativement plus lente que
     <function>mysql_fetch_row</function>, alors qu'elle apporte un confort
     d'utilisation important.
    </para>
    <para>
     Pour plus de détails, reportez-vous à
     <function>mysql_fetch_row</function> et <function>mysql_fetch_array</function>.
    </para>
    &database.field-case;
    &database.fetch-null;
    <para>
     <example>
      <title>Exemple avec <function>mysql_fetch_assoc</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$conn = mysql_connect("localhost", "mysql_user", "mysql_password");

if (!$conn) {
    echo "Impossible de se connecter à la base de données : " . mysql_error();
    exit;
}

if (!mysql_select_db("mydbname")) {
    echo "Impossible d'accéder à la base de données  : " . mysql_error();
    exit;
}

$sql = "SELECT id as userid, fullname, userstatus 
        FROM   sometable
        WHERE  userstatus = 1";

$result = mysql_query($sql);

if (!$result) {
    echo "Impossible d'exécuter la requête ($sql) dans la base : " . mysql_error();
    exit;
}

if (mysql_num_rows($result) == 0) {
    echo "Aucune ligne trouvées, rien à afficher.";
    exit;
}

// Tant qu'une ligne existe, place cette ligne dans la variable $row
// sous la forme d'un tableau associatif.
// Note : Si vous n'attendez qu'une seule ligne, oubliez la boucle
// Note : Si vous utilisez extract($row); dans la boucle suivante
//       vous créerez $userid, $fullname et $userstatus
while ($row = mysql_fetch_assoc($result)) {
    echo $row["userid"];
    echo $row["fullname"];
    echo $row["userstatus"];
}

mysql_free_result($result);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Voir aussi
     <function>mysql_fetch_row</function>,
     <function>mysql_fetch_array</function>,
     <function>mysql_data_seek</function>,
     <function>mysql_query</function> et
     <function>mysql_error</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
