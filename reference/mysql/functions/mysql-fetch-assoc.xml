<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.15 $ -->
<!-- EN-Revision: 1.15 Maintainer: dams Status: ready -->
<!-- Reviewed: no -->
<refentry id="function.mysql-fetch-assoc">
 <refnamediv>
  <refname>mysql_fetch_assoc</refname>
  <refpurpose>Lit une ligne de résultat MySQL dans un tableau associatif</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>mysql_fetch_assoc</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>mysql_fetch_assoc</function> retourne un tableau associatif
   qui contient la ligne lue dans le résultat <parameter>result</parameter> et
   déplace le pointeur interne de données.
   <function>mysql_fetch_assoc</function> revient à appeler la fonction
   <function>mysql_fetch_array</function> avec MYSQL_ASSOC 
   en tant que second paramètre. Cette fonction retourne uniquement
   un tableau associatif.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysql.result.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau associatif
   qui contient la ligne lue dans le résultat <parameter>result</parameter>,
    ou bien &false; s'il ne reste plus de lignes à lire.
  </para>
  <para>
   Si plusieurs colonnes portent le même nom, la dernière aura la priorité.
   Pour accéder aux autres colonnes du même nom, vous devez utiliser
   la fonction <function>mysql_fetch_row</function> avec les indices numériques
   ou utiliser les alias sur les noms.
   Regardez la documentation sur la fonction <function>mysql_fetch_array</function>
   pour plus d'informations sur les alias.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>mysql_fetch_assoc</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = mysql_connect("localhost", "mysql_user", "mysql_password");

if (!$conn) {
echo "Impossible de se connecter à la base de données : " . mysql_error();
   exit;
}

if (!mysql_select_db("mydbname")) {
   echo "Impossible de sélectionner la base mydbname : " . mysql_error();
   exit;
}

$sql = "SELECT id as userid, fullname, userstatus 
FROM   sometable
WHERE  userstatus = 1";

$result = mysql_query($sql);

if (!$result) {
   echo "Impossible d'exécuter la requête ($sql) dans la base : " . mysql_error();
   exit;
}

if (mysql_num_rows($result) == 0) {
   echo "Aucune ligne trouvée, rien à afficher.";
   exit;
}

// Tant qu'une ligne existe, place cette ligne dans la variable $row
// sous la forme d'un tableau associatif.
// Note : Si vous n'attendez qu'une seule ligne, oubliez la boucle
// Note : Si vous utilisez extract($row); dans la boucle suivante
//       vous créerez $userid, $fullname et $userstatus
while ($row = mysql_fetch_assoc($result)) {
   echo $row["userid"];
   echo $row["fullname"];
   echo $row["userstatus"];
}

mysql_free_result($result);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>Performance</title>
   <para>
    Une chose importante à noter est que l'utilisation de
    <function>mysql_fetch_assoc</function> n'est <emphasis>pas
    significativement</emphasis> plus lent que l'utilisation de
    <function>mysql_fetch_row</function>, alors qu'il fournit
    des valeurs significatives ajoutées.
   </para>
  </note>
  &database.field-case;
  &database.fetch-null;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_fetch_row</function></member>
    <member><function>mysql_fetch_array</function></member>
    <member><function>mysql_data_seek</function></member>
    <member><function>mysql_query</function></member>
    <member><function>mysql_error</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->