<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.4 Maintainer: nobody Status: partial -->
  <refentry id="function.SoapVar-SoapVar">
   <refnamediv>
    <refname>soapvar::soapvar</refname>
    <refpurpose>
     Constructeur SoapVar
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>soapvar::soapvar</methodname>
     <methodparam><type>mixed</type><parameter>data</parameter></methodparam>
     <methodparam><type>int</type><parameter>encoding</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>type_name</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>type_namespace</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>node_name</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>node_namespace</parameter></methodparam>
    </methodsynopsis>
    <para>
      <function>soapvar::soapvar</function> est une classe spéciale, 
      de bas niveau, pour gérer l'encodage
      des paramètres, et retourner les valeurs en mode non-WSDL. C'est simplement
      un conteneur de données, qui n'a pas de fonctionnalité spéciale
      hormis le constructeur. Elle est utile lorsque vous devez
      spécifier le type de propriété dans une requête ou une réponse SOAP.
      Le constructeur prend les données dans le paramètre 
      <parameter>data</parameter>, aussi bien pour les lire que pour les faire
      écrire; <parameter>encoding</parameter> est le format d'encodage (voir 
      les constantes <literal>XSD_...</literal>). Les autres paramètres
      optionnels sont le type de nom, <parameter>type_name</parameter>, 
      et l'esapce de nom, <parameter>type_namespace</parameter> 
      ainsi que les noeuds <parameter>node_name</parameter> et 
      espaces XML, <parameter>node_namespace</parameter>.
    </para>
    <para>
     <example>
      <title>Exemples avec <function>soapvar::soapvar</function></title>
      <programlisting role="php">
<![CDATA[
<?php
class SOAPStruct {
    function SOAPStruct($s, $i, $f) 
    {
        $this->varString = $s;
        $this->varInt = $i;
        $this->varFloat = $f;
    }
}
$client = new SoapClient(null, array('location' => "http://localhost/soap.php",
                                     'uri'      => "http://test-uri/"));
$struct = new SOAPStruct('arg', 34, 325.325);
$soapstruct = new SoapVar($struct, SOAP_ENC_OBJECT, "SOAPStruct", "http://soapinterop.org/xsd");
$client->echoStruct(new SoapParam($soapstruct, "inputStruct"));
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Voir aussi
     <function>soapclient::__call</function> et
     <function>soapparam::soapparam</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
