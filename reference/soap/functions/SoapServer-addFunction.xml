<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.2 $ -->
  <refentry id="function.SoapServer-addFunction">
   <refnamediv>
    <refname>soapserver::addfunction</refname>
    <refpurpose>
     Ajoute une ou plusieurs fonctions pour gérer des requêtes SOAP
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>void</type><methodname>soapserver::addfunction</methodname>
     <methodparam><type>mixed</type><parameter>functions</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>soapserver::addfunction</function> exporte une ou
     plusieurs fonctions vers les clients distants.
    </para>
    <para>
     Pour exporter une fonction, mettez son nom dans le paramètre
     <parameter>functions</parameter>, sous forme de chaîne. 
     Pour exporter plusieurs fonctions, passez un tableau de chaines,
     et pour exporter toutes les fonctions, passez la constante
     spéciale <constant>SOAP_FUNCTIONS_ALL</constant>.
    </para>
    <para>
     <parameter>functions</parameter> doit recevoir tous les arguments
     entrants, dans le même ordre que celui défini dans le fichier WSDL. 
     Les paramètres sortants ne sont pas autorisés. La fonction retourne
     une ou plusieurs valeurs. Pour retourner plusieurs valeurs, elle
     retourne un tableau associatif, dont les index sont les noms des
     paramètres de sortie.
    </para>
    <para>
     <example>
      <title>Exemple avec <function>soapserver::addfunction</function></title>
      <programlisting role="php">
<![CDATA[
<?php

function echoString($inputString)
{
    return $inputString;
}

$server->addFunction("echoString");

function echoTwoStrings($inputString1, $inputString2)
{
    return array("outputString1" => $inputString1,
                 "outputString2" => $inputString2);
}
$server->addFunction(array("echoString", "echoTwoStrings"));

$server->addFunction(SOAP_FUNCTIONS_ALL);

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Voir aussi
     <function>soapserver::soapserver</function> et
     <function>soapserver::setclass</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
