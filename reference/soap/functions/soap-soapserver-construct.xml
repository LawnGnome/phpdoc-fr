<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.3 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry id="function.soap-soapserver-construct">
 <refnamediv>
  <refname>SoapServer->__construct()</refname>
  <refpurpose>
   Constructeur SoapServer
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>SoapServer</classname></ooclass>
   <constructorsynopsis>
    <methodname>__construct</methodname>
    <methodparam><type>mixed</type><parameter>wsdl</parameter></methodparam>
    <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
   </constructorsynopsis>
  </classsynopsis>
  <para>
   Ce constructeur autorise la création des objets <classname>SoapServer</classname>
   en mode WSDL ou non-WSDL.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>wsdl</parameter></term>
     <listitem>
      <para>
       Si vous voulez le mode WSDL, vous devez définir l'URI du fichier
       WSDL dans ce paramètre. Dans les autres situations, vous devez définir
       ce paramètre à &null; et définir l'option <literal>uri</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Permet de définir une version SOAP par défaut (<literal>soap_version</literal>),
       un jeu de caractères d'encodage interne (<literal>encoding</literal>)
       et un URI acteur (<literal>actor</literal>).
       L'option <literal>classmap</literal> peut être utilisée pour lier
       quelques types WSDL à des classes &php;. Cette option doit être un
       tableau avec les types WSDL en tant que clés et les noms des classes &php;
       en tant que valeurs.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Quelques exemples</title>
    <programlisting role="php">
<![CDATA[
<?php

$server = new SoapServer("some.wsdl");

$server = new SoapServer("some.wsdl", array('soap_version' => SOAP_1_2));

$server = new SoapServer("some.wsdl", array('actor' => "http://example.org/ts-tests/C"));

$server = new SoapServer("some.wsdl", array('encoding'=>'ISO-8859-1'));

$server = new SoapServer(null, array('uri' => "http://test-uri/"));

class MyBook {
        public $title;
        public $author;
}

$server = new SoapServer("books.wsdl", array('classmap' => array('book' => "MyBook")));

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->