<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.2 $ -->
  <refentry id="function.SoapFault-SoapFault">
   <refnamediv>
    <refname>soapfault::soapfault</refname>
    <refpurpose>
     Constructeur SoapFault
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>soapfault::soapfault</methodname>
     <methodparam><type>string</type><parameter>faultcode</parameter></methodparam>
     <methodparam><type>string</type><parameter>faultstring</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>faultactor</parameter></methodparam>
     <methodparam choice="opt"><type>mixed</type><parameter>detail</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>faultname</parameter></methodparam>
     <methodparam choice="opt"><type>mixed</type><parameter>headerfault</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>soapfault::soapfault</function> est pratique lorsque vous voulez
     envoyer des erreurs comme réponse à un gestionnaire &php;.  
     <parameter>faultcode</parameter>, <parameter>faultstring</parameter>, 
     <parameter>faultactor</parameter> et <parameter>details</parameter> sont
     les éléments classiques d'une erreur SOAP. <parameter>faultname</parameter> est
     un paramètre optionnel, qui peut être utilisé pour sélectionner
     correctement le jeu de caractères WSDL. 
     <parameter>headerfault</parameter> est un paramètre optionnel qui
     peut être utilisé pour rapporter une erreur dans l'entête de réponse.
    </para>
    <para>
     <example>
      <title>Exemples avec <function>soapfault::soapfault</function></title>
      <programlisting role="php">
<![CDATA[
<?php
function test($x)
{
    return new SoapFault("Server", "Some error message");
}

$server = new SoapServer(null, array('uri' => "http://test-uri/"));
$server->addFunction("test");
$server->handle();
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Il est possible d'utiliser le mécanisme d'exceptions PHP pour 
     émettre des exceptions SOAP Fault.
    </para>
    <para>
     <example>
      <title>Exemples avec <function>soapfault::soapfault</function>
      et les exceptions</title>
      <programlisting role="php">
<![CDATA[
<?php
function test($x)
{
    throw new SoapFault("Server", "Some error message");
}

$server = new SoapServer(null, array('uri' => "http://test-uri/"));
$server->addFunction("test");
$server->handle();
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Voir aussi
     <function>soapclient::soapclient</function>,
     <function>soapclient::__call</function>,
     <function>soapparam::soapparam</function>,
     <function>soapvar::soapvar</function> et
     <function>is_soap_fault</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
