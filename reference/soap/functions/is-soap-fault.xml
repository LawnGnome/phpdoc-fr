<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.13 $ -->
<!-- EN-Revision: 1.9 Maintainer: dams Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.is-soap-fault" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>is_soap_fault</refname>
  <refpurpose>
   Vérifie si l'API soap a échoué
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>is_soap_fault</methodname>
   <methodparam><type>mixed</type><parameter>obj</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>is_soap_fault</function> sert à vérifier si l'API
   soap a échoué, surtout lorsque vous n'aimez pas utiliser les
   exceptions. Pour l'utiliser, vous devez créer un objet
   <classname>SoapClient</classname> avec l'option <literal>exceptions</literal>
   mise à zéro ou à &false;. Dans ce cas, la méthode SOAP
   va retourner un objet spécial <classname>SoapFault</classname>, qui
   encapsule les détails de l'erreur (code d'erreur,
   message, acteur et détails).
  </para>
  <para>
   Si <literal>exceptions</literal> n'est pas configurée,
   SOAP va émettre une exception.
   <function>is_soap_fault</function> vérifie si le
   paramètre fourni est un objet <classname>SoapFault</classname>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>obj</parameter></term>
     <listitem>
      <para>
       L'objet testé.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>is_soap_fault</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$client = new SoapClient("some.wsdl", array('exceptions' => 0));
$result = $client->SomeFunction();
if (is_soap_fault($result)) {
    trigger_error("SOAP Fault: (faultcode: {$result->faultcode}, faultstring: {$result->faultstring})", E_USER_ERROR);
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Gestion des erreurs par exception avec SOAP</title>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $client = new SoapClient("some.wsdl");
    $result = $client->SomeFunction(/* ... */);
} catch (SoapFault $fault) {
    trigger_error("SOAP Fault: (faultcode: {$fault->faultcode}, faultstring: {$fault->faultstring})", E_USER_ERROR);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.soap-soapclient-construct" /></member>
    <member><xref linkend="function.soap-soapfault-construct" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
