<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->
<!-- Purpose: utilspec.audio -->
<!-- Membership: pecl, external -->

<reference id="ref.oggvorbis">
 <title>oggvorbis</title>
 <titleabbrev>OGG/Vorbis</titleabbrev>

 <partintro>
  <section id="oggvorbis.intro">
   &reftitle.intro;
   <simpara>
    Le format de fichier OGG/Vorbis, comme définit par
    <ulink url="&url.ogg.vorbis;">&url.ogg.vorbis;</ulink>, est un schéma
    pour la compression de flux audio par de multiples facteurs avec un minimum
    de perte de qualité. Cette extension ajoute le support Ogg Vorbis aux 
    <link linkend="wrappers">gestionnaires d'URL</link> de &php;. Lorsqu'utilisé
    en mode lecture, les données compressées OGG/Vorbis sont déployées en
    audio PCM brute en un des six formats d'encodage PCM listés ci-dessous.
   </simpara>
  </section>

  <section id="oggvorbis.requirements">
   &reftitle.required;
   <para>
    Cette extension nécessite <literal>&php; &gt;= 4.3.0</literal>,
    <ulink url="&url.ogg.vorbis.downloads;">libogg</ulink> &gt;= 1.0, et
    <ulink url="&url.ogg.vorbis.downloads;">libvorbis</ulink> &gt;= 1.0.
   </para>
  </section>

   <section id="oggvorbis.configuration">
    &reftitle.runtime;
    &no.config;
   </section>


   &reference.oggvorbis.configure;

   &reference.oggvorbis.contexts;

   &reference.oggvorbis.constants;

 </partintro>
 <refentry>
  <refnamediv>
   <refname>Utilisation</refname>
   <refpurpose>
    Exemples d'utilisation du gestionnaire <literal>ogg://</literal>.
   </refpurpose>
  </refnamediv>

  <refsect1 role="examples"> 
  &reftitle.examples;
   <para>
    <example>
     <title>Lecture d'un fichier OGG/Vorbis</title>
     <programlisting role="php">
<![CDATA[
<?php
dl("oggvorbis.so");

/* Par défaut, ogg:// décodera en 16-bit signé, en mode Little Endian */
$fp = fopen('ogg://monaudio.ogg', 'r');

/* Collecte quelques informations sur le fichier. */
$metadata = stream_get_meta_data($fp);

/* Inspection de la première chanson (habituellement la seule chanson
   mais les fichiers OGG/Vorbis peuvent être chaînés) */
$songdata = $metadata['wrapper_data'][0];

echo "Fichier OGG/Vorbis encodé par : {$songdata['vendor']}\n.";
echo "  {$songdata['channels']} canaux de {$songdata['rate']}Hz encodé à {$songdata['bitrate_nominal']}bps.\n";
foreach($songdata['comments'] as $comment) {
    echo "  $comment\n";
}

while ($audio_data = fread($fp, 8192)) {
  /* Faire quelque chose avec l'audio PCM extrait depuis le OGG.
     Copier vers /dev/dsp est une bonne chose sur les systèmes linux,
     souvenez-vous juste de définir le périphérique pour votre mode d'échantillonage d'abord. */
}

fclose($fp);

?>
]]>
     </programlisting>
    </example>
   </para>

   <para>
    <example>
     <title>Encoder un fichier audio en OGG/Vorbis</title>
     <programlisting role="php">
<![CDATA[
<?php
dl('oggvorbis.so');

$context = stream_context_create(array('ogg'=>array(
             'pcm_mode' => OGGVORBIS_PCM_S8,  /* audio 8bit signé */
             'rate' => 44100,                 /* Qualité CD 44kHz */
             'bitrate' => 0.5,                /* Qualité moyenne VBR */
             'channels' => 1,                 /* Mono */
             'serialno' => 12345)));          /* Unique dans notre flux */

/* Ouverture d'un fichier pour un ajout. Ceci permet de "chaîner" un deuxième flux OGG à la fin du premier. */
$ogg = fopen('ogg://machanson.ogg', 'a', false, $context);

$pcm = fopen('mysample.pcm', 'r');

/* Compression de l'audio brute PCM depuis mysample.pcm vers machanson.ogg */
stream_copy_to_stream($pcm, $ogg);

fclose($pcm);
fclose($ogg);
?>
]]>
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>
</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

