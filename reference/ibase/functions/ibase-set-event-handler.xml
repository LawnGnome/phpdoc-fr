<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
  <refentry id="function.ibase-set-event-handler">
   <refnamediv>
    <refname>ibase_set_event_handler</refname>
    <refpurpose>
     Enregistre une fonction de callback sur &eacute;v&eacute;nement iBase
    </refpurpose> 
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>ibase_set_event_handler</methodname>
      <methodparam choice="opt"><type>resource</type><parameter>connection</parameter></methodparam>
      <methodparam><type>callback</type><parameter>event_handler</parameter></methodparam>
      <methodparam><type>string</type><parameter>event_name1</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>event_name2</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ibase_set_event_handler</function> enregistre la fonction 
     utilisateur &php; <parameter>event_handler</parameter> en tant que
     gestionnaire d'&eacute;v&eacute;nements pour les &eacute;v&eacute;nements
     sp&eacute;cifi&eacute;s par <parameter>event_name1</parameter>, 
     <parameter>event_name2</parameter>... La fonction <parameter>event_handler</parameter>
     callback est appel&eacute;e avec le nom de l'&eacute;v&eacute;nement et la ressource de 
     connexion en tant qu'arguments d&egrave;s qu'un &eacute;v&eacute;nement 
     sp&eacute;cifi&eacute; est post&eacute;
     dans la base de donn&eacute;es. La fonction callback doit retourner &false;
     si le gestionnaire doit &ecirc;tre annul&eacute;. Toute autre valeur de retour est
     ignor&eacute;e.
   	</para>
   	<para>
     <example>
    <title>Exemple avec <function>ibase_set_event_handler</function></title>
      <programlisting role="php">
<![CDATA[
<?php

    function event_handler($event_name, $link)
    {
        if ($event_name=="NEW ORDER") {
            // Traitement du nouvel ordre
            ibase_query($link, "UPDATE orders SET status='handled'");
        } else if ($event_name=="DB_SHUTDOWN") {
            // Lib&eacute;ration du gestionnaire
            return false;
        }
    }

    ibase_set_event_handler($link,"event_handler","NEW_ORDER","DB_SHUTDOWN");
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     La valeur retourn&eacute;e est une ressource d'&eacute;v&eacute;nement. Elle peut &ecirc;tre
     utilis&eacute;e pour lib&eacute;rer le gestionnaire d'&eacute;v&eacute;nements en utilisant
     <function>ibase_free_event_handler</function>.
    </para>
    <para>
     Voir aussi
     <function>ibase_free_event_handler</function> et
     <function>ibase_wait_event</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
