<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.8 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
  <refentry xml:id="function.ibase-set-event-handler" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>ibase_set_event_handler</refname>
    <refpurpose>
     Enregistre une fonction de callback sur un événement iBase
    </refpurpose> 
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>resource</type><methodname>ibase_set_event_handler</methodname>
      <methodparam><type>callback</type><parameter>event_handler</parameter></methodparam>
      <methodparam><type>string</type><parameter>event_name1</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>event_name2</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
     <methodsynopsis>
      <type>resource</type><methodname>ibase_set_event_handler</methodname>
      <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
      <methodparam><type>callback</type><parameter>event_handler</parameter></methodparam>
      <methodparam><type>string</type><parameter>event_name1</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>event_name2</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ibase_set_event_handler</function> enregistre la fonction 
     utilisateur &php; <parameter>event_handler</parameter> en tant que
     gestionnaire d'événements pour les événements
     spécifiés par <parameter>event_name1</parameter>, 
     <parameter>event_name2</parameter>... 
     La fonction <parameter>event_handler</parameter>
     callback est appelée avec le nom de l'événement et la ressource de 
     connexion en tant qu'arguments dès qu'un événement 
     spécifié est posté
     dans la base de données. La fonction callback doit retourner &false;
     si le gestionnaire doit être annulé. Toute autre valeur de retour est
     ignorée. Cette fonction accepte jusqu'à 15 arguments d'événement.
    </para>
    <para>
     <example>
      <title>Exemple avec <function>ibase_set_event_handler</function></title>
      <programlisting role="php">
<![CDATA[
<?php

function event_handler($event_name, $link) {
  if ($event_name=="NEW ORDER") {
     // Traitement du nouvel ordre
     ibase_query($link, "UPDATE orders SET status='handled'");
  } else if ($event_name=="DB_SHUTDOWN") {
     // Libération du gestionnaire
     return false;
  }
}
 
ibase_set_event_handler($link,"event_handler","NEW_ORDER","DB_SHUTDOWN");
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     La valeur retournée est une ressource d'événement. Elle peut être
     utilisée pour libérer le gestionnaire d'événements en utilisant
     <function>ibase_free_event_handler</function>.
    </para>
    <para>
     Voir aussi
     <function>ibase_free_event_handler</function> et
     <function>ibase_wait_event</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
