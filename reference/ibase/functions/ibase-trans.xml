<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.7 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

 <refentry xml:id="function.ibase-trans" xmlns="http://docbook.org/ns/docbook">
  <refnamediv>
   <refname>ibase_trans</refname>
   <refpurpose>Prépare une transaction iBase</refpurpose>
  </refnamediv>
  <refsect1>
   &reftitle.description;
     <methodsynopsis>
      <type>resource</type><methodname>ibase_trans</methodname>
      <methodparam choice="opt"><type>int</type><parameter>trans_args</parameter></methodparam>
      <methodparam choice="opt"><type>resource</type><parameter>link_identifier</parameter></methodparam>
     </methodsynopsis>
   <para>
    <function>ibase_trans</function> prépare une transaction sur la
    connexion InterBase <parameter>link_identifier</parameter>.
   </para>
    <para>
     <parameter>trans_args</parameter> peut être une combinaison des constantes
     suivantes : <constant>IBASE_READ</constant>, <constant>IBASE_WRITE</constant>, 
     <constant>IBASE_COMMITED</constant>, <constant>IBASE_CONSISTENCY</constant>,
     <constant>IBASE_CONCURRENCY</constant>, <constant>IBASE_REC_VERSION</constant>,
     <constant>IBASE_REC_NO_VERSION</constant>, <constant>IBASE_WAIT</constant> et
     <constant>IBASE_NOWAIT</constant>.
    </para>
    <note>
     <para>
      Le comportement de cette fonction a changé depuis &php; 5.0.0.
      Le premier appel à <function>ibase_trans</function> retournera 
      la transaction par défaut pour la connexion courante. Toutes les
      transactions commencées par <function>ibase_trans</function> 
      seront annulées à la fin de l'exécution du script si elles n'ont pas été 
      validées ou annulées par respectivement les fonctions <function>ibase_commit</function> 
      ou <function>ibase_rollback</function>.
     </para>
    </note>
    <note>
     <para>
      Dans les versions 5.0.0 de &php; et suivantes, <function>ibase_trans</function>
      accepte plusieurs paramètres <parameter>trans_args</parameter> et 
      <parameter>link_identifier</parameter>. Ceci permet d'effectuer des transactions
      sur plusieurs connexions à des bases de données différentes, qui seront validées
      en utilisant l'algorithme <literal>2-phase</literal>. Cela signifie que vous
      pouvez mettre à jour plusieurs bases de données. Cela ne veut PAS dire que vous 
      pouvez utiliser plusieurs bases de données dans une même requête !
     </para>
     <para>
      Si vous utilisez les transactions sur plusieurs base de données, vous devez spécifier 
      <parameter>link_id</parameter> et <parameter>transaction_id</parameter> 
      dans les fonctions <function>ibase_query</function> et <function>ibase_prepare</function>.
     </para>
    </note>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
