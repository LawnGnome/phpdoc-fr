<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.4 Maintainer: yannick Status: ready -->
  <refentry id="function.msg-send">
   <refnamediv>
    <refname>msg_send</refname>
    <refpurpose>
     Envoie un message dans une file
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>bool</type><methodname>msg_send</methodname>
     <methodparam><type>resource</type><parameter>queue</parameter></methodparam>
     <methodparam><type>int</type><parameter>msgtype</parameter></methodparam>
     <methodparam><type>mixed</type><parameter>message</parameter></methodparam>
     <methodparam choice="opt"><type>bool</type><parameter>serialize</parameter></methodparam>
     <methodparam choice="opt"><type>bool</type><parameter>blocking</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>&amp;errorcode</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>msg_send</function> envoie le messsage <parameter>message</parameter> 
     de type <parameter>msgtype</parameter> (qui DOIT être plus grand que 0) 
     à la file de messages identifiée par <parameter>queue</parameter>.
    </para>
    <para>
     Si le message est trop grand pour être stocké par la file, votre
     script attendra jusqu'à ce qu'un autre processus lise dans la 
     file un message, et libère assez de place pour votre message. C'est
     le mode bloquant : vous pouvez éviter ce mode en utilisant le 
     paramètre <parameter>blocking</parameter> avec la valeur &false; : 
     dans ce cas, <function>msg_send</function> retournera immédiatement
     &false; si le message est trop gros pour la file. Il assignera alors
     au paramètre <parameter>errorcode</parameter> la valeur de EAGAIN, 
     indiquant que vous devriez essayer d'envoyer à nouveau votre
     message, un peu plus tard.
    </para>
    <para>
     Le paramètre optionnel <parameter>serialize</parameter> contrôle la
     méthode d'envoi du message <parameter>message</parameter>.  <parameter>serialize</parameter>
     faut par défaut &true; ce qui signifie que le message <parameter>message</parameter> 
     sera linéarisé en utilisant le même mécanisme que celui qui est utilisé
     par les sessions, avant d'être envoyé à la file de message. Cela permet
     d'envoyer des tableaux et des objets complexes à d'autres scripts
     &php;, ou bien, si vous utilisez l'extension WDDX, dMéchanger des messages
     avec des clients compatibles WDDX.
    </para>
    <para>
     Lors de l'émission réussie d'un message, la file est mise à jour 
     comme ceci : <literal>msg_lrpid</literal> prend la valeur de l'identifiant 
     de processus du processus appelant, <literal>msg_qnum</literal> est décrementé de 
     1 et <literal>msg_rtime</literal> prend la date et l'heure courante.
    </para>
    <para>
     Voir aussi
     <function>msg_remove_queue</function>,
     <function>msg_receive</function>,
     <function>msg_stat_queue</function> et
     <function>msg_set_queue</function>.
    </para>
   </refsect1>
  </refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
