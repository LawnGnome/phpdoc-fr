<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/math.xml, last change in rev 1.11 -->
<!-- last change to 'min' in en/ tree in rev 1.2 -->
 <refentry id="function.min">
  <refnamediv>
   <refname>min</refname>
   <refpurpose>La plus petite valeur</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
     <methodsynopsis>
      <type>number</type><methodname>min</methodname>
      <methodparam><type>number</type><parameter>arg1</parameter></methodparam>
      <methodparam><type>number</type><parameter>arg2</parameter></methodparam>
      <methodparam choice="opt"><parameter>...</parameter></methodparam>
     </methodsynopsis>
     <methodsynopsis>
      <type>number</type><methodname>min</methodname>
      <methodparam><type>array</type><parameter>numbers</parameter></methodparam>
     </methodsynopsis>
   <para>
    <function>min</function> retourne la plus petite valeur
    num&eacute;rique parmi les valeurs pass&eacute;es en param&egrave;tres.
   </para>
    <para>
     Dans la premi&egrave;re syntaxe, vous devez fournir au moins deux param&egrave;tres
     &agrave; la fonction <function>min</function>, qui vous retournera la plus petite
     de deux valeurs. Vous pouvez comparer un nombre illimit&eacute; de valeurs. Si l'une
     d'entre elle est ind&eacute;finie, <function>min</function> &eacute;chouera.
    </para>
    <para>
     Dans la seconde variante, <function>min</function> retourne la plus petite
     valeur trouv&eacute;e dans le tableau <parameter>numbers</parameter>.  
    </para>
   <para>
    Si au moins une valeur est un nombre &agrave; virgule flottante, elles seront toutes
    trait&eacute;es comme des nombres &agrave; virgule flottante, et un nombre
    &agrave; virgule flottante sera retourn&eacute;.
    Si aucune valeur n'est un nombre &agrave; virgule flottante, elles seront trait&eacute;es
    comme des entiers, et un entier sera retourn&eacute;.
   </para>
     <example>
	  <title>Exemple avec <function>min</function></title>
      <programlisting>
<![CDATA[
<?php
$a = 4; 
$b = 9; 
$c = 3;
$arr = array(99, 34, 11);

// Vous pouvez impl&eacute;menter votre propre gestion d'erreur
// en cas d'&eacute;chec (une variable peut ne pas exister)
if (!$min_value = @min($a, $b, $c)) {
    echo "Impossible de trouver la valeur minimale, essayez &agrave; nouveau!.";
} else {
    echo "La valeur minimale est $min_value";
}

print min($arr);  // 11

?>
]]>
     </programlisting>
    </example>
    <para>
     Voir aussi
     <function>max</function>.
    </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
