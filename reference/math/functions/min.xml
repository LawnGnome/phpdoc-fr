<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.4 Maintainer: yannick Status: ready -->
 <refentry id="function.min">
  <refnamediv>
   <refname>min</refname>
   <refpurpose>La plus petite valeur</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
     <methodsynopsis>
      <type>mixed</type><methodname>min</methodname>
      <methodparam><type>number</type><parameter>arg1</parameter></methodparam>
      <methodparam><type>number</type><parameter>arg2</parameter></methodparam>
      <methodparam choice="opt"><type>number</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
     <methodsynopsis>
      <type>mixed</type><methodname>min</methodname>
      <methodparam><type>array</type><parameter>numbers</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
   <para>
    <function>min</function> retourne la plus petite valeur
    numérique parmi les valeurs passées en paramètres.
   </para>
    <para>
     Dans la première syntaxe, vous devez fournir au moins deux paramètres
     à la fonction <function>min</function>, qui vous retournera la plus petite
     de deux valeurs. Vous pouvez comparer un nombre illimité de valeurs. Si l'une
     d'entre elle est indéfinie, <function>min</function> échouera.
    </para>
    <para>
     Dans la seconde variante, <function>min</function> retourne la plus petite
     valeur trouvée dans le tableau <parameter>numbers</parameter>.  
    </para>
   <para>
    Si au moins une valeur est un nombre à virgule flottante, elles seront toutes
    traitées comme des nombres à virgule flottante, et un nombre
    à virgule flottante sera retourné.
    Si aucune valeur n'est un nombre à virgule flottante, elles seront traitées
    comme des entiers, et un entier sera retourné.
   </para>
   <para>
     <example>
	  <title>Exemples avec <function>min</function></title>
      <programlisting role="php">
<![CDATA[
<?php
echo min(2, 3, 1, 6, 7);  // 1
echo min(array(2, 4, 5)); // 2

echo min(0, 'bonjour');     // 0
echo min('bonjour', 0);     // bonjour
echo min('bonjour', -1);    // -1

// Avec plusieurs tableaux, min() fait les comparaisons de gauche à droite
// dans notre exemple : 2 == 2, mais 4 < 5
$val = min(array(2, 4, 8), array(2, 5, 1)); // array(2, 4, 8)

// Si un mélange de tableau et de scalaires sont fournis, 
// le tableau n'est jamais retourné, car il est considéré comme le plus grand
$val = min('chaîne', array(2, 5, 7), 42);   // chaîne
?>
]]>
     </programlisting>
    </example>
    </para>
    <para>
     Voir aussi
     <function>max</function> et
     <function>count</function>.
    </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
