<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.19 $ -->
<!-- EN-Revision: 1.17 Maintainer: yannick Status: ready -->
<!-- Purpose: utilspec.nontext -->
<!-- Membership: pecl, external -->
<!-- Reviewed: yes -->

<reference xml:id="ref.cpdf" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Fonctions ClibPDF</title>
 <titleabbrev>ClibPDF</titleabbrev>

  <partintro>
   <section xml:id="cpdf.intro">
    &reftitle.intro;
    <para>
     L'extension ClibPDF vous permet de créer des documents PDF avec &php;.
     Les fonctionnalités et API de ClibPDF sont très similaires à
     <link linkend="ref.pdf">PDFlib</link>.
     Cette documentation devrait être lue avec le manuel ClibPDF
     sous la main, car il est beaucoup plus détaillé.
    </para>
    <para>
     Beaucoup de fonctions natives de ClibPDF et du module &php;, de même
     que celles de <link linkend="ref.pdf">PDFlib</link>, ont le même nom.
     Toutes les fonctions, hormis <function>cpdf_open</function> utilisent
     un pointeur sur un document comme premier paramètre.
    </para>
    <para>
     Actuellement, ce pointeur n'est pas utilisé en interne, car ClibPDF
     ne supporte pas la création de plusieurs documents PDF simultanément.
     En fait, il ne vaut mieux pas l'envisager, car les résultats sont
     aléatoires. Je ne veux même pas imaginer les problèmes
     qui pourraient se poser avec les environnements multi-tâches. Selon l'auteur
     de ClibPDF, cette situation va changer dans les prochaines versions
     (lorsque cette documentation a été écrite, c'était
     la version 1.10). Si vous avez besoin de cette fonctionnalité,
     utilisez pdflib.
    </para>
    <para>
     Une caractéristique pratique de ClibPDF (et aussi de
     <link linkend="ref.pdf">PDFlib</link>) est celle de créer le document
     PDF en mémoire, sans fichiers temporaires. ClibPDF permet aussi de
     passer les coordonnées avec une unité prédéfinie (ce qui peut être
     simulé avec <function>pdf_translate</function> de la bibliothèque
     <link linkend="ref.pdf">PDFlib</link>).
    </para>
    <para>
     Un autre atout de ClibPDF est que chaque page peut être
     modifiée à tout moment même si une nouvelle page a été ouverte. La fonction
     <function>cpdf_set_current_page</function> vous permet de quitter
     temporairement une page et d'en modifier une autre.
    </para>
    <para>
     La plupart des fonctions sont très simples d'emploi.
     Le plus difficile est probablement de créer un document
     PDF simple. L'exemple suivant devrait vous aider à
     démarrer. La page contient du texte qui utilise la
     police "Times-Roman" en taille 30, outlined. Le texte est souligné.
    </para>
    <note>
     <para>
      &pecl.moved-ver;5.1.0.
     </para>
    </note>
    <note>
     <simpara>
      Si vous êtes intéressé par des alternatives gratuites pour
      générer des PDF, sans passer par des bibliothèques PDF, voyez <link
      linkend="faq.using.freepdf"> cette entrée de la FAQ</link>.
     </simpara>
    </note>
   </section>

   <section xml:id="cpdf.requirements">
    &reftitle.required;
    <para>
     Pour utiliser les fonctions ClibPDF vous devez installer la librairie
     ClibPDF. Elle est disponible au téléchargement sur le site de
     <link xlink:href="&url.fastio;">FastIO</link>, mais elle impose l'achat d'une
     licence pour utilisation commerciale. &php; requiert que vous utilisiez
     ClibPDF &gt;= 2.
     Le développement de la bibliothèque ClibPDF s'est interrompu. Ainsi, l'accès
     au site FastIO sera probablement impossible.
    </para>
   </section>

   &reference.cpdf.configure;

   <section xml:id="cpdf.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   &reference.cpdf.constants;

   <section xml:id="cpdf.examples">
    &reftitle.examples;
   <example>
    <title>Exemple simple ClibPDF</title>
    <programlisting role="php">
<![CDATA[
<?php
$cpdf = cpdf_open(0);
cpdf_page_init($cpdf, 1, 0, 595, 842, 1.0);
cpdf_add_outline($cpdf, 0, 0, 0, 1, "Page 1");
cpdf_begin_text($cpdf);
cpdf_set_font($cpdf, "Times-Roman", 30, "WinAnsiEncoding");
cpdf_set_text_rendering($cpdf, 1);
cpdf_text($cpdf, "Times Roman outlined", 50, 50);
cpdf_end_text($cpdf);
cpdf_moveto($cpdf, 50, 50);
cpdf_lineto($cpdf, 740, 330);
cpdf_stroke($cpdf);
cpdf_finalize_page($cpdf, 1);
cpdf_finalize($cpdf);
Header("Content-type: application/pdf");
cpdf_output_buffer($cpdf);
cpdf_close($cpdf);
?>
]]>
    </programlisting>
   </example>
   <para>
    La distribution pdflib contient un exemple plus complet, qui
    crée des séries de pages avec une horloge. Voici
    cet exemple converti en script &php; qui utilise l'extension ClibPDF :
   </para>
   <example>
    <title>Exemple pdfclock de la distribution pdflib 2.0</title>
    <programlisting role="php">
<![CDATA[
<?php
$radius = 200;
$margin = 20;
$pagecount = 40;

$pdf = cpdf_open(0);
cpdf_set_creator($pdf, "pdf_clock.php");
cpdf_set_title($pdf, "Analog Clock");

while ($pagecount-- > 0) {
  cpdf_page_init($pdf, $pagecount+1, 0, 2 * ($radius + $margin), 2 * ($radius + $margin), 1.0);

  cpdf_set_page_animation($pdf, 4, 0.5, 0, 0, 0);  /* wipe */

  cpdf_translate($pdf, $radius + $margin, $radius + $margin);
  cpdf_save($pdf);
  cpdf_setrgbcolor($pdf, 0.0, 0.0, 1.0);

  /* minute strokes */
  cpdf_setlinewidth($pdf, 2.0);
  for ($alpha = 0; $alpha < 360; $alpha += 6)
    {
    cpdf_rotate($pdf, 6.0);
    cpdf_moveto($pdf, $radius, 0.0);
    cpdf_lineto($pdf, $radius-$margin/3, 0.0);
    cpdf_stroke($pdf);
    }

  cpdf_restore($pdf);
  cpdf_save($pdf);

  /* 5 minute strokes */
  cpdf_setlinewidth($pdf, 3.0);
  for ($alpha = 0; $alpha < 360; $alpha += 30)
  {
    cpdf_rotate($pdf, 30.0);
    cpdf_moveto($pdf, $radius, 0.0);
    cpdf_lineto($pdf, $radius-$margin, 0.0);
    cpdf_stroke($pdf);
  }

  $ltime = getdate();

  /* draw hour hand */
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['minutes']/60.0) + $ltime['hours'] - 3.0) * 30.0);
  cpdf_moveto($pdf, -$radius/10, -$radius/20);
  cpdf_lineto($pdf, $radius/2, 0.0);
  cpdf_lineto($pdf, -$radius/10, $radius/20);
  cpdf_closepath($pdf);
  cpdf_fill($pdf);
  cpdf_restore($pdf);

  /* draw minute hand */
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['seconds']/60.0) + $ltime['minutes'] - 15.0) * 6.0);
  cpdf_moveto($pdf, -$radius/10, -$radius/20);
  cpdf_lineto($pdf, $radius * 0.8, 0.0);
  cpdf_lineto($pdf, -$radius/10, $radius/20);
  cpdf_closepath($pdf);
  cpdf_fill($pdf);
  cpdf_restore($pdf);

  /* draw second hand */
  cpdf_setrgbcolor($pdf, 1.0, 0.0, 0.0);
  cpdf_setlinewidth($pdf, 2);
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['seconds'] - 15.0) * 6.0));
  cpdf_moveto($pdf, -$radius/5, 0.0);
  cpdf_lineto($pdf, $radius, 0.0);
  cpdf_stroke($pdf);
  cpdf_restore($pdf);

  /* draw little circle at center */
  cpdf_circle($pdf, 0, 0, $radius/30);
  cpdf_fill($pdf);

  cpdf_restore($pdf);

  cpdf_finalize_page($pdf, $pagecount+1);
}

cpdf_finalize($pdf);
header("Content-type: application/pdf");
cpdf_output_buffer($pdf);
cpdf_close($pdf);
?>
]]>
    </programlisting>
   </example>
  </section>

  <section xml:id="cpdf.seealso">
   &reftitle.seealso;
   <para>
    Voir aussi la documentation de <link linkend="ref.pdf">PDFlib</link>.
   </para>
  </section>
 </partintro>

&reference.cpdf.functions;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

