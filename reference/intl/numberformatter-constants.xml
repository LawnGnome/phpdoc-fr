<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: dams Status: ready -->
<!-- Reviewed: yes -->

<section xml:id="intl.numberformatter-constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;

 <section xml:id="intl.numberformatter-constants.UNumberFormatStyle">
  <para>
   Ces styles sont utilisés par <function>numfmt_create</function>
   pour définir le type de formatteur.
   <variablelist>
    <varlistentry>
     <term>
      <constant>NumberFormatter::PATTERN_DECIMAL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Format décimal défini par un modèle</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::DECIMAL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Format décimal</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::CURRENCY</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Format monétaire</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::PERCENT</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Format pourcentage</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::SCIENTIFIC</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Format scientifique</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::SPELLOUT</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Format littéral, basé sur des règles</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::ORDINAL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Format ordinal, basé sur des règles</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::DURATION</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Format de durée, , basé sur des règles</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::PATTERN_RULEBASED</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Format de modèle, , basé sur des règles</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::DEFAULT_STYLE</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Format par défaut pour les conventions locales</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::IGNORE</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Alias de PATTERN_DECIMAL</simpara>
     </listitem>
    </varlistentry>
   </variablelist>





  </para>
 </section>

 <section xml:id="intl.numberformatter-constants.types">
  <para>
   Ces constantes définissent la méthode d'analyse et de formattage
   des nombres. Ils doivent être utilisés comme arguments des fonctions
   <function>numfmt_format</function> et <function>numfmt_parse</function>.
   <variablelist>
    <varlistentry>
     <term>
      <constant>NumberFormatter::TYPE_DEFAULT</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Dérive le type depuis le type de variable</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::TYPE_INT32</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Formate / analyse un entier 32 bits</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::TYPE_INT64</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Formate / analyse un entier 64 bits</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::TYPE_DOUBLE</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Formate / analyse un nombre décimal</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::TYPE_CURRENCY</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Formate / analyse une valeur monétaire</simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>

 <section xml:id="intl.numberformatter-constants.UNumberFormatAttribute">
  <para>
   Attributs de formats de nombre utilisés par 
   <function>numfmt_get_attribute</function>
   et <function>numfmt_set_attribute</function>.
   <variablelist>
    <varlistentry>
     <term>
      <constant>NumberFormatter::PARSE_INT_ONLY</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Analyse uniquement les entiers.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::GROUPING_USED</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Séparateur de groupes.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::DECIMAL_ALWAYS_SHOWN</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Affiche toujours une virgule décimale.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::MAX_INTEGER_DIGITS</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Nombre maximal de chiffres.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::MIN_INTEGER_DIGITS</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Nombre minimale de chiffres.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::INTEGER_DIGITS</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Nombre de chiffres.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::MAX_FRACTION_DIGITS</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Nombre maximal de décimales.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::MIN_FRACTION_DIGITS</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Nombre minimal de décimales.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::FRACTION_DIGITS</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Nombre de décimales.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::MULTIPLIER</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Multiplicateur.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::GROUPING_SIZE</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Taille de regroupement.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::ROUNDING_MODE</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Mode d'arrondi.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::ROUNDING_INCREMENT</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Incrément d'arrondi.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::FORMAT_WIDTH</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>La largeur de complément pour le formattage d'un nombre.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::PADDING_POSITION</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>
       La position à laquelle le complément se fait. Voyez les 
       constantes de complément pour avoir les différentes valeurs possibles.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::SECONDARY_GROUPING_SIZE</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Taille secondaire de groupement.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::SIGNIFICANT_DIGITS_USED</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Utilise les chiffres significatifs.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::MIN_SIGNIFICANT_DIGITS</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Nombre minimum de chiffres significatifs.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::MAX_SIGNIFICANT_DIGITS</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Nombre maximum de chiffres significatifs.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::LENIENT_PARSE</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Mode d'analyse utilisé par les formats à règles.</simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>

 <section
  xml:id="intl.numberformatter-constants.UNumberFormatTextAttribute">
  <para>
   Attributs de texte pour les formats de nombres, utilisés par 
   <function>numfmt_get_text_attribute</function> et
   <function>numfmt_set_text_attribute</function>.
   <variablelist>
    <varlistentry>
     <term>
      <constant>NumberFormatter::POSITIVE_PREFIX</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Préfixe positif.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::POSITIVE_SUFFIX</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Suffise positif.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::NEGATIVE_PREFIX</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Préfixe négatif.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::NEGATIVE_SUFFIX</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Suffixe négatif.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::PADDING_CHARACTER</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le caractère à utiliser pour compléter les formats jusqu'à la taille.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::CURRENCY_CODE</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le code de devise ISO.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::DEFAULT_RULESET</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>
       Le jeu de règles par défaut. Il est uniquement utilisable avec 
       les formatteurs à règles.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::PUBLIC_RULESETS</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>
       Le jeu de règles publiques. Ceci est uniquement disponible
       avec les formatteurs à règles. C'est un attribut en lecture
       seule. Les règles publiques sont retournées sous forme d'une
       seule chaîne, et chaque règle est délimitée par un point-virgule
       ';'.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>

 <section xml:id="intl.numberformatter-constants.UNumberFormatSymbol">
  <para>
   Les symboles de format utilisés par <function>numfmt_get_symbol</function>
   et <function>numfmt_set_symbol</function>.
   <variablelist>
    <varlistentry>
     <term>
      <constant>NumberFormatter::DECIMAL_SEPARATOR_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le séparateur décimal.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::GROUPING_SEPARATOR_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le séparateur de groupes.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::PATTERN_SEPARATOR_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le modèle de séparateur.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::PERCENT_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le signe de pourcentage.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::ZERO_DIGIT_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Zéro.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::DIGIT_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Un caractère représentant un chiffre dans un modèle.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::MINUS_SIGN_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le signe moins.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::PLUS_SIGN_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le signe plus.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::CURRENCY_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le symbole de devise.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::INTL_CURRENCY_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le symbole international de devise.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::MONETARY_SEPARATOR_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le séparateur monétaire.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::EXPONENTIAL_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le symbole d'exponentiel.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::PERMILL_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le symbol par mille.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::PAD_ESCAPE_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le caractère de protection des symboles.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::INFINITY_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le symbole de l'infini.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::NAN_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le symbole "n'est pas un nombre".</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::SIGNIFICANT_DIGIT_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le symbole des chiffres significatifs.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::MONETARY_GROUPING_SEPARATOR_SYMBOL</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Le séparateur de groupes monétaires.</simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>

 <section xml:id="intl.numberformatter-constants.UNumberFormatRoundingMode">
  <para>
   Les modes d'arrondi utilisés par les fonctions <function>numfmt_get_attribute</function>
   et <function>numfmt_set_attribute</function> avec l'attribut
   <constant>NumberFormatter::ROUNDING_MODE</constant>.
   <variablelist>
    <varlistentry>
     <term>
      <constant>NumberFormatter::ROUND_CEILING</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Mode d'arrondi vers l'infini positif.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::ROUND_DOWN</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Mode d'arrondi vers zéro.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::ROUND_FLOOR</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Mode d'arrondi vers l'infini négatif.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::ROUND_HALFDOWN</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>
       Mode d'arrondi vers le plus proche entier, a moins qu'ils
       soient équidistants : arrondi inférieur dans ce cas.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::ROUND_HALFEVEN</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>
       Mode d'arrondi vers le plus proche entier, a moins qu'ils
       soient équidistants : arrondi vers le nombre pair dans ce cas.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::ROUND_HALFUP</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>
       Mode d'arrondi vers le plus proche entier, a moins qu'ils
       soient équidistants : arrondi supérieur dans ce cas.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::ROUND_UP</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Mode d'arrondi qui éloigne de zéro.</simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>

 <section xml:id="intl.numberformatter-constants.UNumberFormatPadPosition">
  <para>
   Valeurs de compléments utilisés par <function>numfmt_get_attribute</function>
   et <function>numfmt_set_attribute</function> avec l'attribut
   <constant>NumberFormatter::PADDING_POSITION</constant>.
   <variablelist>
    <varlistentry>
     <term>
      <constant>NumberFormatter::PAD_AFTER_PREFIX</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Caractères de compléments ajoutés après le préfixe.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::PAD_AFTER_SUFFIX</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Caractères de compléments ajoutés après le suffixe.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::PAD_BEFORE_PREFIX</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Caractères de compléments ajoutés avant le préfixe.</simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>
      <constant>NumberFormatter::PAD_BEFORE_SUFFIX</constant>
      (&integer;)
     </term>
     <listitem>
      <simpara>Caractères de compléments ajoutés avant le suffixe.</simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>

</section>

<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"~/.phpdoc/manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
-->

