<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- splitted from ./en/functions/dbx.xml, last change in rev 1.3 -->
  <refentry id="function.dbx-compare">
   <refnamediv>
    <refname>dbx_compare</refname>
    <refpurpose>Compare deux lignes afin de les trier</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>dbx_compare</methodname>
      <methodparam><type>array</type><parameter>row_a</parameter></methodparam>
      <methodparam><type>array</type><parameter>row_b</parameter></methodparam>
      <methodparam><type>string</type><parameter>column_key</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>dbx_compare</function> retourne <literal>0</literal> si
     <literal>row_a[$column_key]</literal> est &eacute;gale &agrave; 
     <literal>row_b[$column_key]</literal>, et <literal>1</literal> ou 
     <literal>-1</literal> si le premier est plus grand ou plus petit que le
     dernier, respectivement, ou bien le contraire si l'option
     <parameter>flag</parameter> est configur&eacute;e &agrave; <constant>DBX_CMP_DESC</constant>.
     <function>dbx_compare</function> est une fonction d'aide pour 
     <function>dbx_sort</function>, afin d'aider aux tris.
     sorting function.
    </para>
    <para>
     Le param&egrave;tre <parameter>flags</parameter> peut prendre plusieurs valeurs : 
     <itemizedlist>
      <listitem>
       <simpara>
        <constant>DBX_CMP_ASC</constant> - ordre ascendant
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>DBX_CMP_DESC</constant> - ordre descendant
       </simpara>
      </listitem>
     </itemizedlist>
     et le type utilis&eacute; pour la comparaison : 
     <itemizedlist>
      <listitem>
       <simpara>
        <constant>DBX_CMP_NATIVE</constant> - par de conversion de type
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>DBX_CMP_TEXT</constant> - compare les lignes comme des cha&icirc;nes
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>DBX_CMP_NUMBER</constant> - compare les lignes comme des nombres
       </simpara>
      </listitem>
     </itemizedlist>
     Une direction de tri et un type de comparaison peuvent &ecirc;tre combin&eacute;s
     avec l'op&eacute;rateur OR (|). La valeur par d&eacute;faut pour l'option
     <parameter>flags</parameter> est <constant>DBX_CMP_ASC</constant>
     | <constant>DBX_CMP_NATIVE</constant>.
    </para>
    <example>
     <title>Exemple avec <function>dbx_compare</function></title>
     <programlisting role="php">
<![CDATA[
<?php
function user_re_order ($a, $b) {
    $rv = dbx_compare ($a, $b, "parentid", DBX_CMP_DESC);
    if ( !$rv ) {
        $rv = dbx_compare ($a, $b, "id", DBX_CMP_NUMBER);
    }
    return $rv;
}

$link   = dbx_connect (DBX_ODBC, "", "db", "username", "password")
    or die ("Impossible de se connecter");

$result = dbx_query ($link, "SELECT id, parentid, description FROM table ORDER BY id");
    // les donn&eacute;es de $result sont d&eacute;sormais class&eacute;es par id

dbx_sort ($result, "user_re_order");
    // la date dans $result est maintenant ordonn&eacute;e par parentid (descending), puis par id

dbx_close ($link);
?>
]]>
     </programlisting>
    </example>
    <para>
     Voir aussi 
     <function>dbx_sort</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
