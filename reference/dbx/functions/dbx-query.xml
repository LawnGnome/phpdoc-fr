<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/dbx.xml, last change in rev 1.5 -->
<!-- last change to 'dbx-query' in en/ tree in rev 1.3 -->
  <refentry id="function.dbx-query">
   <refnamediv>
    <refname>dbx_query</refname>
    <refpurpose>Envoie une requ&ecirc;te et lit tous les r&eacute;sultats</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>dbx_query</methodname>
      <methodparam><type>resource</type><parameter>link_identifier</parameter></methodparam>
      <methodparam><type>string</type><parameter>sql_statement</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
   &warn.experimental;
    <para>
     <function>dbx_query</function> retourne une ressource
     dbx_result_object ou 1 en cas de succ&egrave;s (un objet de r&eacute;sultat
     ne sera retourn&eacute; que pour les requ&ecirc;tes SQL qui retournent un
     r&eacute;sultat), ou 0 en cas d'erreur. Le param&egrave;tre
     <parameter>flags</parameter> sert &agrave; contr&ocirc;ler la quantit&eacute;
     d'informations retourn&eacute;e. Il peut &ecirc;tre n'importe quelle
     combinaisons par OR des constantes : DBX_RESULT_INFO,
     DBX_RESULT_INDEX, DBX_RESULT_ASSOC. DBX_RESULT_INFO fournit
     des informations sur les colonnes, comme les noms des champs
     et leur type. DBX_RESULT_INDEX retourne le r&eacute;sultat dans un
     tableau index&eacute; (par exemple, data[2][3], o&ugrave; 2 est le num&eacute;ro
     de ligne et 3 est le num&eacute;ro de colonne), dont la premi&egrave;re
     colonne est index&eacute;e &agrave; 0. DBX_RESULT_ASSOC associe les noms
     de colonnes avec leurs indices. Notez que DBX_RESULT_INDEX est
     toujours retourn&eacute;, ind&eacute;pendamment de la valeur de
     <parameter>flags</parameter>. Si DBX_RESULT_ASSOC est sp&eacute;cifi&eacute;,
     DBX_RESULT_INFO est aussi retourn&eacute;, m&ecirc;me s'il n'a pas &eacute;t&eacute;
     sp&eacute;cifi&eacute;. Ce qui signifie que les seules combinaisons envisageables
     sont
     DBX_RESULT_INDEX,
     DBX_RESULT_INDEX | DBX_RESULT_INFO et
     DBX_RESULT_INDEX | DBX_RESULT_INFO | DBX_RESULT_ASSOC. La derni&egrave;re
     combinaison est la valeur par d&eacute;faut de <parameter>flags</parameter>.
     Les r&eacute;sultats associ&eacute;s sont en fait des r&eacute;f&eacute;rences, ce qui fait que
     modifier <literal>data[0][0]</literal>, revient &agrave; modifier
     <literal>data[0]['fieldnameforfirstcolumn']</literal>.
    </para>
    <para>
     Un objet dbx_result_object a 5 membres (&eacute;ventuellement 4, suivants
     les valeurs de <parameter>flags</parameter>) : 'handle', 'cols', 'rows',
     'info' (optionnel) et 'data'. Handle est un identifiant de r&eacute;sultat,
     qui peut &ecirc;tre utilis&eacute; avec les fonctions sp&eacute;cifiques &agrave; son module.
     Par exemple :
    </para>
    <para>
     <informalexample role="php">
      <programlisting>
&lt;?php
$result = dbx_query($link, "SELECT id FROM tbl");
mysql_field_len($result->handle, 0);
?&gt;
      </programlisting>
     </informalexample>
    </para>
    <para>
     Les membres cols et rows contiennent les num&eacute;ros de colonne et de
     champs.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
&lt;?php
$result = dbx_query($link, "SELECT id FROM tbl");
echo "Taille du r&eacute;sultat: " . $result->rows . " x " . $result->cols . "&lt;br&gt;\n";
?&gt;
      </programlisting>
     </informalexample>
    </para>
    <para>
     Le membre info n'est retourn&eacute; que si DBX_RESULT_INFO et/ou
     DBX_RESULT_ASSOC sont sp&eacute;cifi&eacute; dans le param&egrave;tre <parameter>flags</parameter>.
     C'est un deuxi&egrave;me tableau, qui poss&egrave;de deux lignes ("name" and "type"),
     pour conna&icirc;tre les informations sur les colonnes.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
&lt;?php
$result = dbx_query($link, "SELECT id FROM tbl");
echo "Nom de la colonne : " . $result->info["name"][0] . "&lt;br&gt;\n";
echo "Type de la colonne: " . $result->info["type"][0] . "&lt;br&gt;\n";
?&gt;
      </programlisting>
     </informalexample>
    </para>
    <para>
     Le membre data contient les donn&eacute;es effectivement lues,
     &eacute;ventuellement associ&eacute;es &agrave; des noms de colonnes. Si
     DBX_RESULT_ASSOC est utilis&eacute;, il est possible d'utiliser
     <literal>$result->data[2]["fieldname"]</literal>.
    </para>
    <example>
     <title>Exemple avec <function>dbx_query</function></title>
     <programlisting role="php">
&lt;?php
$link = dbx_connect("odbc", "", "base de donn&eacute;es", "utilisateur", "mot de passe")
    or die ("Impossible de se connecter");
$result = dbx_query($link, "SELECT id, parentid, description FROM tbl");
if ($result==0) echo "La requ&ecirc;te a &eacute;chou&eacute;\n&lt;br&gt;";
elseif ($result==1) {
    echo "La requ&ecirc;te a r&eacute;ussie\n&lt;br&gt;";
} else {
    $rows=$result->rows;
    $cols=$result->cols;
    echo "&lt;p>table dimension: {$result->rows} x {$result->cols}&lt;br&gt;&lt;table border=1>\n";
    echo "&lt;tr>";
    for ($col=0; $col&lt;$cols; ++$col) {
        echo "&lt;td>-{$result->info["name"][$col]}-&lt;br&gt;-{$result->info["type"][$col]}-&lt;/td>";
    }
    echo "&lt;/tr>\n";
    for ($row=0; $row&lt;$rows; ++$row){
        echo "&lt;tr>";
        for ($col=0; $col&lt;$cols; ++$col) {
            echo "&lt;td>-{$result->data[$row][$col]}-&lt;/td>";
        }
        echo "&lt;/tr>\n";
    }
    echo "&lt;/table>&lt;p>\n";
    echo "table dimension: {$result->rows} x id, parentid, description&lt;br&gt;&lt;table border=1>\n";
    for ($row=0; $row&lt;$rows; ++$row) {
        echo "&lt;tr>";
        echo "&lt;td>-{$result->data[$row]["id"]}-&lt;/td>";
        echo "&lt;td>-{$result->data[$row]["parentid"]}-&lt;/td>";
        echo "&lt;td>-{$result->data[$row]["description"]}-&lt;/td>";
        echo "&lt;/tr>\n";
    }
    echo "&lt;/table>&lt;p>\n";
}
dbx_close($link);
?&gt;
     </programlisting>
    </example>
    <note>
     <para>
      Reportez-vous aussi &agrave; la documentation de la base de donn&eacute;es que vous
      utilisez.
     </para>
    </note>
    <para>
     Voir aussi
     <function>dbx_connect</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
