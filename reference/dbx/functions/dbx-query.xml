<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/dbx.xml, last change in rev 1.5 -->
<!-- last change to 'dbx-query' in en/ tree in rev 1.3 -->
  <refentry id="function.dbx-query">
   <refnamediv>
    <refname>dbx_query</refname>
    <refpurpose>Envoie une requ&ecirc;te et lit tous les r&eacute;sultats</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>object</type><methodname>dbx_query</methodname>
      <methodparam><type>object</type><parameter>link_identifier</parameter></methodparam>
      <methodparam><type>string</type><parameter>sql_statement</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
    <simpara>
      retourne un objet dbx_result_object ou 
     <literal>1</literal>  en cas de succ&egrave;s (un objet de r&eacute;sultat
     ne sera retourn&eacute; que pour les requ&ecirc;tes SQL qui retournent un
     r&eacute;sultat), ou 0 en cas d'erreur. 
    </simpara>
    <example>
     <title>Comment g&eacute;rer la valeur retourn&eacute;e par <function>dbx_query</function></title>
     <programlisting role="php">
<![CDATA[
<?php
$link   = dbx_connect(DBX_ODBC, "", "db", "username", "password")
    or die("Impossible de se connecter");

$result = dbx_query($link, 'SELECT id, parentid, description FROM table');

if ( is_object($result) ) {
    // ... Faire quelquechose d'utile ici
    // first, print out field names and types 
    // then, draw a table filled with the returned field values
}
else if ( $result == 1 ) {
    echo("Requ&ecirc;te ex&eacute;cut&eacute;e correctement, mais pas de r&eacute;sultat.");
}
else {
    exit("La requ&ecirc;te a &eacute;chou&eacute;");
}

dbx_close($link);
?>
]]>
     </programlisting>
    </example>

    <para>     
     Le param&egrave;tre
     <parameter>flags</parameter> sert &agrave; contr&ocirc;ler la quantit&eacute;
     d'informations retourn&eacute;e. Il peut &ecirc;tre n'importe quelle
     combinaisons par l'op&eacute;rateur OR des constantes ci-apr&egrave;s. Les constantes
     remplacent la configuration du &php.ini;.
          <variablelist>
      <varlistentry>
       <term>
        <constant>DBX_RESULT_INDEX</constant>
       </term>
       <listitem>
        <simpara>
         Ce param&egrave;tre est <emphasis>toujours</emphasis> activ&eacute;, 
         c'est &agrave; dire que l'objet retourn&eacute; dispose du membre 
         <property>data</property> qui est un tableau &agrave; deux dimensions,
         index&eacute; num&eacute;riquement. Par exemple, dans l'expression
         <literal>data[2][3]</literal> <literal>2</literal> repr&eacute;sente
         le num&eacute;ro de ligne et <literal>3</literal> repr&eacute;sente 
         le num&eacute;ro de colonne. Les premi&egrave;res lignes et colonnes 
         sont index&eacute;es &agrave; 0.
        </simpara>
        <simpara>
         Si <constant>DBX_RESULT_ASSOC</constant> est aussi sp&eacute;cifi&eacute;, l'objet
         retourn&eacute; contient en plus les informations li&eacute;es &agrave; 
         <constant>DBX_RESULT_INFO</constant>, m&ecirc;me si il n'a pas &eacute;t&eacute; sp&eacute;cifi&eacute;.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <constant>DBX_RESULT_INFO</constant>
       </term>
       <listitem>
        <simpara>
         Cette option fournit des informations sur les colonnes, comme
         les noms des champs et leur type.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <constant>DBX_RESULT_ASSOC</constant>
       </term>
       <listitem>
        <simpara>
         Cette option fait que la valeur des champs peut &ecirc;tre accessible
         avec le nom de la colonne, utilis&eacute; comme cl&eacute; dans le tableau du
         membre <property>data</property>.
        </simpara>
        <simpara>
         Les r&eacute;sultats ainsi associ&eacute;s sont des r&eacute;f&eacute;rences sur les valeurs
         identifi&eacute;es par les index num&eacute;riques, ce quie fait que modifier
         <literal>data[0][0]</literal> fait que 
         <literal>data[0]['nom_de_la_premiere_colonne']</literal> sera aussi
         modifi&eacute;.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <constant>DBX_COLNAMES_UNCHANGED</constant> (disponible depuis PHP 4.3.0)
       </term>
       <listitem>
        <simpara>
         La casse du nom des colonnes retourn&eacute;e ne sera pas modifi&eacute;e.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <constant>DBX_COLNAMES_UPPERCASE</constant> (disponible depuis PHP 4.3.0)
       </term>
       <listitem>
        <simpara>
         Les noms de colonnes seront mis en majuscules.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <constant>DBX_COLNAMES_LOWERCASE</constant> (disponible depuis PHP 4.3.0)
       </term>
       <listitem>
        <simpara>
         Les noms de colonnes seront mis en minuscules.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Notez que <constant>DBX_RESULT_INDEX</constant> est toujours active,
     ind&eacute;pendemment de la valeur de <parameter>flags</parameter>. Cela signifie
     que seules les combinaisons suivantes sont utiles : 
     <itemizedlist>
      <listitem>
       <simpara>
        <constant>DBX_RESULT_INDEX</constant>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>DBX_RESULT_INDEX</constant> |
        <constant>DBX_RESULT_INFO</constant>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>DBX_RESULT_INDEX</constant> |
        <constant>DBX_RESULT_INFO</constant> |
        <constant>DBX_RESULT_ASSOC</constant> - c'est la valeur par d&eacute;faut,
        si <parameter>flags</parameter> est omis.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para> 
    </para>
    <para>
     Un objet dbx_result_object a 5 membres (&eacute;ventuellement 4, suivants
     les valeurs de <parameter>flags</parameter>) : 
     <variablelist>
      <varlistentry>
       <term>
        <property>handle</property>
       </term>
       <listitem>
        <para>
         Ceci est une ressource repr&eacute;sentant la connexion &agrave; la 
         base de donn&eacute;es, et il peut &ecirc;tre utilis&eacute; (si n&eacute;cessaire) avec
         les fonctions sp&eacute;cialis&eacute;es de la base.
         <example role="php">
          <title>Exemple avec <function>dbx_query</function></title>
          <programlisting>
<![CDATA[
<?php
  $result = dbx_query($link, "SELECT id FROM table");
  mysql_field_len($result->handle, 0);
?>
]]>
          </programlisting>
         </example>
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <property>cols</property> et <property>rows</property>
       </term>
       <listitem>
        <para>
         Ces deux membres contiennent respectivement le nombre de colonne et de
         ligne.
         <informalexample>
          <programlisting role="php">
<![CDATA[
$result = dbx_query ($link, 'SELECT id FROM table');
echo $result->rows; // nombre de lignes
echo $result->cols; // nombre de champs
]]>
          </programlisting>
         </informalexample>
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <property>info</property> (optionnel)
       </term>
       <listitem>
        <simpara>
         Ce membre est retourn&eacute; uniquement si <constant>DBX_RESULT_INFO</constant> ou
         <constant>DBX_RESULT_ASSOC</constant> sont sp&eacute;cifi&eacute;s dans le param&egrave;tre
         <parameter>flags</parameter>. C'est un tableau &agrave; deux dimensions,
         avec deux lignes (<literal>name</literal> et
         <literal>type</literal>) pour lire les informations de colonnes.
        </simpara>
        <example>
         <title>Listes les types et noms de colonnes avec dbplus</title>
         <programlisting role="php">
<![CDATA[
$result = dbx_query ($link, 'SELECT id FROM table',
                     DBX_RESULT_INDEX | DBX_RESULT_INFO);

for ($i = 0; $i < $result->cols; $i++ ) {
    echo $result->info['name'][$i] . "\n";
    echo $result->info['type'][$i] . "\n";  
}
]]>
         </programlisting>
        </example>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <property>data</property>
       </term>
       <listitem>
        <simpara>
         Ce membre contient les r&eacute;sultat obtenus, possiblement associ&eacute;s
         avec le nom de colonne, en fonction de la valeur du param&egrave;tre 
         <parameter>flags</parameter>. Si <constant>DBX_RESULT_ASSOC</constant> 
         est activ&eacute;, il est possible d'utiliser aussi
         <literal>$result->data[2]["nom_de_la_colonne"]</literal>.
        </simpara>
        <example>
         <title>Afficher le contenu d'une base avec dbplus</title>
         <programlisting role="php">
<![CDATA[
$result = dbx_query ($link, 'SELECT id, parentid, description FROM table');

echo "<table>\n";
foreach ( $result->data as $row ) {
    echo "<tr>\n";
    foreach ( $row as $field ) {
        echo "<td>$field</td>";
    }
    echo "</tr>\n";
}
echo "</table>\n";
]]>
         </programlisting>
        </example>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <note>
     <para>
      Reportez-vous aussi &agrave; la documentation de la base de donn&eacute;es que vous
      utilisez.
     </para>
    </note>
    <para>
     Voir aussi
     <function>dbx_escape_string</function> et
     <function>dbx_connect</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
