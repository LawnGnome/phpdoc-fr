<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.10 Maintainer: yannick Status: ready -->
  <refentry id="function.dbx-connect">
   <refnamediv>
    <refname>dbx_connect</refname>
    <refpurpose>Ouvre une connexion à une base de données</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>object</type><methodname>dbx_connect</methodname>
      <methodparam><type>mixed</type><parameter>module</parameter></methodparam>
      <methodparam><type>string</type><parameter>host</parameter></methodparam>
      <methodparam><type>string</type><parameter>database</parameter></methodparam>
      <methodparam><type>string</type><parameter>username</parameter></methodparam>
      <methodparam><type>string</type><parameter>password</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>persistent</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>dbx_connect</function> retourne une resource dbx_link_object
     en cas de succès, &false; sinon. Si la connexion a
     put être établie, mais que la base de données n'a pas
     pu être sélectionnée, la fonction retournera quand
     même une ressource.
     Le paramètre <parameter>persistent</parameter> peut prendre la
     valeur <constant>DBX_PERSISTENT</constant>, pour créer une connexion persitante.
    </simpara>
    <simpara>
     Le paramètre <parameter>module</parameter> peut être soit une
     chaîne, soit une constante. Les valeurs possibles de
     <parameter>module</parameter> sont listées ci-dessous (n'oubliez pas
     que cela fonctionnera que si le module associé est chargé) :
    </simpara>
    <para>
     <itemizedlist>
      <listitem>
       <simpara>
        module <constant>DBX_MYSQL</constant> : "mysql"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        module <constant>DBX_ODBC</constant> : "odbc"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        module <constant>DBX_PGSQL</constant> : "pgsql"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        module <constant>DBX_MSSQL</constant> : "mssql"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        module <constant>DBX_FBSQL</constant> : "fbsql" (disponible depuis &php; 4.1.0)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        module <constant>DBX_SYBASECT</constant> : "sybase_ct" (disponible depuis
	&php; 4.2.0)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        module <constant>DBX_OCI8</constant> : "oci8" (disponible depuis
	&php; 4.3.0)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        module <constant>DBX_SQLITE</constant> : "sqlite" (CVS only)
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     Les paramètres <parameter>host</parameter>, <parameter>database</parameter>,
     <parameter>username</parameter> et <parameter>password</parameter> sont
     attendus, mais ne sont pas toujours utiles, suivant la fonction de connexion
     de la base de données utilisée.
    </para>
    <para>
     L'objet retourné <varname>object</varname> a trois propriétés :
     <variablelist>
      <varlistentry>
       <term>
        <property>database</property>
       </term>
       <listitem>
        <simpara>
         Nom de la base de données sélectionnées 
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <property>handle</property>
       </term>
       <listitem>
        <para>
	 Ressource de connexion de la base de données, et donc, elle peut être utilisée
	 dansles fonctions spécifiques au module (si requis).
         <informalexample>
          <programlisting role="php">
<![CDATA[
<?php
$link = dbx_connect(DBX_MYSQL, "localhost", "db", "username", "password");
mysql_close($link->handle); 
// dbx_close($link) serait plus appropriée ici.
?>
]]>
          </programlisting>
         </informalexample>
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <property>module</property>
       </term>
       <listitem>
        <simpara>
	 Utiliser en interne par dbx uniquement et actuellement, correspond
	 au numéro du module mentionné ci-dessus.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <example>
      <title>Exemple avec <function>dbx_connect</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$link = dbx_connect(DBX_ODBC, "", "db", "username", "password", DBX_PERSISTENT)
    or die("Impossible de se connecter");

echo "Connexion réussie";
dbx_close($link);
?>
]]>
      </programlisting>
     </example>
     <note>
      <para>
       Référez-vous à la docmentation du module utilisé.
      </para>
     </note>
    </para>
    <para>
     Voir aussi 
     <function>dbx_close</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
