<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.1 Maintainer: yannick Status: ready -->
  <refentry id="function.array-diff-ukey">
   <refnamediv>
    <refname>array_diff_ukey</refname>
    <refpurpose>Calcul la différence entre deux tableaux en utilisant une fonction de callback sur les clés
    pour comparaison</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>array_diff_ukey</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
      <methodparam><type>callback</type><parameter>key_compare_func</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_diff_ukey</function> retourne un tableau contenant 
     toutes les valeurs de <parameter>array1</parameter> où les clés 
     de ce tableau ne sont présentes dans aucun des autres arguments.
     Notez que l'associativité est préservée. Cette fonction fonctionne
     de la même façon que la fonction <function>array_diff</function>
     excepté le fait que la comparaison est faîte sur les clés au lieu des
     valeurs.
    </para>
    <para>
     Cette comparaison est effectué en utilisant une fonction de callback fournise.
     Elle doit retourner un entier plus petit que, égal à ou plus grand que
     &zero; si la première clé est considérée comme, respectivement, 
     plus petite que, égale à ou plus grande que la seconde.
    </para>
    <para>
     <example>
      <title>Exemple avec <function>array_diff_ukey</function></title>
      <programlisting role="php">
<![CDATA[
<?php
function key_compare_func($key1, $key2)
{
    if ($key1 == $key2)
        return 0;
    else if ($key1 > $key2)
        return 1;
    else
        return -1;
}

$array1 = array('bleu'  => 1, 'rouge'  => 2, 'vert'  => 3, 'violet' => 4);
$array2 = array('vert' => 5, 'bleu' => 6, 'jaune' => 7, 'cyan'   => 8);

var_dump(array_diff_ukey($array1, $array2, 'key_compare_func'));
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
array(2) {
  ["rouge"]=>
  int(2)
  ["violet"]=>
  int(4)
}
]]>
      </screen>
     </example>
    </para>
    <simpara>
     Les deux clés depuis les paires <literal>clé =&gt; valeur</literal>
     sont considérées comme égales uniquement si 
     <literal>(string) $cle1 === (string) $cle2 </literal>. En d'autres mots, 
     une analyse du type stricte est exécuté, donc, le type doit être exactement
     le même.
    </simpara>
    <note>
     <simpara>
      Notez que cette fonction vérifie uniquement une dimension d'un tableau
      possédant n dimensions. Bien sûr, vous pouvez vérifier une dimension 
      plus profonde en utilisant, par exemple, 
      <literal>array_diff_ukey($array1[0], $array2[0], 'callback_func');</literal>.
     </simpara>
    </note>
    <para>
     Voir aussi 
     <function>array_diff</function>,
     <function>array_udiff</function>
     <function>array_diff_assoc</function>,
     <function>array_diff_uassoc</function>,
     <function>array_udiff_assoc</function>,
     <function>array_udiff_uassoc</function>,
     <function>array_diff_key</function>,
     <function>array_intersect</function>,
     <function>array_intersect_assoc</function>,
     <function>array_intersect_uassoc</function>,
     <function>array_intersect_key</function> et
     <function>array_intersect_ukey</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
