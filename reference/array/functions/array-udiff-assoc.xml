<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.14 -->
  <refentry id="function.array-udiff-assoc">
   <refnamediv>
    <refname>array_udiff_assoc</refname>
    <refpurpose>Calcule la diff&eacute;rence entre des tableaux avec v&eacute;rification sur
    les index. Les donn&eacute;es sont compar&eacute;es en utilisant une fonction callback</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>array_udiff_assoc</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
      <methodparam><type>callback</type><parameter>data_compare_func</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_udiff_assoc</function> retourne un tableau contenant
     toutes les valeurs de <parameter>array1</parameter> qui ne sont pr&eacute;sentes
     dans aucun autre des arguments.
     Notez que les clefs sont utilis&eacute;es dans les comparaisons contrairement &agrave;  
     <function>array_diff</function> et <function>array_udiff</function>.
     La comparaison des donn&eacute;es est effectu&eacute;e en utilisant une fonction
     callback fournie par l'utilisateur. Ce comportement est diff&eacute;rent de
     celui de <function>array_diff_assoc</function> qui utilise une fonction
     de comparaison interne.
    </para>
    <para>
     <example>
      <title>Exemple avec <function>array_udiff_assoc</function></title>
      <programlisting role="php">
<![CDATA[
<?php
class cr {
    private $priv_member;
    function cr($val) {
        $this->priv_member = $val;
    }

    static function comp_func_cr($a, $b) {
        if ($a->priv_member === $b->priv_member) return 0;
        return ($a->priv_member > $b->priv_member)? 1:-1;
    }
}
$a = array("0.1" => new cr(9), "0.5" => new cr(12), 0 => new cr(23), 1=> new cr(4), 2 => new cr(-15),);
$b = array("0.2" => new cr(9), "0.5" => new cr(22), 0 => new cr( 3), 1=> new cr(4), 2 => new cr(-15),);

$result = array_udiff_assoc($a, $b, array("cr", "comp_func_cr"));
print_r($result);
?>
]]>
      </programlisting>
      <para>
       Le r&eacute;sultat est :
      </para>
      <screen>
<![CDATA[
Array
(
    [0.1] => cr Object
        (
            [priv_member:private] => 9
        )

    [0.5] => cr Object
        (
            [priv_member:private] => 12
        )

    [0] => cr Object
        (
            [priv_member:private] => 23
        )
)
]]>
      </screen>
     </example>
    </para>
    <simpara>
     Dans notre exemple, vous voyez que la paire <literal>"1" =&gt; new cr(4)</literal>
     est pr&eacute;sente dans les deux tableaux et donc absente du tableau r&eacute;sultant.
    </simpara>
    <simpara>
     Pour la comparaison, la fonction callback de l'utilisateur est utilis&eacute;e.
     Cette fonction doit retourner un entier inf&eacute;rieur, &eacute;gal ou sup&eacute;rieur &agrave;
     z&eacute;ro si le premier argument est respectivement plus petit, &eacute;gal ou plus
     grand que le second.
    </simpara>
    <note>
     <simpara>
      Notez que cette fonction ne v&eacute;rifie qu'une seule dimension d'un tableau
      multi-dimensionnel. Vous pouvez, bien s&ucirc;r, tester une dimension
      particuli&egrave;re en utilisant par exemple,
      <literal>array_udiff_assoc($array1[1], $array2[1], "compare_func");</literal>.
     </simpara>
    </note>
    <para>
     Voir aussi
     <function>array_diff</function>,
     <function>array_diff_assoc</function>,
     <function>array_diff_uassoc</function>,
     <function>array_udiff</function>,
     <function>array_udiff_uassoc</function>,
     <function>array_intersect</function>,
     <function>array_intersect_assoc</function>,
     <function>array_uintersect</function>,
     <function>array_uintersect_assoc</function> et
     <function>array_uintersect_uassoc</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
