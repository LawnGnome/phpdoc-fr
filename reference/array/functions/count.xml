<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.26 $ -->
<!-- EN-Revision: 1.19 Maintainer: dams Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.count" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>count</refname>
  <refpurpose>Compte le nombre d'éléments d'un tableau ou le nombre de propriétés d'un objet</refpurpose>
 </refnamediv>
 <refsect1>
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>count</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>count</function> retourne le nombre d'éléments dans
   <parameter>var</parameter>, qui est généralement un tableau
   et tout le reste, sauf les objets, n'aura qu'un élément.
  </para>
  <para>
    Pour les objets, <function>count</function> retourne le nombre de 
    propriétés non-statiques, sans tenir compte de la visibilité. Si vous avez
    <link linkend="ref.spl">SPL</link> d'installé, vous pouvez vous
    accrocher à la fonction <function>count</function> en implémentant
    l'interface <literal>Countable</literal>. Cette interface a exactement
    une méthode, <function>count</function>, qui retourne la valeur retournée
    par la fonction <function>count</function>.
   </para>
   <para>
    Si le paramètre <parameter>var</parameter> n'est ni un objet, ni un
    tableau, &one; sera retourné. Il y a néanmoins une exception
    : si le paramètre <parameter>var</parameter> vaut &null;, &zero; sera retourné.
   </para>
  <note>
   <simpara>
    Le paramètre optionnel <parameter>mode</parameter> est disponible
    depuis &php; 4.2.0.
   </simpara>
  </note>
  <para>
   Si le paramètre optionnel <parameter>mode</parameter> vaut
   <constant>COUNT_RECURSIVE</constant> (ou 1), <function>count</function>
   va compter récursivement les tableaux. C'est particulièrement pratique
   pour compter le nombre d'éléments d'un tableau. La valeur par défaut
   pour <parameter>mode</parameter> est &zero;.
   <function>count</function> ne détecte pas la récursion infinie.
  </para>
   <caution>
    <para>
     <function>count</function> peut retourner 0 pour une
     variable qui n'a pas été affectée, ou pour un tableau
     vide. Utilisez plutôt <function>isset</function>
     pour tester si la variable existe.
    </para>
   </caution>
  <para>
   Reportez-vous à la section sur les 
   <link linkend="language.types.array">Tableaux</link> du manuel, pour plus de
   détails sur le fonctionnement des tableaux en &php;.
  </para>
  <para>
   <example>
    <title>Exemple avec <function>count</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$a[0] = 1;
$a[1] = 3;
$a[2] = 5;
$result = count ($a);
// $result == 3

$b[0] = 7;
$b[5] = 9;
$b[10] = 11;
$result = count ($b);
// $result == 3;

$result = count(null);
// $result == 0;

$result = count(false);
// $result == 1;

$obj = new StdClass;
$obj->foo = 'Une propriété';
$obj->bar = 'Une autre propriété';
$result = count($obj);
// $result == 2;
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>
     Exemple récursif avec <function>count</function> (&php; &gt;= 4.2.0)
    </title>
    <programlisting role="php">
<![CDATA[
<?php
$food = array( 'fruits'  => array('orange', 'banane', 'pommes'),
               'legumes'  => array('carotte', 'chou','pois'));

// count récursif
echo count($food, COUNT_RECURSIVE); // affiche 8

// count normal
echo count($food);                  // affiche 2

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Voir aussi
   <function>is_array</function>,
   <function>isset</function> et
   <function>strlen</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
