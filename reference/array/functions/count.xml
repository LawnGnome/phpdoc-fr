<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.30 $ -->
<!-- EN-Revision: 1.20 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.count" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>count</refname>
  <refpurpose>Compte le nombre d'éléments d'un tableau ou le nombre de propriétés d'un objet</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>count</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   Compte le nombre d'éléments d'un tableau ou le nombre de propriétés d'un objet.
  </para>
  <para>
   Pour les objets, <function>count</function> retourne le nombre de 
   propriétés non-statiques, sans tenir compte de la visibilité. Si
   <link linkend="ref.spl">SPL</link> est disponible, vous pouvez
   utiliser la fonction <function>count</function> en implémentant
   l'interface <literal>Countable</literal>. Cette interface a exactement
   une méthode, <function>count</function>, qui retourne la valeur retournée
   par la fonction <function>count</function>.
  </para>
  <para>
   Reportez-vous à la section sur les 
   <link linkend="language.types.array">Tableaux</link> du manuel, pour plus de
   détails sur le fonctionnement des tableaux en PHP.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Le tableau.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Si le paramètre optionnel <parameter>mode</parameter> vaut
       <constant>COUNT_RECURSIVE</constant> (ou 1), <function>count</function>
       va compter récursivement les tableaux. C'est particulièrement pratique
       pour compter le nombre d'éléments d'un tableau. La valeur par défaut
       pour <parameter>mode</parameter> est &zero;.
       <function>count</function> ne détecte pas la récursivité infinie.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne le nombre d'éléments dans <parameter>var</parameter>,
   qui est généralement un tableau et tout le reste, sauf les
   objets, n'aura qu'un élément.
  </para>
  <para>
   Si le paramètre <parameter>var</parameter> n'est ni un objet, ni un
   tableau, &one; sera retourné. Il y a néanmoins une exception
   : si le paramètre <parameter>var</parameter> vaut &null;, &zero; sera retourné.
  </para>
  <caution>
   <para>
    <function>count</function> peut retourner 0 pour une
    variable qui n'a pas été affectée, ou pour un tableau
    vide. Utilisez plutôt <function>isset</function>
    pour tester si la variable existe.
   </para>
  </caution>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.2.0</entry>
       <entry>
        Le paramètre optionnel <parameter>mode</parameter> a été ajouté.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>count</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$a[0] = 1;
$a[1] = 3;
$a[2] = 5;
$result = count($a);
// $result == 3

$b[0]  = 7;
$b[5]  = 9;
$b[10] = 11;
$result = count($b);
// $result == 3

$result = count(null);
// $result == 0

$result = count(false);
// $result == 1
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple de récursivité avec <function>count</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$food = array('fruits' => array('orange', 'banana', 'apple'),
              'veggie' => array('carrot', 'collard', 'pea'));

// count récursif
echo count($food, COUNT_RECURSIVE); // affiche 8

// count normal
echo count($food); // affiche 2

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>is_array</function></member>
    <member><function>isset</function></member>
    <member><function>strlen</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->