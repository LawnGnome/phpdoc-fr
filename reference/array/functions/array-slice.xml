<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.25 $ -->
<!-- EN-Revision: 1.17 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.array-slice" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_slice</refname>
  <refpurpose>Extrait une portion de tableau</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_slice</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>preserve_keys</parameter><initializer>false</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>array_slice</function> retourne une série d'
   éléments du tableau <parameter>array</parameter> commençant à
   l'offset <parameter>offset</parameter> et représentant
   <parameter>length</parameter> éléments.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Le tableau d'entrée.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Si <parameter>offset</parameter> est non-négatif, la série commencera
       à cet offset dans le tableau <parameter>array</parameter>. Si
       <parameter>offset</parameter> est négatif, cette série
       commencera à l'offset <parameter>offset</parameter> mais en
       commençant à la fin du tableau <parameter>array</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Si <parameter>length</parameter> est fourni et positif, alors la
       série retournée aura autant d'éléments.
       Si <parameter>length</parameter> est fourni et négatif, alors la
       série contiendra les éléments depuis l'offset
       <parameter>offset</parameter> jusqu'à <parameter>length</parameter>
       éléments en partant de la fin. Si
       <parameter>length</parameter> est omis, la séquence lira tous les
       éléments du tableau, depuis l'<parameter>offset</parameter>
       précisé jusqu'à la fin du tableau.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>preserve_keys</parameter></term>
     <listitem>
      <para>
       Notez que, par défaut, la fonction <function>array_slice</function>
       va réordonner et réinitialiser les indices du tableau. Vous pouvez
       modifier ce comportement en définissant le paramètre
       <parameter>preserve_keys</parameter> à &true;.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la portion du tableau.
  </para>
 </refsect1>
  <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.2</entry>
       <entry>
        Le paramètre optionnel <parameter>preserve_keys</parameter> a été ajouté.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>array_slice</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array("a", "b", "c", "d", "e");

$output = array_slice($input, 2);      >$output = array_slice($input, -2, 1);  >$output = array_slice($input, 0, 3);   >
>>print_r(array_slice($input, 2, -1));
print_r(array_slice($input, 2, -1, true));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => c
    [1] => d
)
Array
(
    [2] => c
    [3] => d
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_splice</function></member>
    <member><function>unset</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->