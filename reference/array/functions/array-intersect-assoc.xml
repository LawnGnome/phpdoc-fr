<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.25 $ -->
<!-- EN-Revision: 1.12 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.array-intersect-assoc">
 <refnamediv>
  <refname>array_intersect_assoc</refname>
  <refpurpose>Calcule l'intersection de deux tableaux avec des tests sur les index</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_intersect_assoc</methodname>
   <methodparam><type>array</type><parameter>array1</parameter></methodparam>
   <methodparam><type>array</type><parameter>array2</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   <function>array_intersect_assoc</function> retourne un tableau contenant
   toutes les valeurs de <parameter>array1</parameter> qui sont aussi
   présentes dans tous les autres arguments <parameter>array2</parameter>,
   <parameter>...</parameter>, etc. Notez que les clés sont utilisées
   durant la comparaison, contrairement à <function>array_intersect</function>.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array1</parameter></term>
     <listitem>
      <para>
       Le tableau avec les valeurs maîtres à vérifier.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>array2</parameter></term>
     <listitem>
      <para>
       Un tableau contenant les valeurs à comparer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Une liste variable de tableaux à comparer.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau associatif contenant toutes les valeurs du
   tableau <parameter>array1</parameter> qui sont présentes dans
   tous les arguments.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>array_intersect_assoc</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2 = array("a" => "green", "yellow", "red");
$result_array = array_intersect_assoc($array1, $array2);
print_r($result_array);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [a] => green
)
]]>
    </screen>
   </example>
  </para>
  <simpara>
   Dans notre exemple, vous pouvez voir que la paire
   <literal>"a" =&gt; "vert"</literal> est présente dans les deux tableaux,
   et donc placée dans le dernier tableau. La valeur
   <literal>rouge</literal> n'est pas retournée car dans
   <varname>$array1</varname> son index est <literal>2</literal> tandis que
   dans le tableau <varname>$array2</varname>, son index est
   &one;.
  </simpara>
  <simpara>
   Les deux valeurs de la paire <literal>clé =&gt; valeur</literal> sont
   considérées égales uniquement si <literal>(string) $elem1 === (string) $elem2</literal>. 
   En d'autres termes, une comparaison stricte est faite sur les représentations
   des index, avec le type chaîne.
  </simpara>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>array_intersect</function></member>
   <member><function>array_uintersect_assoc</function></member>
   <member><function>array_intersect_uassoc</function></member>
   <member><function>array_uintersect_uassoc</function></member>
   <member><function>array_diff</function></member>
   <member><function>array_diff_assoc</function></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->