<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->
  <refentry id="function.array-intersect-assoc">
   <refnamediv>
    <refname>array_intersect_assoc</refname>
    <refpurpose>Calcule l'intersection de deux tableaux avec des tests sur les index</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>array_intersect_assoc</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>array_intersect_assoc</function> retourne un tableau contenant
     toutes les valeurs de <parameter>array1</parameter> qui sont aussi
     présentes dans tous les autres arguments. Notez que les clés sont utilisées
     durant la comparaison, contrairement à <function>array_intersect</function>.
    </simpara>
    <para>
     <example>
      <title>Exemple avec <function>array_intersect_assoc</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array ("a" => "vert", "b" => "brun", "c" => "bleu", "rouge");
$array2 = array ("a" => "vert", "jaune", "rouge");
$result_array = array_intersect_assoc ($array1, $array2);
print_r($result_array);
?>
]]>
      </programlisting>
      <para>
       Cet exemple va afficher :
      </para>
      <screen>
<![CDATA[
Array
(
    [a] => vert
)
]]>
      </screen>
     </example>
    </para>
    <simpara>
     Dans notre exemple, vous pouvez voir que la paire 
     <literal>"a" =&gt; "vert"</literal> est présente dans les deux tableaux,
     et donc placée dans le dernier tableau. La valeur 
     <literal>rouge</literal> n'est pas retournée car dans 
      <varname>$array1</varname> son index est <literal>2</literal> tandis que
      dans le tableau <varname>$array2</varname>, son index est 
     <literal>1</literal>.
    </simpara>
    <simpara>
     Les deux valeurs de la paire <literal>clé =&gt; valeur</literal> sont
     considérées égales uniquement si <literal>(string) $elem1 === (string) $elem2</literal>. 
     En d'autre termes, une comparaison stricte est faite sur les représentation
     des index, avec le type chaîne.
     <!-- TODO: example of it... -->
    </simpara>
    <simpara>
     Voir aussi
     <function>array_diff</function> et
     <function>array_intersect</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
