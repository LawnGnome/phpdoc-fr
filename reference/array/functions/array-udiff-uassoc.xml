<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.17 $ -->
<!-- EN-Revision: 1.13 Maintainer: dams Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.array-udiff-uassoc" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_udiff_uassoc</refname>
  <refpurpose>Calcule la différence de deux tableaux associatifs, compare les données et les index avec une fonction de callback</refpurpose>
 </refnamediv>
 <refsect1>
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_udiff_uassoc</methodname>
   <methodparam><type>array</type><parameter>array1</parameter></methodparam>
   <methodparam><type>array</type><parameter>array2</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
   <methodparam><type>callback</type><parameter>data_compare_func</parameter></methodparam>
   <methodparam><type>callback</type><parameter>key_compare_func</parameter></methodparam>
  </methodsynopsis>
  <para>
  <function>array_diff_uassoc</function> retourne un <type>array</type>
   contenant toutes les valeurs de <parameter>array1</parameter>
   qui ne sont pas présentes dans l'un des autres arguments <parameter>array2</parameter>,
   <parameter>...</parameter>.
   Notez que les clés sont utilisées dans les comparaisons contrairement à
   <function>array_diff</function> et <function>array_udiff</function>.
   Cette comparaison est effectuée par une fonction callback de l'utilisateur :
   <parameter>data_compare_func</parameter>. Ce comportement est différent de celui de
   <function>array_diff_assoc</function> qui utilise une fonction interne pour les comparaisons.
   La comparaison des clés (indices) est effectuée par la fonction callback
   <parameter>key_compare_func</parameter>. Ce comportement est différent de celui de
   <function>array_udiff_assoc</function>, vu que cette dernière utilise une fonction interne
   pour comparer les indices.
  </para>
  <para>
   <example>
    <title>Exemple avec <function>array_udiff_uassoc</function></title>
    <programlisting role="php">
<![CDATA[
<?php
class cr {
    private $priv_member;
        function cr($val) {
        $this->priv_member = $val;
    }
    static function comp_func_cr($a, $b) {
        if ($a->priv_member === $b->priv_member) return 0;
        return ($a->priv_member > $b->priv_member)? 1:-1;
    }
    static function comp_func_key($a, $b) {
        if ($a === $b) return 0;
        return ($a > $b)? 1:-1;
    }
}
$a = array("0.1" => new cr(9), "0.5" => new cr(12), 0 => new cr(23), 1=> new cr(4), 2 => new cr(-15),);
$b = array("0.2" => new cr(9), "0.5" => new cr(22), 0 => new cr( 3), 1=> new cr(4), 2 => new cr(-15),);

$result = array_udiff_uassoc($a, $b, array("cr", "comp_func_cr"), array("cr","comp_func_key"));
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0.1] => cr Object
        (
            [priv_member:private] => 9
        )

    [0.5] => cr Object
        (
            [priv_member:private] => 12
        )

    [0] => cr Object
        (
            [priv_member:private] => 23
        )
)
]]>
    </screen>
   </example>
  </para>
  <simpara>
   Dans notre exemple, vous voyez que la paire <literal>"1" =&gt; new cr(4)</literal>
   est présente dans les deux tableaux et donc, absente du tableau résultant.
   Gardez en tête que vous devez fournir deux fonctions callback.
  </simpara>
  <simpara>
   Pour la comparaison, la fonction callback de l'utilisateur est utilisée.
   Cette fonction doit retourner un entier inférieur, égal ou  supérieur à
   zéro si le premier argument est respectivement plus petit, égal ou plus
   grand que le second.
  </simpara>
  <note>
   <simpara>
    Notez que cette fonction ne vérifie qu'une seule dimension d'un tableau
    multi-dimensionnel. Vous pouvez, bien sûr, tester une dimension
    particulière en utilisant par exemple
    <literal>array_udiff_uassoc($array1[0], $array2[0], "data_compare_func", "key_compare_func");</literal>.
   </simpara>
  </note>
  <para>
   Voir aussi
   <function>array_diff</function>,
   <function>array_diff_assoc</function>,
   <function>array_diff_uassoc</function>,
   <function>array_udiff</function>,
   <function>array_udiff_assoc</function>,
   <function>array_intersect</function>,
   <function>array_intersect_assoc</function>,
   <function>array_uintersect</function>,
   <function>array_uintersect_assoc</function> et
   <function>array_uintersect_uassoc</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
