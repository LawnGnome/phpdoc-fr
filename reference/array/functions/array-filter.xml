<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
<!-- EN-Revision: 1.15 Maintainer: dams Status: ready -->
 <refentry id="function.array-filter">
  <refnamediv>
   <refname>array_filter</refname>
   <refpurpose>Filtre les éléments d'un tableau</refpurpose>
  </refnamediv>
  <refsect1>
   &reftitle.description;
     <methodsynopsis>
      <type>array</type><methodname>array_filter</methodname>
      <methodparam><type>array</type><parameter>input</parameter></methodparam>
      <methodparam choice="opt"><type>callback</type><parameter>callback</parameter></methodparam>
     </methodsynopsis>
   <para>
    <function>array_filter</function> retourne un tableau
    contenant les éléments du tableau <parameter>input</parameter>,
    filtrés grâce à la fonction <parameter>callback</parameter>.
    Si <parameter>input</parameter> est un tableau associatif,
    les clés sont préservées.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>array_filter</function></title>
     <programlisting role="php">
<![CDATA[
<?php
function impair($var) 
{
    return ($var % 2 == 1);
}

function pair($var) 
{
    return ($var % 2 == 0);
}

$array1 = array ("a"=>1, "b"=>2, "c"=>3, "d"=>4, "e"=>5);
$array2 = array (6, 7, 8, 9, 10, 11, 12);

echo "Impairs :\n";
print_r(array_filter($array1, "impair"));
echo "Pairs :\n";
print_r(array_filter($array2, "pair"));
?>
]]>
     </programlisting>
     &example.outputs;
     <screen role="php">
<![CDATA[
Impairs :
Array
(
    [a] => 1
    [c] => 3
    [e] => 5
)
Pairs :
Array
(
    [0] => 6
    [2] => 8
    [4] => 10
    [6] => 12
)
]]>
     </screen>
    </example>
   </para>
   <para>
    La fonction appelée ne doit pas modifier le tableau lui-même,
    c'est à dire ajouter ou supprimer une valeur. Si des éléments
    sont modifiés, le comportement de <function>array_filter</function> 
    est indéfini.
   </para>
   <para>
    Si la fonction <parameter>callback</parameter> n'est pas fournie,
    <function>array_filter</function> va supprimer toutes les entrées de
    <parameter>input</parameter> qui sont égales à &false;. Voyez <link
    linkend="language.types.boolean.casting">conversion en booléen</link> 
    pour plus d'informations.
   </para>
   <para>
    <example>
     <title><function>array_filter</function> sans
      <parameter>callback</parameter></title>
     <programlisting role="php">
<![CDATA[
<?php

$entry = array(
             0 => 'foo',
             1 => false,
             2 => -1,
             3 => null,
             4 => ''
          );

print_r(array_filter($entry));
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
Array
(
    [0] => foo
    [2] => -1
)
]]>
     </screen>
    </example>
   </para>
   <para>
    Voir aussi
    <function>array_map</function>,
    <function>array_reduce</function> et 
    <function>array_walk</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
