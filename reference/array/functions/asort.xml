<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.23 $ -->
<!-- EN-Revision: 1.15 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.asort" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>asort</refname>
  <refpurpose>Trie un tableau et conserve l'association des index</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>asort</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>sort_flags</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>asort</function> trie le tableau <parameter>array</parameter>
   de telle manière que la corrélation entre les index et les valeurs
   soit conservée. L'usage principal est lors de tri de tableaux associatifs 
   où l'ordre des éléments est important.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Le tableau d'entrée.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sort_flags</parameter></term>
     <listitem>
      <para>
       Vous pouvez modifier le comportement de cette fonction en utilisant
       le paramètre optionnel <parameter>sort_flags</parameter>. Pour plus
       de détails, voyez le manuel pour la fonction <function>sort</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>asort</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$fruits = array("d" => "lemon", "a" => "orange", "b" => "banana", "c" => "apple");
asort($fruits);
foreach ($fruits as $key => $val) {
    echo "$key = $val\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
c = apple
b = banana
d = lemon
a = orange
]]>
    </screen>
    <para>
     Les fruits ont été triés par ordre alphabétique,
     et leurs index respectifs ont été conservés.
    </para>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>arsort</function></member>
    <member><function>sort</function></member>
    <member><function>ksort</function></member>
    <member><function>rsort</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
