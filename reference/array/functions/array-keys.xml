<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/array.xml, last change in rev 1.30 -->
<!-- last change to 'array-keys' in en/ tree in rev 1.2 -->
 <refentry id="function.array-keys">
  <refnamediv>
   <refname>array_keys</refname>
   <refpurpose>Retourne toutes les cl&eacute;s d'un tableau</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>array</type><methodname>array_keys</methodname>
     <methodparam><type>array</type><parameter>input</parameter></methodparam>
     <methodparam choice="opt"><type>mixed</type><parameter>
      search_value
      </parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>array_keys</function> retourne les cl&eacute;s num&eacute;riques
    et lit&eacute;rales du tableau <parameter>input</parameter>.
   </para>
   <para>
    Si l'option <parameter>search_value</parameter> est sp&eacute;cifi&eacute;e,
    seules les cl&eacute;s ayant cette valeur seront retourn&eacute;es.
    Sinon, toutes les cl&eacute;s de <parameter>input</parameter> sont
    retourn&eacute;es.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>array_keys</function></title>
     <programlisting role="php">
&lt;?php
  $array = array(0 =&gt; 100, "couleur" =&gt; "rouge");
  array_keys($array);
// retourne array(0, "couleur")
  $array = array("bleu", "rouge", "vert", "bleu", "bleu");
  array_keys($array, "bleu");
//  retourne  array(0, 3, 4)
  $array = array( "couleur" =&gt; array("bleu", "rouge", "vert"),
                "taille"  =&gt; array("petit", "moyen", "grand") );
  array_keys($array);
//  retourne array("couleur", "taille")
?&gt;
     </programlisting>
    </example>
   </para>
   <note>
    <para>
     <function>array_keys</function> a &eacute;t&eacute; ajout&eacute;e en PHP
     4. Ci-dessous, voici une impl&eacute;mentation qui fonctionnera sous PHP 3:
     <example>
      <title>
       Impl&eacute;mentation de <function>array_keys</function> pour
       les utilisateurs de  PHP 3
      </title>
      <programlisting role="php">
&lt;?php
  function array_keys ($arr, $term="") {
    $t = array();
    while (list($k,$v) = each($arr)) {
        if ($term &amp;&amp; $v != $term) {
            continue;
            $t[] = $k;
        }
        return $t;
     }
  }
?&gt;
      </programlisting>
     </example>
    </para>
   </note>
   <para>
    Voir aussi
    <function>array_values</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
