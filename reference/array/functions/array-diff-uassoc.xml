<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.23 $ -->
<!-- EN-Revision: 1.10 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.array-diff-uassoc" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_diff_uassoc</refname>
  <refpurpose>Calcule la différence entre deux tableaux associatifs, 
              à l'aide d'une fonction de rappel</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_diff_uassoc</methodname>
   <methodparam><type>array</type><parameter>array1</parameter></methodparam>
   <methodparam><type>array</type><parameter>array2</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
   <methodparam><type>callback</type><parameter>key_compare_func</parameter></methodparam>
  </methodsynopsis>
  <para>
   Compare le tableau <parameter>array1</parameter> avec le tableau
   <parameter>array2</parameter> et retourne la différence. Contrairement
   à la fonction <function>array_diff</function>, les clés du tableau sont utilisées
   dans la comparaison.
  </para>
  <para>
   Contrairement à la fonction <function>array_diff_assoc</function>,
   un utilisateur fournit une fonction de rappel utilisée pour la comparaison
   des indices, et non une fonction interne.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>

    <varlistentry>
     <term><parameter>array1</parameter></term>
     <listitem>
      <para>
       Le tableau à comparer
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>array2</parameter></term>
     <listitem>
      <para>
       Le tableau à comparer
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       Plus de tableaux à comparer
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>key_compare_func</parameter></term>
     <listitem>
      <para>
       La fonction de rappel à utiliser. Elle doit retourner un &integer;
       inférieur, égal ou supérieur à &zero; si le première argument est considéré
       comme, respectivement, inférieur, égal ou supérieur au second paramètre.
      </para>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau contenant toutes les entrées du tableau
   <parameter>array1</parameter> qui ne sont présentes dans
   aucun autre tableau.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>array_diff_uassoc</function></title>
    <para>
     Dans cet exemple, vous voyez que la paire <literal>"a" =&gt;
     "vert"</literal> est présente dans les deux tableaux et donc ne figure pas
     dans le résultat de la fonction. Contrairement à cela, la paire <literal>0
     =&gt; "rouge"</literal> est dans le résultat car dans le second argument,
     la clé de <literal>"rouge"</literal> est &one;. 
    </para>
    <programlisting role="php">
<![CDATA[
<?php
function key_compare_func($a, $b)
{
    if ($a === $b) {
        return 0;
    }
    return ($a > $b)? 1:-1;
}

$array1 = array("a" => "vert", "b" => "marron", "c" => "bleu", "rouge");
$array2 = array("a" => "vert", "jaune", "rouge");
$result = array_diff_uassoc($array1, $array2, "key_compare_func");
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [b] => marron
    [c] => bleu
    [0] => rouge
)
]]>
    </screen>
    <simpara>
     L'égalité de deux indices est vérifiée par la fonction utilisateur.
    </simpara>
   </example>
  </para>
 </refsect1> 

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Notez que cette fonction ne vérifie qu'une seule dimension d'un tableau
    multidimensionnel. Vous pouvez, bien sûr, tester une dimension
    particulière en utilisant par exemple, 
    <literal>array_diff_uassoc($array1[1], $array2[1], "key_compare_func");</literal>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_diff</function></member>
    <member><function>array_diff_assoc</function></member>
    <member><function>array_udiff</function></member>
    <member><function>array_udiff_assoc</function></member>
    <member><function>array_udiff_uassoc</function></member>
    <member><function>array_intersect</function></member>
    <member><function>array_intersect_assoc</function></member>
    <member><function>array_uintersect</function></member>
    <member><function>array_uintersect_assoc</function></member>
    <member><function>array_uintersect_uassoc</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->