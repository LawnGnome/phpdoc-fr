<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.23 $ -->
<!-- EN-Revision: 1.8 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.array-diff-assoc" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_diff_assoc</refname>
  <refpurpose>Calcule la différence de deux tableaux, en prenant en compte les clés</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_diff_assoc</methodname>
   <methodparam><type>array</type><parameter>array1</parameter></methodparam>
   <methodparam><type>array</type><parameter>array2</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Compare <parameter>array1</parameter> et <parameter>array2</parameter> et retourne
   la différence. Contrairement à la fonction <function>array_diff</function>, les clés
   du tableau sont également utilisées dans la comparaison.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>

    <varlistentry>
     <term><parameter>array1</parameter></term>
     <listitem>
      <para>
       Le tableau à comparer
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>array2</parameter></term>
     <listitem>
      <para>
       Le tableau à comparer
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       Plus de tableaux à comparer
      </para>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau contenant toutes les valeurs du tableau
   <parameter>array1</parameter> qui ne sont pas présentes dans les
   autres tableaux.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>array_diff_assoc</function></title>
    <para>
     Dans cet exemple, vous pouvez voir que la paire <literal>"a" =&gt; "vert"</literal>
     est présente dans les deux tableaux, et donc, n'est pas présente dans le
     résultat de la fonction. Au contraire, la paire <literal>0 =&gt; "rouge"</literal> 
     est présente dans le résultat, car le second argument <literal>"rouge"</literal>
     possède une clé qui est &one;.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array("a" => "vert", "b" => "marron", "c" => "bleu", "rouge");
$array2 = array("a" => "vert", "jaune", "rouge");
$result = array_diff_assoc($array1, $array2);
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [b] => marron
    [c] => bleu
    [0] => rouge
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>array_diff_assoc</function></title>
    <para>
     Deux valeurs des paires <emphasis>clé =&gt; valeur</emphasis> sont
     considérées comme égales uniquement si <literal>(string) $elem1 === (string)
     $elem2 </literal>. En d'autres termes, une vérification stricte est effectuée
     sur la représentation en chaînes de caractères.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array(0, 1, 2);
$array2 = array("00", "01", "2");
$result = array_diff_assoc($array1, $array2);
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => 0
    [1] => 1
    )
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Notez bien que cette fonction ne travaille que sur une dimension
    de tableau. Bien sur, vous pouvez utiliser des sous dimensions de tableau
    comme ceci : <literal>array_diff_assoc($array1[0], $array2[0]);</literal>.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_diff</function></member>
    <member><function>array_intersect</function></member>
    <member><function>array_intersect_assoc</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->