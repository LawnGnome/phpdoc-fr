<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.4 Maintainer: didou Status: ready -->
<refentry id="function.array-walk-recursive">
 <refnamediv>
  <refname>array_walk_recursive</refname>
  <refpurpose>
   Applique une fonction utilisateur récursivement à chaque membre du
   tableau
  </refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>bool</type><methodname>array_walk_recursive</methodname>
   <methodparam><type>array</type><parameter>&amp;input</parameter></methodparam>
   <methodparam><type>string</type><parameter>funcname</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>userdata</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   <function>array_walk_recursive</function> applique la fonction utilisateur 
   <parameter>funcname</parameter> à chaque élément du tableau 
   <parameter>input</parameter>. Cette fonction se reproduira dans toutes les profondeurs du
   tableau. La valeur du paramètre <parameter>input</parameter> étant le premier et
   la clé/index, le second. Si le paramètre optionnel <parameter>userdata</parameter>
   est fourni, il sera passé comme troisième paramètre à la fonction de callback
   <parameter>funcname</parameter>.
  </simpara>
  <simpara>
   &return.success;
  </simpara>
  <note>
   <para>
    Si <parameter>funcname</parameter> doit être exécuté avec les valeurs actuelles
    du tableau, spécifiez le troisième paramètre de 
    <parameter>funcname</parameter> par 
    <link linkend="language.references">référence</link>. 
    Alors, tous changements effectuaient sur les éléments de ce tableau seront
    également effectués sur le tableau original.
   </para>
  </note>
  <para>
   <example>
    <title>Exemple avec <function>array_walk_recursive</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$sweet = array('a' => 'apple', 'b' => 'banana');
$fruits = array('sweet' => $sweet, 'sour' => 'lemon');

function test_print($item, $key) 
{
    echo "$key tient $item\n";
}

array_walk_recursive($fruits, 'test_print');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
a tient apple
b tient banana
sour tient lemon
]]>
    </screen>
    <para>
     Vous devez noter que la clé 'sweet' n'est jamais affichée. Toute clé qui tient un &array;
     n'est pas passée à la fonction.
    </para>
   </example>
  </para>
  <simpara>
   Voir aussi 
   <function>array_walk</function>.
  </simpara>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->