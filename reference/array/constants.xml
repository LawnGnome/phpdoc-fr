<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.6 Maintainer: dams Status: ready -->
<section id="array.constants">
 &reftitle.constants;
 &extension.constants.core;
 <para>
 <variablelist>
  <varlistentry>
   <term>
    <constant>CASE_LOWER</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>CASE_LOWER</constant> est utilisé avec
     <function>array_change_key_case</function> et sert à convertir
     tous les index d'un tableau en minuscules. C'est aussi le comportement
     par défaut de <function>array_change_key_case</function>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>CASE_UPPER</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>CASE_UPPER</constant> est utilisé avec
     <function>array_change_key_case</function> et sert à convertir
     tous les index d'un tableau en majuscule.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>
 <para> Constantes d'ordre de tri
 <variablelist>
  <varlistentry>
   <term>
    <constant>SORT_ASC</constant>
    (<type>integer</type>)
   </term>
     <listitem>
      <simpara><constant>SORT_ASC</constant> trie en ordre ascendant</simpara>
     </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>SORT_DESC</constant>
    (<type>integer</type>)
   </term>
     <listitem>
      <simpara><constant>SORT_DESC</constant> trie en ordre descendant</simpara>
     </listitem>
  </varlistentry>
 </variablelist>
 </para>
 <para> Autres constantes d'ordre de tri
 <variablelist>
  <varlistentry>
   <term>
    <constant>SORT_REGULAR</constant>
    (<type>integer</type>)
   </term>
     <listitem>
      <simpara><constant>SORT_REGULAR</constant> compare normalement les valeurs d'un tri</simpara>
     </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>SORT_NUMERIC</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_NUMERIC</constant> compare numériquement les valeurs d'un tri
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>SORT_STRING</constant>
    (<type>integer</type>)
   </term>
     <listitem>
      <simpara>
       <constant>SORT_STRING</constant> compare alphabétiquement les valeurs d'un tri.
      </simpara>
     </listitem>
  </varlistentry>
 </variablelist>
 </para>
 <variablelist>
  <varlistentry>
   <term>
    <constant>COUNT_NORMAL</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>COUNT_RECURSIVE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_OVERWRITE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_SKIP</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_PREFIX_SAME</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_PREFIX_ALL</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_PREFIX_INVALID</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_PREFIX_IF_EXISTS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_IF_EXISTS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>EXTR_REFS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

