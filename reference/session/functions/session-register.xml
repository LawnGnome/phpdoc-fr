<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.session-register">
 <refnamediv>
  <refname>session_register</refname>
  <refpurpose>Enregistre une variable globale dans une session</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>session_register</methodname>
   <methodparam><type>mixed</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>session_register</function> enregistre toutes les
   variables de nom <parameter>name</parameter> dans la session courante.
   Le nombre de variables enregistrées est libre. Les noms peuvent être
   passés comme des chaînes, ou comme des tableaux contenant des chaînes
   ou des tableaux. Pour chaque nom, <function>session_register</function>
   place la variable dans la session courante, pour la sauvegarde de fin
   de script.
  </para>
  <para>
   Vous pouvez aussi créer une variable de session, simplement
   en ajoutant l'index approprié dans la variable
   <varname>$_SESSION</varname> ou <varname>$HTTP_SESSION_VARS</varname>
   (PHP &lt; 4.1.0).
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
// L'utilisation de session_register() est déconseillée
$barney = "Un gros dinosaure violet.";
session_register("barney");

// L'utilisation de $_SESSION est encouragée depuis PHP 4.1.0
$_SESSION["zim"] = "Un envahisseur d'une autre planète.";

// L'ancienne méthode avec $HTTP_SESSION_VARS
$HTTP_SESSION_VARS["spongebob"] = "Il a un caleçon carré !";
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   Si <function>session_start</function> n'a pas été appelé avant
   cette fonction, un appel implicite à <function>session_start</function>
   sans aucun paramètre sera fait. <varname>$_SESSION</varname> ne reproduit
   pas ce comportement et nécessite d'abord un appel à la fonction
   <function>session_start</function>.
  </para>
  &warn.deprecated.function-5-3-0.removed-6-0-0;
</refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       Le nom de la variable ou du tableau contenant les noms des variables
       ou d'autres tableaux.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    Si vous voulez que votre script fonctionne indépendamment de
    la configuration de la directive
    <link linkend="ini.register-globals"><literal>register_globals</literal></link>,
    vous devez utiliser la variable <varname>$_SESSION</varname>.
    Tous les éléments de <varname>$_SESSION</varname> sont automatiquement
    enregistrés. Si votre script utilise
    <function>session_register</function>, il ne fonctionnera pas
    dans les environnements où
    <link linkend="ini.register-globals"><literal>register_globals</literal></link>
    est désactivée.
   </para>
  </caution>
  &note.registerglobals;
  <caution>
   <para>
    Cette fonction enregistre une variable <emphasis>globale</emphasis>.
    Si vous enregistrez une variable globale dans une fonction, vous
    devez vous assurer de la rendre <link
    linkend="language.variables.scope"><command>globale</command></link>,
    avec le mot clé <literal>global</literal> ou le tableau
    <varname>$GLOBALS[]</varname>, ou bien utiliser un des tableaux
    de session ci-dessous.
   </para>
  </caution>
  <caution>
   <para>
    Si vous utilisez <varname>$_SESSION</varname>
    (ou <varname>$HTTP_SESSION_VARS</varname>),
    n'utilisez pas <function>session_register</function>,
    <function>session_is_registered</function> et
    <function>session_unregister</function>.
   </para>
  </caution>
  <note>
   <para>
    Il n'est actuellement pas possible d'enregistrer des ressources
    dans les sessions. Par exemple, vous ne pouvez pas créer de connexion
    à une base de données, et stocker la connexion dans une variable
    de session. Elle ne sera pas valide lors de la prochaine
    page. Les fonctions PHP qui retournent des ressources sont
    identifiées avec le type <literal>resource</literal> dans
    leurs définitions. Une liste de fonctions qui retournent des
    ressources sont disponible dans l'annexe
    <link linkend="resource">types de ressources</link>.
   </para>
   <para>
    Si <varname>$_SESSION</varname> (ou <varname>$HTTP_SESSION_VARS</varname>
    pour les versions antérieures à PHP 4.0.6) est utilisé, assignez
    les variables à <varname>$_SESSION</varname> :
    i.e. <literal>$_SESSION['var'] = 'ABC';</literal>
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>session_is_registered</function></member>
    <member><function>session_unregister</function></member>
    <member><varname>$_SESSION</varname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
