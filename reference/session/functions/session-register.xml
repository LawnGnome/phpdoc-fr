<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->
<!-- splitted from ./en/functions/session.xml, last change in rev 1.2 -->
  <refentry id="function.session-register">
   <refnamediv>
    <refname>session_register</refname>
    <refpurpose>
     Enregistre une variable dans une session
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>session_register</methodname>
      <methodparam><type>mixed</type><parameter>name</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>session_register</function> enregistre toutes les
     variables de nom <parameter>name</parameter> dans la session courante.
     Le nombre de variables enregistré est libre. Les noms peuvent être
     passé comme des chaînes, ou comme des tableaux contenant des chaînes
     ou des tableaux. Pour chaque nom, <function>session_register</function> 
     place la variable dans la session courante, pour la sauvegarde de fin
     de script.
    </para>
    <caution>
     <para>
      Si vous voulez que votre script fonctionne indépendamment de 
      la configuration de la directive 
      <link linkend="ini.register-globals"><literal>register_globals</literal></link>,
      vous devez utiliser la variable <varname>$_SESSION</varname>. 
      Tous les éléments de <varname>$_SESSION</varname> sont automatiquement
      enregistrée. Si votre script utilise 
      <function>session_register</function>, il ne fonctionnera pas 
      dans les environnements où 
      <link linkend="ini.register-globals"><literal>register_globals</literal></link>
      est désactivée.
     </para>
    </caution>
    &note.registerglobals;
    <caution>
     <para>
      Cette fonction enregistre une variable <emphasis>global</emphasis>. 
      Si vous enregistrer une variable globale dans une fonction, vous
      devez vous assurer de la rendre <link
      linkend="language.variables.scope"><command>globale</command></link>, 
      avec <literal>global</literal>,
      ou bien le tableau <varname>$GLOBALS[]</varname>,
      ou bien utiliser un des tableaux de session ci-dessous.
     </para>
    </caution>
    <caution>
     <para>
      Si vous utilisez <varname>$_SESSION</varname> 
      (ou <varname>$HTTP_SESSION_VARS</varname>),
      n'utilisez pas <function>session_register</function>,
      <function>session_is_registered</function> et
      <function>session_unregister</function>.
     </para>
    </caution>
    <para>
     <function>session_register</function> retourne &true; si toutes
     les variables  ont été enregistrées correctement dans la session.
    </para>
    <para>
     Si <function>session_start</function> n'a pas été appelé avant
     cette fonction, un appel implicite à <function>session_start</function> 
     sans aucun paramètre ne sera fait.
    </para>
    <para>
     Vous pouvez aussi créer une variable de session, simplement
     en ajoutant l'index approprié dans la variable 
     <varname>$_SESSION</varname> ou <varname>$HTTP_SESSION_VARS</varname>.
     <example>
      <title>Exemple avec <function>session_register</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// L'utilisation de session_register() est déconseillé
$barney = "Un gros dinosaure violet.";
session_register("barney");

// L'utilisationde $_SESSION est encouragé depuis PHP 4.1.0
$_SESSION["zim"] = "Un envahisseur d'un autre planète.";

// L'ancienne méthode avec $HTTP_SESSION_VARS
$HTTP_SESSION_VARS["spongebob"] = "Il a un caleçon carré!";
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Il n'est actuellement pas possible d'enregistrer des ressources
      dans les sessions. Par exemple, vous ne pouvez pas créer de connexion
      à une base de données, et stocker la connexion dans une variable
      de session. Elle ne sera pas valide lors de la prochaine
      page. Les fonctions PHP qui retournent des ressources sont
      identifiées avec le type <literal>resource</literal> dans
      leurs définitions. Une liste de fonctions qui retournent des
      ressources sont disponible dans l'annexe 
      <link linkend="resource">types de ressources</link>.
     </para>
     <para>
      Si <varname>$_SESSION</varname> (ou
      <varname>$HTTP_SESSION_VARS</varname> pour les versions antérieures
      à PHP 4.0.6) est utilisé, assignez les variables à 
      <varname>$_SESSION</varname> : 
      i.e. <literal>$_SESSION['var'] = 'ABC';</literal>
     </para>
    </note>
    <para>
     Voir aussi
     <function>session_is_registered</function> et
     <function>session_unregister</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
