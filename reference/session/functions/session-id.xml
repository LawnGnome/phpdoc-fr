<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
<!-- EN-Revision: 1.10 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry id="function.session-id">
 <refnamediv>
  <refname>session_id</refname>
  <refpurpose>Lit et/ou modifie l'identifiant courant de session</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>session_id</methodname>
   <methodparam choice="opt"><type>string</type><parameter>id</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>session_id</function> est utilisé pour récupérer ou définir
   l'identifiant de session pour la session courante.
  </para>
  <para>
   La constante <constant>SID</constant> peut également être utilisée pour
   lire le nom de la session courante et l'identifiant de session à fournir
   dans les URL. Notez que <constant>SID</constant> est uniquement
   défini si le client n'a pas envoyé le bon cookie. Voyez aussi <link
   linkend="ref.session">Gestion de session</link>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>id</parameter></term>
     <listitem>
      <para>
       Si <parameter>id</parameter> est fourni, il remplacera l'identifiant
       courant de session. <function>session_id</function> doit alors être
       appelé avant <function>session_start</function>. Suivant le gestionnaire
       de sessions que vous utilisez, tous les caractères ne seront pas acceptés
       dans cette valeur. Par exemple, le gestionnaire de sessions par défaut,
       basé sur les fichiers, n'accepte que les caractères compris
       dans l'intervalle <literal>a-z, A-Z et 0-9</literal> !
      </para>
      <note>
       <simpara>
        Lorsque vous utilisez les sessions avec les cookies, le fait de spécifier un
        <parameter>id</parameter> pour <function>session_id</function>
        fera qu'un nouveau cookie sera toujours envoyé lors de l'appel à
        <function>session_start</function>, sans ce soucier si l'identifiant de session
        courant est identique à celui qui vient d'être défini.
       </simpara>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>session_id</function> retourne l'identifiant de session pour la session
   courante ou une chaîne vide (&emptystring;) s'il n'y a pas de session
   courante (aucun identifiant de session n'existe).
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>session_regenerate_id</function></member>
    <member><function>session_start</function></member>
    <member><function>session_set_save_handler</function></member>
    <member>
     <link linkend="ini.session.save-handler">session.save_handler</link>
    </member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->