<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.16 $ -->
<!-- EN-Revision: 1.10 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.session-start">
 <refnamediv>
  <refname>session_start</refname>
  <refpurpose>Initialise une session</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>session_start</methodname>
   <void/>
  </methodsynopsis>
  <para>
   <function>session_start</function> crée une session (ou
   restaure celle trouvée sur le serveur, via l'identifiant
   de session passé dans une requête GET, POST ou par un cookie).
  </para>
  <para>
   Si vous avez utilisé une session nommée, vous devez
   appeler <function>session_name</function> avant d'appeler
   <function>session_start</function>.
  </para>
  <para>
   <function>session_start</function> va configurer un gestionnaire
   interne d'affichage, pour assurer la réécriture des URL, lorsque
   le support transparent du <constant>SID</constant> est activé.
   Si vous utilisez <literal>ob_gzhandler</literal> ou
   <function>ob_start</function>, l'ordre des gestionnaires d'affichage
   est important pour un affichage correct. Par exemple, l'utilisateur
   doit enregistrer <literal>ob_gzhandler</literal> avant que la
   session ne commence.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; si la session a pu être créée avec succès, et &false; sinon.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
       <row>
       <entry>5.3.0</entry>
       <entry>
        Si la session n'arrive pas à démarrer, pour une raison ou une autre,
        alors &false; est retourné alors que &true; était précédemment toujours retourné.
       </entry>
      </row>
       <row>
       <entry>4.3.3</entry>
       <entry>
        L'appel à <function>session_start</function> alors que la session
        a déjà débuté, retournera une erreur de niveau
        <constant>E_NOTICE</constant>. Le second appel à la fonction sera
        tout simplement ignoré.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un exemple de session : <filename>page1.php</filename></title>
    <programlisting role="php">
<![CDATA[
<?php
// page1.php

session_start();

echo 'Bienvenue à la page numéro 1';

$_SESSION['favcolor'] = 'green';
$_SESSION['animal']   = 'cat';
$_SESSION['time']     = time();

// Fonctionne si le cookie a été accepté
echo '<br /><a href="page2.php">page 2</a>';

// Ou bien, en indiquant explicitement l'identfiant de session
echo '<br /><a href="page2.php?' . SID . '">page 2</a>';
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Après avoir vu la page <filename>page1.php</filename> avec un navigateur,
   la seconde page <filename>page2.php</filename> va magiquement afficher
   les données de session. Lisez la référence sur
   les  <link linkend="ref.session">sessions</link> pour des informations
   sur la <link linkend="session.idpassing">propagation des identifiants de session</link>,
   et l'utilisation de la constante <constant>SID</constant>.
  </para>
  <para>
   <example>
    <title>Un exemple de session : <filename>page2.php</filename></title>
    <programlisting role="php">
<![CDATA[
<?php
// page2.php

session_start();

echo 'Bienvenue sur la page numéro 2<br />';

echo $_SESSION['favcolor']; // green
echo $_SESSION['animal'];   // cat
echo date('Y m d H:i:s', $_SESSION['time']);

// Vous pourriez utiliser la constante SID ici, tout comme dans la page page1.php
echo '<br /><a href="page1.php">page 1</a>';
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Si vous utilisez des sessions basées sur les cookies, vous devez
    appeler <function>session_start</function> avant d'afficher quoi
    que ce soit au navigateur.
   </para>
  </note>
  <note>
   <para>
    L'utilisation de
    <link linkend="ini.zlib.output-compression"><option>zlib.output_compression</option></link>
    est recommandée, à la place de <literal>ob_gzhandler</literal>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><varname>$_SESSION</varname></member>
    <member>
     La directive de configuration <link linkend="ini.session.auto-start">session.auto_start</link>
    </member>
    <member><function>session_id</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
