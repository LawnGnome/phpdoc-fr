<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 323626 Maintainer: jpauli Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="sessionhandlerinterface.write" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SessionHandlerInterface::write</refname>
  <refpurpose>Ecrit les données de session</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>abstract</modifier> <modifier>public</modifier> <type>bool</type><methodname>SessionHandlerInterface::write</methodname>
   <methodparam><type>string</type><parameter>session_id</parameter></methodparam>
   <methodparam><type>string</type><parameter>session_data</parameter></methodparam>
  </methodsynopsis>
  <para>
   Ecrit les données de session dans le support de stockage. Appelé par
   <function>session_write_close</function>, lorsque <function>session_register_shutdown</function> échoue, et aussi
   durant la phase de terminaison de la requête.
   Note: <function>SessionHandlerInterface::close</function> est appelée immediatement après.
  </para>
  <para>
   PHP appelera cette fonction lorsque la session est sur le point d'être sauvegardée et fermée.
   Il encode les données issues de <varname>$_SESSION</varname> vers une chaine sérialisée et la passe avec l'ID de
   session au support de stockage. La fonction de sérialisation est fournie dans
   <link linkend="ini.session.serialize-handler">session.serialize_handler</link>.
  </para>
  <para>
   Cette méthode est appelée par PHP après qu'il ait fermé les tampons de sortie, sauf si vous
   l'invoquez vous-même au moyen de <function>session_write_close</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>session_id</parameter></term>
    <listitem>
     <para>
      L'identifiant de session.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>session_data</parameter></term>
    <listitem>
     <para>
      Les données de session encodées. Elles sont issues du codage du contenu
      de <varname>$_SESSION</varname> et représentées sous forme de chaine
      sérialisée.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &returns.session.storage.retval;
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     La directive de configuration
     <link linkend="ini.session.serialize-handler">session.serialize_handler</link>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
