<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.2 Maintainer: yannick Status: ready -->
  <refentry id="function.bcompiler-write-exe-footer">
   <refnamediv>
    <refname>bcompiler_write_exe_footer</refname>
    <refpurpose>
     Ecrit à la position start et jusqu'à la fin du fichier de type exe
    </refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>bool</type><methodname>bcompiler_write_exe_footer</methodname>
      <methodparam><type>resource</type><parameter>filehandle</parameter></methodparam>
      <methodparam><type>int</type><parameter>startpos</parameter></methodparam>
     </methodsynopsis>
   &warn.experimental.func;
    <para>
     Un fichier exe (ou auto-exécutable) est composé de trois parties :
    </para> 
    <para>
     <simplelist>
      <member>
       Le <literal>stub</literal> (code exécutable, e.g. programme C compilé)
       qui charge l'interpréteur &php;, l'extension bcompiler, stocke le
       bytecode et initialise un appel à la fonction spécifique (e.g. main) ou
       une méthode d'une classe (i.e. <literal>main::main</literal>)
      </member>
      <member>Le bytecode (uniquement décompressé pour le moment)</member>
      <member>Le footer EXE bcompiler</member>
     </simplelist>
     Le paramètre <parameter>startpos</parameter> est la position à laquelle
     le bytecode commence et peut être obtenue en utilisant
     <literal>ftell($fh)</literal>.
    </para>
    <para>
     Pour obtenir un stub approprié, vous pouvez compiler le stub
     <filename>php_embed-based phpe.c</filename> qui se trouve dans le dossier
     examples/embed sur le CVS de bcompiler.
    </para>
    <example>
     <title>Exemple avec <function>bcompiler_write_footer</function></title>
     <programlisting role="php">
<![CDATA[
<?php
/* Création du fichier de sortie (example.exe) */
$fh = fopen("example.exe", "w");
/* 1) Ecriture d'un stub (phpe.exe) */
$size = filesize("phpe.exe");
$fr = fopen("phpe.exe", "r");
fwrite($fh, fread($fr, $size), $size);
$startpos = ftell($fh);
/* 2) Ecriture du bytecode */
bcompiler_write_header($fh);
bcompiler_write_class($fh, "myclass");
bcompiler_write_function($fh, "main");
bcompiler_write_footer($fh);
/* 3) Ecriture du footer EXE */
bcompiler_write_exe_footer($fh, $startpos);
/* Fermeture du fichier de sortie */
fclose($fh);
?>
]]>
     </programlisting>
    </example>
    <para>
     Voir aussi 
     <function>bcompiler_write_header</function>,
     <function>bcompiler_write_class</function> et
     <function>bcompiler_write_footer</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
