<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.6 Maintainer: dams Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="oauth.fetch" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>OAuth::fetch</refname>
  <refpurpose>Lit une ressource protégée par OAuth</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>OAuth::fetch</methodname>
   <methodparam><type>string</type><parameter>protected_resource_url</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">extra_parameters</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">http_method</parameter></methodparam>
  </methodsynopsis>
  <para>
   Lit une ressource protégée par OAuth.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>protected_resource_url</parameter></term>
     <listitem>
      <para>
       URL de la ressource protégées par OAuth.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>extra_parameters</parameter></term>
     <listitem>
      <para>
       Paramètres supplémentaires à envoyer avec la requête, à la ressource.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>http_method</parameter></term>
      <listitem>
       <para>
        <parameter>http_method</parameter> peut être une des constantes suivantes : 
        <variablelist>
         <varlistentry>
          <term><constant>OAUTH_HTTP_METHOD_GET</constant></term>
          <listitem>
          <simpara>
           Utilise la méthode <literal>GET</literal>.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>OAUTH_HTTP_METHOD_POST</constant></term>
         <listitem>
          <simpara>
           Utilise la méthode <literal>POST</literal>.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>OAUTH_HTTP_METHOD_PUT</constant></term>
         <listitem>
          <simpara>
           Utilise la méthode <literal>PUT</literal>.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>OAUTH_HTTP_METHOD_HEAD</constant></term>
         <listitem>
          <simpara>
           Utilise la méthode <literal>HEAD</literal>, ce qui peut être
           utile pour découvrir des informations avant de faire une requête
           (si les droits OAuth sont stockés dans les entêtes 
           d'<literal>Authorization</literal>).
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
  &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>CVS / 0.99.5</entry>
       <entry>
        Ajout d'un nouveau paramètre pour définit la méthode HTTP pour la requête.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>OAuth::fetch</function></title>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $oauth = new OAuth("consumer_key","consumer_secret",OAUTH_SIG_METHOD_HMACSHA1,OAUTH_AUTH_TYPE_AUTHORIZATION);
    $oauth->setToken("access_token","access_token_secret");

    $oauth->fetch("http://photos.example.net/photo?file=vacation.jpg");

    $response_info = $oauth->getLastResponseInfo();
    header("Content-Type: {$response_info["content_type"]}");
    echo $oauth->getLastResponse();
} catch(OAuthException $E) {
    echo "Exception caught!\n";
    echo "Response: ". $E->lastResponse . "\n";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>OAuth::getLastResponse</methodname></member>
    <member><methodname>OAuth::getLastResponseInfo</methodname></member>
    <member><methodname>OAuth::setToken</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
