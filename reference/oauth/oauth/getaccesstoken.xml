<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.1 Maintainer: dams Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="oauth.getaccesstoken" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>OAuth::getAccessToken</refname>
  <refpurpose>Lit le token d'accès</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>OAuth::getAccessToken</methodname>
   <methodparam><type>string</type><parameter>access_token_url</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>auth_session_handle</parameter></methodparam>
  </methodsynopsis>
  <para>
   Lit un token, un secret et toute information supplémentaire chez
   un fournisseur de services.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>access_token_url</parameter></term>
     <listitem>
      <para>
       l'URL à utiliser.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>auth_session_handle</parameter></term>
     <listitem>
      <para>
       Identifiant de session. Ce paramètre n'a pas d'existence
       dans les spécifications OAuth 1.0, mais peut être mis en 
       place par de grosses implémentations. Voyez 
       <link xlink:href="&url.oauth.scale;">ScalableOAuth</link>
       pour plus de détails.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau contenant la réponse OAuth analyse, en cas de succès,
   et &null; sinon.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>OAuth::getAccessToken</function></title>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $oauth = new OAuth(OAUTH_CONSUMER_KEY,OAUTH_CONSUMER_SECRET);
    $oauth->setToken($request_token,$request_token_secret);
    $access_token_info = $oauth->getRequestToken("https://example.com/oauth/access_token");
    if(!empty($access_token_info)) {
        print_r($access_token_info);
    } else {
        print "Failed fetching access token, response was: " . $oauth->getLastResponse();
    }
} catch(OAuthException $E) {
    echo "Response: ". $E->lastResponse . "\n";
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [oauth_token] => some_token
    [oauth_token_secret] => some_token_secret
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>OAuth::getLastResponse</methodname></member>
    <member><methodname>OAuth::getLastResponseInfo</methodname></member>
    <member><methodname>OAuth::setToken</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
