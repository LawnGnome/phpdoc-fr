<?xml version="1.0" encoding="iso-8859-1"?><!-- $Revision: 1.3 $ --><!-- splitted from ./en/functions/sockets.xml, last change in rev 1.8 -->  <refentry id="function.socket-read">   <refnamediv>    <refname>socket_read</refname>    <refpurpose>Lit des donn&eacute;es d'une socket</refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>     <methodsynopsis>      <type>string</type><methodname>socket_read</methodname>      <methodparam><type>resource</type><parameter>socket</parameter></methodparam>      <methodparam><type>int</type><parameter>length</parameter></methodparam>      <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>     </methodsynopsis>    &warn.experimental.func;    <para>     <function>socket_read</function> lit des donn&eacute;es dans la socket      <parameter>socket</parameter>, qui doit &ecirc;tre une ressource cr&eacute;&eacute;e par      <function>socket_accept</function>. Elle lit un maximum de     <parameter>length</parameter> octets. Sinon, vous pouvez utiliser     <constant>&#92;r</constant>, <constant>&#92;n</constant> or <constant>&#92;0</constant>     pour terminer la lecture (suivant la valeur choisie pour <parameter>type</parameter>,     voir ci-dessous).    </para>    <para>     <function>socket_read</function> retourne les donn&eacute;es sous forme de     chaine en cas de succ&egrave;s, et &false; sinon. Le code     d'erreur g&eacute;n&eacute;r&eacute; peut &ecirc;tre obtenu en appelant la fonction     <function>socket_last_error</function>. Ce code d'erreur     peut &ecirc;tre pass&eacute; &agrave; la fonction <function>socket_strerror</function>      pour obtenir un message d'erreur, humainement lisible.    </para>    <note>     <para>      <function>socket_read</function> peut retourner une chaîne de longueur      z&eacute;ro, qui indique la fin de la communication (l'autre socket a ferm&eacute;      la communication).     </para>    </note>    <para>     Le param&egrave;tre optinnel <parameter>type</parameter> peut prendre l'une des valeurs     constantes suivantes :      <itemizedlist>      <listitem>       <simpara>        PHP_BINARY_READ - utilise la fonction syst&egrave;me <literal>read()</literal>.        Capable de lire les donn&eacute;es binaires. (valeur par d&eacute;faut en PHP &gt;= 4.1.0)       </simpara>      </listitem>      <listitem>       <simpara>        PHP_NORMAL_READ - la lecture s'arr&ecirc;te aux &#92;n et &#92;r.         (valeur par d&eacute;faut en PHP &lt;= 4.0.6)       </simpara>      </listitem>     </itemizedlist>    </para>    <para>     Voir aussi     <function>socket_accept</function>,     <function>socket_bind</function>,     <function>socket_connect</function>,     <function>socket_listen</function>,     <function>socket_last_error</function>,     <function>socket_strerror</function> et     <function>socket_write</function>.    </para>   </refsect1>  </refentry><!-- Keep this comment at the end of the fileLocal variables:mode: sgmlsgml-omittag:tsgml-shorttag:tsgml-minimize-attributes:nilsgml-always-quote-attributes:tsgml-indent-step:1sgml-indent-data:tindent-tabs-mode:nilsgml-parent-document:nilsgml-default-dtd-file:"../../../../manual.ced"sgml-exposed-tags:nilsgml-local-catalogs:nilsgml-local-ecat-files:nilEnd:vim600: syn=xml fen fdm=syntax fdl=2 sivim: et tw=78 syn=sgmlvi: ts=1 sw=1-->