<?xml version="1.0" encoding="iso-8859-1"?><!-- $Revision: 1.3 $ --><!-- splitted from ./en/functions/sockets.xml, last change in rev 1.1 -->  <refentry id="function.socket-accept">   <refnamediv>    <refname>socket_accept</refname>    <refpurpose>Accepte une connexion sur une socket</refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>     <methodsynopsis>      <type>resource</type><methodname>socket_accept</methodname>      <methodparam><type>resource</type><parameter>socket</parameter></methodparam>     </methodsynopsis>    &warn.experimental.func;    <para>     Une fois que la socket <parameter>socket</parameter> a &eacute;t&eacute; cr&eacute;&eacute;e     avec la fonction <function>socket_create</function>, li&eacute;e &agrave;     un nom avec la fonction <function>socket_bind</function>, et     mise en attente de connexion avec la fonction      <function>socket_listen</function>, <function>socket_accept</function>      va accepter les connexions sur cette socket. Une fois qu'une     connexion est faite, une nouvelle ressource de socket est     retourn&eacute;e. Elle peut etre utilis&eacute;e pour les communications.     S'il y a plusieurs connexions en attente, la premi&egrave;re     sera utilis&eacute;e. S'il n'y a pas de connexion en attente,     <function>socket_accept</function> se bloquera jusqu'&agrave; ce     qu'une connexion se pr&eacute;sente. Si <parameter>socket</parameter>     a &eacute;t&eacute; rendue non-bloquante, gr&acirc;ce &agrave;      <function>socket_set_blocking</function> ou     <function>socket_set_nonblock</function>, &false; sera retourn&eacute;.    </para>    <para>     La ressource de socket retourn&eacute;e par      <function>socket_accept</function> ne doit pas &ecirc;tre utilis&eacute;e     pour accepter de nouvelles connexions. La socket originale     <parameter>socket</parameter>, qui est en attente, reste ouverte     et peut &ecirc;tre r&eacute;utilis&eacute;e.    </para>    <para>     <function>socket_listen</function> retourne une nouvelle ressource     de socket en cas de succ&egrave;s ou &false; en cas d'erreur. Le code     d'erreur g&eacute;n&eacute;r&eacute; peut &ecirc;tre obtenu en appelant la fonction     <function>socket_last_error</function>. Ce code d'erreur     peut &ecirc;tre pass&eacute; &agrave; la fonction <function>socket_strerror</function>      pour obtenir un message d'erreur, humainement lisible.    </para>    <para>     Voir aussi      <function>socket_bind</function>,     <function>socket_connect</function>,     <function>socket_listen</function>,     <function>socket_create</function> et     <function>socket_strerror</function>.    </para>   </refsect1>  </refentry><!-- Keep this comment at the end of the fileLocal variables:mode: sgmlsgml-omittag:tsgml-shorttag:tsgml-minimize-attributes:nilsgml-always-quote-attributes:tsgml-indent-step:1sgml-indent-data:tindent-tabs-mode:nilsgml-parent-document:nilsgml-default-dtd-file:"../../../../manual.ced"sgml-exposed-tags:nilsgml-local-catalogs:nilsgml-local-ecat-files:nilEnd:vim600: syn=xml fen fdm=syntax fdl=2 sivim: et tw=78 syn=sgmlvi: ts=1 sw=1-->