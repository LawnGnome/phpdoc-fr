<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./en/functions/sockets.xml, last change in rev 1.27 -->
  <refentry id="function.socket-write">
   <refnamediv>
    <refname>socket_write</refname>
    <refpurpose>Ecrit dans une socket</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>socket_write</methodname>
      <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
      <methodparam><type>string</type><parameter>buffer</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
     </methodsynopsis>
    &warn.experimental.func;
    <para>
     <function>socket_write</function> &eacute;crit dans la socket 
     <parameter>socket</parameter> les donn&eacute;es du buffer
     <parameter>buffer</parameter>.
    </para>
    <para>
     Le param&egrave;tre optionnel <parameter>length</parameter> peut sp&eacute;cifier
     explicitement la taille des donn&eacute;es qui doivent &ecirc;tre &eacute;crites. Si cette
     longueur est plus grande que la taille du buffer, elle sera ramen&eacute;e
     automatiquemetn &agrave; la taille du buffer lui-m&ecirc;me.
    </para>
    <para>
     <function>socket_write</function> retourne le nombre d'octets qui ont
     pus &ecirc;ter &eacute;crits dans la socket, ou bien &false; en cas d'erreur. 
     Le code
     d'erreur g&eacute;n&eacute;r&eacute; peut &ecirc;tre obtenu en appelant la fonction
     <function>socket_last_error</function>. Ce code d'erreur
     peut &ecirc;tre pass&eacute; &agrave; la fonction <function>socket_strerror</function> 
     pour obtenir un message d'erreur, humainement lisible.
    </para>
    <note>
     <para>
      <function>socket_write</function> n'&eacute;crit pas n&eacute;cessaire tous
      les octets du buffer fourni. Il est valide que, suivant certaines
      configuration de buffer r&eacute;seau, que seulement une certaine quantit&eacute;
      de donn&eacute;es, m&ecirc;me un octets, soit &eacute;crit, m&ecirc;me si votre buffer
      est plus grand. Vous devez alors vous assurer que vous n'avez
      pas oubli&eacute; de transmettre le reste de vos donn&eacute;es.
     </para>
    </note>
    <note>
     <para>
      Il est parfaitement valide pour <function>socket_write</function> de
      retourner z&eacute;ro, ce qui signifie qu'aucun octet n'a &eacute;t&eacute; &eacute;crit. Soyez
      bien s&ucirc;r d'utiliser l'op&eacute;rateur <literal>===</literal> pour
      comparer le retour de la fonction avec &false;, et d&eacute;tecter un
      cas d'erreur.
     </para>
    </note>
    <para>
     Voir aussi 
     <function>socket_accept</function>,
     <function>socket_bind</function>,
     <function>socket_connect</function>,
     <function>socket_listen</function>,
     <function>socket_read</function> et
     <function>socket_strerror</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
