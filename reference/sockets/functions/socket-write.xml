<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.4 Maintainer: didou Status: ready -->
<!-- Reviewed: yes -->
  <refentry xml:id="function.socket-write" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>socket_write</refname>
    <refpurpose>Ecrit dans une socket</refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>int</type><methodname>socket_write</methodname>
      <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
      <methodparam><type>string</type><parameter>buffer</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
     </methodsynopsis>
    &warn.experimental.func;
    <para>
     <function>socket_write</function> écrit dans la socket 
     <parameter>socket</parameter> les données du buffer
     <parameter>buffer</parameter>.
    </para>
    <para>
     Le paramètre optionnel <parameter>length</parameter> peut spécifier
     explicitement la taille des données qui doivent être écrites. Si cette
     longueur est plus grande que la taille du buffer, elle sera ramenée
     automatiquement à la taille du buffer lui-même.
    </para>
    <para>
     <function>socket_write</function> retourne le nombre d'octets qui ont
     pu être écrits dans la socket, ou bien &false; en cas d'erreur. 
     Le code d'erreur généré peut être obtenu en appelant la fonction
     <function>socket_last_error</function>. Ce code d'erreur
     peut être passé à la fonction <function>socket_strerror</function> 
     pour obtenir un message d'erreur, humainement lisible.
    </para>
    <note>
     <para>
      <function>socket_write</function> n'écrit pas nécessairement tous
      les octets du buffer fourni. Il est valide que, suivant certaines
      configuration de buffer réseau, seulement une certaine quantité
      de données, même un octet, soit écrit, y compris si votre buffer
      est plus grand. Vous devez alors vous assurer que vous n'avez
      pas oublié de transmettre le reste de vos données.
     </para>
    </note>
    <note>
     <para>
      Il est parfaitement valide pour <function>socket_write</function> de
      retourner zéro, ce qui signifie qu'aucun octet n'a été écrit. Soyez
      bien sûr d'utiliser l'opérateur <literal>===</literal> pour
      comparer le retour de la fonction avec &false;, et détecter un
      cas d'erreur.
     </para>
    </note>
    <para>
     Voir aussi 
     <function>socket_accept</function>,
     <function>socket_bind</function>,
     <function>socket_connect</function>,
     <function>socket_listen</function>,
     <function>socket_read</function> et
     <function>socket_strerror</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
