<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.6 Maintainer: yannick Status: ready -->
  <refentry id="function.socket-create">
   <refnamediv>
    <refname>socket_create</refname>
    <refpurpose>Crée une socket</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>socket_create</methodname>
      <methodparam><type>int</type><parameter>domain</parameter></methodparam>
      <methodparam><type>int</type><parameter>type</parameter></methodparam>
      <methodparam><type>int</type><parameter>protocol</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>socket_create</function> crée un point de communication
     (une socket) et retourne une ressource de socket. Une connexion typique réseau est composée
     de deux sockets, une qui joue le rôle de client, et l'autre le rôle du serveur.
    </para>
    <para>
     Le paramètre <parameter>domain</parameter> spécifie la famille de protocoles à utiliser par la socket.
    </para>
    <table>
    <title>Famille d'adresses / protocoles disponibles</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Domaine</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>AF_INET</literal></entry>
       <entry>
        Protocole basé sur IPv4. TCP et UDP sont les protocoles communs de cette famille de protocoles.
       </entry>
      </row>
      <row>
       <entry><literal>AF_INET6</literal></entry>
       <entry>
        Protocole basé sur IPv4. TCP et UDP sont les protocoles communs de cette famille de protocoles.
        Le support a été ajouté en &php; 5.0.0.
       </entry>
      </row>
      <row>
       <entry><literal>AF_UNIX</literal></entry>
       <entry>
        Famille de protocoles locales de communication. Le rendement élevé et des moindres coûts 
        supplémentaires lui font une grande force d'IPC (<literal>Interprocess Communication</literal>).
       </entry>
      </row>
     </tbody>
    </tgroup>
    </table>
    <para>
     Le paramètre <parameter>type</parameter> sélectionne le type de communication à utiliser par la socket.
    </para>
    <table>
    <title>Types de sockets disponibles</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Type</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>SOCK_STREAM</literal></entry>
       <entry>
         Fournit des flux d'octets ordonnancés, fiables, full-duplex, raccordés sur la base.
        Un mécanisme de transmission des données "<literal>out-of-band</literal>" peut être supporté.
        Le protocole TCP est basé sur ce type de socket.
       </entry>
      </row>
      <row>
       <entry><literal>SOCK_DGRAM</literal></entry>
       <entry>
         Support des datagrammes (moins de connexion, message non garantie d'une longueur maximum fixe).
         Le protocole UDP est basé sur ce type de socket.
       </entry>       
      </row>
        <row>
       <entry><literal>SOCK_SEQPACKET</literal></entry>
       <entry>
         Fournis un chemin de transmission de données séquentiel, fiable, connexion à la basé par deux chemins pour
        les datagrammes de longueur maximal fixe ; un consommateur est requit pour lire la totalité d'un paquet
        avec chaque appel à la lecture.
       </entry>       
      </row>
      <row>
       <entry><literal>SOCK_RAW</literal></entry>
       <entry>
         Fournit l'accès brut de protocole de réseau. Ce type spécial de socket peut être utilisé 
         pour construire manuellement tout type de protocole. Une utilisation commune de ce type de socket
         est le traitement des requêtes ICMP (comme le ping, traceroute, etc.).
       </entry>
      </row>
      <row>
       <entry><literal>SOCK_RDM</literal></entry>
       <entry>
         Fournit une couche fiable de datagramme qui ne garantie pas l'ordre des données.
        Ce type de socket est le plus susceptible de ne pas être implémenté sur votre système d'exploitation.
       </entry>
      </row>
     </tbody>
    </tgroup>
    </table>    
    <para>
     Le paramètre <parameter>protocol</parameter> définie le protocole spécifique pour le domaine
     <parameter>domain</parameter> à utiliser lors de communication sur une socket retournée.
     La valeur appropriée peut être retrouvée par son nom en utilisant la fonction 
     <function>getprotobyname</function>. Si le protocole désiré est TCP ou UDP, les constantes correspondantes 
     <constant>SOL_TCP</constant> et <constant>SOL_UDP</constant>
     peuvent être utilisées.
    </para>
    <table>
    <title>Protocoles Communs</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Nom</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>icmp</literal></entry>
       <entry>
        Le protocole ICMP (<literal>Internet Control Message Protocol</literal>) est utilisé tout d'abord par les
        passerelles et les hôtes pour reporter les erreurs dans des communications de datagramme.
        La commande "<literal>ping</literal>" (présente dans les systèmes de production modernes) est un
        exemple d'application utilisant le protocole ICMP.
       </entry>
      </row>
      <row>
       <entry><literal>udp</literal></entry>
       <entry>
        Le protocole UDP (<literal>User Datagramm Protocol</literal>) est un protocole sans connexion, incertaine avec les longueurs
        d'enregistrements fixes. De ce fait, <literal>UDP</literal> requiert une quantité minimum de protocole aérienne.
       </entry>       
      </row>
        <row>
       <entry><literal>tcp</literal></entry>
       <entry>
        Le protocole TCP (<literal>Transmission Control Protocol</literal>) est un protocole fiable, connecté sur la base, 
        orienté flux et full-duplex. <literal>TCP</literal> garantie que chaque paquet est reçu
        dans l'ordre dans lequel il a été envoyé. Si quelques paquets sont perdus pendant la communication,
        <literal>TCP</literal> retransmettra ces paquets tant que l'hôte destinataire ne les aura pas
        reçu entièrement. Pour des raisons de fiabilité et de performance, l'implémentation <literal>TCP</literal>
        lui-même décide des frontières appropriées d'octets de la couche fondamentale 
        de communication du datagramme. Par conséquent, les applications <literal>TCP</literal>
        doivent autoriser la possibilité de transmission partiel d'enregistrement.
       </entry>
      </row>
     </tbody>
    </tgroup>
    </table>
    <para>
     <function>socket_create</function> retourne une ressource de
     socket en cas de succès et &false; sinon. Le code
     d'erreur généré peut être obtenu en appelant la fonction
     <function>socket_last_error</function>. Ce code d'erreur
     peut être passé à la fonction <function>socket_strerror</function> 
     pour obtenir un message d'erreur, humainement lisible.
    </para>
    <note>
     <para>
      Si une valeur invalide est spécifiée au paramètre <parameter>domain</parameter> ou
      au paramètre <parameter>type</parameter>, la fonction <function>socket_create</function>
      prendra comme paramètres par défaut respectivement  <constant>AF_INET</constant> et
      <constant>SOCK_STREAM</constant> et générera un message d'alerte 
      (<constant>E_WARNING</constant>).
     </para>
    </note>
    <para>
     Voir aussi 
     <function>socket_accept</function>,
     <function>socket_bind</function>,
     <function>socket_connect</function>,
     <function>socket_listen</function>,
     <function>socket_last_error</function> et
     <function>socket_strerror</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
