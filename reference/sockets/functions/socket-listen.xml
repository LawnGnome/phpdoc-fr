<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.4 Maintainer: didou Status: ready -->
  <refentry id="function.socket-listen">
   <refnamediv>
    <refname>socket_listen</refname>
    <refpurpose>Attend une connexion sur une socket</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>socket_listen</methodname>
      <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>backlog</parameter></methodparam>
     </methodsynopsis>
     &warn.experimental.func;
    <para>
     Une fois que la socket <parameter>socket</parameter> a été
     créée avec la fonction <function>socket_create</function> 
     et liée à un nom avec la fonction 
     <function>socket_bind</function>, elle peut être mise en attente de 
     connexion entrantes.
    </para>
    <para>
     Un nombre maximum de <parameter>backlog</parameter> connexions seront mises
     en attente de traitement. Si une demande de connexion arrive et que la 
     queue est pleine, le client recevra une erreur indiquant 
     <literal>ECONNREFUSED</literal>, ou, si le protocole de support accepte
     les retransmissions, la requête sera ignorée pour que les tentatives
     ultérieures finissent par réussir.
    </para>
    <note>
     <para>
      Le nombre maximum passé dans le paramètre <parameter>backlog</parameter>
      dépend essentiellement de la plate forme de support. Sur Linux, c'est
      tronqué automatiquement à <constant>SOMAXCONN</constant>. Sous Windows32, 
      si la constante <constant>SOMAXCONN</constant> est passée, le service
      responsable des sockets choisira une valeur maximum <emphasis>raisonnable</emphasis>.
      Il n'y a pas de méthode pour deviner la valeur réellement choisie.
     </para>
    </note>
    <para>
     <function>socket_listen</function> ne fonctionne qu'avec des sockets de
     type <constant>SOCK_STREAM</constant> et <constant>SOCK_SEQPACKET</constant>.
    </para>
    <para>
     &return.success; Le code
     d'erreur généré peut être obtenu en appelant la fonction
     <function>socket_last_error</function>. Ce code d'erreur
     peut être passé à la fonction <function>socket_strerror</function> 
     pour obtenir un message d'erreur, humainement lisible.
    </para>
    <para>
     Voir aussi
     <function>socket_accept</function>,
     <function>socket_bind</function>,
     <function>socket_connect</function>,
     <function>socket_create</function> et
     <function>socket_strerror</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
