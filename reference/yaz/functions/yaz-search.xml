<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/yaz.xml, last change in rev 1.1 -->
<!-- last change to 'yaz-search' in en/ tree in rev 1.1 -->
  <refentry id="function.yaz-search">
   <refnamediv>
    <refname>yaz_search</refname>
    <refpurpose>Pr&eacute;pares une recherche</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>yaz_search</methodname>
      <methodparam><type>resource</type><parameter>id</parameter></methodparam>
      <methodparam><type>string</type><parameter>type</parameter></methodparam>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>yaz_search</function> pr&eacute;pare une recherche sur le serveur
     identifi&eacute; par <parameter>id</parameter>. <parameter>type</parameter>
     repr&eacute;sente le type de requ&ecirc;te : seul RPN est support&eacute;
     actuellement, et dans ce cas, le troisi&egrave;me argument est un
     pr&eacute;fixe de notation de requ&ecirc;te utilis&eacute; par YAZ.
     Comme pour <function>yaz_connect</function>, <function>yaz_search</function>
     n'est pas bloquante, et ne fait que pr&eacute;parer la recherche pour
     ex&eacute;cution ult&eacute;rieure, avec <function>yaz_wait</function>.
    </para>
   </refsect1>
   <refsect1>
    <title>Requ&ecirc;tes RPN</title>
    <para>
     Les requ&ecirc;tes RPN sont des repr&eacute;sentation textuelles des
     requ&ecirc;tes de type Type-1, comme d&eacute;finit dans le standard
     Z39.50. Cependant, dans la repr&eacute;sentation textuelle utilis&eacute;e
     par YAZ, une notation &agrave; pr&eacute;fixage est utilis&eacute;e,
     c'est-&agrave;-dire que l'op&eacute;rateur pr&eacute;c&eacute;dent
     l'op&eacute;rande. La cha&icirc;ne de requ&ecirc;te est une
     s&eacute;quence de mots r&eacute;serv&eacute;s, o&ugrave; les espaces sont
     ignor&eacute;s, &agrave; moins qu'ils n'ai &eacute;t&eacute;
     mis entre guillemets doubles. Les mots r&eacute;serv&eacute;s qui commencent
     par un arobase (<literal>&#64;</literal>) sont consid&eacute;r&eacute;s
     comme des op&eacute;rateurs et trait&eacute;s comme tels.
    </para>
    <table>
     <title>Op&eacute;rateurs RPN</title>
     <tgroup cols="2">
      <thead>
        <row>
          <entry>Syntaxe</entry>
          <entry>Description</entry>
        </row>
      </thead>
      <tbody>
        <row>
         <entry><literal>&#64;and query1 query2</literal></entry>
         <entry>intersection des requ&ecirc;tes query1 et query2</entry>
        </row>
        <row>
         <entry><literal>&#64;or query1 query2</literal></entry>
         <entry>union des requ&ecirc;tes  query1 et query2</entry>
        </row>
        <row>
         <entry><literal>&#64;not query1 query2</literal></entry>
         <entry>requ&ecirc;tes "query1 et non(query2)"</entry>
        </row>
        <row>
         <entry><literal>&#64;set name</literal></entry>
         <entry>nomme le r&eacute;sultat</entry>
        </row>
        <row>
         <entry><literal>&#64;attrset set query</literal></entry>
         <entry>sp&eacute;cifie le jeu d'attributs de la requ&ecirc;te. Cette construction
         n'est autoris&eacute;e qu'une seule fois, au d&eacute;but d'une requ&ecirc;te.</entry>
        </row>
        <row>
          <entry><literal>&#64;attr set type=value query</literal></entry>
          <entry>Applique les attributs &agrave; une requ&ecirc;te. Le type et la valeur
          sont des entiers indiquant les types et valeurs des attributs, dans
          cet ordre. Le jeu, si fourni, sp&eacute;cifie le jeu d'attribut utilis&eacute;.
         </entry>
        </row>
      </tbody>
     </tgroup>
    </table>
    <example>
    <title>Exemples de requ&ecirc;tes</title>
    <para>
     Vous pouvez rechercher des termes simples comme
     <screen>ordinateur</screen>
     qui identifieront les documents o&ugrave; "ordinateur" apparait.
     Aucun attribut n'est sp&eacute;cifi&eacute;.
    </para>
     <para>
     La requ&ecirc;te <screen>"knuth donald"</screen>
     recherche les documents o&ugrave; "knuth donald" apparait (en
     supposant que le serveur supporte la recherche par phrase).
     </para>
     <para>
     Cette requ&ecirc;te applique deux attributs &agrave; la phrase recherch&eacute;e : 
     <screen>@attr 1=1003 @attr 4=1 "knuth donald"</screen>
     Le premier attribut est de type 1 (Bib-1), et sa valeur est 1003
     (Auteur).
     Le second attribut est de type 4 (structure), valeur 1 (phrase),
     ce qui fait que la requ&ecirc;te recherche les documents dont 
     Donald Knuth est l'auteur.
     </para>
     <para>
      Cette requ&ecirc;te 
      <screen>@and @or a b @not @or c d e</screen>
      sera traduite en notation infix comme ceci : 
        <literal>(a or b) and ((c or d) not e)</literal>.
     </para>
     <para>
     Un autre exemple plus complexe : 
<screen>@attrset gils @and @attr 1=4 art @attr 1=2000 company</screen>
     La requ&ecirc;te utilise l'ensemble de sous attributs GILS. La requ&ecirc;te
     recherche les documents o&ugrave; le mot <literal>art</literal> apparait dans le
     titre (GILS,BIB-1) et dont la soci&eacute;t&eacute; (<literal>company</literal>) apparait
     comme distributeur (GILS).
     </para>
    </example>
    <para>
     Vous pouvez trouvers plus d'informations sur les requ&ecirc;tes et attributs
     sur le site de 
     <ulink url="&url.yaz-loc-bib1;">Z39.50 Maintenance Agency</ulink>.
    </para>
    <note>
     <para>
      Si vous pr&eacute;f&eacute;rez une notation plus conviviale, utilisez l'analyseur
      CCL  : <function>yaz_ccl_conf</function> et <function>yaz_ccl_parse</function>.
     </para>
    </note>

   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
