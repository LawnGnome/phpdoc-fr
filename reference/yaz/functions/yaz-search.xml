<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/yaz.xml, last change in rev 1.1 -->
<!-- last change to 'yaz-search' in en/ tree in rev 1.1 -->
  <refentry id="function.yaz-search">
   <refnamediv>
    <refname>yaz_search</refname>
    <refpurpose>Pr&eacute;pares une recherche</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>yaz_search</methodname>
      <methodparam><type>int</type><parameter>id</parameter></methodparam>
      <methodparam><type>string</type><parameter>type</parameter></methodparam>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>yaz_search</function> pr&eacute;pare une recherche sur le serveur
     identifi&eacute; par <parameter>id</parameter>. <parameter>type</parameter>
     repr&eacute;sente le type de requ&ecirc;te : seul RPN est support&eacute;
     actuellement, et dans ce cas, le troisi&egrave;me argument est un
     pr&eacute;fixe de notation de requ&ecirc;te utilis&eacute; par YAZ.
     Comme pour <function>yaz_connect</function>, <function>yaz_search</function>
     n'est pas bloquante, et ne fait que pr&eacute;parer la recherche pour
     ex&eacute;cution ult&eacute;rieure, avec <function>yaz_wait</function>.
    </para>
   </refsect1>
   <refsect1>
    <title>Requ&ecirc;tes RPN</title>
    <para>
     Les requ&ecirc;tes RPN sont des repr&eacute;sentation textuelles des
     requ&ecirc;tes de type Type-1, comme d&eacute;finit dans le standard
     Z39.50. Cependant, dans la repr&eacute;sentation textuelle utilis&eacute;e
     par YAZ, une notation &agrave; pr&eacute;fixage est utilis&eacute;e,
     c'est-&agrave;-dire que l'op&eacute;rateur pr&eacute;c&eacute;dent
     l'op&eacute;rande. La cha&icirc;ne de requ&ecirc;te est une
     s&eacute;quence de mots r&eacute;serv&eacute;s, o&ugrave; les espaces sont
     ignor&eacute;s, &agrave; moins qu'ils n'ai &eacute;t&eacute;
     mis entre guillemets doubles. Les mots r&eacute;serv&eacute;s qui commencent
     par un arobase (<literal>&#64;</literal>) sont consid&eacute;r&eacute;s
     comme des op&eacute;rateurs et trait&eacute;s comme tels.
    </para>
    <table>
     <title>Op&eacute;rateurs RPN</title>
     <tgroup cols="2">
      <thead>
        <row>
          <entry>Syntaxe</entry>
          <entry>Description</entry>
        </row>
      </thead>
      <tbody>
        <row>
         <entry><literal>&#64;and query1 query2</literal></entry>
         <entry>intersection des requ&ecirc;tes query1 et query2</entry>
        </row>
        <row>
         <entry><literal>&#64;or query1 query2</literal></entry>
         <entry>union des requ&ecirc;tes  query1 et query2</entry>
        </row>
        <row>
         <entry><literal>&#64;not query1 query2</literal></entry>
         <entry>requ&ecirc;tes "query1 et non(query2)"</entry>
        </row>
        <row>
         <entry><literal>&#64;set name</literal></entry>
         <entry>nomme le r&eacute;sultat</entry>
        </row>
        <row>
         <entry><literal>&#64;attrset set query</literal></entry>
         <entry>sp&eacute;cifie le jeu d'attributs de la requ&ecirc;te. Cette construction
         n'est autoris&eacute;e qu'une seule fois, au d&eacute;but d'une requ&ecirc;te.</entry>
        </row>
        <row>
          <entry><literal>&#64;attr set type=value query</literal></entry>
          <entry>Applique les attributs &agrave; une requ&ecirc;te. Le type et la valeur
          sont des entiers indiquant les types et valeurs des attributs, dans
          cet ordre. Le jeu, si fourni, sp&eacute;cifie le jeu d'attribut utilis&eacute;.
         </entry>
        </row>
      </tbody>
     </tgroup>
    </table>
    <para>
     Les requ&ecirc;tes suivantes illustrent des requ&ecirc;tes valides :
     <informalexample>
      <screen>ordinateur</screen>
     </informalexample>
      Recherche les documents qui contiennent le mot "ordinateur". Aucun attribut
      n'est sp&eacute;cifi&eacute;.
    </para>
    <para>
     <informalexample>
      <screen>"serveur rapide"</screen>
     </informalexample>
     Recherche les documents qui contiennent les mots "serveur rapide"
    </para>
    <para>
     <informalexample>
      <screen>&#64;attr 1=4 php</screen>
     </informalexample>
     L'attribut est de type 1 (Bib-1 use), sa valeur est 4 (Title, titre) :
     cette requ&ecirc;te recherche les documents o&ugrave; le mot "php"
     est dans le titre.
    </para>
    <para>
     <informalexample>
     <screen>&#64;attrset gils &#64;and &#64;attr 1=4 php &#64;attr 1=1003 "Rasmus Lerdorf"</screen>
     </informalexample>
     Cette requ&ecirc;te utilise tout le jeu d'attributs GILS. Elle recherche
     les documents dont le titre contient "php", et qui contiennent le
     nom "Rasmus Lerdorf" comme auteur.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
