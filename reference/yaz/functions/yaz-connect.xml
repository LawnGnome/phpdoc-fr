<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/yaz.xml, last change in rev 1.1 -->
<!-- last change to 'yaz-connect' in en/ tree in rev 1.1 -->
  <refentry id="function.yaz-connect">
   <refnamediv>
    <refname>yaz_connect</refname>
    <refpurpose>
     Pr&eacute;pare une connexion &agrave; un h&ocirc;te YAZ
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>yaz_connect</methodname>
      <methodparam><type>string</type><parameter>zurl</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>options</parameter></methodparam>
      </methodsynopsis>
     <para>
     <function>yaz_connect</function> retourne un identifiant positif en cas
     de succ&egrave;s, et &false;sinon.
    </para>
	<para>
     <function>yaz_connect</function> pr&eacute;pare une connexion
     &agrave; un serveur Z39.50. <parameter>zurl</parameter> est de la forme
	 "<literal>host[:port][/database]</literal>". Si port est omis, 210 est
	 utilis&eacute;. Si <literal>database</literal> est omis, <literal>default</literal>
	 est utilis&eacute;. <function>yaz_connect</function> n'est pas bloquante,
     et ne tente pas d'&eacute;tablir une socket. En fait, elle ne fait que
     pr&eacute;parer la connexion pour ex&eacute;cution ult&eacute;rieure
     par <function>yaz_wait</function>.
    </para>
    <para>
     Si le second argument <parameter>options</parameter> est fourni sous la
     forme d'une cha&icirc;ne, il est trait&eacute; comme une cha&icirc;ne d'authentification
     Z39.50 V2 (OpenAuth).
    </para>
    <para>
     Si <parameter>options</parameter> est fourni sous la forme d'un tableau,
     le contenu du tableau servira d'options. Notez que ce tableau d'options est
     support&eacute; depuis &php; 4.1.0.

    <variablelist>
     <title>Options <function>yaz_connect</function></title>
     <varlistentry><term>user</term><listitem>
      <simpara>Nom d'utilisateur pour l'authentification.
      </simpara></listitem>
     </varlistentry>
     <varlistentry><term>group</term><listitem>
      <simpara>Groupe d'authentification.
      </simpara></listitem>
     </varlistentry>
     <varlistentry><term>password</term><listitem>
      <simpara>Mot de passe d'authentification.
      </simpara></listitem>
     </varlistentry>
     <varlistentry><term>cookie</term><listitem>
      <simpara>Cookie de session (proxy YAZ).
      </simpara></listitem>
     </varlistentry>
     <varlistentry><term>proxy</term><listitem>
      <simpara>Proxy de connexion (proxy YAZ).
      </simpara></listitem>
     </varlistentry>
     <varlistentry><term>persistent</term><listitem>
      <simpara>Un &boolean;. Si il vaut &true; la connexion sera
      persistante; Si il vaut &false;, la connexion ne sera pas persistant. 
      Par d&eacute;faut, les connexions sont persistantes.
      </simpara></listitem>
     </varlistentry>
     <varlistentry><term>piggyback</term><listitem>
      <simpara>Un &boolean;. Si il vaut &true;, piggyback est activ&eacute; pour
      les recherches. Si il vaut &false;, piggyback est d&eacute;sactiv&eacute;.
      Par d&eacute;faut, piggyback est activ&eacute;. Activer piggyback est plus efficace,
      et g&eacute;n&eacute;ralement, cela &eacute;conomise des aller-retours sur le r&eacute;seau pour
      les premi&egrave;res lectures de r&eacute;sultat. Mais peut de serveurs
      Z39.50 supporte piggyback, ou bien ils ignorent ce jeu de noms.
      Pour ceux la, il faut que piggyback soit d&eacute;sactiv&eacute;.
      </simpara></listitem>
     </varlistentry>
    </variablelist>
    </para>
    <note>
     <para>
      L'utilisation d'un proxy am&eacute;liore souvent les performances. Un
      proxy Z39.50 fait partie du package libre 
      <ulink url="&url.yaz-proxy;">YAZ++</ulink>.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
