<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/yaz.xml, last change in rev 1.1 -->
<!-- last change to 'yaz-connect' in en/ tree in rev 1.1 -->
  <refentry id="function.yaz-connect">
   <refnamediv>
    <refname>yaz_connect</refname>
    <refpurpose>
     Pr&eacute;pare une connexion &agrave; un h&ocirc;te YAZ
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>yaz_connect</methodname>
      <methodparam><type>string</type><parameter>zurl</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>authentication</parameter></methodparam>
     </methodsynopsis>
     <para>
     <function>yaz_connect</function> retourne un identifiant positif en cas
     de succ&egrave;s, et <literal>FALSE</literal> sinon.
    </para>
	<para>
     <function>yaz_connect</function> pr&eacute;pare une connexion
     &agrave; un serveur Z39.50. <parameter>zurl</parameter> est de la forme
	 "<literal>host[:port][/database]</literal>". Si port est omis, 210 est
	 utilis&eacute;. Si <literal>database</literal> est omis, <literal>default</literal>
	 est utilis&eacute;. <function>yaz_connect</function> n'est pas bloquante,
     et ne tente pas d'&eacute;tablir une socket. En fait, elle ne fait que
     pr&eacute;parer la connexion pour ex&eacute;cution ult&eacute;rieure
     par <function>yaz_wait</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
