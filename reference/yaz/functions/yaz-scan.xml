<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->

<!-- splitted from ./fr/functions/yaz.xml, last change in rev 1.10 -->
<!-- last change to 'yaz-scan' in en/ tree in rev 1.8 -->
  <refentry id="function.yaz-scan">
   <refnamediv>
    <refname>yaz_scan</refname>
    <refpurpose>Prépare un scan</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>yaz_scan</methodname>
      <methodparam><type>resource</type><parameter>id</parameter></methodparam>
      <methodparam><type>string</type><parameter>type</parameter></methodparam>
      <methodparam><type>string</type><parameter>startterm</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>yaz_scan</function> prépare une requête "Z39.50 Scan Request".
     <parameter>id</parameter> spécifie l'hôte cible. Le point de départ
     est donné avec <parameter>startterm</parameter>. La forme de spécification
     du point de départ est donné par <parameter>type</parameter>. Actuellement,
     le type <literal>rpn</literal> est supporté. Le paramètre optionnel
     <parameter>flags</parameter> donne des informations supplémentaires pour
     contrôler le comportement de la requête de scan. Actuellement, trois index
     sont lus dans ce paramètre : <literal>number</literal> (nombre de termes
     requis), <literal>position</literal> (position préférée du terme) et
     <literal>stepSize</literal> (taille du pas préférée).
     Pour réellement envoyer la requête de recherche à l'hôte, et recevoir
     la réponse, <function>yaz_wait</function> doit être appelée. A la fin de
     <function>yaz_wait</function>, <function>yaz_error</function> et
     <function>yaz_scan_result</function> auront les résultats.
    </para>
    <para>
     La syntaxe de <parameter>startterm</parameter> est similaire aux requêtes
     RPN, décrites dans <function>yaz_search</function>.
     <parameter>startterm</parameter> est constitué de zéro ou plus
     spécifications, avec les opérateurs <literal>&#64;attr</literal>, suivi par
     exactement un token.
    </para>
    <para>
    <example>
    <title>Fonction &php; qui scanne les titres sur un serveur YAZ</title>
    <programlisting>
<![CDATA[
<?php
  function scan_titles($id, $starterm) {
	yaz_scan($id,"rpn", "@attr 1=4 " . $starterm);
	yaz_wait();
	$errno = yaz_errno($id);
	if ($errno == 0) {
	  $ar = yaz_scan_result($id,&$options);
	  echo 'Scan réussi; ';
	  $ar = yaz_scan_result($id, &$options);
	  while(list($key,$val)=each($options)) {
		 echo "$key = $val &nbsp;";
	  }
	  echo '<br><table><tr><td>';
	  while(list($key,list($k, $term, $tcount))=each($ar)) {
		if (empty($k)) continue;
		echo "<tr><td>$term</td><td>";
		echo $tcount;
		echo "</td></tr>";
	  }
	  echo '</table>';
	} else {
	  echo "Echec du scan. Erreur: " . yaz_error($id) . "<br />";
	}
  }
?>
]]>
    </programlisting>
    </example>
     </para>
    </refsect1>
   </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
