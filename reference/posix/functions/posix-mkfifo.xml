<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/posix.xml, last change in rev 1.2 -->
<!-- last change to 'posix-mkfifo' in en/ tree in rev 1.2 -->
  <refentry id="function.posix-mkfifo">
   <refnamediv>
    <refname>posix_mkfifo</refname>
    <refpurpose>
     Cr&eacute;e un fichier FIFO (first in, first out) (un pipe nomm&eacute;)
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>posix_mkfifo</methodname>
      <methodparam><type>string</type><parameter>pathname</parameter></methodparam>
      <methodparam><type>int</type><parameter>mode</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>posix_mkfifo</function> cr&eacute;e un fichie sp&eacute;cial
     <literal>FIFO</literal> qui existe dans le syst&egrave;me de fichier,
     et sert de point de communication bidirectionnal pour les
     processus.
    </para>
    <para>
     Le second param&egrave;tre <parameter>mode</parameter> doit &ecirc;tre au format
     octal (i.e. 0644). Les droits donn&eacute;s &agrave; la nouvelle pile
     <literal>FIFO</literal> d&eacute;pendent aussi de la configuration de la
     fonction <function>umask</function>. Les droits cr&eacute;&eacute;es sont 
     <literal>(mode &amp; ~umask)</literal>.
    </para>
     &note.sm.uidcheck.dir;
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
