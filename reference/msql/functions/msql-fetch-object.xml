<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.13 $ -->
<!-- EN-Revision: 1.7 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
<refentry xml:id="function.msql-fetch-object" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>msql_fetch_object</refname>
  <refpurpose>Lit une ligne sous la forme d'un objet</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>msql_fetch_object</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <!-- Undocumented confusing feature: <methodparam choice="opt"><type>int</type><parameter>result_type</parameter></methodparam> -->
  </methodsynopsis>
  <para>
   <function>msql_fetch_object</function> est identique à
   <function>msql_fetch_array</function>, avec une différence : c'est
   un objet qui est retourné, à la place d'un tableau. Par
   conséquent, cela signifie que vous ne pouvez accéder aux
   valeurs que par les noms des champs, et non plus avec leur offset.
   (Les nombres sont interdits dans les noms de propriétés).
  </para>  
  <para>
   <function>msql_fetch_object</function> est aussi rapide que
   <function>msql_fetch_array</function>, et marginalement plus
   lente que <function>msql_fetch_row</function>
   (la différence n'est pas significative).
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &msql.result.description;
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un objet dont les propriétés correspondent à la ligne
   récupérée, ou &false; si'il n'y a plus de lignes.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>msql_fetch_object</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$con = msql_connect();
if (!$con) {
die('Problème de connexion au serveur : ' . msql_error());
}

if (!msql_select_db('test', $con)) {
die('Problème de connexion à la base de données : ' . msql_error());
}

$result = msql_query('SELECT id, name FROM people', $con);
if (!$result) {
die('Problème lors de l\'exécution de la requête : ' . msql_error());
}

while ($row = msql_fetch_object($result, MSQL_ASSOC)) {
echo $row->id . ': ' . $row->name . "\n";
}

msql_free_result($result);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.11 et 5.0.4 </entry>
       <entry>
        Un bogue a été résolu lors de la récupération des données depuis
        des colonnes contenant les valeurs &null;. 
        De telles colonnes n'étaient pas placées dans le tableau résultant.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>msql_fetch_array</function></member>
    <member><function>msql_fetch_row</function></member>
    <member><function>msql_data_seek</function></member>
    <member><function>msql_result</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
