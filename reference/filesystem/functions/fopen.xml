<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
 <refentry id="function.fopen">
  <refnamediv>
   <refname>fopen</refname>
   <refpurpose>Ouverture d'un fichier ou d'une URL</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>fopen</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam><type>string</type><parameter>mode</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>use_include_path</parameter></methodparam>
      <methodparam choice="opt"><type>resource</type><parameter>zcontext</parameter></methodparam>
     </methodsynopsis>
   <simpara>
    <function>fopen</function> crée une ressource nommée, spécifiée par le
    paramètre <parameter>filename</parameter>, sous la forme d'un flux.
    Si <parameter>filename</parameter> est de la forme "protocole://...",
    <parameter>filename</parameter> est supposé être une URL, et &php; va
    rechercher un gestionnaire de protocole adapté pour lire ce fichier.
    Si aucun gestionnaire pour ce protocole n'est disponible, &php; va émettre
    une alerte qui vous permettra de savoir que vous avez des problèmes dans
    votre script, et il tentera d'exploiter <parameter>filename</parameter>
    comme un fichier classique.
    </simpara>
    <simpara>
     Si &php; décide que le fichier <parameter>filename</parameter> est un fichier
     local, il va essayer d'ouvrir un flux avec ce fichier. Le fichier doit être
     accessible à &php;. Il vous faut donc vous assurer que vous avez les
     droits d'accès à ce fichier. Si vous activez le &safemode;,
     ou la directive <link linkend="ini.open-basedir">open_basedir</link>, d'autres
     conditions peuvent aussi s'appliquer.
    </simpara>
    <simpara>
     Si &php; a décidé que <parameter>filename</parameter> spécifie
     un protocole enregistré, et que ce protocole est enregistré comme
     un protocole réseau, &php; s'assurera que la directive
     <link linkend="ini.allow-url-fopen">allow_url_fopen</link> est activée.
     Si elle est inactive, &php; va émettre une alerte et l'ouverture
     va échouer.
    </simpara>
    <note>
     <simpara>
      La liste des protocoles supportés est disponible <xref linkend="wrappers"/>.
      Certains protocoles (appelés aussi <literal>wrappers</literal> ou gestionnaires) 
      supportent des <literal>contexts</literal> et/ou des options dans le fichier
      &php.ini;. Référez vous aux pages du manuel traitant le protocole, pour connaître
      la liste des options qui sont disponibles. ( i.e. l'option de &php.ini;
      <literal>user_agent</literal> est utilisée par le gestionnaire <literal>http</literal>)
      Pour une description des <literal>contexts</literal> et du paramètre 
      <parameter>zcontext</parameter>, voyez <xref linkend="ref.stream"/>.
     </simpara>
    </note>
   <para>
    <parameter>mode</parameter> peut prendre les valeurs suivantes :
    <itemizedlist>
     <listitem>
      <simpara>
       'r' - Ouvre en lecture seule, et place le pointeur de fichier au
       début du fichier.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       'r+' - Ouvre en lecture et écriture, et place le pointeur de
       fichier au début du fichier.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       'w' - Ouvre en écriture seule; place le pointeur de fichier au
       début du fichier et réduit la taille du fichier à 0.
       Si le fichier n'existe pas, on tente de le créer.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       'w+' - Ouvre en lecture et écriture; place le pointeur de fichier
       au début du fichier et réduit la taille du fichier à
       0. Si le fichier n'existe pas, on tente de le créer.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       'a' - Ouvre en écriture seule; place le pointeur de fichier à
       la fin du fichier file. Si le fichier n'existe pas, on tente de le
       créer.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       'a+' - Ouvre en lecture et écriture; place le pointeur de fichier
       à la fin du fichier. Si le fichier n'existe pas, on tente de le
       créer.
      </simpara>
     </listitem>
    </itemizedlist>
    De plus, <parameter>mode</parameter> peut contenir la lettre 'b'. Cette option
    n'est utile que sur les systèmes qui font la différence entre
    les fichiers binaires et les fichiers textes (en bref, c'est une
    fonctionnalité Windows, totalement inutile sous Unix).
    S'il n'est pas nécessaire, il sera ignoré.
   </para>
   <para>
    Vous pouvez utiliser le troisième paramètre optionnel
    pour explorer le dossier <link linkend="ini.include-path">include_path</link>,
    en le mettant à 1.
   </para>
   <para>
    Le paramètre optionnel <parameter>zcontext</parameter> est utilisé pour
    spécifier des paramètres d'optimisation et de callback.
    </para>
    <simpara>
     Si l'ouverture échoue, <function>fopen</function> retournera &false;.
    </simpara>
   <para>
    <example>
     <title>Exemple avec <function>fopen</function></title>
     <programlisting role="php">
<![CDATA[
<?php
$handle = fopen ("/home/rasmus/file.txt", "r");
$handle = fopen ("/home/rasmus/file.gif", "wb");
$handle = fopen ("http://www.example.com/", "r");
$handle = fopen ("ftp://user:password@example.com/somefile.txt", "w");
?>
]]>
     </programlisting>
    </example>
   </para>
   <simpara>
    Si vous rencontrez des problèmes en lecture ou écriture
    de fichier et que vous utilisez &php; en version module de serveur,
    n'oubliez pas que les fichiers auxquels vous accédez ne sont
    pas nécessairement accessibles au processus serveur.
   </simpara>
   <para>
    Sous Windows, assurez-vous de bien échapper les anti-slash
    utilisés dans le chemin du fichier, ou bien utilisez des slash.
    <example>
     <title>Exemple avec <function>fopen</function> sous Windows</title>
     <programlisting role="php">
<![CDATA[
<?php
  $handle = fopen ("c:\\data\\info.txt", "r");
?>
]]>
     </programlisting>
    </example>
   </para>
   <simpara>
    Voir aussi
    <xref linkend="wrappers"/>,
     <function>fclose</function>,
     <function>fgets</function>, 
     <function>fsockopen</function>,
     <function>file</function>,
     <function>file_exists</function>,
     <function>is_readable</function>,
     <function>socket_set_timeout</function> et
     <function>popen</function>.
   </simpara>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
