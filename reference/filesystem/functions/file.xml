<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/filesystem.xml, last change in rev 1.27 -->
<!-- last change to 'file' in en/ tree in rev 1.2 -->
 <refentry id="function.file">
  <refnamediv>
   <refname>file</refname>
   <refpurpose>
    Lit le fichier et renvoie le r&eacute;sultat dans un tableau
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>file</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>use_include_path</parameter></methodparam>
      <methodparam choice="opt"><type>resource</type><parameter>context</parameter></methodparam>
     </methodsynopsis>
   <para>
    <function>file</function> est identique &agrave; <function>readfile</function>, 
    hormis le fait que
    <function>file</function> retourne le fichier dans un tableau. Chaque
    &eacute;l&eacute;ment du tableau correspond &agrave; une ligne du fichier,
    et les retour-chariots sont plac&eacute;s en fin de ligne.
   </para>
    <note>
     <para>
      Chaque &eacute;l&eacute;ment du tableau r&eacute;sultat contiendra la nouvelle ligne de fin de cha&icirc;ne.
      Il faudra donc utiliser <function>rtrim</function> sur cette valeur
      pour la supprimer.
     </para>
    </note>
    &note.line-endings;
   <para>
    Vous pouvez utiliser l'option <parameter>use_include_path</parameter> :
    en la mettant &agrave; "1", vous rechercherez aussi dans le dossier
    <link linkend="ini.include-path">include_path</link>.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>file</function></title>
     <programlisting role="php">
<![CDATA[
<?php
// Lit une page web dans un tableau.
$lines = file ('http://www.exemple.com/');

// Affiche toutes les lignes du tableau comme code HTML, avec les num&eacute;ros de ligne
foreach ($lines as $line_num => $line) {
    echo "Ligne No <b>$line_num</b> : " . htmlspecialchars($line) . "<br>\n";
}

// Un autre exemple, pour obtenir une page web dans une cha&icirc;ne. Voir aussi la fonction file_get_contents().
$html = implode ('', file ('http://www.exemple.com/'));
?>
]]>
     </programlisting>
    </example>
   </para>
    <note>
     <para>
      Depuis &php; 4.3.0, vous pouvez utiliser <function>file_get_contents</function> 
      pour lire le contenu d'un fichier dans une cha&icirc;ne.
     </para>
     <para>
      En &php; 4.3.0, <function>file</function> est d&eacute;sormais compatible avec les donn&eacute;es
      binaires.
     </para>
    </note>
    &tip.fopen-wrapper;
    <para>
		 Voir aussi
		 <function>readfile</function>,
		 <function>fopen</function>,
		 <function>fsockopen</function>,
		 <function>popen</function>,
		 <function>file_get_contents</function> et 
		 <function>include</function>.
		</para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
