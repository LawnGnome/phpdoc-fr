<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.24 $ -->
<!-- EN-Revision: 1.29 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.file">
 <refnamediv>
  <refname>file</refname>
  <refpurpose>Lit le fichier et renvoie le résultat dans un tableau</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>context</parameter></methodparam>
  </methodsynopsis>
  <para>
   Lit le fichier et renvoie le résultat dans un tableau.
  </para>
  <note>
   <para>
    Vous pouvez utiliser la fonction <function>file_get_contents</function>
    pour retourner le contenu d'un fichier dans une &string;.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Chemin vers le fichier.
      </para>
      &tip.fopen-wrapper;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Le paramètre optionnel <parameter>flags</parameter> peut être
       une ou plusieurs des constantes suivantes :
       <variablelist>
        <varlistentry>
         <term>
          <constant>FILE_USE_INCLUDE_PATH</constant>
         </term>
         <listitem>
          <simpara>
           Recherche le fichier dans l'<link linkend="ini.include-path">include_path</link>.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>FILE_IGNORE_NEW_LINES</constant>
         </term>
         <listitem>
          <simpara>
           N'ajoute pas de nouvelle ligne à la fin de chaque élément du tableau.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>FILE_SKIP_EMPTY_LINES</constant>
         </term>
         <listitem>
          <simpara>
           Ignore les lignes vides.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>FILE_TEXT</constant>
         </term>
         <listitem>
          <simpara>
           Le contenu est retourné en utilisant l'encodage UTF-8. Vous pouvez
           spécifier un encodage différent en créant un contexte personnalisé.
           Ce drapeau ne peut être utilisé avec le drapeau <constant>FILE_BINARY</constant>.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>FILE_BINARY</constant>
         </term>
         <listitem>
          <simpara>
           Le contenu est lu en tant que données binaires. C'est le comportement
           par défaut et ne peut être utilisé avec le drapeau
           <constant>FILE_TEXT</constant>.
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Une ressource de contexte valide, créée avec la fonction
       <function>stream_context_create</function>.
      </para>
      <para>
       &note.context-support;
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne le fichier dans un tableau.
   Chaque élément du tableau correspond à une ligne du fichier,
   et les retours-chariot sont placés en fin de ligne. Si une erreur
   survient, <function>file</function> retournera &false;.
  </para>
  <note>
   <para>
    Chaque ligne du tableau résultant inclura la fin de ligne, tant que
    <constant>FILE_IGNORE_NEW_LINES</constant> est utilisé, donc, vous avez
    toujours besoin d'utiliser la fonction <function>rtrim</function> si
    vous ne voulez pas de fin de lignes.
   </para>
  </note>
  &note.line-endings;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>6.0.0</entry>
       <entry>
        Ajout du support des drapeaux <constant>FILE_TEXT</constant> et
        <constant>FILE_BINARY</constant>.
        <note>
         <para>
          Pour des raisons de <literal>compatibilités ascendantes</literal>,
          ces constantes sont disponibles depuis PHP 5.2.7
         </para>
        </note>
       </entry>
      </row>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Le paramètre <parameter>context</parameter> a été ajouté.
       </entry>
      </row>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Avant PHP 5.0.0, le paramètre<parameter>flags</parameter>
        ne couvre que l'<link linkend="ini.include-path">include_path</link>
        et est activé s'il vaut &one;.
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        <function>file</function> devient compatible avec les données binaires.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>file</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Lit une page web dans un tableau.
$lines = file('http://www.example.com/');

// Affiche toutes les lignes du tableau comme code HTML, avec les numéros de ligne
foreach ($lines as $line_num => $line) {
    echo "Line #<b>{$line_num}</b> : " . htmlspecialchars($line) . "<br />\n";
}

// Un autre exemple, pour obtenir une page web dans une chaîne. Voir aussi la fonction file_get_contents().
$html = implode('', file('http://www.example.com/'));

// Utilisation de drapeau, depuis PHP 5
$trimmed = file('somefile.txt', FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.ssl-non-standard;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>readfile</function></member>
    <member><function>fopen</function></member>
    <member><function>fsockopen</function></member>
    <member><function>popen</function></member>
    <member><function>file_get_contents</function></member>
    <member><function>include</function></member>
    <member><function>stream_context_create</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->