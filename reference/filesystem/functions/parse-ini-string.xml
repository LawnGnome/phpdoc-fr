<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.3 Maintainer: dams Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.parse-ini-string">
 <refnamediv>
  <refname>parse_ini_string</refname>
  <refpurpose>Analyse une chaîne de configuration</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>parse_ini_string</methodname>
   <methodparam><type>string</type><parameter>ini</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>process_sections</parameter><initializer>false</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>scanner_mode</parameter><initializer>INI_SCANNER_NORMAL</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>parse_ini_string</function> retourne la configuration dans une
   chaîne de type <parameter>ini</parameter> dans un tableau associatif.
  </para>
  <para>
   La structure de la chaîne doit être la même que celle du fichier &php.ini;.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>ini</parameter></term>
     <listitem>
      <para>
       Le contenu de type ini à analyser.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>process_sections</parameter></term>
     <listitem>
      <para>
       En activant le paramètre <parameter>process_sections</parameter>
       avec &true;, vous obtiendrez un tableau multidimensionnel,
       avec les noms de sections et de directives. La valeur par 
       défaut du paramètre <parameter>process_sections</parameter> est &false;      
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>scanner_mode</parameter></term>
     <listitem>
      <para>
       Peut prendre les valeurs des constantes <constant>INI_SCANNER_NORMAL</constant> 
       (par défaut) ou <constant>INI_SCANNER_RAW</constant>. Si 
       <constant>INI_SCANNER_RAW</constant> est utilisé, les valeurs des 
       options ne seront pas analysées.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Les directives sont retournées sous forme de tableau <type>array</type> 
   en cas de succès, et &false; en casd d'erreur.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Analyse du php.ini par <function>parse_ini_file</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Une fonction simple de traitement des résultats
function yesno($expression)
{
	return($expression ? 'Yes' : 'No');
}

// Lecture du chemin du php.ini, à l'aide de php_ini_loaded_file() 
// fonction disponible depuis PHP 5.2.4
$ini_path = php_ini_loaded_file();

// Analyse de php.ini
$ini = parse_ini_file($ini_path);

// Analyse et comparaison des valeurs : notez que get_cfg_var()
// va donner le même résultat à l'analyse et au chargement ici.
echo '(parsed) magic_quotes_gpc = ' . yesno($ini['magic_quotes_gpc']) . PHP_EOL;
echo '(loaded) magic_quotes_gpc = ' . yesno(get_cfg_var('magic_quotes_gpc')) . PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
(parsed) magic_quotes_gpc = Yes
(loaded) magic_quotes_gpc = Yes
]]>
    </screen>
   </example>
  </para>
 </refsect1>


 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Il y a plusieurs mots réservés que ne doivent pas être
    utilisés comme clé dans les fichiers .ini. Cela inclut : 
    <literal>null</literal>, <literal>yes</literal>, <literal>no</literal>, 
    <literal>true</literal>, <literal>false</literal>, <literal>on</literal>,
    <literal>off</literal>, <literal>none</literal>.
    Les valeurs <literal>null</literal>, <literal>no</literal> et
    <literal>false</literal> sont retournées comme "" (chaîne vide);
    les valeurs <literal>yes</literal>, <literal>true</literal>, 
    <literal>on</literal> sont retournées comme "1". Les caractères
    <literal>{}|&amp;~![()^"</literal> ne doivent être utilisés nulle part
    dans les clés, et ont une signification spéciale dans les valeurs.
   </simpara>
  </note>
  </refsect1>
  
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>parse_ini_file</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
