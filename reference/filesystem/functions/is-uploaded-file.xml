<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
 <refentry id="function.is-uploaded-file">
  <refnamediv>
   <refname>is_uploaded_file</refname>
   <refpurpose>
    Indique si le fichier a été téléchargé
    par HTTP POST
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>bool</type><methodname>is_uploaded_file</methodname>
     <methodparam><type>string</type><parameter>filename</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>is_uploaded_file</function> est disponible à partir des
    versions &php; 3.0.16 et 4.0.2.
   </para>
   <para>
    <function>is_uploaded_file</function> retourne &true; si le fichier
    <varname>filename</varname> a été téléchargé
    par HTTP POST. Cela est très utile pour vous assurer qu'un
    utilisateur n'essaie pas d'accéder intentionnellement à
    un fichier auquel il n'a pas droit (comme <filename>/etc/passwd</filename>).
   </para>
   <para>
    Ce type de vérification est spécialement important s'il est
    possible que les fichiers téléchargés
    révélent leur contenu à l'utilisateur, ou
    même aux utilisateurs du même système.
   </para>
    <para>
     <function>is_uploaded_file</function> est disponible dans les
     versions de &php; 3 après &php; 3.0.16, et dans les versions de &php; 4
     après la 4.0.2. Si vous êtes coincés avec une version plus ancienne,
     vous pouvez utiliser l'une des fonctions suivantes pour 
     vous protéger : 
     <note>
      <para>
       L'exemple suivant <emphasis>ne fonctionne pas</emphasis> avec
       les versions de &php; ultérieures à la 4.0.2. Elle dépend
       de fonctionnalités internes de &php; qui ont disparu après
       cette version.
      </para>
     </note>
     <programlisting role="php">
<![CDATA[
<?php
/* Test utilisateur du fichier téléchargé. */
function is_uploaded_file($filename) {
    if (!$tmp_file = get_cfg_var('upload_tmp_dir')) {
        $tmp_file = dirname(tempnam('', ''));
    }
    $tmp_file .= '/' . basename($filename);
    /* L'utilisateur peut avoir laissé des / finaux dans php.ini... */
    return (ereg_replace('/+', '/', $tmp_file) == $filename);
}

/* Voici comment l'utiliser, car move_uploaded_file() n'est pas disponible
   dans les anciennes versions : */
if (is_uploaded_file($HTTP_POST_FILES['userfile'])) {
    copy($HTTP_POST_FILES['userfile'], "/dossier/ou/placer/un/fichier/uploadé");
} else {
    echo "Tentative d'attaque possible : '$HTTP_POST_FILES[userfile]'.";
}
?>
]]>
     </programlisting>
    </para>
    <para>
		 Voir aussi
		 <function>move_uploaded_file</function>.
		</para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
