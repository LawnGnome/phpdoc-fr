<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.13 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry id="function.move-uploaded-file">
 <refnamediv>
  <refname>move_uploaded_file</refname>
  <refpurpose>Déplace un fichier téléchargé</refpurpose>
 </refnamediv>
 <refsect1>
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>move_uploaded_file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam><type>string</type><parameter>destination</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>move_uploaded_file</function> s'assure que le fichier
   <parameter>filename</parameter> est un fichier téléchargé
   par HTTP POST. Si le fichier est valide, il est déplacé
   jusqu'à <parameter>destination</parameter>.
  </para>
  <para>
   Si <parameter>filename</parameter> n'est pas valide, rien ne se passe,
   et <function>move_uploaded_file</function> retournera &false;.
  </para>
  <para>
   Si <parameter>filename</parameter> est un fichier
   téléchargé, mais que pour une raison
   quelconque, il ne peut être déplacé, rien ne se passe,
   et <function>move_uploaded_file</function> retourne &false;.
   De plus, une alerte sera affichée.
  </para>
  <para>
   Ce type de vérification est spécialement important s'il
   est possible que les fichiers téléchargés
   révèlent leur contenu à l'utilisateur,
   ou même aux utilisateurs du même système.
  </para>
  <note>
   <para>
    <function>move_uploaded_file</function> n'est pas affectée par 
    les restrictions liées au &safemode; et à l'<link
                                                     linkend="ini.open-basedir">open_basedir</link>.
    Cependant, les restrictions sont placées uniquement sur le
    paramètre <parameter>destination</parameter> qui permet le
    déplacement des fichiers chargés dans lesquels 
    <parameter>filename</parameter> peut entrer en conflit avec ces 
    restrictions. <function>move_uploaded_file</function> permet de
    s'assurer de la sécurité de cette opération en autorisant le
    déplacement des seuls fichiers chargés via &php;.
   </para>
  </note>
  <warning>
   <para>
    Si le fichier de destination existe déjà, il sera écrasé.
   </para>
  </warning>
  <para>
   Voir aussi
   <function>is_uploaded_file</function>, et la section sur la gestion
   <link linkend="features.file-upload">des téléchargements de fichiers</link>
   pour un exemple simple d'utilisation.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->