<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.move-uploaded-file">
 <refnamediv>
  <refname>move_uploaded_file</refname>
  <refpurpose>Déplace un fichier téléchargé</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>move_uploaded_file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam><type>string</type><parameter>destination</parameter></methodparam>
  </methodsynopsis>
  <para>
   S'assure que le fichier <parameter>filename</parameter> est un fichier
   téléchargé par HTTP POST. Si le fichier est valide, il est déplacé
   jusqu'à <parameter>destination</parameter>.
  </para>
  <para>
   Ce type de vérification est spécialement important s'il
   est possible que les fichiers téléchargés
   révèlent leur contenu à l'utilisateur,
   ou même aux utilisateurs du même système.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Le nom du fichier téléchargé.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>destination</parameter></term>
     <listitem>
      <para>
       La destination du fichier déplacé.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Si <parameter>filename</parameter> n'est pas valide, rien ne se passe,
   et <function>move_uploaded_file</function> retournera &false;.
  </para>
  <para>
   Si <parameter>filename</parameter> est un fichier téléchargé,
   mais que pour une raison quelconque, il ne peut être déplacé,
   rien ne se passe, et <function>move_uploaded_file</function>
   retourne &false;. De plus, une alerte sera affichée.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Téléchargement de plusieurs fichiers</title>
    <programlisting role="php">
<![CDATA[
<?php
$uploads_dir = '/uploads';
foreach ($_FILES["pictures"]["error"] as $key => $error) {
    if ($error == UPLOAD_ERR_OK) {
        $tmp_name = $_FILES["pictures"]["tmp_name"][$key];
        $name = $_FILES["pictures"]["name"][$key];
        move_uploaded_file($tmp_name, "$uploads_dir/$name");
    }
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>move_uploaded_file</function> n'est pas affectée par
    les restrictions liées au &safemode; et à l'<link
     linkend="ini.open-basedir">open_basedir</link>.
    Cependant, les restrictions sont placées uniquement sur le
    paramètre <parameter>destination</parameter> qui permet le
    déplacement des fichiers chargés dans lesquels 
    <parameter>filename</parameter> peut entrer en conflit avec ces
    restrictions. <function>move_uploaded_file</function> permet de
    s'assurer de la sécurité de cette opération en autorisant le
    déplacement des seuls fichiers chargés via PHP.
   </para>
  </note>
  <warning>
   <para>
    Si le fichier de destination existe déjà, il sera écrasé.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>is_uploaded_file</function></member>
    <member>Voir la section sur <link linkend="features.file-upload">les
      téléchargements de fichiers</link> pour un exemple d'utilisation</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->