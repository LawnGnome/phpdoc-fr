<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/filesystem.xml, last change in rev 1.27 -->
<!-- last change to 'fgetcsv' in en/ tree in rev 1.2 -->
 <refentry id="function.fgetcsv">
  <refnamediv>
   <refname>fgetcsv</refname>
   <refpurpose>Renvoie la ligne courante et cherche les champs CSV</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>fgetcsv</methodname>
      <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
      <methodparam><type>int</type><parameter>length</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>delimiter</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>enclosure</parameter></methodparam>
     </methodsynopsis>
   <simpara>
    <function>fgetcsv</function> est identique &agrave; 
    <function>fgets</function> mais <function>fgetcsv</function>
    analyse la ligne qu'il lit et recherche les champs CSV, qu'il
    va retourner dans un tableau les contenant. Le d&eacute;limiteur de champs
    <parameter>delimiter</parameter> est la virgule, &agrave; moins que vous ne
    fournissiez un troisi&egrave;me argument.
   </simpara>
    <note>
     <simpara>
      Le param&egrave;tre <parameter>enclosure</parameter> a &eacute;t&eacute; ajout&eacute; en PHP 4.3.0.
     </simpara>
    </note>
   <simpara>
    <parameter>handle</parameter> doit &ecirc;tre un pointeur valide, et avoir
    &eacute;t&eacute; correctement ouvert par <function>fopen</function>,
    <function>popen</function>, ou <function>fsockopen</function>.
   </simpara>
   <simpara>
    <parameter>length</parameter> doit &ecirc;tre plus grand que la plus
    grande ligne trouv&eacute;e dans un fichier CSV (en comptant les
    caract&egrave;res de fin de ligne).
   </simpara>
   <simpara>
    <function>fgetcsv</function> retourne &false; en cas
    d'erreur, ou en cas de fin du fichier.
   </simpara>
    <note>
     <simpara>
	  Une ligne vide dans un fichier CSV sera retourn&eacute;e sous la 
	  forme d'un tableau contenant la valeur &null; et ne sera pas trait&eacute;e 
	  comme une erreur.
     </simpara>
    </note>
   <example>
    <title>
     Lit et affiche le contenu d'un fichier CSV avec <function>fgetcsv</function>
    </title>
    <programlisting role="php">
<![CDATA[
<?php
$row = 1;
$fp = fopen ("test.csv","r");
while ($data = fgetcsv ($fp, 1000, ",")) {
    $num = count ($data);
    print "<p> $num champs dans la ligne $row: <br>\n";
    $row++;
    for ($c=0; $c < $num; $c++) {
        print $data[$c] . "<br>\n";
    }
}
fclose ($fp);
?>
]]>
    </programlisting>
   </example>
    <para>
     Voir aussi
     <function>explode</function>, 
     <function>file</function> et
     <function>pack</function>.
    </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
