<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 290804 Maintainer: dams Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.flock">
 <refnamediv>
  <refname>flock</refname>
  <refpurpose>Verrouille le fichier</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>flock</methodname>
   <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
   <methodparam><type>int</type><parameter>operation</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">wouldblock</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>flock</function> permet de réaliser un système simple de
   verrous écriture/lecture, qui peut être utilisé sur
   n'importe quelle plate-forme (Unix et Windows compris).
  </para>
  <para>
   Le verrou est également levé avec la fonction <function>fclose</function>
   (qui est également automatiquement appelée lors de la fin du script).
  </para>
  <para>
   PHP dispose d'un système complet de verrouillage de fichiers.
   Tous les programmes qui accèdent au fichier doivent utiliser la
   même méthode de verrouillage pour qu'il soit efficace. Par
   défaut, cette fonction se bloquera tant que le verrou demandé
   ne sera pas acquis ; ce comportement peut être contrôlé (sur les
   systèmes différents de Windows) avec l'option LOCK_NB dont vous trouverez
   la documentation ci-dessous.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>handle</parameter></term>
     <listitem>
      <para>
       Un pointeur de fichier ouvert.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>operation</parameter></term>
     <listitem>
      <para>
       <parameter>operation</parameter> peut prendre une des valeurs suivantes :
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>LOCK_SH</constant> pour acquérir un verrou partagé (lecture).
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>LOCK_EX</constant> pour acquérir un verrou exclusif (écriture).
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>LOCK_UN</constant> pour libérer un verrou (partagé ou exclusif).
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>LOCK_NB</constant> si vous voulez que <function>flock</function>
          ne se bloque pas durant le verrouillage.
          (non supporté sous Windows)
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>wouldblock</parameter></term>
     <listitem>
      <para>
       Ce troisième argument optionnel est défini à &true; si le verrou
       doit bloquer le script (condition d'erreur <literal>EWOULDBLOCK</literal>).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.0.1</entry>
       <entry>
        Les constantes <literal>LOCK_XXX</literal> ont été ajoutées. Avant,
        vous deviez utiliser 1 pour <constant>LOCK_SH</constant>, 2 pour
        <constant>LOCK_EX</constant>, 3 pour <constant>LOCK_UN</constant> et
        4 pour <constant>LOCK_NB</constant>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>flock</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$fp = fopen("/tmp/lock.txt", "r+");

if (flock($fp, LOCK_EX)) { // pose un verrou exclusif
    ftruncate($fp, 0);     // effacement du contenu
    fwrite($fp, "Écrire dans un fichier\n");
    flock($fp, LOCK_UN);   // libère le verrou
} else {
    echo "Impossible de verrouiller le fichier !";
}

fclose($fp);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>flock</function> est obligatoire sous Windows.
   </para>
  </note>
  <note>
   <para>
    Comme <function>flock</function> requiert un pointeur de fichier, vous 
    aurez peut être à utiliser un verrou spécial pour protéger l'accès au fichier
    que vous voulez tronquer en l'ouvrant en mode d'écriture (avec "w" ou "w+" 
    comme argument de <function>fopen</function>).
   </para>
  </note>
  <warning>
   <para>
    <function>flock</function> ne fonctionne pas sur NFS ou sur les autres
    systèmes de fichiers réseaux. Vérifiez la documentation de votre
    système d'exploitation pour plus de détails.
   </para>
   <para>
    Sur certains systèmes d'exploitation, <function>flock</function> est implémenté
    au niveau processus. Lorsque vous utilisez une API multithread comme
    ISAPI, vous risquez de ne pas pouvoir avoir confiance en <function>flock</function>
    pour protéger vos fichiers contre d'autres scripts PHP qui fonctionnent
    en parallèle sur d'autres threads du même serveur.
   </para>
   <para>
    <function>flock</function> n'est pas supporté sur les vieux systèmes de fichiers
    comme <literal>FAT</literal> et ses dérivés, et elle retournera forcément
    &false; sous ces environnements (ceci est particulièrement vrai pour les 
    utilisateurs de Windows 98).
   </para>
  </warning>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->