<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
<!-- EN-Revision: 1.11 Maintainer: dams Status: ready -->
<!-- Reviewed: no -->
 <refentry id="function.flock">
  <refnamediv>
   <refname>flock</refname>
   <refpurpose>Verrouille le fichier</refpurpose>
  </refnamediv>
  <refsect1>
   &reftitle.description;
     <methodsynopsis>
      <type>bool</type><methodname>flock</methodname>
      <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
      <methodparam><type>int</type><parameter>operation</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter role="reference">wouldblock</parameter></methodparam>
     </methodsynopsis>
   <simpara>
    &php; dispose d'un système complet de verrouillage de fichiers.
    Tous les programmes qui accèdent au fichier doivent utiliser la
    même méthode de verrouillage pour qu'il soit efficace.
   </simpara>
   <note>
    <para>
     <function>flock</function> est obligatoire sous Windows.
    </para>
   </note>
   <simpara>
    <function>flock</function> agit sur le fichier <parameter>handle</parameter>
    qui doit avoir été ouvert au préalable.
    <parameter>operation</parameter> est une des valeurs suivantes :
   </simpara>
   <para>
    <itemizedlist>
     <listitem>
      <simpara>
       Acquisition d'un verrou en lecture : 
       <parameter>operation</parameter> = <constant>LOCK_SH</constant> 
       (valeur de 1 pour les versions plus anciennes que &php; 4.0.1).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Acquisition d'un verrou exclusif en écriture : 
       <parameter>operation</parameter> = <constant>LOCK_EX</constant> 
       (valeur de 2 pour les versions plus anciennes que &php; 4.0.1).
       </simpara>
     </listitem>
     <listitem>
      <simpara>
       Libération d'un verrou partagé ou exclusif,
       <parameter>operation</parameter> = <constant>LOCK_UN</constant> 
       (valeur de 3 pour les versions plus anciennes que &php; 4.0.1).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Si vous voulez que <function>flock</function> ne se bloque pas durant
       le verrouillage, ajoutez <constant>LOCK_NB</constant> à 
       <parameter>operation</parameter>
       (valeur de 4 pour les versions plus anciennes que &php; 4.0.1).
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <simpara>
    <function>flock</function> permet de réaliser un système simple de
    verrous écriture/lecture, qui peut être utilisé sur
    n'importe quelle plate-forme (Unix et Windows compris). Le troisième
    paramètre optionnel <parameter>&amp;wouldblock</parameter> vaut par défaut &true;,
    si le verrou doit bloquer le script (condition d'erreur 
    <literal>EWOULDBLOCK</literal>). Le verrou est également levé avec la
    fonction <function>fclose</function>
    (qui est également automatiquement appelée lors de la fin du script).
   </simpara>
   <simpara>
    &return.success;
   </simpara>
    <para>
     <example>
      <title>Exemple avec <function>flock</function></title>
      <programlisting role="php">
<![CDATA[
<?php

$fp = fopen("/tmp/lock.txt", "w+");

if (flock($fp, LOCK_EX)) { // pose un verrou exclusif
    fwrite($fp, "Ecrire dans le fichier\n");
    flock($fp, LOCK_UN); // libère le verrou
} else {
    echo "Impossible de verrouiller le fichier!";
}

fclose($fp);

?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Comme <function>flock</function> requiert un pointeur de fichier, vous 
      aurez peut être à utiliser un verrou spécial pour protéger l'accès au fichier
      que vous voulez tronquer en l'ouvrant en mode d'écriture (avec "w" ou "w+" 
      comme argument de <function>fopen</function>).
     </para>
    </note>
    <warning>
     <para>
      <function>flock</function> ne fonctionne pas sur NFS ou sur les autres
      systèmes de fichiers réseaux. Vérifiez la documentation de votre
      système d'exploitation pour plus de détails.
     </para>
     <para>
      Sur certains systèmes d'exploitation, <function>flock</function> est implémenté
      au niveau processus. Lorsque vous utilisez une API multi-thread comme
      ISAPI, vous risquez de ne pas pouvoir avoir confiance en <function>flock</function>
      pour protéger vos fichiers contre d'autres scripts &php; qui fonctionnent
      en parallèle sur d'autres threads du même serveur.
     </para>
     <para>
      <function>flock</function> n'est pas supporté sur les vieux systèmes de fichiers
      comme <literal>FAT</literal> et ses dérivés, et elle retournera forcément
      &false; sous ces environnements (ceci est particulièrement vrai pour les 
      utilisateurs de Windows 98).
     </para>
    </warning>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
