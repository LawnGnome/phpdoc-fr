<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.7 Maintainer: yannick Status: ready -->
  <refentry id="function.token-get-all">
   <refnamediv>
    <refname>token_get_all</refname>
    <refpurpose>Scinde un code source en éléments de base</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>array</type><methodname>token_get_all</methodname>
     <methodparam><type>string</type><parameter>source</parameter></methodparam>
    </methodsynopsis>
    <simpara>
     <function>token_get_all</function> analyse le code source 
     <parameter>source</parameter> 
     et retourne les éléments de code que le Zend engine a scanné. Cette fonction retourne
     un tableau contenant la liste des descriptions des éléments. Chaque élément
     du tableau peut être un caractère unique (i.e.: <constant>;</constant>,
     <constant>.</constant>, <constant>&gt;</constant>, <constant>!</constant>, etc.) 
     ou bien un tableau contenant un identifiant
     de token et la représentation de ce code source.
    </simpara>
    <simpara>
     Pour une liste des tokens, voir <xref linkend="tokens"/> ou uitlisez 
     <function>token_name</function> pour traduire la valeur token en une chaîne
     représentative.
    </simpara>
    <example>
    <title>Exemple avec <function>token_get_all</function></title>
     <programlisting role="php">
<![CDATA[
<?php
$tokens = token_get_all('<?php'); // => array(array(T_OPEN_TAG, '<?'));
$tokens = token_get_all('<?php echo; ?>'); /* => array(
                                                    array(T_OPEN_TAG, '<?php'), 
                                                    array(T_ECHO, 'echo'),
                                                    ';',
                                                    array(T_CLOSE_TAG, '?>') ); */

/* Notez que dans l'exemple suivant, la chaîne est parsée
comme T_INLINE_HTML plutôt que l'attendu T_COMMENT (T_COMMENT dans PHP inférieur
à la version 5), car il n'y a pas d'ouverture/fermeture de balises utilisés dans le "code".
Celà revient à mettre un commentaire à l'extérieur des balises <?php ?> dans
un fichier normal. */
$tokens = token_get_all('/* comment */'); // => array(array(T_INLINE_HTML, '/* comment */'));
?>
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
