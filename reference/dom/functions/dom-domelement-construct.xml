<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.2 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id='function.dom-domelement-construct' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMElement->__construct()</refname>
  <refpurpose>
   Crée un nouvel objet DOMElement
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>DOMElement</classname></ooclass>
   <constructorsynopsis>
    <methodname>__construct</methodname>
    <methodparam><type>string</type><parameter>name</parameter></methodparam>
    <methodparam choice='opt'><type>string</type><parameter>value</parameter></methodparam>
	<methodparam choice='opt'><type>string</type><parameter>namespaceURI</parameter></methodparam>
   </constructorsynopsis> 
  </classsynopsis>
  <para>
   Crée un nouvel objet <classname>DOMElement</classname>.
   Cet objet est en lecture seule. Il peut être ajouté à un document, mais les
   noeuds additionnels ne peuvent pas être ajoutés à ce noeud tant qu'il
   est associé à un document. Pour créer un noeud accessible en écriture, 
   utilisez
   <xref linkend="function.dom-domdocument-createelement" /> ou
   <xref linkend="function.dom-domdocument-createelementns" />.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       Le nom de l'élément. Lorsqu'il est passé dans l'URI de l'espace de nom,
       le nom de l'élément doit comporter un préfixe pour être associé à l'URI.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       La valeur de l'élément.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>namespaceURI</parameter></term>
     <listitem>
      <para>
       Un espace de nom de l'URI pour créer l'élément dans un espace de nom spécifique.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Création d'un nouveau DOMElement</title>
    <programlisting role="php">
<![CDATA[
<?php

$dom = new DOMDocument('1.0', 'iso-8859-1');
$element = $dom->appendChild(new DOMElement('root'));
$element_ns = new DOMElement('pr:node1', 'cettevaleur', 'http://xyz');
$element->appendChild($element_ns);
echo $dom->saveXML(); /* <?xml version="1.0" encoding="iso-8859-1"?>
<root><pr:node1 xmlns:pr="http://xyz">cettevaleur</pr:node1></root> */

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.dom-domdocument-createelement" /></member>
    <member><xref linkend="function.dom-domdocument-createelementns" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
