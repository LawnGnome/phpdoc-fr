<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
  <refentry id="function.ora-bind">
   <refnamediv>
    <refname>ora_bind</refname>
    <refpurpose>
     Lie une variable &php; à un paramètre Oracle
    </refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>bool</type><methodname>ora_bind</methodname>
      <methodparam><type>resource</type><parameter>cursor</parameter></methodparam>
      <methodparam><type>string</type><parameter>PHP_variable_name</parameter></methodparam>
      <methodparam><type>string</type><parameter>SQL_parameter_name</parameter></methodparam>
      <methodparam><type>int</type><parameter>length</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ora_bind</function> lie une variable &php; avec un paramètre SQL. Le
     paramètre SQL doit être de la forme ":name". Avec l'option <parameter>type</parameter>,
     vous pouvez choisir si le paramètre SQL est de type 
     entrée/sortie (0, valeur par défaut), entrée seulement
     (1) ou sortie seulement (2). Comme dans &php; 3.0.1, vous pouvez
     respectivement utiliser les constantes <constant>ORA_BIND_INOUT</constant>, 
     <constant>ORA_BIND_IN</constant> et <constant>ORA_BIND_OUT</constant> 
     plutôt que des nombres.
    </para>
    <para>
     &return.success; Les erreurs sont accessibles avec les fonctions    
     <function>ora_error</function> et <function>ora_errorcode</function>.
    </para>
    <para>
     <function>ora_bind</function> doit être appelée après
     la fonction <function>ora_parse</function> et avant
     <function>ora_exec</function>. Les valeurs d'entrées peuvent alors
     être fournies par assignation des variables &php;. Après la
     fonction <function>ora_exec</function> les variables liées
     contiennent les valeurs de sortie, si elles sont disponibles. Par exemple :
     <example>
      <title>Exemple avec <function>ora_bind</function></title>
      <programlisting role="php">
<![CDATA[
<?php
ora_parse($curs, "declare tmp INTEGER; begin tmp := :in; :out := tmp; :x := 7.77; end;");
ora_bind($curs, "result", ":x", $len, 2);
ora_bind($curs, "input", ":in", 5, 1);
ora_bind($curs, "output", ":out", 5, 2);
$input = 765;
ora_exec($curs);
echo "Résultat : $result<br />sortie : $output<br />Entrée : $input";
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
