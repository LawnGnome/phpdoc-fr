<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/ingres_ii.xml, last change in rev 1.8 -->
<!-- last change to 'ingres-fetch-array' in en/ tree in rev 1.1 -->
 <refentry id="function.ingres-fetch-array">
  <refnamediv>
   <refname>ingres_fetch_array</refname>
   <refpurpose>
    R&eacute;cup&egrave;re une ligne de r&eacute;sultat dans un tableau.
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>array</type><methodname>ingres_fetch_array</methodname>
     <methodparam choice="opt"><type>int</type><parameter>result_type</parameter></methodparam>
     <methodparam choice="opt"><type>resource</type><parameter>link</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>ingres_fetch_array</function> renvoie un tableau correspondant
    &agrave; la ligne r&eacute;cup&eacute;r&eacute;e, ou &false; s'il n'y a plus de ligne &agrave; r&eacute;cup&eacute;rer.
   </para>
   <para>
    Cette fonction est une version am&eacute;lior&eacute;e de
    <function>ingres_fetch_row</function>. En plus de stocker les donn&eacute;es
    dans un tableau &agrave; indices num&eacute;riques, elle peut aussi les enregistrer
    dans un tableau associatif, en utilisant les noms des champs comme
    indices.
   </para>
   <para>
    Si plusieurs colonnes ont le m&ecirc;me nom, la derni&egrave;re colonne aura la
    priorit&eacute;. Pour acc&eacute;der aux autres colonnes du m&ecirc;me nom, vous devez
    utiliser l'index num&eacute;rique, ou faire un alias pour chaque colonne.
    <informalexample>
     <programlisting role="php">
&lt;?php
ingres_query(select t1.f1 as foo t2.f1 as bar from t1, t2);
$result = ingres_fetch_array();
$foo = $result["foo"];
$bar = $result["bar"];
?&gt;
     </programlisting>
    </informalexample>
   </para>
   <para>
    <parameter>result_type</parameter> peut valoir II_NUM pour un
    tableau &agrave; indices num&eacute;riques, II_ASSOC pour un tableau associatif,
    ou II_BOTH (d&eacute;faut) pour un tableau mixte (accessible selon les 2
    m&eacute;thodes).
   </para>
   <para>
    Du point de vue de la rapidit&eacute;, cette fonction est identique &agrave;
    <function>ingres_fetch_object</function>, et presque aussi rapide
    que <function>ingres_fetch_row</function> (la diff&eacute;rence est
    insignifiante).
   </para>
   <para>
    <example>
     <title>Exemple pour <function>ingres_fetch_array</function></title>
     <programlisting role="php">
&lt;?php
  ingres_connect($database, $user, $password);
  ingres_query("select * from table");
  while ($row = ingres_fetch_array()) {
    echo $row["user_id"]; // utilisation du tableau associatif
    echo $row["fullname"];
    echo $row[1];         // utilisation du tableau &agrave; indices num&eacute;riques
    echo $row[2];
  }
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Voir aussi
    <function>ingres_query</function>,
    <function>ingres_num_fields</function>,
    <function>ingres_field_name</function>,
    <function>ingres_fetch_object</function> et
    <function>ingres_fetch_row</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
