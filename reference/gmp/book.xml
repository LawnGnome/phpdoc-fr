<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333674 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<book xml:id="book.gmp" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <?phpdoc extension-membership="bundledexternal" ?>
 <title>GNU Multiple Precision</title>
 <titleabbrev>GMP</titleabbrev>

 <!-- {{{ preface -->
 <preface xml:id="intro.gmp">
  &reftitle.intro;
  <simpara>
   Ces fonctions vous permettent de travailler avec des nombres de taille
   arbitraire, en utilisant la bibliothèque GNU <acronym>MP</acronym>.
  </simpara>
  <simpara>
   Ces fonctions ont été ajoutées en PHP 4.0.4.
  </simpara>
  <note>
   <para>
    La plupart des fonctions GMP accepte des nombres GMP comme arguments.
    Ils sont montrés dans la documentation comme des objets <classname>GMP</classname> ;
    cependant, notez que PHP 5.5 et antérieurs représentent les nombres GMP comme
    des ressources. La plupart de ces fonctions accepte également des arguments
    sous la forme de numérique et de chaîne de caractères, tant qu'il est possible
    de les convertir plus tard en nombre. Aussi, s'il existe une fonction rapide
    pouvant agir sur des arguments entiers, elle doit être utilisée au lieu d'une
    fonction moins rapide lorsque les arguments fournis sont des entiers.
    Ceci est réalisé en tout transparence, aussi, au pire, vous pouvez utiliser
    des entiers dans chaque fonction qui attend un nombre GMP. Voir aussi la
    fonction <function>gmp_init</function>.
   </para>
  </note>
  <note>
   <para>
    Depuis PHP 5.6, vous pouvez utiliser des opérateurs
    <link linkend="language.operators.arithmetic">arithmétiques</link>,
    <link linkend="language.operators.bitwise">sur les bits</link> et
    <link linkend="language.operators.comparison">de comparaison</link>
    avec les objets <classname>GMP</classname> retournés depuis les fonctions GMP
    <function>gmp_init</function> et autres.
   </para>
  </note>
  <warning>
   <simpara>
    Si vous voulez explicitement spécifier un entier de grande taille,
    spécifiez-le sous forme de chaîne. Si vous ne le faites pas, PHP va
    interpréter votre entier et le transformer en une représentation
    interne, qui vous fera sûrement perdre de la précision, avant même
    que <literal>GMP</literal> n'entre en jeu.
   </simpara>
  </warning>
  <note>
   <simpara>
    Cette extension est disponible sur les plates-formes Windows depuis PHP 5.1.0.
   </simpara>
  </note>
 </preface>
 <!-- }}} -->

 &reference.gmp.setup;
 &reference.gmp.constants;
 &reference.gmp.examples;
 &reference.gmp.reference;
 &reference.gmp.gmp;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->