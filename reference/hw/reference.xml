<?xml version="1.0" encoding="iso-8859-1"?>
<reference id="ref.hyperwave">
 <title>Hyperwave</title>
 <titleabbrev>Hyperwave</titleabbrev>
 <partintro>
  <section id="hw-intro">
  <title>Introduction</title>
  <para>
   <productname>Hyperwave</productname> a &eacute;t&eacute; d&eacute;velopp&eacute; par
   <ulink url="&url.iicm;">IICM</ulink> &agrave; Graz. Son nom
   original &eacute;tait <acronym>Hyper-G</acronym> et il a pris le nom de
   Hyperwave lors de sa commercialisation (en 1996, si mes souvenirs sont bons).
  </para>
  <para>
   Hyperwave n'est pas gratuit. La version actuelle est la 4.1, disponible &agrave;
   <ulink url="&url.hyperwave;">&url.hyperwave;</ulink>. Une version
   limit&eacute;e &agrave; 30 jours peut &ecirc;tre demand&eacute;e.
  </para>
  <para>
   <acronym>HIS</acronym> est un syst&egrave;me d'information similaire &agrave;
   une base de donn&eacute;es, (HIS, Hyperwave Information Server). HIS se
   concentre sur l'enregistrement et la gestion des documents. Un document peut
   &ecirc;tre n'importe quelle donn&eacute;e, qui peut &ecirc;tre stock&eacute;e
   dans un fichier. Chaque document est accompagn&eacute; par un enregistrement.
   Cet enregistrement contient des m&eacute;ta donn&eacute;es &agrave; propos
   du document. Ces m&eacute;ta donn&eacute;es sont des listes d'attributs qui
   peuvent &ecirc;tre &eacute;tendues par l'utilisateur. Un attribut est une paire
   cl&eacute;/valeur de la forme : cl&eacute; =valeur. L'enregistrement complet
   contient autant de paire que le d&eacute;sire l'utilisateur. Le nom d'un
   attribut n'a pas besoin d'&ecirc;tre unique, c'est-&agrave;-dire qu'une
   m&ecirc;me cl&eacute; peut appara&icirc;tre plusieurs fois dans un
   enregistrement. Cela peut &ecirc;tre utile si vous devez donner un
   titre &agrave; votre document en plusieurs langues, par exemple. Dans un
   cas pareil, la convention est que chaque valeur de titre est
   pr&eacute;c&eacute;d&eacute;e par deux lettres et deux points, tel que :
   'fr:Titre en fran&ccedil;ais' ou 'ge:Titel in deutsch'. D'autres attributs
   comme une description ou des mots cl&eacute;s sont aussi susceptibles de
   recourir &agrave; ce genre de proc&eacute;d&eacute;. Vous pouvez aussi
   remplacer l'abr&eacute;viation de langage par une autre cha&icirc;ne,
   tant qu'elle est s&eacute;par&eacute;e de la valeur par les deux points.
  </para>
  <para>
   Chaque enregistrement a une repr&eacute;sentation native qui contient toutes
   les paires cl&eacute;/valeur, s&eacute;par&eacute;es par un retour &agrave;
   la ligne. L'extension Hyperwave reconna&icirc;t une autre repr&eacute;sentation
   qui est un tableau associatif, o&ugrave; les attributs servent de cl&eacute;s.
   Les attributs multilingues &eacute;tant g&eacute;r&eacute; sous la forme d'un
   autre tableau associatif, dont les cl&eacute;s sont les cha&icirc;nes de
   langue. En fait, tous les attributs multiformes sont g&eacute;r&eacute;s
   sous la forme de tableau associatif. (Cela n'est pas encore compl&egrave;tement
   cod&eacute;. Uniquement les attributs de titre, description et mot cl&eacute;s
   sont trait&eacute;s correctement).
  </para>
  <para>
   En dehors des documents, tous les hyper liens contenus dans un documents sont
   enregistr&eacute;s dans un autre enregistrement. Les hyperliens qui sont
   &agrave; l'int&eacute;rieur d'un document en seront supprim&eacute;s, et
   enregistr&eacute;s dans des objets particuliers, au moment de l'insertion
   dans la base de donn&eacute;es. L'enregistrement des hyper-liens
   contient les informations d'origine et d'objectif. Afin d'acc&eacute;der
   au document original, vous devrez lire le document sans les liens, puis lire
   les liens, et les r&eacute;ins&eacute;rer (les
   <function>hw_pipedocument</function> et <function>hw_gettext</function> le
   font pour vous. L'avantage de s&eacute;parer les liens du document est
   &eacute;vident : une fois qu'un document, cible d'un hyperlien, a
   &eacute;t&eacute; renomm&eacute;, le liens peut facilement &ecirc;tre
   modifi&eacute;. Le document contenant le lien n'est pas modifi&eacute;
   pour autant. Vous pouvez m&ecirc;me ajouter un lien &agrave; un document sans
   le modifier.
  </para>
  <para>
   Dire que <function>hw_pipedocument</function> et <function>hw_gettext</function>
   font l'insertion automatiquement n'est pas aussi simple qu'il n'y para&icirc;t.
   L'insertion implique une certaine hi&eacute;rarchie de documents. Sur un serveur
   web, la hi&eacute;rarchie est fournie par le syst&egrave;me de fichiers, mais
   Hyperwave dispose de sa propre hi&eacute;rarchie et les noms de fichiers ne
   refl&egrave;tent pas la position d'un objet dans cette hi&eacute;rarchie.
   Ainsi, la cr&eacute;ation de liens requiert en premier lieu
   la construction de la hi&eacute;rarchie et de l'espace des noms dans
   une hi&eacute;rarchie web et un espace de nom web. La diff&eacute;rence
   fondamentale entre Hyperwave et le web est qu'il y a une distinction claire
   en les noms et la hi&eacute;rarchie dans Hyperwave. Le nom ne contient aucune
   information &agrave; propos de la position de l'objet dans la hi&eacute;rarchie.
   Sur le web, le nom contient les informations de localisation dans la
   hi&eacute;rarchie. Cela conduit &agrave; deux m&eacute;thodes de d'acc&egrave;s :
   soit la hi&eacute;rarchie Hyperwave et le nom de l'objet sont inscrits dans
   l'URL. Pour simplifier les choses, une deuxi&egrave;me approche est
   pratiqu&eacute;e. L'objet Hyperwave de nom 'mon_objet' correspond &agrave;
   l'URL 'http://hote/mon_objet', peu importe alors o&ugrave; il est rang&eacute;
   dans la hi&eacute;rarchie. Un objet dont le nom est 'parent/mon_objet' peut
   &ecirc;tre le fils de l'objet 'mon_objet' dans la hi&eacute;rarchie Hyperwave,
   bien que ce soit le contraire en convention web, et cela risque de perturber
   l'utilisateur.
  </para>
  <para>
   Ayant pris cette d&eacute;cision, un deuxi&egrave;me probl&egrave;me surgit :
   comment faire l'interface avec PHP ? L'URL http://hote/mon_objet n'appellera
   aucun script PHP &agrave; moins que vous ne demandiez &agrave; votre serveur
   web de le remplacer par autre chose, comme par exemple :
   'http://host/php3_script/mon_objet' et le script 'php3_script' utilise la
   variable $PATH_INFO pour rechercher l'objet 'mon_objet' sur le serveur Hyperwave.
   Il y a juste un petit inconv&eacute;nient , qui peut facilement &ecirc;tre
   corrig&eacute;. R&eacute;&eacute;crire une URL ne vous permettra aucun
   acc&egrave;s aux autres documents du serveur web. Un script de recherche
   dans le serveur Hyperwave serait impossible. Il vous faudra donc au moins
   une autre r&egrave;gle pour exclure certaines URL, comme par exemple celles
   qui commencent par http://host/Hyperwave. Voici, de mani&egrave;re simple,
   la mani&egrave;re de partager un espace de nom entre un serveur web et un
   serveur Hyperwave serveur.
  </para>
  <para>
   Bas&eacute; sur le m&eacute;canisme pr&eacute;c&eacute;dent, on trouve
   l'insertion dans les documents.
  </para>
  <para>
   Il est plus compliqu&eacute; d'avoir PHP ne fonctionne pas comme un module
   de serveur, ou un script CGI, mais comme une application ind&eacute;pendante.
   Dans ce cas, il est utile d'inscrire la hi&eacute;rarchie et le nom de fichier
   Hyperwave dans le syst&egrave;me de fichier. Mais comme cela risque d'entrer
   en conflit avec le s&eacute;parateur de dossier ('/'), il faut le remplacer
   par un autre caract&egrave;re,. '_'.
  </para>
  <para>
   Le protocole r&eacute;seau pour communiquer avec un serveur Hyperwave est
   appel&eacute; <ulink url="&spec.hyperwave;">HG-CSP</ulink>
   (Hyper-G Client/Server Protocol). Il est bas&eacute; sur des messages qui
   initie des actions, comme par exemple, lire l'en-t&ecirc;te de fichier. Dans
   les premi&egrave;res versions de Hyperwave Server deux clients natifs
   (Harmony, Amadeus) &eacute;taient fournis pour permettre la communication
   avec le serveur. Ils ont disparu lors de la commercialisation de Hyperwave.
   En tant qu'ersatz, un client appel&eacute; wavemaster est  d&eacute;sormais
   fourni. wavemaster est un esp&egrave;ce ce convertisseur de protocole de
   <abbrev>HTTP</abbrev> en <abbrev>HG-CSP</abbrev>. L'id&eacute;e est de faire
   toute l'administration de la base et la visualisation des documents par une
   interface web. Le wavemaster impl&eacute;mente un jeu d'emplacement pour
   certaines actions de personnalisation de l'interface. Ce jeu est appel&eacute;
   <abbrev>PLACE</abbrev> language. <abbrev>PLACE</abbrev> p&ecirc;che encore par
   le manque de nombreuses fonctions de programmation, et le manque
   d'&eacute;volutivit&eacute;. Cela a conduit &agrave; l'utilisation de
   JavaScript ce qui ne rend pas la vie facile.
  </para>
  <para>
   Que PHP supporte Hyperwave permet de combler ces manques. PHP impl&eacute;mente
   tous les messages d&eacute;finis par <abbrev>HG-CSP</abbrev> mais fourni
   d'autres commandes puissantes, comme par exemple, celle de lire des documents
   complets.
  </para>
  <para>
   Hyperwave dispose de sa propre terminologie pour localiser certaines
   informations. Cette terminologie a &eacute;t&eacute; largement &eacute;tendue.
   Presque toutes les fonctions utilisent l'un des types de donn&eacute;es
   suivants :
   <itemizedlist>
    <listitem>
     <simpara>
      object ID: un entier, unique pour chaque objet sur le serveur Hyperwave. C'est
      aussi un des attributs de l'enregistrement de l'objet (ObjectID).Les object ids
      sont souvent utilis&eacute;es comme param&egrave;tre d'entr&eacute;e pour
      sp&eacute;cifier un objet.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      object record: Une cha&icirc;ne contenant des paires cl&eacute;=valeur. Les
      paires sont s&eacute;par&eacute;es par un retour &agrave; la ligne. Un
      enregistrement d'objet peut facilement &ecirc;tre converti en tableau, avec
      la fonction <function>hw_objrec2array</function>. De nombreuses fonctions
      retournent un object records. Ces fonctions ont leur nom qui finit par obj.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      object array: Un tableau associatif qui contient tous les attributs d'un objet.
      La cl&eacute; est l'attribut. Si un attribut appara&icirc;t plusieurs fois, il
      sera repr&eacute;sent&eacute; sous la forme d'un tableau associatif ou
      index&eacute;. Les attributs qui d&eacute;pendent des langues (comme title,
      keyword ou description) seront repr&eacute;sent&eacute;s sous la forme d'un
      tableau associatif, dont les cl&eacute;s seront les abr&eacute;viations de
      langues. Tous les autres attributs &agrave; valeur multiple prendront la
      forme d'un tableau index&eacute;.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      hw_document: Ce type est un nouveau type de donn&eacute;es, qui contient le
      document lui-m&ecirc;me, comme par exemple HTML, PDF etc. Il est
      optimis&eacute; pour les documents HTML mais peut s'utiliser avec n'importe
      quel format.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   De nombreuses fonctions qui retournent un tableau d'enregistrements, retournent
   aussi un tableau associ&eacute;, avec des informations statistiques. Ce tableau
   est le dernier &eacute;l&eacute;ment du tableau d'enregistrements. Les
   statistiques contiennent les entr&eacute;es suivantes :
   <variablelist>
   <varlistentry>
   <term>Hidden</term>
   <listitem>
    <simpara>
     Nombre d'objets dont l'attribut PresentationHints est Hidden.
    </simpara>
   </listitem>
   </varlistentry>
   <varlistentry>
   <term>CollectionHead</term>
   <listitem>
    <simpara>
     Nombre d'objet dont l'attribut PresentationHints est CollectionHead.
    </simpara>
   </listitem>
   </varlistentry>
   <varlistentry>
   <term>FullCollectionHead</term>
   <listitem>
    <simpara>
     Nombre d'objet dont l'attribut PresentationHints est FullCollectionHead.
    </simpara>
   </listitem>
   </varlistentry>
   <varlistentry>
   <term>CollectionHeadNr</term>
   <listitem>
    <simpara>
     Index du premier objet du tableau d'enregistrement avec l'attribut
     PresentationHints &agrave; CollectionHead.
    </simpara></listitem>
    </varlistentry>
    <varlistentry>
    <term>FullCollectionHeadNr</term>
    <listitem>
     <simpara>
      Index du premier objet du tableau d'enregistrement avec l'attribut
      PresentationHints est FullCollectionHead.
     </simpara>
    </listitem>
    </varlistentry>
    <varlistentry>
    <term>Total</term>
    <listitem>
     <simpara>
      Total: Nombre d'enregistrements.
     </simpara>
    </listitem>
    </varlistentry>
    </variablelist>
   </para>
   </section>
   <section id="hw-apache">
   <title>Int&eacute;gration avec Apache</title>
   <para>
    L'extension Hyperwave est utilis&eacute;e de mani&egrave;re optimale lorsque
    PHP est compil&eacute; comme module Apache. Dans ce cas, le serveur Hyperwave
    sous jacent peut &ecirc;tre cach&eacute; quasiment totalement aux utilisateurs,
    si Apache utilise son moteur d'&eacute;criture. Les explications suivantes vous
    &eacute;claireront :
   </para>
   <para>
    Etant donn&eacute; que PHP avec l'extension Hyperwave et Apache tend &agrave;
    remplacer la solution native bas&eacute;e sur Wavemaster, je vais supposer que
    le serveur Apache servira seulement d'interface Hyperwave. Ce n'est pas
    n&eacute;cessaire, mais cela simplifie grandment la configuration. Le
    concept est tr&egrave;s simple. Premi&egrave;rement, vous avez besoin d'un
    script PHP qui &eacute;value la variable <envar>PATH_INFO</envar> et
    consid&egrave;re que cette valeur est un objet Hyperwave. Appelons ce script
    'Hyperwave'. L'URL
    <systemitem role="url">http://votre.hote/Hyperwave/nom_objet</systemitem>
    retourne alors l'objet Hyperwave dont le nom est 'nom_objet'. Le script doit
    alors r&eacute;agir suivant le type de l'objet. Si c'est un groupe, il devra
    probablement retourner une liste de fils. Si c'est un document, il pourra
    retourner son type MIME et son contenu. Une am&eacute;lioration peut
    &ecirc;tre obtenue en utilisant le moteur de r&eacute;&eacute;criture d'Apache.
    D'un point de vue utilisateur, il est plus direct si l'URL
    <systemitem role="url">http://votre.hote/nom_objet</systemitem>
    retourne l'objet. La r&egrave;gle de r&eacute;&eacute;criture est simple :
    <informalexample>
     <programlisting role="apache-conf">
RewriteRule ^/(.*) /usr/local/apache/htdocs/HyperWave/$1 [L]
     </programlisting>
    </informalexample>
    Maintenant toutes les URL pointent sur un objet Hyperwave. Cela conduit &agrave;
    un probl&egrave;me simple. Il n'y a pas d'autre fa&ccedil;on d'ex&eacute;cuter,
    c'est-&agrave;-dire rechercher, un autre script que ce script 'Hyperwave'.
    Cela pourra &ecirc;tre corrig&eacute; avec une autre r&egrave;gle telle que:
    <informalexample>
     <programlisting role="apache-conf">
RewriteRule ^/hw/(.*) /usr/local/apache/htdocs/hw/$1 [L]
     </programlisting>
    </informalexample>
    Le dossier <filename class="directory">/usr/local/apache/htdocs/hw</filename>
    sera ainsi r&eacute;serv&eacute; pour d'autres scripts et fichiers. Assurez-vous que
    cette r&egrave;gle est &eacute;valu&eacute;e avant la premi&egrave;re
    r&egrave;gle que nous avons d&eacute;finie. Il y a juste un l&eacute;ger
    inconv&eacute;nient : tous les objets Hyperwave qui commencent par 'hw/' seront
    cach&eacute;s. Alors, assurez-vous que vous n'utilisez pas de tels noms. Si vous
    avez besoin d'autres dossiers, par exemple, un dossier d'images, ajoutez
    simplement d'autres r&egrave;gles. N'oubliez pas de lancer le moteur de
    r&eacute;&eacute;criture avec
    <informalexample>
     <programlisting role="apache-conf">
RewriteEngine on
     </programlisting>
    </informalexample>
    Mon exp&eacute;rience m'a montr&eacute; que vous aurez besoin
    des scripts suivants :
    <itemizedlist>
     <listitem>
      <simpara>
       Retourne l'objet lui-m&ecirc;me
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Pour autoriser la recherche
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       S'identifier
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Choisir une configuration
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Un script pour chaque fonction suppl&eacute;mentaire, comme afficher
       un objet, afficher des informations sur les utilisateurs, afficher
       le statut du serveur, etc...
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   </section>
   <section id="hw-todo">
   <title>A faire</title>
   <para>
    Il reste encore beaucoup &agrave; faire :
    <itemizedlist>
     <listitem>
      <simpara>
       La fonction hw_InsertDocument doit &ecirc;tre s&eacute;par&eacute;e
       en deux : hw_insertobject() et hw_putdocument().
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Les noms de nombreuses fonctions ne sont pas encore fix&eacute;s.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       La majorit&eacute; des fonctions requi&egrave;rent la connexion courante
       comme premier param&egrave;tre. Cela conduit &agrave; beaucoup de frappe
       clavier, m&ecirc;me s'il n'y a souvent qu'une seule connexion en jeu.
       Une connexion par d&eacute;faut am&eacute;liorerait ceci.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   </section>
  </partintro>
&reference.hw.functions;

 </reference>
 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 -->

