<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->

<!-- splitted from ./fr/functions/hw.xml, last change in rev 1.11 -->
<!-- last change to 'hw-modifyobject' in en/ tree in rev 1.2 -->
  <refentry id="function.hw-modifyobject">
   <refnamediv>
    <refname>hw_modifyobject</refname>
    <refpurpose>Modifie les attributs d'objet record</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>hw_modifyobject</methodname>
      <methodparam><type>int</type><parameter>connection</parameter></methodparam>
      <methodparam><type>int</type><parameter>object_to_change</parameter></methodparam>
      <methodparam><type>array</type><parameter>remove</parameter></methodparam>
      <methodparam><type>array</type><parameter>add</parameter></methodparam>
      <methodparam><type>int</type><parameter>mode</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>hw_modifyobject</function> permet d'effacer, d'ajouter ou de
     modifier les attributs d'un objet. L'objet est reperé par son
     identifiant  <parameter>object_to_change</parameter>. Le premier tableau,
     <parameter>remove</parameter>, est la liste des attributs à effacer.
     Le deuxième tableau <parameter>add</parameter> est la liste des
     attributs à ajouter. Afin de modifier un attribut, il vous faudra
     dont l'effacer, puis l'ajouter à nouveau.
     <function>hw_modifyobject</function> effacera toujours les attributs avant
     de les ajouter, à moins que la valeur de l'attribut à effacer
     ne soit pas une chaîne, ou un tableau.
    </para>
    <para>
     Le dernier paramètre détermine si la modification est
     récursive ou pas. 1 signifie que la modification est récursive.
     Si un objet ne peut pas être modifié, il sera ignoré.
     <function>hw_error</function> n'indiquera alors pas toujours d'erreur,
     même si certains objets n'ont pas pu être modifié.
    </para>
    <para>
     Les clés des deux tableaux sont les noms des attributs. La valeur
     de chaque élément peut être un tableau, ou une chaîne
     ou n'importe quoi d'autre. Dans le cas du tableau, la valeur de l'attribut
     est construite en séparant chaque élément par un
     point virgule. Dans le cas de la chaîne, elle sert directement de
     valeur. Une chaîne vide provoquera un effacement de l'attribut.
     Dans le cas où la valeur n'est ni un tableau, ni une chaîne,
     aucune opération ne sera effectuée. Cela est nécessaire
     si vous voulez ajouter un attribut complètement une nouvelle valeur pour
     un attribut existant. Si le tableau d'effacement contenait une chaîne
     vide comme attribut, le serveur tenterait d'effacer l'attribut, ce qui
     échouerai de toute manière, car cet attribut n'existe pas.
     L'ajout de cet attribut échouerai aussi. Affecter la valeur de 0
     à cet attribut ne l'effacerait pas, et l'ajout fonctionnerait.
    </para>
    <para>
     Si vous voulez changer l'attribut 'Nom' de valeur courante 'livres' en
     'articles' vous devrez faire deux tableaux, et appeler
     <function>hw_modifyobject</function>.
     <example>
      <title>Modification d'un attribut</title>
      <programlisting role="php">
<![CDATA[
<?php
       // $connect est une connexion valide
       // $objid est l'identifiant de l'objet
       $remarr = array("Name" => "books");
       $addarr = array("Name" => "articles");
       $hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
      </programlisting>
     </example>
     Afin d'effacer/ajouter une paire nom=valeur aux attributs d'un objet,
     utilisez simplement les tableaux d'effacement et d'ajout, et laissez
     le dernier/troisième paramètre vide. Si l'attribut est
     le premier de ce nom à ajouter, donnez une valeur entière
     à cet élément.
     <example>
      <title>Ajouter un nouvel attribut</title>
      <programlisting role="php">
<![CDATA[
<?php
 // $connect st une connexion Hyperwave valide
 // $objid est l'identifiant de l'objet à modifier
 $remarr = array("Name" => 0);
 $addarr = array("Name" => "articles");
 $hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <note>
      <simpara>
       Les attributs multilingues, (tels que 'Title'), peuvent être
       modifiés de deux manières : soit en fournissant la
       valeur de ces attributs de manière native (langue :valeur),
       soit en fournissant un tableau avec les éléments de
       chaque langue, comme décrit ci-dessus. L'exemple deviendrai
       alors :
      </simpara>
     </note>
     <example>
      <title>Modifier l'attribut de Titre (Title)</title>
      <programlisting role="php">
<![CDATA[
<?php
  $remarr = array("Title" => "en:Books");
  $addarr = array("Title" => "en:Articles");
  $hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
      </programlisting>
     </example>
     ou
     <example>
      <title>Modifier l'attribut Title</title>
      <programlisting role="php">
<![CDATA[
<?php
  $remarr = array("Title" => array("en" => "Books"));
  $addarr = array("Title" => array("en" => "Articles", "ge"=>"Artikel"));
  $hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
      </programlisting>
     </example>
     Pour supprimer l'entrée française 'Livres' et ajouter
     l'entrée 'Articles' et l'entrée allemande 'Artikel'.
     <example>
      <title>Suppression d'un attribut</title>
      <programlisting role="php">
<![CDATA[
<?php
  $remarr = array("Title" => "");
  $addarr = array("Title" => "en:Articles");
  $hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
      </programlisting>
     </example>
     <note>
      <simpara>
       Cet exemple va effacer tous les attributs avec le nom 'Title' et ajouter
       un nouvel attribut 'Title'. Cela peut être pratique pour effacer
       des attributs récursivement.
      </simpara>
     </note>
     <note>
      <simpara>
       Si vous devez effacer tous les attributs avec un certain nom, vous devez
       passer une chaîne vide comme valeur.
      </simpara>
     </note>
    <note>
     <simpara>
      Seuls les attributs 'Title', 'Description' et 'Keyword' gère
      correctement le préfixe de langue. Pour les autres attributs qui
      ne portent pas de préfixe de langage, le préfixe 'xx' sera
      assigné.
    </simpara>
   </note>
   <note>
    <simpara>
     L'attribut 'Name' est un peu particulier. Dans certains cas, il ne peut pas
     être complétement effacé. Vous aurez alors le message
     'Change of base attribute' (l'apparition de cette erreur n'est pas
     très claire). Ainsi, vous aurez à ajouter une nouvelle
     entrée pour Name puis, effacer l'ancien.
    </simpara>
   </note>
   <note>
    <simpara>
     Il ne faut pas encadrer cette fonction par des appels à
     <function>hw_getandlock</function> et <function>hw_unlock</function>.
     <function>hw_modifyobject</function> le fait de manière interne.
     </simpara>
    </note>
   </para>
   <para>
     Retourne &true; si aucune erreur ne survient, et &false; sinon.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
