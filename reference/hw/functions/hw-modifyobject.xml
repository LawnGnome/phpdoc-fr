<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/hw.xml, last change in rev 1.11 -->
<!-- last change to 'hw-modifyobject' in en/ tree in rev 1.2 -->
  <refentry id="function.hw-modifyobject">
   <refnamediv>
    <refname>hw_modifyobject</refname>
    <refpurpose>Modifie les attributs d'objet record</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>hw_modifyobject</methodname>
      <methodparam><type>int</type><parameter>connection</parameter></methodparam>
      <methodparam><type>int</type><parameter>object_to_change</parameter></methodparam>
      <methodparam><type>array</type><parameter>remove</parameter></methodparam>
      <methodparam><type>array</type><parameter>add</parameter></methodparam>
      <methodparam><type>int</type><parameter>mode</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>hw_modifyobject</function> permet d'effacer, d'ajouter ou de
     modifier les attributs d'un objet. L'objet est reper&eacute; par son
     identifiant  <parameter>object_to_change</parameter>. Le premier tableau,
     <parameter>remove</parameter>, est la liste des attributs &agrave; effacer.
     Le deuxi&egrave;me tableau <parameter>add</parameter> est la liste des
     attributs &agrave; ajouter. Afin de modifier un attribut, il vous faudra
     dont l'effacer, puis l'ajouter &agrave; nouveau.
     <function>hw_modifyobject</function> effacera toujours les attributs avant
     de les ajouter, &agrave; moins que la valeur de l'attribut &agrave; effacer
     ne soit pas une cha&icirc;ne, ou un tableau.
    </para>
    <para>
     Le dernier param&egrave;tre d&eacute;termine si la modification est
     r&eacute;cursive ou pas. 1 signifie que la modification est r&eacute;cursive.
     Si un objet ne peut pas &ecirc;tre modifi&eacute;, il sera ignor&eacute;.
     <function>hw_error</function> n'indiquera alors pas toujours d'erreur,
     m&ecirc;me si certains objets n'ont pas pu &ecirc;tre modifi&eacute;.
    </para>
    <para>
     Les cl&eacute;s des deux tableaux sont les noms des attributs. La valeur
     de chaque &eacute;l&eacute;ment peut &ecirc;tre un tableau, ou une cha&icirc;ne
     ou n'importe quoi d'autre. Dans le cas du tableau, la valeur de l'attribut
     est construite en s&eacute;parant chaque &eacute;l&eacute;ment par un
     point virgule. Dans le cas de la cha&icirc;ne, elle sert directement de
     valeur. Une cha&icirc;ne vide provoquera un effacement de l'attribut.
     Dans le cas o&ugrave; la valeur n'est ni un tableau, ni une cha&icirc;ne,
     aucune op&eacute;ration ne sera effectu&eacute;e. Cela est n&eacute;cessaire
     si vous voulez ajouter un attribut compl&egrave;tement une nouvelle valeur pour
     un attribut existant. Si le tableau d'effacement contenait une cha&icirc;ne
     vide comme attribut, le serveur tenterait d'effacer l'attribut, ce qui
     &eacute;chouerai de toute mani&egrave;re, car cet attribut n'existe pas.
     L'ajout de cet attribut &eacute;chouerai aussi. Affecter la valeur de 0
     &agrave; cet attribut ne l'effacerait pas, et l'ajout fonctionnerait.
    </para>
    <para>
     Si vous voulez changer l'attribut 'Nom' de valeur courante 'livres' en
     'articles' vous devrez faire deux tableaux, et appeler
     <function>hw_modifyobject</function>.
     <example>
      <title>Modification d'un attribut</title>
      <programlisting role="php">
<![CDATA[
<?php
       // $connect est une connexion valide
       // $objid est l'identifiant de l'objet
       $remarr = array("Name" => "books");
       $addarr = array("Name" => "articles");
       $hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
      </programlisting>
     </example>
     Afin d'effacer/ajouter une paire nom=valeur aux attributs d'un objet,
     utilisez simplement les tableaux d'effacement et d'ajout, et laissez
     le dernier/troisi&egrave;me param&egrave;tre vide. Si l'attribut est
     le premier de ce nom &agrave; ajouter, donnez une valeur enti&egrave;re
     &agrave; cet &eacute;l&eacute;ment.
     <example>
      <title>Ajouter un nouvel attribut</title>
      <programlisting role="php">
<![CDATA[
<?php
 // $connect st une connexion Hyperwave valide
 // $objid est l'identifiant de l'objet &agrave; modifier
 $remarr = array("Name" => 0);
 $addarr = array("Name" => "articles");
 $hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <note>
      <simpara>
       Les attributs multilingues, (tels que 'Title'), peuvent &ecirc;tre
       modifi&eacute;s de deux mani&egrave;res : soit en fournissant la
       valeur de ces attributs de mani&egrave;re native (langue :valeur),
       soit en fournissant un tableau avec les &eacute;l&eacute;ments de
       chaque langue, comme d&eacute;crit ci-dessus. L'exemple deviendrai
       alors :
      </simpara>
     </note>
     <example>
      <title>Modifier l'attribut de Titre (Title)</title>
      <programlisting role="php">
<![CDATA[
<?php
  $remarr = array("Title" => "en:Books");
  $addarr = array("Title" => "en:Articles");
  $hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
      </programlisting>
     </example>
     ou
     <example>
      <title>Modifier l'attribut Title</title>
      <programlisting role="php">
<![CDATA[
<?php
  $remarr = array("Title" => array("en" => "Books"));
  $addarr = array("Title" => array("en" => "Articles", "ge"=>"Artikel"));
  $hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
      </programlisting>
     </example>
     Pour supprimer l'entr&eacute;e fran&ccedil;aise 'Livres' et ajouter
     l'entr&eacute;e 'Articles' et l'entr&eacute;e allemande 'Artikel'.
     <example>
      <title>Suppression d'un attribut</title>
      <programlisting role="php">
<![CDATA[
<?php
  $remarr = array("Title" => "");
  $addarr = array("Title" => "en:Articles");
  $hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
      </programlisting>
     </example>
     <note>
      <simpara>
       Cet exemple va effacer tous les attributs avec le nom 'Title' et ajouter
       un nouvel attribut 'Title'. Cela peut &ecirc;tre pratique pour effacer
       des attributs r&eacute;cursivement.
      </simpara>
     </note>
     <note>
      <simpara>
       Si vous devez effacer tous les attributs avec un certain nom, vous devez
       passer une cha&icirc;ne vide comme valeur.
      </simpara>
     </note>
    <note>
     <simpara>
      Seuls les attributs 'Title', 'Description' et 'Keyword' g&egrave;re
      correctement le pr&eacute;fixe de langue. Pour les autres attributs qui
      ne portent pas de pr&eacute;fixe de langage, le pr&eacute;fixe 'xx' sera
      assign&eacute;.
    </simpara>
   </note>
   <note>
    <simpara>
     L'attribut 'Name' est un peu particulier. Dans certains cas, il ne peut pas
     &ecirc;tre compl&eacute;tement effac&eacute;. Vous aurez alors le message
     'Change of base attribute' (l'apparition de cette erreur n'est pas
     tr&egrave;s claire). Ainsi, vous aurez &agrave; ajouter une nouvelle
     entr&eacute;e pour Name puis, effacer l'ancien.
    </simpara>
   </note>
   <note>
    <simpara>
     Il ne faut pas encadrer cette fonction par des appels &agrave;
     <function>hw_getandlock</function> et <function>hw_unlock</function>.
     <function>hw_modifyobject</function> le fait de mani&egrave;re interne.
     </simpara>
    </note>
   </para>
   <para>
     Retourne &true; si aucune erreur ne survient, et &false; sinon.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
