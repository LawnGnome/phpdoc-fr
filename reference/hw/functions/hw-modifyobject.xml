<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.hw-modifyobject" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>hw_Modifyobject</refname>
  <refpurpose>Modifie les attributs d'object record</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>hw_modifyobject</methodname>
   <methodparam><type>int</type><parameter>connection</parameter></methodparam>
   <methodparam><type>int</type><parameter>object_to_change</parameter></methodparam>
   <methodparam><type>array</type><parameter>remove</parameter></methodparam>
   <methodparam><type>array</type><parameter>add</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   Permet d'effacer, d'ajouter ou de
   modifier les attributs d'un objet. L'objet est repéré par son
   identifiant  <parameter>object_to_change</parameter>. Le premier tableau,
   <parameter>remove</parameter>, est la liste des attributs à effacer.
   Le deuxième tableau, <parameter>add</parameter>, est celle des
   attributs à ajouter. Afin de modifier un attribut, il vous faudra
   dont l'effacer, puis l'ajouter à nouveau.
   <function>hw_modifyobject</function> effacera toujours les attributs avant
   de les ajouter, à moins que la valeur de l'attribut à effacer
   ne soit pas une chaîne, ou un tableau.
  </para>
  <para>
   Les clés des deux tableaux sont les noms des attributs. La valeur
   de chaque élément peut être un tableau, une chaîne
   ou n'importe quoi d'autre. Dans le cas du tableau, la valeur de l'attribut
   est construite en séparant chaque élément par un
   point virgule. Dans le cas de la chaîne, elle sert directement de
   valeur. Une chaîne vide provoquera un effacement de l'attribut.
   Si la valeur n'est ni un tableau, ni une chaîne,
   aucune opération ne sera effectuée. Cela est nécessaire
   si vous voulez ajouter un attribut complètement nouveau,
   pas seulement une nouvelle valeur pour
   un attribut existant. Si le tableau d'effacement contenait une chaîne
   vide comme attribut, le serveur tenterait d'effacer l'attribut, ce qui
   échouerait de toute manière, car cet attribut n'existe pas.
   L'ajout de cet attribut échouerait aussi. Affecter la valeur de 0
   à cet attribut ne l'effacerait pas, et l'ajout fonctionnerait.
  </para>
  <para>
   Si vous voulez changer l'attribut <literal>"Nom"</literal> de valeur courante <literal>"livres"</literal> en
   <literal>"articles"</literal> vous devrez faire deux tableaux, et appeler
   <function>hw_modifyobject</function>.
   <example>
    <title>Modification d'un attribut</title>
    <programlisting role="php">
<![CDATA[
<?php
// $connect est une connexion valide
// $objid est l'identifiant de l'objet
$remarr = array("Name" => "books");
$addarr = array("Name" => "articles");
$hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
    </programlisting>
   </example>
   Afin d'effacer/ajouter une paire nom=valeur aux attributs d'un objet,
   utilisez simplement les tableaux d'effacement et d'ajout, et laissez
   le dernier/troisième paramètre vide. Si l'attribut est
   le premier de ce nom à ajouter, donnez une valeur entière
   à cet élément.
   <example>
    <title>Ajouter un nouvel attribut</title>
    <programlisting role="php">
<![CDATA[
<?php
// $connect est une connexion Hyperwave valide
// $objid est l'identifiant de l'objet à modifier
$remarr = array("Name" => 0);
$addarr = array("Name" => "articles");
$hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <note>
    <simpara>
     Les attributs multilingues, tels que <literal>"Title"</literal>, peuvent être
     modifiés de deux façons : soit en fournissant la
     valeur de ces attributs de manière native (langue :valeur),
     soit en fournissant un tableau avec les éléments de
     chaque langue, comme décrit ci-dessus. L'exemple deviendrait
     alors :
    </simpara>
   </note>
   <example>
    <title>Modifier l'attribut de Titre</title>
    <programlisting role="php">
<![CDATA[
<?php
$remarr = array("Title" => "en:Books");
$addarr = array("Title" => "en:Articles");
$hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
    </programlisting>
   </example>
    ou
   <example>
    <title>Modifier l'attribut Title</title>
    <programlisting role="php">
<![CDATA[
<?php
$remarr = array("Title" => array("en" => "Books"));
$addarr = array("Title" => array("en" => "Articles", "ge"=>"Artikel"));
$hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
    </programlisting>
   </example>
   Ceci supprime l'entrée anglaise <literal>"Books"</literal> et ajoute
   l'entrée <literal>"Articles"</literal> et l'entrée allemande <literal>"Artikel"</literal>.
   <example>
    <title>Suppression d'un attribut</title>
    <programlisting role="php">
<![CDATA[
<?php
$remarr = array("Title" => "");
$addarr = array("Title" => "en:Articles");
$hw_modifyobject($connect, $objid, $remarr, $addarr);
?>
]]>
    </programlisting>
   </example>
   <note>
    <simpara>
     Cet exemple va effacer tous les attributs avec le nom <literal>"Title"</literal> et ajouter
     un nouvel attribut <literal>"Title"</literal>. Cela peut être pratique pour effacer
     des attributs récursivement.
    </simpara>
   </note>
   <note>
    <simpara>
     Si vous devez effacer tous les attributs avec un certain nom, vous devez
     passer une chaîne vide comme valeur.
    </simpara>
   </note>
   <note>
    <simpara>
     Seuls les attributs <literal>"Title"</literal>, <literal>"Description"</literal> et <literal>"Keyword"</literal> gèrent
     correctement le préfixe de langue. Pour les autres attributs qui
     ne portent pas de préfixe de langage, le préfixe <literal>"xx"</literal> sera
     assigné.
    </simpara>
   </note>
   <note>
    <simpara>
     L'attribut <literal>"Name"</literal> est un peu particulier. Dans certains cas, il ne peut pas
     être complètement effacé. Vous aurez alors le message
     <literal>"Change of base attribute"</literal> (l'apparition de cette erreur n'est pas
     très claire). Ainsi, vous aurez à ajouter une nouvelle
     entrée pour <literal>"Name"</literal> puis, effacer l'ancien.
    </simpara>
   </note>
   <note>
    <simpara>
     Il ne faut pas encadrer cette fonction par des appels à
     <function>hw_getandlock</function> et <function>hw_unlock</function>.
     <function>hw_modifyobject</function> le fait de manière interne.
    </simpara>
   </note>
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       L'identifiant de connexion.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>object_to_change</parameter></term>
     <listitem>
      <para>
       L'objet à changer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>remove</parameter></term>
     <listitem>
      <para>
       Un tableau d'attributs à effacer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>add</parameter></term>
     <listitem>
      <para>
       Un tableau d'attributs à ajouter.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Le dernier paramètre détermine si la modification est
       récursive ou pas. 1 signifie que la modification est récursive.
       Si un objet ne peut pas être modifié, il sera ignoré.
       <function>hw_error</function> n'indiquera alors pas toujours d'erreur,
       même si certains objets n'ont pas pu être modifiés.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->