<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->

<!-- splitted from ./fr/functions/regex.xml, last change in rev 1.11 -->
<!-- last change to 'ereg-replace' in en/ tree in rev 1.2 -->
 <refentry id="function.ereg-replace">
  <refnamediv>
   <refname>ereg_replace</refname>
   <refpurpose>Remplacement par expression régulière</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>ereg_replace</methodname>
     <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
     <methodparam><type>string</type><parameter>replacement</parameter></methodparam>
     <methodparam><type>string</type><parameter>string</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>ereg_replace</function> effectue une recherche par expression
    régulière dans la chaîne
    <parameter>string</parameter> en recherchant les occurrences de
    <parameter>pattern</parameter>, puis les remplace par la chaîne
    <parameter>replacement</parameter>.
   </para>
   <para>
    La chaîne modifiée est retournée. (Ce qui
    signifie que la chaîne originale sera retournée si
    aucune occurrence n'est trouvée).
   </para>
   <para>
    Si <parameter>pattern</parameter> contient des parenthèses
    capturantes, <parameter>replacement</parameter> pourra contenir des
    séquences de la forme <literal>\\<replaceable>digit</replaceable></literal>,
    qui seront remplacées par le texte capturé par la n-ième
    parenthèse capturante. <literal>\\0</literal> correspond
    à la chaîne originale complète. De 0 à
    9 parenthèses capturantes peuvent être utilisées.
    Les parenthèses peuvent être imbriquées, et leur
    numéro d'ordre est défini par leur parenthèse
    ouvrante.
   </para>
   <para>
    Si aucune occurrence n'est trouvée, la chaîne
    <parameter>string</parameter> sera retournée intacte.
   </para>
    <para>
     Par exemple, le code suivante affiche "Ceci est un test"
     trois fois : 
     <example>
      <title>Exemple avec <function>ereg_replace</function></title>
      <programlisting>
<![CDATA[
<?php
  $string = "Ceci est un test";
  echo ereg_replace (" fut", " est", $string);
  echo ereg_replace ("( )fut", "\\1est", $string);
  echo ereg_replace ("(( )fut)", "\\2est", $string);
?>
]]>
      </programlisting>
     </example>
    </para>
   <para>
    Par exemple, le code suivant affiche "Ceci etait un test" trois fois :
    <example>
     <title>Exemple avec <function>ereg_replace</function></title>
     <programlisting role="php">
<![CDATA[
<?php
/* Ceci ne fonctionne pas comme attendu */
$num = 4;
$string = "Cette chaîne a quatre mots.";
$string = ereg_replace('quatre', $num, $string);
echo $string;   // Cette chaîne a  mots.

/* This will work. */
$num = '4';
$string = "Cette chaîne a quatre mots.";
$string = ereg_replace('quatre', $num, $string);
echo $string;   // Cette chaîne a 4 mots.
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Notez bien que si vous utilisez une valeur de type entier
    dans le paramètre de remplacement <parameter>replacement</parameter>,
    vous risquez de ne pas obtenir le résultat escompté. Tout cela
    parce que <function>ereg_replace</function> va interpréter le nombre
    comme la valeur ordinale d'un caractère, et l'utiliser. Par exemple :
    <example>
     <title>Exemple avec <function>ereg_replace</function></title>
     <programlisting role="php">
<![CDATA[
<?php
/* Cet exemple ne fonctionne pas comme voulu. */
  $num = 4;
  $string = "Cette chaîne a quatre mots.";
  $string = ereg_replace('quatre', $num, $string);
  echo $string;   /* Affichage : 'Cette chaîne a  mots.' */

/* Ceci est bon. */
  $num = '4';
  $string = "Cette chaîne a quatre mots.";
  $string = ereg_replace('quatre', $num, $string);
  echo $string;   /* Affichage : 'Cette chaîne a 4 mots.' */
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Voir aussi 
    <function>ereg</function>, 
    <function>eregi</function>,
    <function>eregi_replace</function>, 
    <function>str_replace</function> et
    <function>preg_match</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
