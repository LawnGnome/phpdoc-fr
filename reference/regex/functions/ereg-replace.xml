<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.6 Maintainer: yannick Status: ready -->
  <refentry id="function.ereg-replace">
   <refnamediv>
    <refname>ereg_replace</refname>
    <refpurpose>Remplacement par expression rationnelle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>ereg_replace</methodname>
     <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
     <methodparam><type>string</type><parameter>replacement</parameter></methodparam>
     <methodparam><type>string</type><parameter>string</parameter></methodparam>
    </methodsynopsis>
    <simpara>
     <function>ereg_replace</function> effectue une recherche par expression
     rationnelle dans la chaîne
     <parameter>string</parameter> en recherchant les occurrences de
     <parameter>pattern</parameter>, puis les remplace par la chaîne
     <parameter>replacement</parameter>.
    </simpara>
    <simpara>
     La chaîne modifiée est retournée. (Ce qui
     signifie que la chaîne originale sera retournée si
     aucune occurrence n'est trouvée).
    </simpara>
    <simpara>
     Si <parameter>pattern</parameter> contient des parenthèses
     capturantes, <parameter>replacement</parameter> pourra contenir des
     séquences de la forme <literal>\\<replaceable>digit</replaceable></literal>,
     qui seront remplacées par le texte capturé par la n-ième
     parenthèse capturante. <literal>\\0</literal> correspond
     à la chaîne originale complète. De 0 à
     9 parenthèses capturantes peuvent être utilisées.
     Les parenthèses peuvent être imbriquées, et leur
     numéro d'ordre est défini par leurs parenthèses
     ouvrantes.
    </simpara>
    <simpara>
     Si aucune occurrence n'est trouvée, la chaîne
     <parameter>string</parameter> sera retournée intacte.
    </simpara>
    <para>
     Par exemple, le code suivante affiche "Ceci est un test"
     trois fois : 
    </para>
    <para>
     <example>
      <title>Exemple avec <function>ereg_replace</function></title>
      <programlisting role="php">
<![CDATA[
<?php

$string = "Ceci est un test";
echo str_replace(" fut", " est", $string);
echo ereg_replace("( )fut", "\\1est", $string);
echo ereg_replace("(( )fut)", "\\2est", $string);

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Il est à noter que si vous utilisez une valeur entière avec 
     <parameter>replacement</parameter>, vous n'obtiendrez pas le résultat
     escompté, car <function>ereg_replace</function> interprètera le nombre
     comme la valeur ordinal d'un caractère et l'appliquera. Par exemple :
    </para>
    <para>
    <example>
     <title>Exemple avec <function>ereg_replace</function></title>
     <programlisting role="php">
<![CDATA[
<?php
/* Ceci ne fonctionne pas comme attendu */
$num = 4;
$string = "Cette chaîne a quatre mots.";
$string = ereg_replace('quatre', $num, $string);
echo $string;   // Cette chaîne a  mots.

/* This will work. */
$num = '4';
$string = "Cette chaîne a quatre mots.";
$string = ereg_replace('quatre', $num, $string);
echo $string;   // Cette chaîne a 4 mots.
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
     <example>
      <title>Remplacer les URLs par des liens cliquables</title>
      <programlisting role="php">
<![CDATA[
<?php
$text = ereg_replace("[[:alpha:]]+://[^<>[:space:]]+[[:alnum:]/]",
                     "<a href=\"\\0\">\\0</a>", $text);
?>
]]>
      </programlisting>
     </example>
    </para>
    <tip>
     <para>
      <function>preg_replace</function>, qui utilise la syntaxe des expressions
      rationnelles compatibles PERL, est une alternative plus rapide de 
      <function>ereg_replace</function>.
     </para>
    </tip>
   <para>
    Voir aussi 
    <function>ereg</function>, 
    <function>eregi</function>,
    <function>eregi_replace</function>, 
    <function>str_replace</function> et
    <function>preg_match</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
