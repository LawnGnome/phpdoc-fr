<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/regex.xml, last change in rev 1.11 -->
<!-- last change to 'ereg' in en/ tree in rev 1.2 -->
 <refentry id="function.ereg">
  <refnamediv>
   <refname>ereg</refname>
   <refpurpose>Expression r&eacute;guli&egrave;re standard.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>bool</type><methodname>ereg</methodname>
     <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
     <methodparam><type>string</type><parameter>string</parameter></methodparam>
     <methodparam choice="opt"><type>array</type><parameter>regs</parameter></methodparam>
    </methodsynopsis>
   <simpara>
    Recherche dans la cha&icirc;ne <parameter>string</parameter> les
    s&eacute;quences de caract&egrave;res qui correspondent au masque
    <parameter>pattern</parameter>.
   </simpara>
   <simpara>
    Si au moins une s&eacute;quence est trouv&eacute;e
    (&eacute;ventuellement dans les parenth&egrave;ses capturantes de
    <parameter>pattern</parameter>), et que la fonction est appel&eacute;e
    avec un troisi&egrave;me argument <parameter>regs</parameter>, les
    r&eacute;sultats seront enregistr&eacute;s dans
    <parameter>regs</parameter>. $regs[1] contiendra
    la premi&egrave;re parenth&egrave;se capturante (celle qui commence le
    plus t&ocirc;t), $regs[2] contiendra la deuxi&egrave;me
    parenth&egrave;se capturante (celle qui commence apr&egrave;s
    la premi&egrave;re), et ainsi de suite.
    $regs[0] contient une copie de la cha&icirc;ne.
   </simpara>
   <simpara>
    Si <function>ereg</function> trouve ses solutions pour les parenth&egrave;ses
    capturantes, <parameter>$regs</parameter> contiendra exactement 10 &eacute;l&eacute;ments,
    m&ecirc;me si il y avait plus ou moins de 10 parenth&egrave;ses capturantes
    qui &eacute;taient valides. Cela n'a aucun effet sur les capacit&eacute;s de
    la fonction <function>ereg</function> &agrave; trouver d'autres sous cha&icirc;nes.
    Si aucune valeur n'est trouv&eacute;e, $regs ne sera pas modifi&eacute; par
    <function>ereg</function>.
   </simpara>
   <para>
    La recherche est sensible &agrave; la casse.
   </para>
   <para>
    <function>ereg</function> retourne &true; si une occurrence
    a &eacute;t&eacute; trouv&eacute;e dans la cha&icirc;ne et
    &false; dans le cas contraire, ou si une erreur est survenue.
   </para>
   <para>
    L'exemple suivant prend une date au format ISO (YYYY-MM-DD) et l'affiche sous
    la forme DD.MM.YYYY :
    <example>
     <title>Exemple <function>ereg</function></title>
     <programlisting role="php">
&lt;?php
if ( ereg( "([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})", $date, $regs ) ) {
    echo "$regs[3].$regs[2].$regs[1]";
} else {
    echo "Format de date invalide : $date";
}
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Voir aussi <function>eregi</function>, <function>ereg_replace</function>,
    <function>eregi_replace</function>, <function>strpos</function> et
    <function>strstr</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
