<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 317663 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="cairosvgsurface.getversions" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>CairoSvgSurface::getVersions</refname>
  <refname>cairo_svg_surface_get_versions</refname>
  <refpurpose>Récupère la liste des versions SVG supportées</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>Style orienté objet (méthode) :</para>
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type>array</type><methodname>CairoSvgSurface::getVersions</methodname>
   <void />
  </methodsynopsis>
   <para>Style procédural :</para>
  <methodsynopsis>
   <type>array</type><methodname>cairo_svg_get_versions</methodname>
   <void />
  </methodsynopsis>
  <para>
   Retourne un tableau indexé numériquement contenant le contenu
   de la constante <classname>CairoSvgVersion</classname>.
   Afin de récupérer la valeur de chaque élément, utilisez la méthode
   <methodname>CairoSvgSurface::versionToString</methodname>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau indexé numériquement de valeurs entières.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <methodname>CairoSvgSurface::getVersions</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php
/* Récupère la liste des versions */
$versions = CairoSvgSurface::getVersions();
var_dump($versions);

/* Affiche le nom de chaque version */
foreach($versions as $id) {
    echo CairoSvgSurface::versionToString($id), PHP_EOL;
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(2) {
  [0]=>
  int(0)
  [1]=>
  int(1)
}
SVG 1.1
SVG 1.2
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Procedural style</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Récupère la liste des versions */
$versions = cairo_svg_surface_get_versions();
var_dump($versions);

/* Affiche le nom de chaque version */
foreach($versions as $id) {
    echo cairo_svg_surface_version_to_string($id), PHP_EOL;
}
?>
]]>
     </programlisting>
     &example.outputs.similar;
     <screen>
<![CDATA[
array(2) {
  [0]=>
  int(0)
  [1]=>
  int(1)
}
SVG 1.1
SVG 1.2
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>CairoSvgSurface::versionToString</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
