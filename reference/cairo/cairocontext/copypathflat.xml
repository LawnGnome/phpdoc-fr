<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322055 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="cairocontext.copypathflat" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>CairoContext::copyPathFlat</refname>
  <refname>cairo_copy_path_flat</refname>
  <refpurpose>Récupère une copie à plat du chemin courant</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop; (méthode) :</para>
  <methodsynopsis>
   <modifier>public</modifier> <type>CairoPath</type><methodname>CairoContext::copyPathFlat</methodname>
   <void />
  </methodsynopsis>
  <para>&style.procedural; :</para>
  <methodsynopsis>
   <type>CairoPath</type><methodname>cairo_copy_path_flat</methodname>
   <methodparam><type>CairoContext</type><parameter>context</parameter></methodparam>
  </methodsynopsis>
  <para>
   Récupère une copie à plat du chemin courant et le retourne à l'utilisateur
   sous la forme d'un objet <classname>CairoPath</classname>.
  </para>
  <para>
   Cette fonction agit comme la méthode <methodname>CairoContext::copyPath</methodname> excepté
   le fait que toutes les courbes du chemin seront représentées sous la forme d'une ligne
   approximative (suivant la valeur de tolérance courante). Ainsi, le résultat ne contiendra
   pas d'éléments de type CAIRO_PATH_CURVE_TO qui seront remplacés par une série d'éléments
   CAIRO_PATH_LINE_TO elements.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Un objet CairoContext.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Une copie du chemin courant.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>&style.oop;</title>
    <programlisting role="php">
<![CDATA[
<?php

$surface = new CairoImageSurface(CairoFormat::ARGB32, 50, 50);

$context = new CairoContext($surface);

var_dump($context->copyPathFlat());

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
object(CairoPath)#3 (0) {
}
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>&style.procedural;</title>
    <programlisting role="php">
<![CDATA[
<?php

$surface = cairo_image_surface_create(CAIRO_FORMAT_ARGB32, 50, 50);

$context = cairo_create($surface);

var_dump(cairo_copy_path_flat($context));

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
object(CairoPath)#3 (0) {
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>CairoContext::copyPath</methodname></member>
    <member><methodname>CairoContext::closePath</methodname></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
