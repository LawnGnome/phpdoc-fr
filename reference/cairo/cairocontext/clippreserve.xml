<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322055 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="cairocontext.clippreserve" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>CairoContext::clipPreserve</refname>
  <refname>cairo_clip_preserve</refname>
  <refpurpose>Établit une nouvelle région depuis la région courante</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop; (méthode) :</para>
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>CairoContext::clipPreserve</methodname>
   <void />
  </methodsynopsis>
  <para>&style.procedural; :</para>
  <methodsynopsis>
   <type>void</type><methodname>cairo_clip_preserve</methodname>
   <methodparam><type>CairoContext</type><parameter>context</parameter></methodparam>
  </methodsynopsis>
  <para>
   Établit une nouvelle région par l'intersection de la région courante avec le chemin courant,
   qui sera remplie par <methodname>Context.fill</methodname> et suivant la règle de remplissage
   courant (voir la méthode <methodname>CairoContext::setFillRule</methodname> ou la fonction
   <function>cairo_set_fill_rule</function>).
  </para>
  <para>
   Contrairement à la méthode <methodname>CairoContext::clip</methodname>, <methodname>CairoContext::clipPreserve</methodname>
   préserve le chemin dans le contexte. La région courant affecte toutes les opérations de
   dessin en masquant toutes les modifications de la surface qui se trouve à l'extérieur
   de la région courante.
  </para>
  <para>
   L'appel à la méthode <methodname>CairoContext::clipPreserve</methodname> ne peut rendre que
   plus petite la région, jamais plus grande. Mais la région courant fait partie du statut
   du graphique, aussi, une restriction temporaire de la région peut être effectuée en appelant
   la méthode <methodname>CairoContext::clipPreserve</methodname> avec une paire
   <methodname>CairoContext::save</methodname>/<methodname>CairoContext::restore</methodname>.
   La seule autre façon d'accroître la taille de la région est d'utiliser
   la méthode <methodname>CairoContext::resetClip</methodname>.
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Un objet CairoContext valide.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>&style.oop;</title>
    <programlisting role="php">
<![CDATA[
<?php

$surface = new CairoImageSurface(CairoFormat::ARGB32, 50, 50);

$context = new CairoContext($surface);

$context->clipPreserve();

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>&style.procedural;</title>
    <programlisting role="php">
<![CDATA[
<?php

$surface = cairo_image_surface_create(CAIRO_FORMAT_ARGB32, 50, 50);

$context = cairo_create($surface);

cairo_clip_preserve($context);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>CairoContext::save</methodname></member>
    <member><methodname>CairoContext::restore</methodname></member>
    <member><methodname>CairoContext::resetClip</methodname></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
