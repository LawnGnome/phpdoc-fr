<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.9 Maintainer: yannick Status: ready -->
 <reference id="ref.wddx">
  <title>WDDX</title>
  <titleabbrev>WDDX</titleabbrev>
  <partintro>
   <section id="wddx.intro">
    &reftitle.intro;
    <para>
     Ces fonctions fonctionnent grâce à <ulink url="&url.wddx;">WDDX</ulink>.
    </para>
   </section>
   
   <section id="wddx.requirements">
    &reftitle.required;
    <para>
     Pour utiliser WDDX, vous devez installer la librairie EXPAT (qui est fournie
    avec la distribution d'Apache 1.3.7 ou plus récent).
    </para>
   </section>
   
   &reference.wddx.configure;
   
   <section id="wddx.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="wddx.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   <section id="wddx.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section id="wddx.examples">
    &reftitle.examples;
    <para>
    Notez bien que toutes les fonctions qui enregistrent des données,
    utilisent le premier élément d'un tableau pour savoir si
    ce tableau doit être enregistré sous la forme d'un tableau,
    ou d'une structure. Si le premier élément a une clé de
    type chaîne, le tableau sera enregistré sous la forme d'une
    structure, et sinon, sous la forme d'un tableau.
    <example>
     <title>Enregistre une valeur simple</title>
      <programlisting role="php">
<![CDATA[
<?php
echo wddx_serialize_value("Exemple de paquet de PHP à WDDX", "Paquet PHP");
?>
]]>
      </programlisting>
    <para>
    Cet exemple va produire le résultat suivant :
    </para>
      <programlisting role="php">
<![CDATA[
  <wddxPacket version='1.0'><header><comment>Paquet PHP</comment></header><data><string>Exemple de paquet de PHP à WDDX</string></data></wddxPacket>
]]>
      </programlisting>
     </example>

     <example>
     <title>Utilisation de paquets incrémentaux</title>
      <programlisting role="php">
<![CDATA[
<?php
$pi = 3.1415926;
$packet_id = wddx_packet_start("PHP");
wddx_add_vars($packet_id, "pi");

/* Supposons que $villes provient d'une base de données */
$villes = array("Paris", "Montréal", "Lyon");
wddx_add_vars($packet_id, "villes");

$packet = wddx_packet_end($packet_id);
echo $packet;
?>
]]>
      </programlisting>
   <para>
    Cet exemple donnera :
    </para>
     <screen>
<![CDATA[
<wddxPacket version='1.0'><header><comment>PHP</comment></header><data><struct><var name='pi'><number>3.1415926</number></var><var name='villes'><array length='3'><string>Paris</string><string>Montréal</string><string>Lyon</string></array></var></struct></data></wddxPacket>
]]>
     </screen>
     </example>
    </para>
    
    <note>
     <para>
      Si vous voulez sérialiser des caractères non-ASCII, vous devez
      positionner la locale appropriée avant. (voir <function>setlocale</function>).
     </para>
    </note>
   </section>
  </partintro>

&reference.wddx.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

