<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.15 $ -->
<!-- EN-Revision: 1.12 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.oci-connect" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>oci_connect</refname>
  <refpurpose>Établit une connexion avec un serveur Oracle</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>oci_connect</methodname>
   <methodparam><type>string</type><parameter>username</parameter></methodparam>
   <methodparam><type>string</type><parameter>password</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>db</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>charset</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>session_mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retourne une ressource de connexion Oracle, nécessaire à la plupart des appels OCI.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       Le nom d'utilisateur Oracle.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       Le mot de passe de l'utilisateur.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>db</parameter></term>
     <listitem>
      <para>
       Ce paramètre optionnel contient le nom  de l'instance locale
       d'Oracle, ou le nom de l'entrée dans le fichier 
       <filename>tnsnames.ora</filename>  auquel vous voulez vous connecter.
      </para>
      <para>
       S'il n'est pas spécifié, &php; va utiliser la variable d'environnement
       <constant>ORACLE_SID</constant> (<literal>Oracle instance</literal>) ou
       <constant>TWO_TASK</constant> (<filename>tnsnames.ora</filename>) 
       pour déterminer la base à laquelle se connecter.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>charset</parameter></term>
     <listitem>
      &oci.charset;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>session_mode</parameter></term>
     <listitem>
      <para>
       Ce paramètre est disponible depuis la version 1.1 et accepte les
       valeurs suivantes : <constant>OCI_DEFAULT</constant>,
       <constant>OCI_SYSOPER</constant> et <constant>OCI_SYSDBA</constant>.
       Si <constant>OCI_SYSOPER</constant> ou <constant>OCI_SYSDBA</constant>
       est spécifié <function>oci_connect</function> tentera d'établir une connexion
       privilégiée en utilisant des droits externes. Les connexions privilégiées sont
       désactivées par défaut. Pour les activer, vous devez définir <link
       linkend="ini.oci8.privileged_connect">oci8.privileged_connect</link> à On.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un identifiant de connexion ou &false; si une erreur survient.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>oci_connect</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo "<pre>";
$db = "";

$c1 = oci_connect("scott", "tiger", $db);
$c2 = oci_connect("scott", "tiger", $db);

function create_table($conn)
{
  $stmt = oci_parse($conn, "create table scott.hallo (test varchar2(64))");
  oci_execute($stmt);
  echo $conn . " created table\n\n";
}

function drop_table($conn)
{
  $stmt = oci_parse($conn, "drop table scott.hallo");
  oci_execute($stmt);
  echo $conn . " dropped table\n\n";
}

function insert_data($conn)
{
  $stmt = oci_parse($conn, "insert into scott.hallo
            values('$conn' || ' ' || to_char(sysdate,'DD-MON-YY HH24:MI:SS'))");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn . " inserted hallo\n\n";
}

function delete_data($conn)
{
  $stmt = oci_parse($conn, "delete from scott.hallo");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn . " deleted hallo\n\n";
}

function commit($conn)
{
  oci_commit($conn);
  echo $conn . " committed\n\n";
}

function rollback($conn)
{
  oci_rollback($conn);
  echo $conn . " rollback\n\n";
}

function select_data($conn)
{
  $stmt = oci_parse($conn, "select * from scott.hallo");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn."----selecting\n\n";
  while (oci_fetch($stmt)) {
    echo $conn . " [" . oci_result($stmt, "TEST") . "]\n\n";
  }
  echo $conn . "----done\n\n";
}

create_table($c1);
insert_data($c1);   // Insertion d'une ligne via c1
insert_data($c2);   // Insertion d'une ligne via c2

select_data($c1);   // Résultat des insertions
select_data($c2);

rollback($c1);      // Annulation sur c1

select_data($c1);   // Les deux insertions ont été annulées
select_data($c2);

insert_data($c2);   // Insertion d'une ligne via c2
commit($c2);        // Validation via c2

select_data($c1);   // Le résultat de c2 est retourné

delete_data($c1);   // Effacement de toute la table via c1
select_data($c1);   // Aucune ligne de trouvée
select_data($c2);   // Aucune ligne de trouvée
commit($c1);        // Validation via c1

select_data($c1);   // Aucune ligne de trouvée
select_data($c2);   // Aucune ligne de trouvée

drop_table($c1);
echo "</pre>";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Si vous utilisez &php; avec le client Instant Oracle, vous pouvez utiliser
    la méthode de nommage facile de connexion tel que décrit ici :
    <link xlink:href="&url.oracle.oic.connect;">&url.oracle.oic.connect;</link>.
    En fait, cela signifie que vous pouvez spécifier "//db_host[:port]/database_name"
    en tant que nom de base de données. ais, si vous voulez utiliser l'ancienne méthode
    de nommage, vous <emphasis>devez</emphasis> définir soit
    <constant>ORACLE_HOME</constant>, soit <constant>TNS_ADMIN</constant>.
   </simpara>
  </note>
  <note>
   <simpara>
    Le second appel ainsi que les suivants à la fonction <function>oci_connect</function>
    avec les mêmes paramètres retournera le gestionnaire de connexion retourné
    lors du premier appel. Cela signifie que les requêtes envoyées sur un gestionnaire
    seront également envoyées aux autres gestionnaires, car c'est le
    <emphasis>même</emphasis> gestionnaire. Ce comportement est
    démontré dans l'exemple 1 ci-dessous. Si vous avez besoin de deux
    gestionnaires, dont les transactions sont isolées, vous devez utiliser la fonction
    <function>oci_new_connect</function> à la place.
   </simpara>
  </note>
  <note>
   <para>
    Dans les versions de &php; antérieures à la version 5.0.0,
    vous devez utiliser la fonction <function>ocilogon</function>. 
    Cet ancien nom est toujours utilisable : un alias a été fait vers
    la fonction <function>oci_connect</function>, pour assurer
    la compatibilité ascendante. Toutefois, il est recommandé de ne
    plus l'utiliser.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>oci_pconnect</function></member>
    <member><function>oci_new_connect</function></member>
    <member><function>oci_close</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->