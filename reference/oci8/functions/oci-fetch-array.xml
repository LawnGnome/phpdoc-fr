<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.10 $ -->
<!-- EN-Revision: 1.9 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry id="function.oci-fetch-array">
 <refnamediv>
  <refname>oci_fetch_array</refname>
  <refpurpose>Lit une ligne d'un résultat Oracle sous forme de tableau</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>oci_fetch_array</methodname>
   <methodparam><type>resource</type><parameter>statement</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retourne un tableau, qui correspond à la prochaine ligne du résultat.
  </para>
  &oci.datatypes;
  <para>
   Il faut mentionner ici que <function>oci_fetch_array</function>
   <emphasis>n'est pas significativement</emphasis> plus lente que
   <function>oci_fetch_row</function>, mais bien plus pratique.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      <para>
       Un identifiant de requête OCI valide.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      <para>
       Le paramètre optionnel <parameter>mode</parameter> peut être la
       combinaison des constantes suivantes :
       <simplelist>
        <member>
         <constant>OCI_BOTH</constant> - retourne une tableau,
         indexé numériquement et avec les noms de colonnes. Identique
         à <constant>OCI_ASSOC</constant> + <constant>OCI_NUM</constant>).
         C'est le comportement par défaut.
        </member>
        <member>
         <constant>OCI_ASSOC</constant> - retourne un tableau
         associatif. C'est le même comportement que celui de la
         fonction <function>oci_fetch_assoc</function>.
        </member>
        <member>
         <constant>OCI_NUM</constant> - retourne un tableau indexé numériquement,
         C'est le même comportement que celui de la fonction 
         <function>oci_fetch_row</function>.
        </member>
        <member>
         <constant>OCI_RETURN_NULLS</constant> - Crée des éléments vides pour les
         valeurs &null;.
        </member>
        <member>
         <constant>OCI_RETURN_LOBS</constant> - Retourne la valeur du LOB.
        </member>
       </simplelist>
       La configuration par défaut de <parameter>mode</parameter> est
       <constant>OCI_BOTH</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau avec des indices associatifs et numériques, ou &false;
   s'il n'y a plus de ligne dans la requête <parameter>statement</parameter>.
  </para>
  &database.fetch-null;
  <note>
   <simpara>
    Oracle retourne tous les noms de champs en majuscules, et les noms
    des index du tableau résultant seront donc aussi en majuscules.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>oci_fetch_array</function> avec <constant>OCI_BOTH</constant></title>
    <programlisting role="php">
<![CDATA[
<?php
$connection = oci_connect("apelsin", "kanistra");

$query = "SELECT id, name FROM fruits";

$statement = oci_parse ($connection, $query);
oci_execute ($statement);

while ($row = oci_fetch_array ($statement, OCI_BOTH)) {
    echo $row[0]." and ".$row['ID']." sont identiques<br>";
    echo $row[1]." and ".$row['NAME']." sont identiques<br>";
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>oci_fetch_array</function> avec
     <constant>OCI_NUM</constant></title>
    <programlisting role="php">
<![CDATA[
<?php
$connection = oci_connect("user", "password");

$query = "SELECT id, name, lob_field FROM fruits";

$statement = oci_parse ($connection, $query);
oci_execute ($statement);

while ($row = oci_fetch_array ($statement, OCI_NUM)) {
    echo $row[0]."<br>";
    echo $row[1]."<br>";
    echo $row[2]->read(100)."<br>";  //Affiche les 100 premiers bytes du LOB
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>oci_fetch_array</function> avec
     <constant>OCI_ASSOC</constant> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$connection = oci_connect("user", "password");

$query = "SELECT id, name, lob_field FROM fruits";

$statement = oci_parse ($connection, $query);
oci_execute ($statement);

while ($row = oci_fetch_array ($statement, OCI_ASSOC)) {
    echo $row['ID']."<br>";
    echo $row['NAME']."<br>";
    echo $row['LOB_FIELD']."<br>";  //Affiche "Object id #1"
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>oci_fetch_array</function> avec
     <constant>OCI_RETURN_LOBS</constant> example</title>
    <programlisting role="php">
<![CDATA[
<?php
$connection = oci_connect("user", "password");

$query = "SELECT id, name, lob_field FROM fruits";

$statement = oci_parse ($connection, $query);
oci_execute ($statement);

while ($row = oci_fetch_array ($statement, (OCI_NUM+OCI_RETURN_LOBS))) {
    echo $row[0]."<br>";
    echo $row[1]."<br>";
    echo $row['LOB_FIELD']."<br>";  //Affiche le contenu du LOB
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>oci_fetch_assoc</function></member>
    <member><function>oci_fetch_object</function></member>
    <member><function>oci_fetch_row</function></member>
    <member><function>oci_fetch_all</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->