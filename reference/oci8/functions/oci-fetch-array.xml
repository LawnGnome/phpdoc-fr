<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
  <refentry id="function.oci-fetch-array">
   <refnamediv>
    <refname>oci_fetch_array</refname>
    <refpurpose>Lit une ligne d'un résultat Oracle sous forme de tableau
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>oci_fetch_array</methodname>
      <methodparam><type>resource</type><parameter>statement</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>mode</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>oci_fetch_array</function> retourne un tableau, qui 
     correspond à la prochaine ligne disponible dans le résultat
     <parameter>statement</parameter>, ou bien &false; en cas d'erreur.
    </para>
    <para>
     <function>oci_fetch_array</function> retourne un tableau,
     indexé numériquement et avec les noms des colonnes.
    </para>
    <para>
     Le paramètre optionnel <parameter>mode</parameter> peut être la 
     combinaison des constantes suivantes : 
     <simplelist>
      <member>
       <constant>OCI_BOTH</constant> - retourne une tableau,
       indexé numériquement et avec les noms de colonnes. Identique
       à <constant>OCI_ASSOC</constant> 
       + <constant>OCI_NUM</constant>). C'est le comportement par défaut.
      </member>
      <member>
       <constant>OCI_ASSOC</constant> - retourne un tableau
       associatif. C'est le même comportement que celui de la
       fonction <function>oci_fetch_assoc</function>.
      </member>
      <member>
       <constant>OCI_NUM</constant> - retourne un tableau indexé numériquement,
       C'est le même comportement que celui de la fonction 
       <function>oci_fetch_row</function>.
      </member>
      <member>
       <constant>OCI_RETURN_NULLS</constant> - Crée des éléments vides pour les
       valeurs &null;.
      </member>
      <member>
       <constant>OCI_RETURN_LOBS</constant> - Retourne la valeur du LOB.
      </member>
     </simplelist>
     La configuration par défaut de <parameter>mode</parameter> est
     <constant>OCI_BOTH</constant>.
    </para>
    <para>
     Il faut mentionner ici que <function>oci_fetch_array</function>
     <emphasis>n'est pas significativement</emphasis> plus lente que
     <function>oci_fetch_row</function>, mais bien plus pratique.
    </para>
    <note>
     <simpara>
      N'oubliez pas que Oracle retourne tous les noms de champs en majuscules,
      et les noms des index du tableau résultant seront donc aussi en majuscules.
     </simpara>
    </note>
    <para>
     <example>
      <title>
       Exemple avec <function>oci_fetch_array</function> et <constant>OCI_BOTH</constant>
      </title>
      <programlisting role="php">
<![CDATA[
<?php
$connection = oci_connect("apelsin", "kanistra");

$query = "SELECT id, name FROM fruits";

$statement = oci_parse ($connection, $query);
oci_execute ($statement);

while ($row = oci_fetch_array ($statement, OCI_BOTH)) {
    echo $row[0]." and ".$row['ID']." is the same<br>";
    echo $row[1]." and ".$row['NAME']." is the same<br>";
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Exemple avec <function>oci_fetch_array</function> et
       <constant>OCI_NUM</constant></title>
      <programlisting role="php">
<![CDATA[
<?php
$connection = oci_connect("user", "password");

$query = "SELECT id, name, lob_field FROM fruits";

$statement = oci_parse ($connection, $query);
oci_execute ($statement);

while ($row = oci_fetch_array ($statement, OCI_NUM)) {
    echo $row[0]."<br>";
    echo $row[1]."<br>";
    echo $row[2]->read(100)."<br>";  //this will output first 100 bytes from LOB
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Exemple avec <function>oci_fetch_array</function> et
       <constant>OCI_ASSOC</constant></title>
      <programlisting role="php">
<![CDATA[
<?php
$connection = oci_connect("user", "password");

$query = "SELECT id, name, lob_field FROM fruits";

$statement = oci_parse ($connection, $query);
oci_execute ($statement);

while ($row = oci_fetch_array ($statement, OCI_NUM)) {
    echo $row['ID']."<br>";
    echo $row['NAME']."<br>";
    echo $row['LOB_FIELD']."<br>";  //this will output "Object id #1"
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Exemple avec <function>oci_fetch_array</function> et
       <constant>OCI_RETURN_LOBS</constant></title>
      <programlisting role="php">
<![CDATA[
<?php
$connection = oci_connect("user", "password");

$query = "SELECT id, name, lob_field FROM fruits";

$statement = oci_parse ($connection, $query);
oci_execute ($statement);

while ($row = oci_fetch_array ($statement, OCI_NUM)) {
    echo $row[0]."<br>";
    echo $row[1]."<br>";
    echo $row['LOB_FIELD']."<br>";  //this will output LOB's content
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Voir aussi
     <function>oci_fetch_assoc</function>,
     <function>oci_fetch_object</function>,
     <function>oci_fetch_row</function> et
     <function>oci_fetch_all</function>. 
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
