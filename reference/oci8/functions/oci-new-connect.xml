<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.17 $ -->
<!-- EN-Revision: 1.10 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.oci-new-connect" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>oci_new_connect</refname>
  <refpurpose>Établit une nouvelle connexion au serveur Oracle</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>oci_new_connect</methodname>
   <methodparam><type>string</type><parameter>username</parameter></methodparam>
   <methodparam><type>string</type><parameter>password</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>db</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>charset</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>session_mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   Établit une nouvelle connexion au serveur Oracle et s'identifie.
  </para>
  <para>
   Contrairement aux fonctions <function>oci_connect</function> et
   <function>oci_pconnect</function>, <function>oci_new_connect</function>
   ne met pas en cache les connexions et retourne toujours un gestionnaire de connexion
   nouvellement ouvert. Ceci est très utile si votre application a besoin d'une isolation
   transactionnelle entre deux jeux de requêtes.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       Le nom d'utilisateur Oracle.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       Le mot de passe pour l'utilisateur.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>db</parameter></term>
     <listitem>
      <para>
       Peut contenir l'instance locale d'Oracle ou un nom disponible
       dans le fichier <filename>tnsnames.ora</filename>.
      </para>
      <para>
       S'il n'est pas fourni, PHP va chercher la valeur dans les variables
       d'environnement <literal>ORACLE_SID</literal> et
       <literal>TWO_TASK</literal> pour déterminer le nom de l'instance
       locale d'Oracle, et la localisation du fichier 
       <filename>tnsnames.ora</filename>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>charset</parameter></term>
     <listitem>
      &oci.charset;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>session_mode</parameter></term>
     <listitem>
      <para>
       Ce paramètre est disponible depuis la version 1.1
       et accepte les valeurs suivantes : <constant>OCI_DEFAULT</constant>,
       <constant>OCI_SYSOPER</constant> et <constant>OCI_SYSDBA</constant>.
       Si <constant>OCI_SYSOPER</constant> ou
       <constant>OCI_SYSDBA</constant> est spécifié,
       <function>oci_new_connect</function> tentera d'établir une connexion privilégiée
       en utilisant les droits externes. Les connexions privilégiées sont désactivées par défaut.
       Pour les activer, vous devez définir <link
       linkend="ini.oci8.privileged_connect">oci8.privileged_connect</link> 
       à <literal>On</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un identifiant de connexion, ou &false;
   si une erreur survient.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Voici comment séparer des transactions.
   <example>
    <title>Exemple avec <function>oci_new_connect</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo "<html><pre>";
$db = "";

$c1 = oci_connect("scott", "tiger", $db);
$c2 = oci_new_connect("scott", "tiger", $db);

function create_table($conn)
{
  $stmt = oci_parse($conn, "create table scott.hallo (test
varchar2(64))");
  oci_execute($stmt);
  echo $conn . " created table\n\n";
}

function drop_table($conn)
{
  $stmt = oci_parse($conn, "drop table scott.hallo");
  oci_execute($stmt);
  echo $conn . " dropped table\n\n";
}

function insert_data($conn)
{
  $stmt = oci_parse($conn, "insert into scott.hallo
            values('$conn' || ' ' || to_char(sysdate,'DD-MON-YY HH24:MI:SS'))");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn . " inserted hallo\n\n";
}

function delete_data($conn)
{
  $stmt = oci_parse($conn, "delete from scott.hallo");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn . " deleted hallo\n\n";
}

function commit($conn)
{
  oci_commit($conn);
  echo $conn . " committed\n\n";
}

function rollback($conn)
{
  oci_rollback($conn);
  echo $conn . " rollback\n\n";
}

function select_data($conn)
{
  $stmt = oci_parse($conn, "select * from scott.hallo");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn . "----selecting\n\n";
  while (oci_fetch($stmt)) {
    echo $conn . " <" . oci_result($stmt, "TEST") . ">\n\n";
  }
  echo $conn . "----done\n\n";
}

create_table($c1);
insert_data($c1);

select_data($c1);
select_data($c2);

rollback($c1);

select_data($c1);
select_data($c2);

insert_data($c2);
commit($c2);

select_data($c1);

delete_data($c1);
select_data($c1);
select_data($c2);
commit($c1);

select_data($c1);
select_data($c2);

drop_table($c1);
echo "</pre></html>";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Si vous utilisez PHP avec le client Instant d'Oracle, vous pouvez utiliser
    les méthodes de nommage facilitant la connexion décrites ici :
    <link xlink:href="&url.oracle.oic.connect;">&url.oracle.oic.connect;</link>.
    En fait, cela signifie que vous pouvez spécifier "//db_host[:port]/database_name"
    en tant que nom de base de données. Mais si vous voulez utiliser l'ancienne façon de nommage,
    vous <emphasis>devez</emphasis> définir soit <constant>ORACLE_HOME</constant>, soit
    <constant>TNS_ADMIN</constant>.
   </simpara>
  </note>
  <note>
   <para>
    Dans les versions de PHP antérieures à la version 5.0.0,
    vous devez utiliser la fonction <function>ocinlogon</function>. 
    Cet ancien nom est toujours utilisable : un alias a été fait vers
    la fonction <function>oci_new_connect</function>, pour assurer
    la compatibilité ascendante. Toutefois, il est recommandé de ne
    plus l'utiliser.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>oci_connect</function></member>
    <member><function>oci_pconnect</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->