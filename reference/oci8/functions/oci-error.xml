<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.5 Maintainer: dams Status: ready -->
  <refentry id="function.oci-error">
   <refnamediv>
    <refname>oci_error</refname>
    <refpurpose>Retourne la dernière erreur Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>oci_error</methodname>
      <methodparam choice="opt"><type>resource</type><parameter>source</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>oci_error</function> retourne la dernière erreur trouvée.
     Si le paramètre <parameter>source</parameter> n'est pas fournie, la
     dernière erreur rencontrée est retournée. 
     Pour la plupart des erreurs, la paramètre <parameter>source</parameter>
     représente une ressource de connexion. Pour les erreurs de connexion avec les fonctions
     <function>oci_connect</function>, <function>oci_new_connect</function> ou
     <function>oci_pconnect</function>, ne passez aucun paramètre.
     Si aucune erreur n'est trouvée, <function>oci_error</function> retourne
     &false;. <function>oci_error</function> retourne l'erreur sous la forme
     d'un tableau associatif. Dans ce tableau, l'élément
     <literal>code</literal> contient le numéro d'erreur Oracle
     et <literal>message</literal> contient le message d'erreur.
    </para>
    <note>
     <title>Depuis &php; 4.3</title>
     <para>
      <literal>offset</literal> et <literal>sqltext</literal> seront
      aussi inclues dans le tableau retourné, pour indiquer la
      position de l'erreur et la requête en cause.
     </para>
    </note>
    <para>
     <example>
      <title>Exemple d'affichage d'un message d'erreur Oracle après une erreur 
      de connexion</title>
      <programlisting role="php">
<![CDATA[
$conn = @oci_connect("scott", "tiger", "mydb");
if (!$conn) {
  $e = oci_error();   // Pour les erreurs oci_connect, aucun paramètre n'est passé
  echo htmlentities($e['message']);
}
]]>
      </programlisting>
     </example> 
    </para>
    <para>
     <example>
      <title>Exemple d'affichage d'un message d'erreur Oracle après une erreur 
      d'analyse</title>
      <programlisting role="php">
<![CDATA[
$stmt = @oci_parse($conn, "select ' from dual");  // Notez l'erreur de guillemet
if (!$stmt) {
  $e = oci_error($conn);  // Pour les erreurs oci_parse, on passe la ressource de connexion
  echo htmlentities($e['message']);
}
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Exemple d'affichage d'un message d'erreur Oracle après une erreur 
      d'exécution</title>
      <programlisting role="php">
<![CDATA[
$r = oci_execute($stmt);
if (!$r) {
  $e = oci_error($stmt); // Pour les erreurs oci_execute, on passe la ressource de traitement
  echo htmlentities($e['message']);
  echo '<pre>';
  echo htmlentities($e['sqltext']);
  printf("\n%".($e['offset']+1)."s", "^");
  echo '</pre>';
}     
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Dans les versions de &php; antérieures à la version 5.0.0,
      vous devez utiliser la fonction <function>ocierror</function>. 
      Cet ancien nom est toujours utilisable : un &alias; a été fait vers
      la fonction <function>oci_error</function>, pour assurer
      la compatibilité ascendante. Toutefois, il est recommandé de ne
      plus l'utiliser.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
