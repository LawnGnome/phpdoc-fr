<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/oci8.xml, last change in rev 1.4 -->
<!-- last change to 'ocibindbyname' in en/ tree in rev 1.2 -->
  <refentry id="function.ocibindbyname">
   <refnamediv>
    <refname>ociBindByName</refname>
    <refpurpose>
     Utilise une variable PHP pour la phase de d&eacute;finition, dans un SELECT.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>ocibindbyname</methodname>
      <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>string</type><parameter>ph_name</parameter></methodparam>
      <methodparam><type>mixed &amp;</type><parameter>variable</parameter></methodparam>
      <methodparam><type>int</type><parameter>length</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>
       type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ocibindbyname</function> relie la variable PHP
     <parameter>variable</parameter> &agrave; l'emplacement Oracle
     <parameter>ph_name</parameter>. Son utilisation (comme entr&eacute;e
     ou comme sortie) sera d&eacute;finie &agrave; l'ex&eacute;cution,
     et l'espace n&eacute;cessaire sera allou&eacute;. Le param&egrave;tre de
     longueur <parameter>length</parameter> fixe la taille maximum pour
     la liaison. Si vous affectez une longueur de -1,
     <function>ocibindbyname</function> utilisera la longueur de variable
     comme maximum.
    </para>
    <para>
     Si vous devez lier des types abstraits de donn&eacute;es (LOB/ROWID/BFILE),
     vous devrez l'allouer dans un premier temps, avec
     <function>ocinewdescriptor</function>. La longueur
     <parameter>length</parameter> ne sert pas pour ces types et
     devrait &ecirc;tre fix&eacute;e &agrave; -1. La variable
     <parameter>type</parameter> indique au serveur Oracle, quel type de
     pointeur va &ecirc;tre utilis&eacute;. Les valeurs possibles sont :
     oci_B_FILE (Fichier binaires), oci_B_CFILE (Fichier texte),
     oci_B_CLOB (LOB- texte), oci_B_BLOB (LOB binaire)
     et oci_B_ROWID (ROWID).
    </para>
    <example>
     <title>ociDefineByName</title>
     <programlisting role="php">
&lt;?php
/* Exemple ociBindByPos par thies@thieso.net (980221)
  Ins&egrave;re 3 lignes dans emp, et utilise ROWID pour mettre &agrave; jour
  les lignes, juste apr&egrave;s l'insertion.
*/
$conn = ociLogon("scott","tiger");
$stmt = ociparse($conn,"insert into emp (empno, ename) ".
		   "values (:empno,:ename) ".
		   "returning ROWID into :rid");
$data = array(1111 =&gt; "Larry", 2222 =&gt; "Bill", 3333 =&gt; "Jim");
$rowid = ociNewDescriptor($conn,oci_D_ROWID);
ociBindByName($stmt,":empno",&amp;$empno,32);
ociBindByName($stmt,":ename",&amp;$ename,32);
ociBindByName($stmt,":rid",&amp;$rowid,-1,oci_B_ROWID);
$update = ociparse($conn,"update emp set sal = :sal where ROWID = :rid");
ociBindByName($update,":rid",&amp;$rowid,-1,oci_B_ROWID);
ociBindByName($update,":sal",&amp;$sal,32);
$sal = 10000;
while (list($empno,$ename) = each($data)) {
	ociexecute($stmt);
	ociexecute($update);
}
$rowid->free();
ociFreeStatement($update);
ociFreeStatement($stmt);
$stmt = ociparse($conn,"select * from emp where empno in (1111,2222,3333)");
ociexecute($stmt);
while (ociFetchInto($stmt,&amp;$arr,oci_ASSOC)) {
	var_dump($arr);
}
ociFreeStatement($stmt);
/* Effacement des lignes inutiles dans la table emp .... */
$stmt = ociparse($conn,"delete from emp where empno in (1111,2222,3333)");
ociexecute($stmt);
ociFreeStatement($stmt);
ociLogoff($conn);
?&gt;
	 </programlisting>
	</example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
