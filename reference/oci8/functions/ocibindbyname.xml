<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/oci8.xml, last change in rev 1.4 -->
<!-- last change to 'ocibindbyname' in en/ tree in rev 1.2 -->
  <refentry id="function.ocibindbyname">
   <refnamediv>
    <refname>ocibindbyname</refname>
    <refpurpose>
     Lie une variable PHP &agrave; une variable SQL d'Oracle
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>ocibindbyname</methodname>
      <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>string</type><parameter>ph_name</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>&amp;variable</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>maxlength</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ocibindbyname</function> relie la variable PHP
     <parameter>variable</parameter> &agrave; l'emplacement Oracle
     <parameter>ph_name</parameter>. Son utilisation (comme entr&eacute;e
     ou comme sortie) sera d&eacute;finie &agrave; l'ex&eacute;cution,
     et l'espace n&eacute;cessaire sera allou&eacute;. Le param&egrave;tre de
     longueur <parameter>length</parameter> fixe la taille maximum pour
     la liaison. Si vous affectez une longueur de -1,
     <function>ocibindbyname</function> utilisera la longueur de variable
     comme maximum.
    </para>
    <para>
     Si vous devez lier des types abstraits de donn&eacute;es (LOB/ROWID/BFILE),
     vous devrez l'allouer dans un premier temps, avec
     <function>ocinewdescriptor</function>. La longueur
     <parameter>length</parameter> ne sert pas pour ces types et
     devrait &ecirc;tre fix&eacute;e &agrave; -1. La variable
     <parameter>type</parameter> indique au serveur Oracle, quel type de
     pointeur va &ecirc;tre utilis&eacute;. Les valeurs possibles sont :
     <constant>OCI_B_FILE</constant> (Fichiers binaires), 
     <constant>OCI_B_CFILE</constant> (Fichiers texte), 
     <constant>OCI_B_CLOB</constant> (LOB de texte), 
     <constant>OCI_B_BLOB</constant> (LOB binaire) et 
     <constant>OCI_B_ROWID</constant> (ROWID).
    </para>
    <example>
     <title>Exemple avec <function>ocibindbyname</function></title>
     <programlisting role="php">
<![CDATA[
<?php
/* Exemple ociBindByPos par thies@thieso.net (980221)
  Ins&egrave;re 3 lignes dans emp, et utilise ROWID pour mettre &agrave; jour
  les lignes, juste apr&egrave;s l'insertion.
*/

$conn = OCILogon("scott","tiger");

$stmt = OCIParse($conn,"insert into emp (empno, ename) ".
					   "values (:empno,:ename) ".
					   "returning ROWID into :rid");

$data = array(1111 => "Larry", 2222 => "Bill", 3333 => "Jim");

$rowid = OCINewDescriptor($conn,OCI_D_ROWID);

OCIBindByName($stmt,":empno",&$empno,32);
OCIBindByName($stmt,":ename",&$ename,32);
OCIBindByName($stmt,":rid",&$rowid,-1,OCI_B_ROWID);

$update = OCIParse($conn,"update emp set sal = :sal where ROWID = :rid");
OCIBindByName($update,":rid",&$rowid,-1,OCI_B_ROWID);
OCIBindByName($update,":sal",&$sal,32);

$sal = 10000;

while (list($empno,$ename) = each($data)) {
	OCIExecute($stmt);
	OCIExecute($update);
} 

$rowid->free();

OCIFreeStatement($update);
OCIFreeStatement($stmt);

$stmt = OCIParse($conn,"select * from emp where empno in (1111,2222,3333)");
OCIExecute($stmt);
while (OCIFetchInto($stmt,&$arr,OCI_ASSOC)) {
	var_dump($arr);
}
OCIFreeStatement($stmt);

/* Effacement des lignes inutiles dans la table emp */
$stmt = OCIParse($conn,"delete from emp where empno in (1111,2222,3333)");
OCIExecute($stmt);
OCIFreeStatement($stmt);

OCILogoff($conn);
?>
]]>
	 </programlisting>
	</example>
	<warning>
     <para>
      C'est une mauvaise id&eacute;e que d'utiliser les magic quotes et la fonction
      <function>ocibindbyname</function> simultan&eacute;ment, car aucun ajout de
      guillemets n'est n&eacute;cessaire sur les variables cit&eacute;es, et tout
      guillemets magiques sera inscrit dans votre base de donn&eacute;es car
      <function>ocibindbyname</function> n'est pas capable de faire la
      diff&eacute;rence entre les guillemets et ceux qui ont &eacute;t&eacute; ajout&eacute;s
      dynamiquement.
     </para> 
    </warning>

   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
