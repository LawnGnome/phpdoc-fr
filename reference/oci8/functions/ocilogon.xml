<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.13 $ -->
<!-- EN-Revision: 1.14 Maintainer: dams Status: ready -->
<!-- Reviewed: yes -->
  <refentry id="function.ocilogon">
   <refnamediv>
    <refname>ocilogon</refname>
    <refpurpose>Etablit une connexion à un serveur Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>resource</type><methodname>ocilogon</methodname>
      <methodparam><type>string</type><parameter>username</parameter></methodparam>
      <methodparam><type>string</type><parameter>password</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>db</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>charset</parameter></methodparam>
     </methodsynopsis>
    <para>
      <function>ocilogon</function> retourne un identifiant de connexion,
      nécessaire à la plupart des fonctions Oracle. Le nom d'utilisateur
      <parameter>username</parameter> et le mot de passe 
      <parameter>password</parameter> seront utilisés pour l'identification.
      Le paramètre optionnel <parameter>db</parameter> peut contenir le nom local
     du serveur Oracle, ou bien son nom dans la table d'entrées 
     <literal>tnsnames.ora</literal> à laquelle vous voulez vous connecter. Si le troisième
     paramètre n'est pas spécifié, &php; utilisera la variable d'environnement
     <varname>ORACLE_SID</varname> (instance Oracle) ou <varname>TWO_TASK</varname>
     (tnsnames.ora) pour déterminer la base à laquelle se connecter.
    </para>
    &oci.charset; 
    <para>
      Les connexions sont partagées, à l'intérieur
      d'une même page avec <function>ocilogon</function>. Cela signifie
      que COMMIT et ROLLBACK s'appliquent à toutes les transactions
      commencées à l'intérieur d'une même page,
      même si vous avez créé de multiples connexions.
    </para>
    <para>
     Les connexions sont partagées au niveau de la page, lorsque vous utilisez
     <function>ocilogon</function>. Cela signifie que les validations et annulations
     s'appliquent à toutes les transactions de la page, même si vous avez
     créé de multiples connexions à un même serveur Oracle.
    </para>
    <para>
     Cet exemple montre comment les connexions sont partagées :
     <example>
      <title>Exemple avec <function>ocilogon</function></title>
      <programlisting role="php">
<![CDATA[
<?php
echo '<html><pre>';
$db = '';

$c1 = ocilogon("scott","tiger",$db);
$c2 = ocilogon("scott","tiger",$db);

function create_table($conn) { 
 $stmt = ociparse($conn,"create table scott.hallo (test varchar2(64))");
 ociexecute($stmt);
 echo $conn." a créé une table\n\n";
}

function drop_table($conn) { 
 $stmt = ociparse($conn,"drop table scott.hallo");
 ociexecute($stmt);
 echo $conn." a effacé une table\n\n";
}

function insert_data($conn) { 
 $stmt = ociparse($conn,"insert into scott.hallo 
            values('$conn' || ' ' || to_char(sysdate,'DD-MON-YY HH24:MI:SS'))");
 ociexecute($stmt,OCI_DEFAULT);
 echo $conn." a inséré dans hallo\n\n";
}

function delete_data($conn) { 
 $stmt = ociparse($conn,"delete from scott.hallo");
 ociexecute($stmt,OCI_DEFAULT);
 echo $conn." a effacé dans hallo\n\n";
}

function commit($conn) { 
 ocicommit($conn);
 echo $conn." validé\n\n";
}

function rollback($conn) { 
 ocirollback($conn);
 echo $conn." annulé\n\n";
}

function select_data($conn) { 
 $stmt = ociparse($conn,"select * from scott.hallo");
 ociexecute($stmt,OCI_DEFAULT);
 echo $conn."----selection\n\n";
 while (ocifetch($stmt)) {
   echo $conn." <".ociresult($stmt,"TEST").">\n\n";
 }
 echo $conn."----fin\n\n";
}

create_table($c1);
insert_data($c1);   // Insertion avec c1
insert_data($c2);   // Insertion avec c2

select_data($c1);   // Resultats des insertions
select_data($c2);   

rollback($c1);      // Annulation sur c1

select_data($c1);   // Les deux insertions ont été annulées
select_data($c2);   

insert_data($c2);   // Insertion avec c2
commit($c2);        // Validation avec c2

select_data($c1);   // Le résultat de l'insertion via c2

delete_data($c1);   // Effacement de toutes les lignes avec c1
select_data($c1);   // Aucune ligne lue
select_data($c2);   // Aucune ligne lue
commit($c1);        // Validation avec c1

select_data($c1);   // Aucune ligne lue
select_data($c2);   // Aucune ligne lue

drop_table($c1);
echo '</pre></html>';
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Cette fonction a été renommée en <function>oci_connect</function> 
      pour &php; version 5.0.0 et plus récent. Pour la compatibilité
      ascendante, <function>ocilogon</function> peut toujours être utilisée.
      Toutefois, elle est obsolète.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
