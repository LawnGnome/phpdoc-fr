<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/oci8.xml, last change in rev 1.4 -->
<!-- last change to 'ocinlogon' in en/ tree in rev 1.15 -->
  <refentry id="function.ocinlogon">
   <refnamediv>
    <refname>ociNLogon</refname>
    <refpurpose>
      Se connecte &agrave; un serveur Oracle avec une nouvelle connexion.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>ocinlogon</methodname>
      <methodparam><type>string</type><parameter>username</parameter></methodparam>
      <methodparam><type>string</type><parameter>password</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>db</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ocinlogon</function> cr&eacute;e une nouvelle connexion &agrave;
     un serveur Oracle et s'authentifie. Si l'option ORACLE_SID n'est pas
     sp&eacute;cifi&eacute;, PHP utilisera la variable d'environnement
     ORACLE_SID pour d&eacute;terminer le serveur de connexion.
    </para>
    <para>
       <function>ocinlogon</function> force le serveur &agrave;
       &eacute;tablir une nouvelle connexion. Cette fonction ne
       doit &ecirc;tre utilis&eacute;e que si vous voulez isoler un
       ensemble de transactions. Par d&eacute;faut, les connexions
       sont partag&eacute;es au niveau de la page, si vous utilisez
       la fonction <function>ocinlogon</function> ou bien au niveau
       du processus web, si vous utilisez <function>ociplogon</function>.
       Si vous avez de multiples connexions ouvertes avec
       <function>ocinlogon</function>, les validations et annulations
       ne s'appliquent qu'&agrave; la connexion sp&eacute;cif&eacute;e.
    </para>
    <para>
      L'exemple ci-dessous montre l'utilisation des connexions
      s&eacute;par&eacute;es.
     <example>
      <title>ociNLogon</title>
      <programlisting role="php">
&lt;?php
print "&lt;HTML>&lt;PRE>";
$db = "";
$c1 = ocilogon("scott","tiger",$db);
$c2 = ocinlogon("scott","tiger",$db);
function create_table($conn)
{ $stmt = ociparse($conn,"create table scott.hallo (test
varchar2(64))");
  ociexecute($stmt);
  echo $conn." created table\n\n";
}
function drop_table($conn)
{ $stmt = ociparse($conn,"drop table scott.hallo");
  ociexecute($stmt);
  echo $conn." dropped table\n\n";
}
function insert_data($conn)
{ $stmt = ociparse($conn,"insert into scott.hallo values('$conn' || ' ' || to_char(sysdate,'DD-MON-YY HH24:MI:SS'))");
  ociexecute($stmt,oci_DEFAULT);
  echo $conn." inserted hallo\n\n";
}
function delete_data($conn)
{ $stmt = ociparse($conn,"delete from scott.hallo");
  ociexecute($stmt,oci_DEFAULT);
  echo $conn." deleted hallo\n\n";
}
function commit($conn)
{ ocicommit($conn);
  echo $conn." commited\n\n";
}
function rollback($conn)
{ ocirollback($conn);
  echo $conn." rollback\n\n";
}
function select_data($conn)
{ $stmt = ociparse($conn,"select * from scott.hallo");
  ociexecute($stmt,oci_DEFAULT);
  echo $conn."----selecting\n\n";
  while (ocifetch($stmt))
    echo $conn." &lt;".ociresult($stmt,"TEST").">\n\n";
  echo $conn."----done\n\n";
}
create_table($c1);
insert_data($c1);
select_data($c1);
select_data($c2);
rollback($c1);
select_data($c1);
select_data($c2);
insert_data($c2);
commit($c2);
select_data($c1);
delete_data($c1);
select_data($c1);
select_data($c2);
commit($c1);
select_data($c1);
select_data($c2);
drop_table($c1);
print "&lt;/PRE>&lt;/HTML>";
?&gt;
      </programlisting>
     </example>
    </para>
    <simpara>
     Voir aussi 
     <function>ocilogon</function> et
     <function>ociplogon</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
