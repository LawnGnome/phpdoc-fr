<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.3 Maintainer: dams Status: ready -->

  <refentry id="function.oci-commit">
   <refnamediv>
    <refname>oci_commit</refname>
    <refpurpose>Valide les transactions Oracle en cours</refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>bool</type><methodname>oci_commit</methodname>
      <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>oci_commit</function> valide toutes les transactions en
     cours sur la connexion Oracle <parameter>connection</parameter>.
    </para>
    <para>
     Cet exemple montre comment utiliser <function>oci_commit</function>.
     <example>
      <title>Exemple avec <function>oci_commit</function></title>
      <programlisting>
<![CDATA[
<?php
    // Connexion au serveur Oracle
    $conn = oci_connect('scott', 'tiger');
     
    // Analyse de la requête SQL
    $stmt = oci_parse($conn, "
                              INSERT INTO 
                                         employees (name, surname) 
                                   VALUES 
                                         ('Maxim', 'Maletsky')
                             ");

    /* Exécution de la requête
       OCI_DEFAULT demande à oci_execute() 
       de ne pas valider immédiatement le résutat */
    oci_execute($stmt, OCI_DEFAULT);

    /*
    ....
    Analyse et exécution d'autres commandes ici....
    ....
    */
    
    // Validation de la transaction
    $committed = oci_commit($conn);

    // Vérification de la validation : si une erreur est survenue, afficher
    // le message d'erreur
    if (!$committed) {
        $error = oci_error($conn);
        echo 'Validation échouée. Oracle dit : ' . $error['message'];
    }
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     &return.success;
    </para>
    <note>
     <para>
      Dans les versions de &php; antérieures à la version 5.0.0,
      vous devez utiliser la fonction <function>ocicommit</function>. 
      Cet ancien nom est toujours utilisable : un alias a été fait vers
      la fonction <function>oci_commit</function>, pour assurer
      la compatibilité ascendante. toutefois, il est recommandé de ne
      plus l'utiliser.
     </para>
    </note>
    <simpara>
     Voir aussi
     <function>oci_rollback</function> et
     <function>oci_execute</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
