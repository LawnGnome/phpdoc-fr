<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.17 $ -->
<!-- EN-Revision: 1.17 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.oci-bind-by-name" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>oci_bind_by_name</refname>
  <refpurpose>Associe une variable PHP à une variable SQL Oracle</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>oci_bind_by_name</methodname>
   <methodparam><type>resource</type><parameter>statement</parameter></methodparam>
   <methodparam><type>string</type><parameter>ph_name</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">variable</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>maxlength</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
  </methodsynopsis>
  <para>
   Lie la variable PHP <parameter>variable</parameter> à l'emplacement Oracle
   <parameter>ph_name</parameter>, dans la commande préparée 
   <parameter>stmt</parameter>. Son utilisation (comme entrée
   ou comme sortie) sera définie à l'exécution,
   et l'espace nécessaire sera alloué.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      <para>
       Une requête OCI.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ph_name</parameter></term>
     <listitem>
      <para>
       Le marqueur.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>variable</parameter></term>
     <listitem>
      <para>
       La variable PHP.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>maxlength</parameter></term>
     <listitem>
      <para>
       Fixe la taille maximum pour la liaison. Si vous affectez une longueur
       <parameter>length</parameter> de -1,
       <function>oci_bind_by_name</function> utilisera la longueur de variable
       comme maximum <parameter>maxlength</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       Si vous devez lier des types abstraits de données (LOB/ROWID/BFILE),
       vous devrez l'allouer dans un premier temps, avec
       <function>ocinewdescriptor</function>. La longueur
       <parameter>length</parameter> ne sert pas pour ces types et
       devrait être fixée à -1. Le paramètre
       <parameter>type</parameter> indique au serveur Oracle, quel type de
       pointeur va être utilisé. Par défaut, vaut <constant>SQLT_CHR</constant>.
       Les valeurs possibles sont :
       <itemizedlist>
        <listitem>
         <para>
          <constant>SQLT_FILE</constant> - pour les BFILEs;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_CFILE</constant> - pour les CFILEs;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_CLOB</constant> - pour les CLOBs;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_BLOB</constant> - pour les BLOBs;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_RDD</constant> - pour les ROWIDs;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_NTY</constant> - Pour les types de données nommés;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_INT</constant> - pour les entiers;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_CHR</constant> - pour les VARCHAR;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_BIN</constant> - pour les colonnes RAW;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_LNG</constant> - pour les colonnes LONG;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_LBI</constant> - pour les colonnes LONG RAW;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_RSET</constant> - pour les curseurs, qui ont été créés
          auparavant avec la fonction <function>oci_new_cursor</function>.
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>oci_bind_by_name</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* Exemple ociBindByPos par thies@thieso.net (980221)
  Insère 3 lignes dans emp, et utilise ROWID pour mettre à jour
  les lignes, juste après l'insertion.
*/

$conn = oci_connect("scott", "tiger");

$stmt = oci_parse($conn, "
                          INSERT INTO
                                     emp (empno, ename)
                               VALUES
                                     (:empno,:ename)
                            RETURNING
                                     ROWID
                                 INTO
                                     :rid
                         ");

$data = array(
              1111 => "Larry",
              2222 => "Bill",
              3333 => "Jim"
             );

$rowid = oci_new_descriptor($conn, OCI_D_ROWID);

oci_bind_by_name($stmt, ":empno", $empno, 32);
oci_bind_by_name($stmt, ":ename", $ename, 32);
oci_bind_by_name($stmt, ":rid",   $rowid, -1, OCI_B_ROWID);

$update = oci_parse($conn, "
                            UPDATE
                                  emp
                               SET
                                  sal = :sal
                             WHERE
                                  ROWID = :rid
                           ");
oci_bind_by_name($update, ":rid", $rowid, -1, OCI_B_ROWID);
oci_bind_by_name($update, ":sal", $sal,   32);

$sal = 10000;

foreach ($data as $empno => $ename) {
    oci_execute($stmt);
    oci_execute($update);
}

$rowid->free();

oci_free_statement($update);
oci_free_statement($stmt);

$stmt = oci_parse($conn, "
                          SELECT
                                *
                            FROM
                                emp
                           WHERE
                                empno
                              IN
                                (1111,2222,3333)
                         ");
oci_execute($stmt);

while ($row = oci_fetch_assoc($stmt)) {
    var_dump($row);
}

oci_free_statement($stmt);

/* delete our "junk" from the emp table.... */
$stmt = oci_parse($conn, "
                          DELETE FROM
                                     emp
                                WHERE
                                     empno
                                   IN
                                     (1111,2222,3333)
                         ");
oci_execute($stmt);
oci_free_statement($stmt);

oci_close($conn);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   N'oubliez pas que cette fonction supprime les caractères d'espace
   terminaux. Par exemple :
  </para>
  <para>
   <example>
    <title>Exemple avec <function>oci_bind_by_name</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$connection = oci_connect('apelsin','kanistra');
$query = "INSERT INTO test_table VALUES(:id, :text)";

$statement = oci_parse($query);
oci_bind_by_name($statement, ":id", 1);
oci_bind_by_name($statement, ":text", "trailing spaces follow     ");
oci_execute($statement);
/*
 Ce code va insérer la chaîne 'trailing spaces follow',
 sans les espaces terminaux.
*/
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>oci_bind_by_name</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$connection = oci_connect('apelsin','kanistra');
$query = "INSERT INTO test_table VALUES(:id, 'trailing spaces follow      ')";

$statement = oci_parse($query);
oci_bind_by_name($statement, ":id", 1);
oci_execute($statement);
/*
 Ce code va insérer la chaîne 'trailing spaces follow      ',
 avec les espaces terminaux.
*/
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    C'est une mauvaise idée que d'utiliser les
    <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> et la fonction
    <function>oci_bind_by_name</function> simultanément, car aucun ajout de
    guillemets n'est nécessaire sur les variables citées, et tout
    guillemet magique sera inscrit dans votre base de données car
    <function>oci_bind_by_name</function> n'est pas capable de faire la
    différence entre les guillemets et ceux qui ont été ajoutés
    dynamiquement.
   </para>
  </warning>
  <note>
   <para>
    Dans les versions de PHP antérieures à la version 5.0.0,
    vous devez utiliser la fonction <function>ocibindbyname</function>. 
    Cet ancien nom est toujours utilisable : un alias a été fait vers
    la fonction <function>oci_bind_by_name</function>, pour assurer
    la compatibilité ascendante. Toutefois, il est recommandé de ne
    plus l'utiliser.
   </para>
  </note>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->