<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->
 <reference id="ref.oci8">
  <title>Oracle 8</title>
  <titleabbrev>oci8</titleabbrev>
  <partintro>
   <section id="oci8.intro">
    &reftitle.intro;
    <para>
     Ces fonctions vous permettront d'accéder aux serveurs Oracle8 et
     Oracle7. Elles utilisent l'interface Oracle8 Call-Interface (oci8).
     Vous aurez donc besoin des librairies clientes Oracle8 pour pouvoir
     les utiliser.
   </para>
   <para>
     Il faut noter que cette extension est plus souple que l'extension Oracle
     officielle. Elle supporte notamment les liaisons entre les variables
     globales et locales de PHP avec des emplacements Oracle; elle supporte
     complètement les types LOB, FILE et ROWID et vous permet
     d'utiliser des variables de définitions personnalisables.
  </para>
   </section>

   <section id="oci8.requirements">
    &reftitle.required;
   <para>
    Avant d'utiliser cette extension, assurez-vous que vous avez bien
    paramétré vos variables d'environnement Oracle, ainsi que votre
    démon utilisateur. Les variables dont vous pouvez avoir besoin sont :
    <itemizedlist>
     <listitem>
      <simpara>
       ORACLE_HOME
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ORACLE_SID
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       LD_PRELOAD
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       LD_LIBRARY_PATH
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       NLS_LANG
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ORA_NLS33
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Après avoir configuré ces variables pour votre utilisateur "serveur
    web", assurez-vous aussi d'ajouter cet utilisateur (nobody, www)
    au group Oracle.
   </para>
   <note>
    <title>
      Si votre serveur web ne démarre pas, ou crashe au démarrage
     </title>
    <para>
     Vérifiez que Apache a bien été compilé 
     avec la librairie pthread :
    </para>
    <para>
     <example>
      <title>Configuration Apache avec pthread</title>
      <programlisting>
<![CDATA[
# ldd /www/apache/bin/httpd 
    libpthread.so.0 => /lib/libpthread.so.0 (0x4001c000)
    libm.so.6 => /lib/libm.so.6 (0x4002f000)
    libcrypt.so.1 => /lib/libcrypt.so.1 (0x4004c000)
    libdl.so.2 => /lib/libdl.so.2 (0x4007a000)
    libc.so.6 => /lib/libc.so.6 (0x4007e000)
    /lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Si la libpthread n'est pas listée, vous devez réinstaller Apache :
    </para>
    <para>
     <example>
      <title>Reinstaller Apache avec pthread</title>
      <programlisting>
<![CDATA[
# cd /usr/src/apache_1.3.xx
# make clean
# LIBS=-lpthread ./config.status
# make
# make install
]]>
      </programlisting>
     </example>
    </para>
   </note>
   <para>
     Notez bien que sur certains systèmes comme UnixWare il faut utiliser
     libthread au lieu de libpthread. PHP et Apache doivent alors être configurés
     avec EXTRA_LIBS=-lthread.
   </para>
   </section>
   
	&reference.oci8.configure;

   <section id="oci8.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="oci8.resources">
    &reftitle.resources;
    <para>
    </para>
   </section>

   &reference.oci8.constants;

   <section id="oci8.examples">
   &reftitle.examples;
    <para>
    <example>
     <title>Exemple avec OCI8</title>
      <programlisting role="php">
<![CDATA[
<?php
// par sergo@bacup.ru

// Utilisez l'option: OCI_DEFAULT pour exécuter la commande avec exécution
// retardée.
OCIExecute($stmt, OCI_DEFAULT);

// pour lire les données, après un fetch : 

$result = OCIResult($stmt, $n);
if (is_object ($result)) $result = $result->load();

// Pour les commandes INSERT et UPDATE utilisez :

$sql = "insert into table (field1, field2) values (field1 = 'value',
 field2 = empty_clob()) returning field2 into :field2";
OCIParse($conn, $sql);
$clob = OCINewDescriptor($conn, OCI_D_LOB);
OCIBindByName ($stmt, ":field2", &$clob, -1, OCI_B_CLOB);
OCIExecute($stmt, OCI_DEFAULT);
$clob->save ("some text");
OCICommit($conn);

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Vous pouvez facilement accéder aux procédures stockées, de la même
    façon que vous le feriez par ligne de commande :
    <example>
     <title>Utilisation de procédures stockées</title>
      <programlisting role="php">
<![CDATA[
<?php
// par webmaster@remoterealty.com
$sth = OCIParse ( $dbh, "begin sp_newaddress( :address_id, '$firstname',
 '$lastname', '$company', '$address1', '$address2', '$city', '$state',
 '$postalcode', '$country', :error_code );end;" );

// Cela appelle la procédure stockée sp_newaddress, avec la variable :address_id 
// pour les entrées/sorties et :error_code comme variable de sortie.
// Ensuite, vous faites les liaisons suivantes : 

   OCIBindByName ( $sth, ":address_id", $addr_id, 10 );
   OCIBindByName ( $sth, ":error_code", $errorcode, 10 );
   OCIExecute ( $sth );

?>
]]>
     </programlisting>
    </example>
   </para>
   </section>

  </partintro>

&reference.oci8.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

