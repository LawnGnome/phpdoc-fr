<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<appendix xml:id="openssl.certparams" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Paramètres clés/certificats</title>
 <para>
  Un bon nombre de fonctions OpenSSL demandent une clé et un certificat
  comme paramètres. PHP 4.0.5 et plus récent utilisait
  des clés ou certificats sous forme de ressource, retournée
  par l'une des fonctions <literal>openssl_get_xxx()</literal>. Les versions
  ultérieures utilisent l'une des méthodes suivantes :
  <itemizedlist>
   <listitem>
    <para>
     Certificats
     <orderedlist>
      <listitem>
       <simpara>
        Une ressource X.509 retournée par
        <function>openssl_x509_read</function>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Une chaîne au format
        <filename>file://path/to/cert.pem</filename>;
        Le fichier ainsi repéré doit contenir un certificat,
        encodé au format PEM
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Une chaîne contenant le contenu d'un certificat, encodé
        au format PEM.
       </simpara>
      </listitem>
     </orderedlist>
    </para>
   </listitem>

   <listitem>
    <para>
     Clés publiques/privées
     <orderedlist>
      <listitem>
       <simpara>
        Une ressource clé, retournée par la fonction
        <function>openssl_get_publickey</function> ou
        <function>openssl_get_privatekey</function>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
       Pour les clés publiques seulement : une ressource
       X.509
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Une chaîne avec le format :
        <filename>file://path/to/file.pem</filename>.
        Le fichier doit contenir une clé privée, ou un certificat,
        encodé au format PEM (il peut contenir les deux).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Une chaîne contenant une clé ou un certificat
        encodé au format PEM
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Pour les clés privées, vous pouvez aussi utiliser la
        syntaxe <literal>array($key, $passphrase)</literal>, où
        <varname>$key</varname>
        représente une clé spécifiée par un
        fichier ou une représentation textuelle comme
        cité ci-dessus, et <varname>$passphrase</varname> représente une
        chaîne contenant la phrase de passe de cette clé privée.
       </simpara>
      </listitem>
     </orderedlist>
    </para> 
   </listitem>
  </itemizedlist>
 </para>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

