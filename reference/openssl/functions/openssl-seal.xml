<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/openssl.xml, last change in rev 1.1 -->
<!-- last change to 'openssl-seal' in en/ tree in rev 1.1 -->
  <refentry id="function.openssl-seal">
   <refnamediv>
    <refname>openssl_seal</refname>
    <refpurpose>Scelle des donn&eacute;es</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>openssl_seal</methodname>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
      <methodparam><type>string</type><parameter>sealed_data</parameter></methodparam>
      <methodparam><type>array</type><parameter>env_keys</parameter></methodparam>
      <methodparam><type>array</type><parameter>pub_key_ids</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>openssl_seal</function> retourne la longueur des donn&eacute;es
     scell&eacute;es en cas de succ&egrave;s, et &false; sinon.
     En cas de succ&egrave;s, les donn&eacute;es scell&eacute;es sont
     plac&eacute;es dans le param&egrave;tre <parameter>sealed_data</parameter>,
     et les cl&eacute;s d'enveloppe dans <parameter>env_keys</parameter>.
    </para>
    <para>
     <function>openssl_seal</function> scelle (chiffre) les donn&eacute;es
     <parameter>data</parameter> en utilisant l'algorithme RC4 avec une cl&eacute;
     secr&egrave;tre g&eacute;n&eacute;r&eacute;e al&eacute;atoirement. La cl&eacute;
     est chiffr&eacute;e avec chaque cl&eacute; publique associ&eacute;e &agrave;
     <parameter>pub_key_ids</parameter> et chaque cl&eacute; ainsi
     encrypt&eacute;e est retourn&eacute;e dans <parameter>env_keys</parameter>.
     Cela signifique que vous pouvez envoyez des donn&eacute;es scell&eacute;es
     &agrave; plusieurs destinataires (en supposant que chacun ait recu la
     cl&eacute; publique). Chaque destinataire doit recevoir les donn&eacute;es
     encrypt&eacute;es et la cl&eacute; d'enveloppe, qui a &eacute;t&eacute;
     encrypt&eacute;e avec la cl&eacute; publique du destinataire.
    </para>
    <para>
     <example>
      <title>Exemple avec <function>openssl_seal</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// On suppose que $data contient les donn&eacute;es &agrave; sceller
// lecture de la cl&eacute; publique pour chaque destinataire
$fp = fopen("/src/openssl-0.9.6/demos/maurice/cert.pem", "r");
$cert = fread($fp, 8192);
fclose($fp);
$pk1 = openssl_get_publickey($cert);
// pour le deuxi&egrave;me destinataire
$fp = fopen("/src/openssl-0.9.6/demos/sign/cert.pem", "r");
$cert = fread($fp, 8192);
fclose($fp);
$pk2 = openssl_get_publickey($cert);
// scelle le message : seuls, les possessuers de $pk1 et $pk2 peuvent d&eacute;chiffrer
// le message $sealed avec les cl&eacute;s $ekeys[0] et $ekeys[1] (respectivement).
openssl_seal($data, $sealed, $ekeys, array($pk1,$pk2));
// lib&egrave;re les cl&eacute;s de la m&eacute;moire
openssl_free_key($pk1);
openssl_free_key($pk2);
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Voir aussi
     <function>openssl_open</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
