<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->
<!-- splitted from ./en/functions/openssl.xml, last change in rev 1.19 -->
  <refentry id="function.openssl-csr-sign">
   <refnamediv>
    <refname>openssl_csr_sign</refname>
    <refpurpose>Signe un certificat avec un autre certificat</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>openssl_csr_sign</methodname>
      <methodparam><type>mixed</type><parameter>csr</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>cacert</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>priv_key</parameter></methodparam>
      <methodparam><type>int</type><parameter>days</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>openssl_csr_sign</function> génère un certificat x509 (une ressource)
     depuis la CSR <parameter>csr</parameter>, générée précédemment par
     <function>openssl_csr_new</function>, mais ce paramètre peut aussi être une
     CSR encodée au format PEM, et spécifiée avec 
     <filename>file://path/to/csr</filename> ou une chaîne exportée par 
     <function>openssl_csr_export</function>.
     Le certificat généré sera signé par le certificat
     <parameter>cacert</parameter>.  Si <parameter>cacert</parameter> vaut &null;,
     le certificat généré sera auto-signé. 
     <parameter>priv_key</parameter> est la clé privée qui correspond au certificat
     <parameter>cacert</parameter>.
     <parameter>days</parameter> spécifie la durée pour laquelle le certificat
     est valide, en nombre de jour.
    </para>
    <para>
     <function>openssl_csr_sign</function> retourne une ressource de certificat x509
     en cas de succès, et &false; sinon.
    </para>
    &reference.openssl.note-openssl-cnf;
    <para>
     <example>
      <title>Exemple avec <function>openssl_csr_sign</function> : signer une CSR 
      (comment réaliser votre propre autorité de certification)</title>
      <programlisting role="php">
<![CDATA[
// Supposont que ce script est configuré pour recevoir des CSR qui ont
// été collé dans un champ textarea depuis une autre page
$csrdata = $_POST["CSR"];

// Nous allons signer la requête avec notre propre certificat, en tant 
// qu'"autorité de certification". Vous pouvez utiliser n'importe quel
// certificat pour en signer un autre, mais le processus est inutile à moins
// que le certificat de signature n'ai la confiance des utilisateurs
// qui utiliseront le nouveau certificat signé.

// Nous avons besoin de notre certificat et de la clé privée
$cacert = "file://path/to/ca.crt";
$privkey = array("file://path/to/ca.key", "la_cle_secrete_de_votre_certificat");

$userscert = openssl_csr_sign($csrdata, $cacert, $privkey, 365);

// Affichons maintenant le certificat généré, ce façon à ce que l'utilisateur
// puisse le copier/coller dans leur configuration locale ( comme par exemple un
// fichier qui contient les certificats de leur serveur SSL)
openssl_x509_export($usercert, $certout) and echo $certout;

// Affiche toutes les erreurs survenues
while (($e = openssl_error_string()) !== false) {
    echo $e . "\n";
}

]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
