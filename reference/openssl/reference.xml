<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
 <reference id="ref.openssl">
  <title>OpenSSL</title>
  <titleabbrev>OpenSSL</titleabbrev>

  <partintro>
   <section id="openssl.intro">
   &reftitle.intro;
    <para>
    Cette extension utilise les fonctions de
    <ulink url="&url.openssl;">OpenSSL</ulink> pour générer
    et vérifier les signatures, ainsi que pour sceller (chiffrer)
    et ouvrir (déchiffrer) les données. Vous avez besoin de
    OpenSSL >= 0.9.5 pour utiliser ce module.
    </para>
   </section>

   <section id="openssl.requirements">
    &reftitle.required;
    <para>
     Afin de pouvoir utiliser les fonctions OpenSSL, vous devez installer les fonctions
     <ulink url="&url.openssl;">OpenSSL</ulink>.
     PHP-4.0.4pl1 requiert OpenSSL &gt;= 0.9.6, mais PHP-4.0.5 est
     plus récent fonctionneront aussi avec OpenSSL &gt;= 0.9.5.
    </para>
   </section>

   &reference.openssl.configure;

   <section id="openssl.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="openssl.resources">
    &reftitle.resources;
    <para>
    </para>
   </section>

   &reference.openssl.constants;

  <section id="openssl.certparams">
  <title>Paramètres clés/certificats</title>
   <para>
    Un bon nombre de fonctions OpenSSL demandent une clé et un certificat
    comme paramètres. PHP 4.0.5 et plus récent utilisait
    des clés ou certificats sous forme de ressource, retournée
    par l'une des fonctions openssl_get_xxx(). Les versions ultérieures
    utilisent l'une des méthodes suivantes :
    <itemizedlist>
     <listitem>
      <para>
       Certificats
       <orderedlist>
        <listitem>
         <simpara>
          Une ressource X.509 retournée par 
          <function>openssl_x509_read</function>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Une chaîne au format
          <filename>file://path/to/cert.pem</filename>;
          Le fichier ainsi repéré doit contenir un certificat,
          encodé au format PEM
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Une chaîne contenant le contenu d'un certificat, encodé
          au format PEM.
         </simpara>
        </listitem>
       </orderedlist>
      </para>
     </listitem>
  <listitem>
      <para>
       Clés publiques/privée
       <orderedlist>
        <listitem>
         <simpara>
          Une ressource clé, retournée par la fonction
          <function>openssl_get_publickey</function> ou
          <function>openssl_get_privatekey</function>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
         Pour les clés publiques seulement : une ressource
         X.509
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Une chaîne avec le format : 
          <filename>file://path/to/file.pem</filename>.
          Le fichier doit contenir une clé privé ou un certificat,
          encodé au format PEM (il peut contenir les deux).
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Une chaîne contenant une clé ou un certificat
          encodé au format PEM
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Pour les clés privées, vous pouvez aussi utiliser la
          syntaxe <emphasis>array($key, $passphrase)</emphasis>, où $key
          représente une clé spécifiée par un
          fichier ou une représentation textuelle comme 
          cité ci-dessus, et $passphrase représente une
          chaîne contenant la passe-phrase de cette clé
          privée.
         </simpara>
        </listitem>
       </orderedlist>
      </para>
     </listitem>
    </itemizedlist>
   </para>
  </section>
  <section id="openssl.cert.verification">
  <title>Vérification de certificats</title>
   <para>
    Lorsque vous appelez une fonction qui va vérifier une signature ou
    un certificat, le paramètre <emphasis>cainfo</emphasis> doit être un
    tableau contenant les noms d'un dossier et d'un fichier contenant les
    tiers de confiance. Si un dossier est spécifié, il doit être correct,
    car <command>openssl</command> va l'utiliser.
   </para>
   </section>

  </partintro>

&reference.openssl.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

