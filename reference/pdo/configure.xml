<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.6 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<section xml:id="pdo.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.install;
 <procedure xml:id='pdo.install.unix51up'>
  <title>PHP 5.1 et supérieur sur les systèmes Unix</title>
  <step>
   <para>
    Si vous exécutez une version 5.1 de PHP, PDO et 
    <link linkend="ref.pdo-sqlite">PDO_SQLITE</link> sont
    inclus dans cette distribution; il devrait être automatiquement 
    activé lorsque vous lancerez le script de configuration de PHP.
    Il est recommandé de compiler PDO en tant qu'extension partagée,
    ce qui vous permettra de mettre à jour PDO via PECL. Il est 
    également recommandé d'activer le support zlib (pour l'installeur
    PECL) lors de la compilation de PHP. Vous devriez également avoir
    besoin d'activer le pilote PDO correspondant à la base de données
    de votre choix ; consultez la documentation des 
    <link linkend="pdo.drivers">pilotes PDO spécifiques à une base de données</link> 
    pour plus d'informations, mais notez que si vous construisez PDO
    en tant qu'extension partagée, vous devez également construire 
    les pilotes PDO en tant qu'extensions partagées. L'extension SQLite
    dépend de PDO, donc, si PDO est construit en tant qu'extension partagée,
    SQLite doit être construit de la même manière.
    <screen>
<![CDATA[
./configure --with-zlib --enable-pdo=shared --with-pdo-sqlite=shared --with-sqlite=shared
]]>
    </screen>
   </para>
  </step>
  <step>
   <para>
    Après avoir installé PDO en tant que module partagé, vous devez éditer votre
    fichier &php.ini; afin que l'extension PDO soit chargée automatiquement lorsque
    PHP est lancé. Vous devez y activer également le driver spécifique à votre base
    de données ; assurez-vous qu'ils sont listés après la ligne pdo.so, car PDO
    doit être initialisé avant le chargement des extensions spécifiques à la base de données.
    Si vous avez compilé PDO et les extensions spécifiques à la base de données statiquement,
    vous pouvez sauter cette étape.
    <screen>
<![CDATA[
extension=pdo.so
]]>
    </screen>
   </para>
  </step>
  <step>
   <para>
    Le fait d'avoir PDO en tant que module partagé vous permet d'exécuter
    la commande <command>pecl upgrade pdo</command> pour mettre à jour
    votre version de PDO sans pour autant avoir besoin de recompiler complètement PHP.
    Notez que si vous faites cela, vous devez également mettre à jour votre driver PDO
    spécifique à votre base de données en même temps.
   </para>
  </step>
 </procedure>
 <procedure xml:id='pdo.install.pecl'>
  <title>PHP 5.0.0 et supérieur sur les systèmes Unix</title>
  <step>
   <para>
    PDO est disponible en tant qu'extension PECL depuis
    <link xlink:href='&url.pecl.package;pdo'>&url.pecl.package;pdo</link>.
    L'installation peut être faite via la commande <command>pecl</command> ;
    ceci est activé par défaut lorsque vous configurez PHP. Vous devriez vous assurer
    que PHP a été configuré avec --with-zlib pour pouvoir utiliser
    la commande <command>pecl</command> afin de gérer les paquets compressés.
   </para>
  </step>
  <step>
   <para>
    Exécutez la commande suivante pour télécharger, compiler et installer
    la dernière version stable de PDO :
    <screen>
<![CDATA[
pecl install pdo
]]>
    </screen>
   </para>
  </step>
  <step>
   <para>
    La commande <command>pecl</command> installe automatiquement
    le module PDO dans votre dossier d'extensions PHP. Pour activer l'extension
    PDO sous les systèmes Linux ou Unix, vous devez ajouter la ligne suivante
    dans votre fichier &php.ini; :
    <screen>
<![CDATA[
extension=pdo.so
]]>
    </screen>
   </para>
   <para>
    Pour plus d'informations sur la compilation de paquets PECL, consultez la section
    sur l'<link linkend="install.pecl">installation de PECL</link> du manuel.
   </para>
  </step>
 </procedure>
 <procedure xml:id='pdo.install.win32php51'>
  <title>Utilisateurs de Windows avec PHP 5.1.0 et supérieur</title>
  <step>
   <para>
    PDO ainsi que tous les drivers principaux interagissent avec PHP en tant
    qu'extensions partagées, et ont tout simplement besoin d'être activés en
    éditant le fichier &php.ini; :
    <screen>
<![CDATA[
extension=php_pdo.dll
]]>
    </screen>
   </para>
  </step>
  <step>
   <para>
    Ensuite, choisissez les autres fichiers DLL spécifiques à votre base de données
    et utilisez soit la fonction <function>dl</function> pour les charger
    au moment de l'exécution ou activer-les dans le fichier &php.ini; en dessous
    de la ligne <filename>php_pdo.dll</filename>. Par exemple :
    <screen>
<![CDATA[
extension=php_pdo.dll
extension=php_pdo_firebird.dll
extension=php_pdo_informix.dll
extension=php_pdo_mssql.dll
extension=php_pdo_mysql.dll
extension=php_pdo_oci.dll
extension=php_pdo_oci8.dll
extension=php_pdo_odbc.dll
extension=php_pdo_pgsql.dll
extension=php_pdo_sqlite.dll  
]]>
    </screen>
   </para>
   <para>
    Ces bibliothèques DDLs doivent exister dans le dossier système
    <link linkend="ini.extension-dir">extension_dir</link>.
    Notez que <link linkend="ref.pdo-informix">PDO_INFORMIX</link> est
    seulement disponible en tant qu'extension PECL.
   </para>
  </step>
 </procedure>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->