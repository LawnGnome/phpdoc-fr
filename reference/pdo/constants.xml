<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.16 $ -->
<!-- EN-Revision: 1.18 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<section xml:id="pdo.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;
 <warning>
  <para>
   PDO utilise les constantes de classe depuis &php; 5.1. Les versions antérieures
   utilisent les constantes globales sous la forme <constant>PDO_PARAM_BOOL</constant>.
  </para>
 </warning>
 <variablelist>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_BOOL</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Représente le type de données booléen.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_NULL</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Représente le type de données NULL SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_INT</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Représente le type de données INTEGER SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_STR</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Représente les types de données CHAR, VARCHAR ou les autres types de données
     sous forme de chaîne de caractères SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_LOB</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Représente le type de données "objet large" SQL.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_STMT</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Représente un type de jeu de résultats. N'est actuellement pas supporté par tous les drivers.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_INPUT_OUTPUT</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Spécifie que le paramètre est un paramètre INOUT pour une
     procédure stockée. Vous devez utiliser l'opérateur OR avec
     un type de données explicite PDO::PARAM_*.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_LAZY</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner chaque ligne
     en tant qu'objet avec les noms de variables correspondant aux noms des
     colonnes retournées dans le jeu de résultats. PDO::FETCH_LAZY crée les noms
     des variables de l'objet comme ils sont rencontrés.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_ASSOC</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner chaque ligne dans
     un tableau indexé par les noms des colonnes comme elles sont retournées
     dans le jeu de résultats correspondant. Si le jeu de résultats contient de multiples
     colonnes avec le même nom, PDO::FETCH_ASSOC retourne une seule valeur
     par nom de colonne.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_NAMED</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner chaque ligne dans
     un tableau indexé par les noms des colonnes comme elles sont retournées
     dans le jeu de résultats correspondant. Si le jeu de résultats contient de multiples
     colonnes avec le même nom, PDO::FETCH_NAMED retourne un tableau de valeurs
     par nom de colonne.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_NUM</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner chaque ligne dans
     un tableau indexé par le numéro des colonnes comme elles sont
     retournées dans le jeu de résultats correspondant, en commençant à 0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_BOTH</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner chaque ligne dans 
     un tableau indexé par les noms des colonnes ainsi que leurs numéros,
     comme elles sont retournées dans le jeu de résultats correspondant, en 
     commençant à 0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_OBJ</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner chaque ligne
     dans un objet avec les noms de propriétés correspondant aux noms
     des colonnes comme elles sont retournées dans le jeu de résultats.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_BOUND</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner &true; et assigner
     les valeurs des colonnes du jeu de résultats dans les variables &php; auxquelles
     elles sont liées avec la méthode 
     <function>PDOStatement::bindParam</function> ou la méthode
     <function>PDOStatement::bindColumn</function>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_COLUMN</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner uniquement une seule
     colonne demandée depuis la prochaine ligne du jeu de résultats.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_CLASS</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit retourner une nouvelle instance
     de la classe demandée, liant les colonnes aux propriétés nommées dans la classe.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_INTO</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Spécifie que la méthode de récupération doit mettre à jour une instance existante
     de la classe demandée, liant les colonnes aux propriétés nommées dans la classe.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_FUNC</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_GROUP</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_UNIQUE</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_KEY_PAIR</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Récupération dans un tableau lorsque la première colonne est une clé et
     tous les autres colonnes sont les valeurs
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_CLASSTYPE</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_SERIALIZE</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Disponible depuis &php; 5.1.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_PROPS_LATE</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Disponible depuis &php; 5.2.0
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO_ATTR_AUTOCOMMIT</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Si la valeur vaut &false;, PDO tente de désactiver l'auto-validation
     lorsque la connexion commence une transaction.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_PREFETCH</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Définir la taille de la pré-récupération vous permet d'accroître les performances
     de votre application. Toutes les combinaisons bases de données / drivers
     ne supportent pas cette fonctionnalité. Ceci accroît les performances au
     détriment de la consommation de mémoire vive.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_TIMEOUT</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Définit la valeur d'attente en secondes pour les communications
     avec la base de données.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_ERRMODE</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Voir la section sur les <link linkend='pdo.error-handling'>erreurs
      et la gestion des erreurs</link> pour plus d'informations sur cet attribut.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_SERVER_VERSION</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Attribut en lecture seule ; il retourne des informations sur la version de
     la base de données à laquelle PDO est connecté.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_CLIENT_VERSION</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Attribut en lecture seule ; il retourne des informations sur la version
     de la bibliothèque cliente utilisée par PDO.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_SERVER_INFO</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Attribut en lecture seule ; il retourne quelques meta-informations
     sur le serveur de base de données auquel PDO est connecté.

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_CONNECTION_STATUS</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_CASE</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Force les noms des colonnes dans une casse spécifiée par les constantes
     PDO::CASE_*.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_CURSOR_NAME</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Récupère ou définit le nom à utiliser pour un curseur. Très utile lors
     de l'utilisation de curseurs scrollables et des mises à jour positionnées.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_CURSOR</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Sélectionne le type de curseur. PDO supporte actuellement soit
     <constant>PDO::CURSOR_FWDONLY</constant>, soit
     <constant>PDO::CURSOR_SCROLL</constant>.  Conserver
     <constant>PDO::CURSOR_FWDONLY</constant> tant que vous savez que vous avez besoin
     d'un curseur scrollable.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_DRIVER_NAME</constant>
    (&string;)
   </term>
   <listitem>
    <simpara>
     Retourne le nom du driver.
    </simpara>
    <para>
     <example><title>Utilisation de PDO::ATTR_DRIVER_NAME</title>
      <programlisting role='php'>
<![CDATA[
<?php
if ($db->getAttribute(PDO::ATTR_DRIVER_NAME) == 'mysql') {
   echo "Utilisation de mysql ; fait quelque chose de spécifique à mysql ici\n";
}
?>
]]>
      </programlisting>
     </example>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_ORACLE_NULLS</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Convertit les chaînes vides en valeurs NULL SQL dans les données récupérées.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_PERSISTENT</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Demande une connexion persistante, plutôt que de créer une nouvelle connexion.
     Voir les <link linkend='pdo.connections'>connexions et le gestionnaire de connexion</link>
     pour plus d'informations sur cet attribut.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_STATEMENT_CLASS</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_FETCH_CATALOG_NAMES</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Ajoute le contenu du catalogue de noms dans chaque nom de colonnes retourné
     dans le jeu de résultat. Le catalogue de noms et les noms de colonnes
     sont séparés par un point (.). Le support de cet attribut n'est pas disponible pour tous les drivers ;
     il peut ne pas être disponible pour votre driver.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_FETCH_TABLE_NAMES</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Ajoute le contenu de la table de noms dans chaque nom de colonne retourné
     dans le jeu de résultats. La table de nom et les noms de colonnes sont
     séparés par un point (.). Le support de cet attribut n'est pas disponible pour tous les drivers ;
     il peut ne pas être disponible pour votre driver.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_STRINGIFY_FETCHES</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_MAX_COLUMN_LEN</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_DEFAULT_FETCH_MODE</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Disponible depuis &php; 5.2.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ATTR_EMULATE_PREPARES</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Disponible depuis &php; 5.1.3.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERRMODE_SILENT</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     N'envoie pas d'erreur ni d'exception si une erreur survient. Le développeur
     doit explicitement vérifier les erreurs. C'est le mode par défaut.
     Voir les <link linkend='pdo.error-handling'>erreurs et la gestion des erreurs</link>
     pour plus d'informations sur cet attribut.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERRMODE_WARNING</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Envoie une erreur de niveau E_WARNING si une erreur survient.
     Voir les <link linkend='pdo.error-handling'>erreurs et la gestion des erreurs</link>
     pour plus d'informations sur cet attribut.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERRMODE_EXCEPTION</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Lance une exception <classname>PDOException</classname> si une erreur survient.
     Voir les <link linkend='pdo.error-handling'>erreurs et la gestion des erreurs</link>
     pour plus d'informations sur cet attribut.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::CASE_NATURAL</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Laisse les noms de colonnes comme retournés par le driver de base de données.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::CASE_LOWER</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara> 
     Force les noms de colonnes en minuscule.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::CASE_UPPER</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Force les noms des colonnes en majuscule.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::NULL_NATURAL</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::NULL_EMPTY_STRING</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::NULL_TO_STRING</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_ORI_NEXT</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Récupère la prochaine ligne d'un jeu de résultats. Valide seulement pour les 
     curseurs scrollables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_ORI_PRIOR</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Récupère la ligne précédente d'un jeu de résultats. Valide seulement pour les 
     curseurs scrollables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_ORI_FIRST</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Récupère la première ligne d'un jeu de résultats. Valide seulement pour les 
     curseurs scrollables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_ORI_LAST</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Récupère la dernière ligne d'un jeu de résultats. Valide seulement pour les 
     curseurs scrollables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_ORI_ABS</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Récupère la ligne demandée par un numéro de ligne d'un jeu de résultats. 
     Valide seulement pour les curseurs scrollables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::FETCH_ORI_REL</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Récupère la ligne demandée par une position relative à la position courante
     du curseur d'un jeu de résultats. Valide seulement pour les curseurs scrollables.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::CURSOR_FWDONLY</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Crée un objet PDOStatement avec un curseur uniquement de retour. C'est 
     le choix par défaut pour le curseur, car il est rapide et l'accès aux données est commun
     pour les masques en &php;.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::CURSOR_SCROLL</constant>
     (&integer;)
   </term>
   <listitem>
    <simpara>
     Crée un objet PDOStatement avec un curseur scrollable. Passez la constante 
     PDO::FETCH_ORI_* pour contrôler les lignes récupérées du jeu de résultats.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::ERR_NONE</constant>
     (&string;)
   </term>
   <listitem>
    <simpara> 
     Correspond à SQLSTATE '00000', ce qui signifie que la requête SQL a réussi
     sans erreur, ni avertissement. Cette constante est utile lorsque vous utilisez
     <function>PDO::errorCode</function> ou
     <function>PDOStatement::errorCode</function> pour déterminer si une erreur
     est survenue. Cependant, vous devez déjà savoir si c'est le cas en examinant
     le code retourné par la méthode qui a lancée l'erreur.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_EVT_ALLOC</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Alloue un événement
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_EVT_FREE</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Désalloue un événement
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_EVT_EXEC_PRE</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Toujours faire un trigger avant l'éxécution d'une requête préparée.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_EVT_EXEC_POST</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Toujours effectuer un trigger de sous séquence avant l'exécution d'une requête préparée.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_EVT_FETCH_PRE</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Toujours effectuer un trigger avant de récupérer un résultat d'un jeu de résultats.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_EVT_FETCH_POST</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Toujours effectuer un trigger de sous séquence avant de récupérer un résultat d'un jeu de résultats.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PDO::PARAM_EVT_NORMALIZE</constant>
    (&integer;)
   </term>
   <listitem>
    <simpara>
     Toujours effectuer un trigger lors de l'enregistrement des paramètres
     liés permettant au driver de normaliser le nom des paramètres.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->