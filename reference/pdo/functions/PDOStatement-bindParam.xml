<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.3 Maintainer: yannick Status: ready -->
  <refentry id="function.PDOStatement-bindParam">
   <refnamediv>
    <refname>PDOStatement::bindParam</refname>
    <refpurpose>
     Lie un paramètre à un nom de variable spécifique
    </refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
    <methodsynopsis>
     <type>bool</type><methodname>PDOStatement::bindParam</methodname>
     <methodparam><type>mixed</type><parameter>parameter</parameter></methodparam>
     <methodparam><type>mixed</type><parameter role="reference">variable</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>data_type</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
    </methodsynopsis>
    &warn.experimental.func;
    <para>
     <function>PDOStatement::bindParam</function> lie le paramètre de requête
     SQL <parameter>parameter</parameter> à un nom de variable spécifique. Le
     paramètre de la requête SQL peut être soit un emplacement nommé, soit une
     marque  de positionnement.
    </para>
    <para>
     Les marqueurs seront remplacés par la valeur de la variable &php; 
     correspondante lors de l'exécution de la requête. Cela vous permet, par
     exemple, d'appeler des procédures stockées avec des paramètres d'entrée ou
     de sortie pour les bases de données supportant cette fonctionnalité.
    </para>
    <para>
     Pour les variables d'entrées uniquement, vous pouvez passer un tableau de
     valeurs à la fonction <function>PDOStatement::execute</function>.
    </para>
    <example>
     <title>
       Exécution d'une requête préparée avec des emplacements nommés
     </title>
     <programlisting role='php'>
<![CDATA[
<?php
/* Exécution d'une requête préparée en liant des variables PHP */
$calories = 150;
$couleur = 'rouge';
$sth = $dbh->prepare('SELECT nom, couleur, calories
    FROM fruit
    WHERE calories < :calories AND couleur = :couleur');
$sth->bindParam(':calories', $calories, PDO_PARAM_INT);
$sth->bindParam(':couleur', $couleur, PDO_PARAM_STR, 12);
$sth->execute();
?>
]]>
     </programlisting>
    </example>

    <example>
     <title>
       Exécution d'une requête préparée avec des marques de
       positionnement
     </title>
     <programlisting role='php'>
<![CDATA[
<?php
/* Exécution d'une requête préparée en liant des variables PHP */
$calories = 150;
$couleur = 'rouge';
$sth = $dbh->prepare('SELECT nom, couleur, calories
    FROM fruit
    WHERE calories < ? AND couleur = ?');
$sth->bindParam(1, $calories, PDO_PARAM_INT);
$sth->bindParam(2, $couleur, PDO_PARAM_STR, 12);
$sth->execute();
?>
]]>
     </programlisting>
    </example>



   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
