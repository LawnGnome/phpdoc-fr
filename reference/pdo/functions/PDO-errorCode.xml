<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.9 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry id="function.PDO-errorCode">
 <refnamediv>
  <refname>PDO->errorCode()</refname>
  <refpurpose>
   Retourne le SQLSTATE associé avec la dernière opération sur la base de données
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>PDO</classname></ooclass>
   <methodsynopsis>
    <type>string</type><methodname>errorCode</methodname>
    <void/>
   </methodsynopsis>
  </classsynopsis>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <xref linkend="function.PDO-errorCode" /> retourne un SQLSTATE,
   un identifiant alphanumérique de cinq caractères défini dans le standard AINSI SQL.
   Brièvement, un SQLSTATE consiste en une valeur de classe de deux caractères suivi
   par une valeur de sous-classe de trois caractères. Une valeur de classe de 01 indique
   une alerte et est accompagnée par un code de retour SQL_SUCCESS_WITH_INFO.
   Les valeurs de classes autre que '01', mis à part la classe 'IM', indiquent une erreur.
   La classe 'IM' est spécifique aux alertes et aux erreurs qui sont issus de l'implémentation
   elle-même de PDO (ou peut-être ODBC, si vous utilisez le driver ODBC).
   La valeur de sous-classe '000' dans n'importe quelle classe, indique qu'il n'y a pas de
   sous-classe pour cet SQLSTATE.
  </para>
  <para>
   <xref linkend="function.PDO-errorCode" /> retourne uniquement les codes erreurs 
   pour les opérations exécutées directement sur le gestionne de la base de données.
   Si vous créez un objet PDOStatement avec la fonction 
   <xref linkend="function.PDO-prepare" /> ou la fonction 
   <xref linkend="function.PDO-query" /> et que vous invoquez une erreur
   sur le gestionnaire de requête, <xref linkend="function.PDO-errorCode" /> ne
   retournera pas cette erreur. Vous devez appeler
   <xref linkend="function.PDOStatement-errorCode" /> pour retourner le code erreur
   pour une opération exécutée sur un gestionnaire de requête particulier.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Récupération d'un code SQLSTATE</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Provoque une erreur -- la table BONES n'existe pas */
$dbh->exec("INSERT INTO bones(skull) VALUES ('lucy')");

echo "\nPDO::errorCode(): ";
print $dbh->errorCode();
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
PDO::errorCode(): 42S02
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.PDO-errorInfo" /></member>
    <member><xref linkend="function.PDOStatement-errorCode" /></member>
    <member><xref linkend="function.PDOStatement-errorInfo" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->