<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.12 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry id="function.PDOStatement-execute">
 <refnamediv>
  <refname>PDOStatement->execute()</refname>
  <refpurpose>
   Exécute une requête préparée
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
<classsynopsis>
 <ooclass><classname>PDOStatement</classname></ooclass>
 <methodsynopsis>
  <type>bool</type><methodname>execute</methodname>
  <methodparam choice="opt"><type>array</type><parameter>input_parameters</parameter></methodparam>
 </methodsynopsis>
</classsynopsis>
  <para>
   Exécute une requête préparée. Si la requête préparée inclut des marqueurs
   de positionnement, vous pouvez :
   <itemizedlist>
    <listitem><para>appeler la fonction <xref linkend="function.PDOStatement-bindParam" />
    pour lier les variables &php; aux marqueurs de positionnement : les variables liées
    pssent leurs valeurs en entrée et recoivent les valeurs de sortie si'il y en a, de leurs
    marqueurs de positionnement respectifs</para></listitem>
    <listitem><para>ou passer un tableau de valeurs de paramètres, uniquement en entrée</para></listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>input_parameters</parameter></term>
     <listitem>
      <para>
       Un tableau de valeurs avec autant d'éléments qu'il y a de paramètres à
       associer dans la requête SQL qui sera exécutées.
      </para>
      <para>
       Vous ne pouvez associer plusieurs valeurs à un seul paramètre; par
       exemple, vous ne pouvez associer deux valeurs à un paramètre de nom
       dans une clause IN().
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exécute une requête préparée avec des variables liées</title>
   <programlisting role='php'>
<![CDATA[
<?php
/* Exécute une requête préparée en liant des variables PHP */
$calories = 150;
$couleur = 'rouge';
$sth = $dbh->prepare('SELECT nom, couleur, calories
    FROM fruit
    WHERE calories < :calories AND couleur = :couleur');
$sth->bindParam(':calories', $calories, PDO::PARAM_INT);
$sth->bindParam(':couleur', $couleur, PDO::PARAM_STR, 12);
$sth->execute();
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Exécute une requête préparée avec un tableau de valeurs (paramètres de nom)</title>
   <programlisting role='php'>
<![CDATA[
<?php
/* Exécute une requête préparée en passant un tableau de valeurs */
$calories = 150;
$couleur = 'rouge';
$sth = $dbh->prepare('SELECT nom, couleur, calories
    FROM fruit
    WHERE calories < :calories AND couleur = :couleur');
$sth->execute(array(':calories' => $calories, ':couleur' => $couleur));
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Exécute une requête préparée avec un tableau de valeurs (marqueurs)</title>
   <programlisting role='php'>
<![CDATA[
<?php
/* Exécute une requête préparée en passant un tableau de valeurs */
$calories = 150;
$colour = 'rouge';
$sth = $dbh->prepare('SELECT nom, couleur, calories
    FROM fruit
    WHERE calories < ? AND couleur = ?');
$sth->execute(array($calories, $couleur));
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Exécute une requête préparée avec un marqueur de positionnement</title>
   <programlisting role='php'>
<![CDATA[
<?php
/* Exécute une requête préparée en liant des variables PHP */
$calories = 150;
$couleur = 'rouge';
$sth = $dbh->prepare('SELECT nom, couleur, calories
    FROM fruit
    WHERE calories < ? AND couleur = ?');
$sth->bindParam(1, $calories, PDO::PARAM_INT);
$sth->bindParam(2, $couleur, PDO::PARAM_STR, 12);
$sth->execute();
?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.PDO-prepare" /></member>
    <member><xref linkend="function.PDOStatement-bindParam" /></member>
    <member><xref linkend="function.PDOStatement-fetch" /></member>
    <member><xref linkend="function.PDOStatement-fetchAll" /></member>
    <member><xref linkend="function.PDOStatement-fetchColumn" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->