<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.15 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry id="function.PDO-construct">
 <refnamediv>
  <refname>PDO::__construct</refname>
  <refpurpose>
   Crée une instance PDO qui représente une connexion à une base de données
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>PDO</type><methodname>PDO::__construct</methodname>
   <methodparam><type>string</type><parameter>dsn</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>driver_options</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>PDO::__construct</function> crée une instance PDO qui représente
   une connexion à la base de données désirée. 
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry><term>dsn</term>
     <listitem>
      <para>
       Le nom de la source de données, ou DSN, contient l'information nécessaire
       pour se connecter à la base de données.
      </para>
      <para>
       En général, un DSN consiste en un nom de driver PDO, suivit par deux points (:),
       suivit par la syntaxe spécifique au driver PDO. Plus d'informations sont fournies
       sur la documentation <link linkend="pdo.drivers">spécifique à chaque driver PDO</link>.
      </para>
      <para>
       Le paramètre <parameter>dsn</parameter> supporte trois méthodes 
       différentes de spécification des arguments requis pour créer une connexion
       à une base de données :
       <variablelist>
        <varlistentry><term>Invocation du Driver</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> contient le DSN complet.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry><term>Invocation d'une URI</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> consiste en l'<userinput>uri:</userinput>
           suivi par une URI qui définie l'emplacement d'un fichier contenant la chaîne DSN.
           L'URI peut spécifier un fichier local ou une URL distante.
          </para>
          <para><userinput>uri:file:///path/to/dsnfile</userinput></para>
         </listitem>
        </varlistentry>
        <varlistentry><term>Utilisation d'un alias</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> consiste en le nom 
           <parameter>name</parameter> qui équivaut à 
           <literal>pdo.dsn.<parameter>name</parameter></literal>
           du &php.ini; définissant la chaîne DSN.
          </para>
          <note>
           <para>
            L'alias doit être défini dans le &php.ini; et non pas dans un &htaccess;, ni dans le &httpd.conf;.
           </para>
          </note>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>username</term>
     <listitem>
      <para>
       Le nom d'utilisateur pour la chaîne DSN. Ce paramètre est optionnel pour 
       quelques drivers PDO.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>password</term>
     <listitem>
      <para>
       Le mot de passe pour la chaîne DSN. Ce paramètre est optionnel pour
       quelques drivers PDO.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry><term>driver_options</term>
     <listitem>
      <para>
       Un tableau clé=&gt;valeur contenant les options de connexion spécifiques
       au driver.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un objet PDO en cas de succès.
  </para>
 </refsect1>

 <refsect1 role="exceptions">
  &reftitle.exceptions;
  <para>
   <function>PDO::construct</function> lance une PDOException si la tentative
   de connexion à la base de données échoue.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Crée une instance PDO via une invocation de driver</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Connexion à une base de données ODBC en invoquant un driver */
$dsn = 'mysql:dbname=testdb;host=127.0.0.1';
$user = 'dbuser';
$password = 'dbpass';

try {
  $dbh = new PDO($dsn, $user, $password);
} catch (PDOException $e) {
  echo 'Echec de la connexion : ' . $e->getMessage();
}

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Création d'une instance PDO par invocation d'une URI</title>
    <para>
     L'exemple suivant présume que le fichier 
     <filename>/usr/local/dbconnect</filename> existe et que &php; y a les droits de 
     lecture. Le fichier contient le DSN PDO pour se connecter à une base de données 
     DB2 via le driver PDO_ODBC :
    </para>
    <screen>
<![CDATA[
odbc:DSN=SAMPLE;UID=john;PWD=mypass
]]>
    </screen>
    <para>
     Le script &php; peut maintenant créer une connexion à la base de données
     en passant simplement le paramètre <literal>uri:</literal> pointant vers le
     fichier URI :
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Connexion à une base de données ODBC en invoquant un driver */
$dsn = 'uri:file:///usr/local/dbconnect';
$user = '';
$password = '';

try {
  $dbh = new PDO($dsn, $user, $password);
} catch (PDOException $e) {
  echo 'Echec de la connexion : ' . $e->getMessage();
}

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Création d'une instance PDO en utilisant un alias</title>
    <para>
     L'exemple suivant présume que le &php.ini; contient l'entrée suivante pour activer
     une connexion à une base de données MySQL en utilisant uniquement l'alias
     <literal>mydb</literal>:
     <programlisting role="ini">
      [PDO]
      pdo.dsn.mydb="mysql:dbname=testdb;host=localhost"
     </programlisting>
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Connexion à une base de données ODBC en utilisant un alias */
$dsn = 'mydb';
$user = '';
$password = '';

try {
  $dbh = new PDO($dsn, $user, $password);
} catch (PDOException $e) {
  echo 'Echec de la connexion : ' . $e->getMessage();
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->