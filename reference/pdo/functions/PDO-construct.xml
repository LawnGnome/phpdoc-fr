<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->
  <refentry id="function.PDO-construct">
   <refnamediv>
    <refname>PDO::__construct</refname>
    <refpurpose>
     Crée une instance PDO qui représente une connexion à une base de données
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>PDO</type><methodname>PDO::__construct</methodname>
     <methodparam><type>string</type><parameter>dsn</parameter></methodparam>
     <methodparam><type>string</type><parameter>username</parameter></methodparam>
     <methodparam><type>string</type><parameter>password</parameter></methodparam>
     <methodparam choice="opt"><type>array</type><parameter>driver_opts</parameter></methodparam>
    </methodsynopsis>
    &warn.experimental.func;
    <para>
     <function>PDO::__construct</function> crée une instance PDO qui représente
     une connexion à la base de données désirée. Le aramètre <parameter>dsn</parameter>
     supporte trois méthodes différentes pour y spécifier les arguments requis
     pour créer la connexion à la base de données :
     <variablelist>
      <varlistentry><term>invocation du Driver</term>
       <listitem>
        <para>
         <parameter>dsn</parameter> consiste en le nom du driver PDO, suivi par
         deux points (<literal>:</literal>), suivi par la synthaxe spécifique de connexion
         du driver PDO. 
         Par exemple, <userinput>'odbc:DSN=SAMPLE;UID=db2inst1;PWD=ibmdb2'</userinput>
         créera une connexion PDO_ODBC à une base de données ODBC, tandis que
         <userinput>'mysql:host=127.0.0.1;dbname=testdb'</userinput> créera une connexion
         PDO_MYSQL à une base de données MySQL.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry><term>invocation d'une URI</term>
       <listitem>
        <para>
         <parameter>dsn</parameter> consiste en l'<userinput>uri:</userinput>
         suivi par une URI qui définie l'emplacement d'un fichier contenant la chaîne DSN.
         L'URI peut spécifier un fichier local ou une URL distante.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry><term>utilisation d'un alias</term>
       <listitem>
        <para>
         <parameter>dsn</parameter> consiste en le nom <parameter>name</parameter>
         qui équivaut à <literal>pdo.dsn.<parameter>name</parameter></literal>
         du &php.ini; définissant la chaîne DSN. <parameter>name</parameter> ne doit pas 
         contenir de doubles points (<literal>:</literal>).
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
     Si <parameter>username</parameter> ou <parameter>password</parameter>
     ne sont pas requis pour établir la connexion, vous devez y passer des chaînes vides
     sinon, le construction lancera une exception <literal>PDOException</literal>.
    </para>
    <example>
     <title>Création d'une instance PDO par invocation d'un driver</title>
     <programlisting role="php">
<![CDATA[
<?php
// Connexion à une base de données ODBC en invoquant un driver

$dsn = 'mysql:dbname=testdb;host=127.0.0.1';
$user = 'dbuser';
$password = 'dbpass';
try {
  $dbh = new PDO($dsn, $user, $password);
}
catch (PDOException $e) {
  echo 'Echec de la connexion : ' . $e->getMessage();
}
?>
]]>
     </programlisting>
    </example>
    <example><title>Création d'une instance PDO par invocation d'une URI</title>
     <para>
      L'exemple suivant présume que le fichier 
      <filename>/usr/local/dbconnect</filename> existe et que &php; y a les droits de lecture.
      Le fichier contient le DSN PDO pour se connecter à une base de données DB2
      via le driver PDO_ODBC :
     </para>
     <programlisting>
<![CDATA[
odbc:DSN=SAMPLE;UID=db2inst1;PWD=password
]]>
     </programlisting>
     <para>
      Le script &php; peut maintenant créer une connexion à la base de données
      en passant simplement le paramètre <literal>uri:</literal> pointant vers le
      fichier URI :
     </para>
     <programlisting role="php">
<![CDATA[
<?php
// Connexion à une base de données ODBC en invoquant un driver

$dsn = 'uri:file:///usr/local/dbconnect';
$user = '';
$password = '';
try {
  $dbh = new PDO($dsn, $user, $password);
}
catch (PDOException $e) {
  echo 'Echec de la connexion : ' . $e->getMessage();
}
?>
]]>
     </programlisting>
    </example>
    <example><title>Création d'une instance PDO en utilisant un alias</title>
     <para>
      L'exemple suivant présume que le &php.ini; contient l'entrée suivante pour activer
      une connexion à une base de données MySQL en utilisant uniquement l'alias
      <literal>mydb</literal>:
      <screen>pdo.dsn.mydb=mysql:dbname=testdb;host=127.0.0.1</screen>
     </para>
     <programlisting role="php">
<![CDATA[
<?php
// Connexion à une base de données ODBC en utilisant un alias

$dsn = 'mydb';
$user = '';
$password = '';
try {
  $dbh = new PDO($dsn, $user, $password);
}
catch (PDOException $e) {
  echo 'Echec de la connexion : ' . $e->getMessage();
}
?>
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
