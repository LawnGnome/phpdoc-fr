<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.1 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.PDO-query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO->query()</refname>
  <refpurpose>
   Exécute une requête SQL, retourne un jeu de résultats en tant 
   qu'objet PDOStatement
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>PDO</classname></ooclass>
   <methodsynopsis>
    <type>PDOStatement</type><methodname>query</methodname>
    <methodparam><type>string</type><parameter>statement</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>

  <classsynopsis>
   <ooclass><classname>PDO</classname></ooclass>
   <methodsynopsis>
    <type>bool</type><methodname>query</methodname>
    <methodparam><type>string</type><parameter>statement</parameter></methodparam>
    <methodparam><type>int</type><parameter>PDO::FETCH_COLUMN</parameter></methodparam>
    <methodparam><type>int</type><parameter>colno</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>

  <classsynopsis>
   <ooclass><classname>PDO</classname></ooclass>
   <methodsynopsis>
    <type>bool</type><methodname>query</methodname>
    <methodparam><type>string</type><parameter>statement</parameter></methodparam>
    <methodparam><type>int</type><parameter>PDO::FETCH_CLASS</parameter></methodparam>
    <methodparam><type>string</type><parameter>classname</parameter></methodparam>
    <methodparam><type>array</type><parameter>ctorargs</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>

  <classsynopsis>
   <ooclass><classname>PDO</classname></ooclass>
   <methodsynopsis>
    <type>bool</type><methodname>query</methodname>
    <methodparam><type>string</type><parameter>statement</parameter></methodparam>
    <methodparam><type>int</type><parameter>PDO::FETCH_INTO</parameter></methodparam>
    <methodparam><type>object</type><parameter>object</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>

  <para>
   <xref linkend="function.PDO-query" /> exécute une requête SQL
   en appelant une seule fonction, retourne le jeu de résultats (s'il y en a)
   retourné par la requête en tant qu'objet PDOStatement.
  </para>
  <para>
   Pour une requête que vous devez exécuter plusieurs fois, vous réaliserez
   de meilleurs performances si vous préparez l'objet PDOStatement en utilisant
   la fonction <xref linkend="function.PDO-prepare" /> et exécutez la requête
   via plusieurs appels à la fonction <xref linkend="function.PDOStatement-execute" />.
  </para>
  <para>
   Si vous ne récupérez pas toutes les données du jeux de résultats avant d'exécuter
   le prochain appel à <xref linkend="function.PDO-query" />, votre appel peut échouer.
   Appeler <xref linkend="function.PDOStatement-closeCursor" /> pour libérer les
   ressources de la base de données associées à l'objet PDOStatement avant d'exécuter
   votre prochain appel à la fonction <xref linkend="function.PDO-query" />.
  </para>
  <note>
   <para>
    Bien que la documentation de cette fonction autorise de passer un seul paramètre,
    vous pouvez y passer d'autres paramètres. Ils seront traités via l'appel à
    <xref linkend="function.PDOStatement-setFetchMode" /> sur le résultat du traitement
    de l'objet.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
      <listitem>
       <para>
        La requête SQL à préparer et à exécuter.
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    <xref linkend="function.PDO-query" /> retourne un objet PDOStatement.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec PDO::query</title>
    <para>
     Une fonctionnalité intéressante de <xref linkend="function.PDO-query" />
     est qu'il vous permet d'itérer à travers un jeu de résultats retourné
     par une requête SELECT exécutée avec succès.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
function getFruit($conn) {
  $sql = 'SELECT name, colour, calories FROM fruit ORDER BY name';
  foreach ($conn->query($sql) as $row) {
    print $row['NAME'] . "\t";
    print $row['COLOUR'] . "\t";
    print $row['CALORIES'] . "\n";
  }
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
apple   red     150
banana  yellow  250
kiwi    brown   75
lemon   yellow  25
orange  orange  300
pear    green   150
watermelon      pink    90
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.PDO-exec" /></member>
    <member><xref linkend="function.PDO-prepare" /></member>
    <member><xref linkend="function.PDOStatement-execute" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->