<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="pdo.rollback" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::rollBack</refname>
  <refpurpose>
   Annule une transaction
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>PDO::rollBack</methodname>
   <void/>
  </methodsynopsis>

  <para>
   Annule la transaction courante, initié par la fonction
   <function>PDO::beginTransaction</function>. C'est une erreur
   que d'appeler cette méthode s'il n'y a aucune transaction active.
  </para>
  <para>
   Si la base de données est en mode autocommit, cette fonction
   restaurera le mode autocommit après l'annulation de la transaction.
  </para>
  <para>
   Quelques bases de données, dont MySQL, exécuteront automatiquement un COMMIT
   lorsqu'une requête de définition de langage de base de données (DDL) comme
   DROP TABLE ou CREATE TABLE est exécutée dans une transaction. Ce COMMIT
   implicite vous empêchera d'annuler toutes autres modifications faites dans cette
   transaction.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Annulation d'une transaction</title>
    <para>
     L'exemple suivant commence une transaction et exécute deux requêtes
     qui modifient la base de données avant d'annuler les modifications. Sur MySQL,
     cependant, la requête DROP TABLE validera automatiquement la transaction,
     donc, aucune des modifications de la transaction ne sera annulée.
    </para>
    <programlisting role='php'>
<![CDATA[
<?php
/* Début d'une transaction, désactivation du mode autocommit */
$dbh->beginTransaction();

/* Modifie le schéma de la base de données ainsi que des données */
$sth = $dbh->exec("DROP TABLE fruit");
$sth = $dbh->exec("UPDATE dessert
    SET name = 'hamburger'");

/* On s'aperçoit d'une erreur et on annule les modifications */
$dbh->rollBack();

/* La connexion à la base de donnés revient en mode autocommit */
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::beginTransaction</function></member>
    <member><function>PDO::commit</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->