<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.10 Maintainer: yannick Status: ready -->
 <reference id="ref.pdo">
  <title>Fonctions PDO</title>
  <titleabbrev>pdo</titleabbrev>

  <partintro>
   <section id="pdo.intro">
   &reftitle.intro;
    <para>
     &warn.experimental;
     L'extension PDO définie une excellente interface pour accéder
     à une base de données en &php;. Chaque driver de base
     de données implémenté dans l'interface PDO peut utiliser
     des fonctionnalités spécifiques à chaque des bases de données 
     en utilisant des extensions de fonctions. Notez que vous ne pouvez
     exécuter aucune fonction de base de données en utilisant l'extension PDO
     par elle-même ; vous devez utiliser un <link linkend="pdo.drivers">driver
     PDO spécifique à la base de données</link> pour accéder au serveur de base
     de données.
    </para>
   </section>
   <section id="pdo.installation">
   &reftitle.install;
    <para>
     PDO est actuellement disponible en tant qu'extension PECL
     disponible sur <ulink url='&url.pecl.package;pdo'>&url.pecl.package;pdo</ulink>.
     Assurez-vous d'avoir installé la version CGI de &php; et que les scripts
     <command>pear</command> et <command>phpize</command> sont disponibles
     dans votre path courant.
    </para>
    <para>
     Exéutez la commande suivante pour télécharger, construire et installer 
     la dernière version stable de PDO : 
     <screen>
<![CDATA[
pear install pdo
]]>
     </screen>
    </para>
    <para>
     Les utilisateurs de Windows peuvent télécharger la bibliothèque DLL 
     <filename>pdo.dll</filename> en tant que partie de la collection PECL sur 
     <ulink url='&url.php.downloads;'>&url.php.downloads;</ulink>.
    </para>
    <para>
     La commande <command>pear</command> installe automatiquement
     le module PDO dans votre dossier d'extensions &php;. Pour activer l'extension
     PDO sous les systèmes Unix ou Linux, vous devez ajouter la ligne suivante 
     dans votre &php.ini; :
     <screen>
<![CDATA[
extension=php_pdo.so
]]>
     </screen>
     Pour activer l'extension PDO sous les systèmes Windows, vous devez
     ajouter la ligne suivante dans votre &php.ini; :
     <screen>
<![CDATA[
extension=pdo.dll
]]>
     </screen>
    </para>
   </section>
   <section id="pdo.drivers">
    <title>Drivers PDO</title>
    <para>
     Les drivers suivants sont actuellement implémentés dans l'interface PDO :
     <itemizedlist>
      <listitem>
       <para>
	PDO_FIREBIRD - Firebird/Interbase 6
       </para>
      </listitem>
      <listitem>
       <para>
	PDO_MYSQL - MySQL 3.x/4.0
       </para>
      </listitem>
      <listitem>
       <para>
	PDO_OCI - Oracle Call Interface
       </para>
      </listitem>
      <listitem>
       <para>
	PDO_ODBC - ODBC v3 (IBM DB2 et unixODBC)
       </para>
      </listitem>
      <listitem>
       <para>
	PDO_PGSQL - PostgreSQL
       </para>
      </listitem>
      <listitem>
       <para>
	PDO_SQLITE - SQLite 3.x
       </para>
      </listitem>
     </itemizedlist>
    </para>
   </section>

   <section id='pdo.classes'>
    &reftitle.classes;
    <section id='pdo.class.PDO'>
     <title><classname>PDO</classname></title>
     <para>
      Représente une connexion entre &php; et un serveur de base de données.
     </para>
     <section id='pdo.class.PDO.constructor'>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para><link linkend='function.PDO-construct'>PDO</link> - construit un 
	nouvel objet PDO</para>
       </listitem>
      </itemizedlist>
     </section>
     <section id='pdo.class.PDO.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><link linkend='function.PDO-beginTransaction'>beginTransaction
        </link> - démarre une transaction</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDO-commit'>commit</link> - valide une 
	transaction</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDO-exec'>exec</link> - exécute une requête 
	SQL</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDO-errorCode'>errorCode</link> -
         récupère un code erreur s'il y en a de disponible depuis la base de données</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDO-errorInfo'>errorInfo</link> -
        récupère un tableau d'informations d'erreurs s'il y en a de disponible 
        depuis la base de données</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDO-lastInsertId'>lastInsertId</link> -
        récupère la valeur de la dernière ligne qui a été insérée dans la table</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDO-prepare'>prepare</link> - 
         prépare une requête SQL pour l'exécution</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDO-rollBack'>rollBack</link> - 
         annule une transaction</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDO-setAttribute'>setAttribute</link> -
         définie un attribut de connexion à une base de données</para>
       </listitem>
      </itemizedlist>
     </section>
    </section>
    <section id='pdo.class.PDOStatement'>
     <title><classname>PDOStatement</classname></title>
     <para>Représente une requête préparée et, après son exécution,
     un jeu de résultats associatif.</para>
     <section id='pdo.class.Statement.methods'>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para><link linkend='function.PDOStatement-bindColumn'>bindColumn</link> - 
         lie une variable &php; à une colonne de sortie dans le jeu de résultats</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDOStatement-bindParam'>bindParam</link> - 
         lie une variable &php; à un paramètre dans la requête préparée</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDOStatement-errorCode'>errorCode</link> -
         récupère un code erreur s'il y en a depuis la requête</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDOStatement-errorInfo'>errorInfo</link> -
         récupère un tableau d'informations d'erreurs s'il y en a, depuis la requête</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDOStatement-execute'>execute</link> - 
         exécute une requête préparée</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDOStatement-fetch'>fetch</link> - 
         récupère une ligne depuis un jeu de résultats</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDOStatement-fetchAll'>fetchAll</link> - 
         récupère un tableau contenant toutes les lignes d'un jeu de résultats</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDOStatement-fetchSingle'>fetchSingle</link> - 
         retourne les données de la première colonne dans le jeu  de résultats</para>
       </listitem>
       <listitem>
        <para><link linkend='function.PDOStatement-rowCount'>rowCount</link> - 
         retourne le nombre de lignes qui ont été affectées par l'exécution d'un requête SQL</para>
       </listitem>
      </itemizedlist>
     </section>
    </section>
   </section>
  &reference.pdo.constants;
  </partintro>
 &reference.pdo.functions;
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
