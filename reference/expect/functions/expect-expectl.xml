<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.7 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->

<refentry id="function.expect-expectl">
 <refnamediv>
  <refname>expect_expectl</refname>
  <refpurpose>Attend jusqu'à ce que la sortie d'un processus corresponde à un
  des motifs, un période de temps spécifique est passée ou un EOF est vu
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>expect_expectl</methodname>
   <methodparam><type>resource</type><parameter>expect</parameter></methodparam>
   <methodparam><type>array</type><parameter>cases</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">match</parameter></methodparam>
  </methodsynopsis>
  <para>
   Attend jusqu'à ce que la sortie d'un processus corresponde à un
   des motifs, un période de temps spécifique est passée ou un EOF est vu.
  </para>
  <para>
   Si le paramètre <parameter>match</parameter> est fourni, alors il est
   rempli avec le résultat de la recherche.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>expect</parameter></term>
     <listitem>
      <para>
       Un flux de données Expect, ouvert précédemment avec
       <function>expect_popen</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cases</parameter></term>
     <listitem>
      <para>
       Un tableau des cas expect. Chaque cas expect est un tableau indexé,
       comme décrit dans la table suivante :
       <table>
        <title>Expect Case Array</title>
        <tgroup cols="5">
         <thead>
          <row>
           <entry>Clé Index</entry>
           <entry>Type Valeur</entry>
           <entry>Description</entry>
           <entry>Est Obligatoire</entry>
           <entry>Valeur par Défaut</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>0</entry>
           <entry>string</entry>
           <entry>motif, qui sera vérifié avec la sortie du flux</entry>
           <entry>oui</entry>
           <entry></entry>
          </row>
          <row>
           <entry>1</entry>
           <entry>mixed</entry>
           <entry>
            valeur, qui sera retournée par cette fonction, si le motif
            concorde
           </entry>
           <entry>oui</entry>
           <entry></entry>
          </row>
          <row>
           <entry>2</entry>
           <entry>integer</entry>
           <entry>
            type de motif, un de :
            <link linkend="constants.expect.exp_glob"><constant>EXP_GLOB</constant></link>,
            <link linkend="constants.expect.exp_exact"><constant>EXP_EXACT</constant></link>
            ou <link linkend="constants.expect.exp_regexp"><constant>EXP_REGEXP</constant></link>
           </entry>
           <entry>non</entry>
           <entry><link linkend="constants.expect.exp_glob"><constant>EXP_GLOB</constant></link></entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne une valeur associée avec le motif qui correspond.
  </para>
  <para>
   En cas d'échec, cette fonction retourne :
   <link linkend="constants.expect.exp_eof"><constant>EXP_EOF</constant></link>,
   <link linkend="constants.expect.exp_timeout"><constant>EXP_TIMEOUT</constant></link>
   ou <link linkend="constants.expect.exp_fullbuffer"><constant>EXP_FULLBUFFER</constant></link>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>expect_expectl</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Copie le fichier à partir de l'hôte distant :
ini_set ("expect.timeout", 30);

$stream = fopen ("expect://scp user@remotehost:/var/log/messages /home/user/messages.txt", "r");

$cases = array (
  array (0 => "password:", 1 => PASSWORD),
  array (0 => "yes/no)?", 1 => YESNO)
);

while (true) {
 switch (expect_expectl ($stream, $cases))
 {
  case PASSWORD:
   fwrite ($stream, "password\n");
   break;

  case YESNO:
   fwrite ($stream, "yes\n");
   break;

  case EXP_TIMEOUT:
  case EXP_EOF:
   break 2;

  default:
   die ("Une erreur s'est produite !\n");
 }
}

fclose ($stream);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>expect_popen</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->