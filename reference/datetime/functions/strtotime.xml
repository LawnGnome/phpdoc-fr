<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.36 $ -->
<!-- EN-Revision: 1.29 Maintainer: dams Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.strtotime" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtotime</refname>
  <refpurpose>Transforme un texte anglais en timestamp</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>strtotime</methodname>
   <methodparam><type>string</type><parameter>time</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>now</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   <function>strtotime</function> essaye de lire une date au format
   anglais US dans la chaîne <parameter>time</parameter>,
   et de la transformer en timestamp Unix (le nombre de secondes depuis
   le 1er Janvier 1970 à 00:00:00 UTC), relativement au timestamp
   <parameter>now</parameter>, ou à la date courante si ce dernier
   est omis.
  </simpara>
  <para>
   Cette fonction devrait utiliser la variable d'environnement <envar>TZ</envar> (si
   disponible) pour calculer le timestamp. Depuis PHP 5.1.0, il y a une façon
   simple de définir un fuseau horaire à utiliser avec toutes les fonctions de date/heure.
   Le processus est expliqué dans la page du manuel de la fonction
   <function>date_default_timezone_get</function>.
  </para>
  <note>
   <para>
    Si l'année est spécifiée sur deux chiffres, les valeurs entre 00 et 69
    correspondent aux années entre 2000 et 2069 et les valeurs entre 70 et 99
    correspondent aux années entre 1970 et 1999. Voyez les notes
    ci-dessous pour les cas particuliers sur les systèmes 32 bits (les
    dates sont peut être limitées au 19 janvier 2038, 03:14:07).
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>time</parameter></term>
     <listitem>
      <para>
       La chaîne à analyser. Avant PHP 5.0.0, les microsecondes n'étaient pas
       autorisées dans l'heure ; depuis PHP 5.0.0, elles sont autorisées,
       mais seront ignorées.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>now</parameter></term>
     <listitem>
      <para>
       Le timestamp, représentant la date courante, utilisé pour le calcul
       relative des dates.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un timestamp en cas de succès, &false; sinon. Avant PHP 5.1.0,
   cette fonction retournait <literal>-1</literal> en cas d'échec.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &date.timezone.errors.description;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        La fonction retourne maintenant &false; en cas d'échec, au lieu de
        <literal>-1</literal>.
       </entry>
      </row>
      &date.timezone.errors.changelog;
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>strtotime</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo strtotime("now"), "\n";
echo strtotime("10 September 2000"), "\n";
echo strtotime("+1 day"), "\n";
echo strtotime("+1 week"), "\n";
echo strtotime("+1 week 2 days 4 hours 2 seconds"), "\n";
echo strtotime("next Thursday"), "\n";
echo strtotime("last Monday"), "\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Vérification d'erreur</title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'Pas bon';

// Avant PHP 5.1.0, vous devez comparer avec  -1, au lieu de false
if (($timestamp = strtotime($str)) === false) {
   echo "La chaîne ($str) est boguée";
} else {
   echo "$str == " . date('l dS \o\f F Y h:i:s A', $timestamp);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    En PHP 5 supérieur à 5.0.2, <literal>"now"</literal> et les autres 
    valeurs de temps relatives sont incorrectement calculées depuis
    minuit du jour courant. Ce comportement diffère des versions antérieures
    où elles étaient correctement calculées depuis l'heure courante.
   </para>
  </warning>
  <warning>
   <para>
    Dans les versions antérieures à PHP 4.4.0, <literal>"next"</literal>
    est calculé de façon incorrecte comme +2. Une solution consiste à utiliser
    <literal>"+1"</literal>.
   </para>
  </warning>
  <note>
   <para>
    L'intervalle de validité d'un timestamp va du 
    Vendredi 13 Décembre 1901 20:45:54 UTC au Mardi 19 Janvier 2038 03:14:07 UTC.
    (Cela correspond aux dates maximales et minimales pour un
    entier de 32 bits signé.)
    Toutes les plates-formes ne supportent pas les timestamp négatifs et dans ce cas,
    l'intervalle de date sera limitée à environs l'époque Unix. Cela signifie que
    les dates antérieures au 1 Janvier 1970 ne fonctionneront pas sous Windows,
    quelques distributions Linux et quelques autres systèmes. PHP 5.1.0 ainsi que
    les versions plus récentes outrepassent cette limitation.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strptime</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->