<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/datetime.xml, last change in rev 1.20 -->
<!-- last change to 'strtotime' in en/ tree in rev 1.8 -->
 <refentry id="function.strtotime">
  <refnamediv>
   <refname>strtotime</refname>
   <refpurpose>
    Transforme un texte anglais en timestamp
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>strtotime</methodname>
      <methodparam><type>string</type><parameter>time</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>now</parameter></methodparam>
     </methodsynopsis>
   <para>
    <function>strtotime</function> essaye de lire une date au format
    anglais dans la chaîne <parameter>time</parameter>,
    et de la transformer en timestamp UNIX, relativement au timestamp
    <parameter>now</parameter>, ou à la date courante si ce dernier
    est omis. En cas d'erreur, <literal>-1</literal> est retourné.
    </para>
    <para>
     Comme <function>strtotime</function> suit la syntaxe de date GNU,
     vous pouvez lire le manuel GNU intitulé 
     <ulink url="&url.gnu.man.date-input;">Date Input Formats</ulink>.
     Ci-dessous, vous trouverez une syntaxe valide pour le paramètre 
     <parameter>time</parameter>.
    </para>
    <para>
    <example>
     <title>Exemple avec <function>strtotime</function></title>
     <programlisting role="php">
<![CDATA[
<?php
// l'exemple n'est pas traduit, car cela ne fonctionne qu'en anglais
echo strtotime ("now"), "\n";
echo strtotime ("10 September 2000"), "\n";
echo strtotime ("+1 day"), "\n";
echo strtotime ("+1 week"), "\n";
echo strtotime ("+1 week 2 days 4 hours 2 seconds"), "\n";
echo strtotime ("next Thursday"), "\n";
echo strtotime ("last Monday"), "\n";
?>
]]>
     </programlisting>
    </example>
   </para>
    <para>
     <example>
      <title>V&eacute;rification des erreurs avec <function>strtotime</function></title>
      <programlisting role="php">
<![CDATA[
$str = 'Pas une bonne date';
if (($timestamp = strtotime($str)) === -1) {
    echo "La cha&icirc;ne ($str) est bogus";
} else {
    echo "$str == ". date('l dS of F Y h:i:s A',$timestamp);
}
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      L'intervalle de validit&eacute; d'un timestamp va du 
      Vendredi 13 D&eacute;cembre 1901 20:45:54 GMT au Mardi 19 Jan 2038 03:14:07 GMT : 
      cela correspond aux dates maximales et minimales pour un
      entier de 32 bits sign&eacute;.
     </para>
    </note>

  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
