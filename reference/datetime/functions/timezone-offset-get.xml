<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.timezone-offset-get" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>timezone_offset_get</refname>
  <refpurpose>Retourne le décalage du fuseau horaire</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>timezone_offset_get</methodname>
   <methodparam><type>DateTimeZone</type><parameter>object</parameter></methodparam>
   <methodparam><type>DateTime</type><parameter>datetime</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>int</type><methodname>DateTimeZone::getOffset</methodname>
   <methodparam><type>DateTime</type><parameter>datetime</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction retourne le décalage horaire depuis GMT pour la date/heure
   spécifiée dans le paramètre <parameter>datetime</parameter>.
   Le décalage horaire depuis GMT est calculé avec les informations depuis le
   fuseau horaire contenues dans l'objet DateTime utilisé.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &date.datetimezone.description;
    <varlistentry>
     <term><parameter>datetime</parameter></term>
     <listitem>
      <para>
       DateTime qui contient la date/heure pour calculer le décalage horaire.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne le décalage du fuseau horaire en seconde en cas de succès ou
   &false; en cas d'échec.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>timezone_offset_get</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Création de deux objets de fuseau horaire, un pour Taipei (Taiwan) et un pour
// Tokyo (Japon)
$dateTimeZoneTaipei = new DateTimeZone("Asia/Taipei");
$dateTimeZoneJapan = new DateTimeZone("Asia/Tokyo");

// Création de deux objets DateTime qui contiendront le même timestamp Unix, mais
// avec des fuseaux horaires différents attachés.
$dateTimeTaipei = new DateTime("now", $dateTimeZoneTaipei);
$dateTimeJapan = new DateTime("now", $dateTimeZoneJapan);

// Calcul le décalage horaire depuis GMT pour la date/heure contenue dans l'objet $dateTimeTaipei,
// mais en utilisant les règles du fuseau horaire définies pour Tokyo
// ($dateTimeZoneJapan).
$timeOffset = $dateTimeZoneJapan->getOffset($dateTimeTaipei);

// Devrait afficher int(32400) (pour les dates après Sat Sep 8 01:00:00 1951 JST).
var_dump($timeOffset);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
