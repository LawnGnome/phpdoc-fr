<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 291214 Maintainer: jpauli Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="datetime.createfromformat" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>DateTime::createFromFormat</refname>
  <refpurpose>Retourne un nouvel objet <classname>DateTime</classname> formaté</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type>DateTime</type><methodname>DateTime::createFromFormat</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam><type>string</type><parameter>time</parameter></methodparam>
   <methodparam choice="opt"><type>DateTimeZone</type><parameter>timezone</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retourne un nouvel objet <classname>DateTime</classname> formaté.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       Format accepté par <function>date</function>.
      </para>
      <para>
       Si <parameter>format</parameter> n'est pas composé du caractère
       <literal>!</literal> alors les valeurs de date/time spécifiées
       dans <parameter>format</parameter> mais absentes de
       <parameter>time</parameter> prendront comme valeur le temps système.
      </para>
      <para>
       Si <parameter>format</parameter> contient le caractère
       <literal>!</literal>, alors le temps précisé dans la partie gauche
       du <literal>!</literal> dans <parameter>format</parameter> prendront
       une valeur mesurée depuis Unix epoch.
      </para>
      <para>
       Si le premier caractère de <parameter>format</parameter>
       est <literal>!</literal>, alors toutes les valeurs de date/time
       non présentes dans <parameter>time</parameter> seront initialisées
       relativement à Unix epoch.
      </para>
      <para>
       Unix epoch est le 01/01/1970 à 00:00:00 UTC.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>time</parameter></term>
     <listitem>
      <para>
       Chaîne représentant l'heure.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timezone</parameter></term>
     <listitem>
      <para>
       Fuseau horaire.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un nouvel objet <classname>DateTime</classname>&return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Utiliser<literal>!</literal> pour remettre à zéro les valeurs de
     date/time</title>
    <programlisting role="php">
<![CDATA[
<?php
echo "Date système courante: " . date('Y-m-d H:i:s') . "\n";

$format = 'Y-m-d';
$dt = DateTime::createFromFormat($format, '2009-02-03');
echo "Format: $format; " . $dt->date . "\n";

$format = 'Y-m-d H:i:s';
$dt = DateTime::createFromFormat($format, '2009-02-03 15:16:17');
echo "Format: $format; " . $dt->date . "\n";

$format = 'Y-m-!d H:i:s';
$dt = DateTime::createFromFormat($format, '2009-02-03 15:16:17');
echo "Format: $format; " . $dt->date . "\n";

$format = '!Y-m-d';
$dt = DateTime::createFromFormat($format, '2009-02-03');
echo "Format: $format; " . $dt->date . "\n";
?>
]]>
    </programlisting>
    <para>
     L'exemple ci-dessus devrait afficher quelque chose comme cela:
    </para>
    <screen>
<![CDATA[
Date système courante: 2009-09-13 01:04:03
Format: Y-m-d; 2009-02-03 01:04:03
Format: Y-m-d H:i:s; 2009-02-03 15:16:17
Format: Y-m-!d H:i:s; 1970-01-03 15:16:17
Format: !Y-m-d; 2009-02-03 00:00:00
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DateTime::__construct</methodname></member>
    <member><methodname>DateTime::getLastErrors</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
