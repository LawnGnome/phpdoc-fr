<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/mnogosearch.xml, last change in rev 1.8 -->
<!-- last change to 'udm-find' in en/ tree in rev 1.18 -->
 <refentry id="function.udm-find">
  <refnamediv>
   <refname>udm_find</refname>
   <refpurpose>Effectue une recherche</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>udm_find</methodname>
     <methodparam><type>int</type><parameter>agent</parameter></methodparam>
     <methodparam><type>string</type><parameter>query</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>udm_add_search_limit</function> retourne
    &true; en cas de succès, et
    &false; en cas d'erreur.
   </para>
   <para>
    La recherche en elle-même. Le premier argument <parameter>agent</parameter>
    est la session, le second est la <parameter>query</parameter>.
    Pour rechercher, entrez les mots avec lesquels que vous voulez
    faire une recherche, puis cliquez sur le bouton d'envoi.
    Par exemple, "<literal>mysql odbc</literal>". Vous ne devez
    pas utiliser de guillemets doubles <literal>"</literal>, car
    ils sont utilisés par mnoGoSearch pour séparer une requête en
    mots. Avec l'exemple ci-dessus, mnoGoSearch va rechercher les
    pages contenant "mysql" et/ou "odbc". Les meilleures réponses
    seront classées en premier, et affichées en tête de liste.
    Si vous sélectionnez le mode de recherche "tous" ("ALL"), la recherche
    va retourner les documents qui contiennent l'un ou l'autre
    des mots que vous avez entré. Dans le cas où vous utilisez le
    mode "ANY", la recheche retourne la lsite des documents qui contiennent
    l'un ou l'autre des mots. Si vous voulez accéder aux fonctions
    avancées de recherche, vous pouvez utiliser le mode "BOOL", qui
    vous permet d'entrer directement des requêtes.
   </para>
   <para>
    mnoGoSearch utilise les opérateurs booléean suivants :
   </para>
   <para>
    &amp; - AND, ET logique. Par exemple, &quot;mysql &amp;
    odbc&quot;. mnoGoSearch recherche toutes les URL qui contiennent
    à la fois les mots &quot;mysql&quot; et &quot;odbc&quot;.
   </para>
   <para>
    | -  OR, OU logique. Par exemple, &quot;mysql |
    odbc&quot;. mnoGoSearch recherche toutes les URL qui contiennent
    soit &quot;mysql&quot;, soit &quot;odbc&quot;.
   </para>
   <para>
    ~ - NOT, NON logique. Par exemple, &quot;mysql &amp; ~odbc&quot;.
    mnoGoSearch recherche toutes les URL qui contiennent le
    mot &quot;mysql&quot; mais ne contiennent pas le mot &quot;odbc&quot;.
    Attention : la requête &quot;~odbc&quot; ne trouvera rien!
   </para>
   <para>
    () - Groupage de commandes pour les requêtes complexes : par exemple,
    &quot;(mysql | msql) &amp; ~postgres&quot;.  Le mode par requête est
    simple et puissant à la fois. Vous pouvez utiliser les commandes
    booléennes habituelles avec ce mode.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
