<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->

<!-- splitted from ./fr/functions/mnogosearch.xml, last change in rev 1.8 -->
<!-- last change to 'udm-alloc-agent' in en/ tree in rev 1.18 -->
 <refentry id="function.udm-alloc-agent">
  <refnamediv>
   <refname>udm_alloc_agent</refname>
   <refpurpose>Alloue une session mnoGoSearch</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>resource</type><methodname>udm_alloc_agent</methodname>
     <methodparam><type>string</type><parameter>dbaddr</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>dbmode</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>udm_alloc_agent</function> retourne un agent mnogosearch
    en cas de succès, &false; en cas d'erreur.
    <function>udm_alloc_agent</function> crée une session avec les
    paramètres de base de données.
   </para>
   <para>
    <parameter>dbaddr</parameter> est une description de base de données
    formaté comme une URL. Les options (type, hôte, nom de base de données,
    port, utilisateur ou mot de passe) servent à se connecter à
    la base de données SQL.
    Ne passez aucune valeur si vous souhaitez utiliser le support des fichiers
    texte intégré. Sinon, utilisez le format :
    <literal>DBAddr DBType:[//[DBUser[:DBPass]@]DBHost[:DBPort]]/DBName/</literal>.
    Actuellement, les valeurs de DBType possibles sont :
    mysql, pgsql, msql, solid, mssql, oracle, ibase. En fait, si vous avez ajouté
    un support natif, cette option est inutile. Mais les utilisateurs ODBC doivent
    spécifier une des valeurs supportées.
    Si votre type de base de données n'est pas
    supporté, utilisez le terme "unknown".
   </para>
   <para>
    <parameter>dbmode</parameter> - Vous pouvez sélectionner le mode de stockage
    des mots dans la base de données. Si vous indiquez "single", tous les mots seront
    sotckés dans la même table. Si vous indiquez "multi", les mots seront situés
    dans différentes tables, suivant leur taille. Le mode "multi" est
    généralement plus rapide, mais requiert plus de tables. Si
    le mode "crc" est sélectionné, mnoGoSearch
    enregistrera un entier de 32 bits, calculé avec l'algorithme CRC32, plutôt que des
    des mots. Ce mode requiert moins d'espace disque, et il est beaucoup plus rapide
    que les modes "single" et "multi". "crc-multi" utilise la même technique de stockage que
    le mode "crc", mais il stocke aussi les mots dans différentes tables suivant leur
    taille. Format: DBMode single/multi/crc/crc-multi.
   </para>
   <note>
    <para>
     <parameter>dbaddr</parameter> et <parameter>dbmode</parameter> doit correspondre
     à ceux qui sont utilisés lors de l'indexation.
    </para>
   </note>
   <note>
    <para>
     En réalité, <function>udm_alloc_agent</function> n'ouvre
     pas de connexion, et donc, ne vérifie ni le nom d'utilisateur,
     ni le mot de passe.
    </para>
   </note>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
