<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.ps-get-buffer" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ps_get_buffer</refname>
  <refpurpose>Récupère le tampon complet contenant les données PS générées</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>ps_get_buffer</methodname>
   <methodparam><type>resource</type><parameter>psdoc</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction n'est pas encore implémentée. Elle retournera toujours une
   chaîne de caractères vide. L'idée pour une future implémentation est
   d'écrire le contenu du fichier postscript dans un tampon interne si
   création en mémoire est demandée et de retourner le contenu du tampon avec
   la fonction.
   Présentement, les documents créés en mémoire sont envoyés au navigateur
   sans utilisation de tampon.
  </para>
  &warn.undocumented.func;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>psdoc</parameter></term>
     <listitem>
      <para>
       Identifiant d'un fichier postscript retourné par
       <function>ps_new</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ps_open_file</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

