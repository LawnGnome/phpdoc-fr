<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 283822 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.mcrypt-encrypt" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mcrypt_encrypt</refname>
  <refpurpose>Chiffre un texte</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>mcrypt_encrypt</methodname>
   <methodparam><type>string</type><parameter>cipher</parameter></methodparam>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam><type>string</type><parameter>mode</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>iv</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>mcrypt_encrypt</function> chiffre les données, et retourne
   les données chiffrées.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>cipher</parameter></term>
     <listitem>
      <para>
       Une des constantes <literal>MCRYPT_ciphername</literal>,
       contenant le nom de l'algorithme, sous forme de &string;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       La clé avec laquelle les données seront chiffrées. Si elle est plus
       petite que sa taille demandée, elle sera complétée avec des 
       '<literal>\0</literal>'. Il est mieux de ne pas utiliser des clés
       ASCII.
      </para>
      <para>
       Il est recommandé d'utiliser les fonctions mhash pour créer des 
       clés à partir d'une chaîne.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Les données qui seront chiffrées, avec l'algorithme et le mode indiqué. 
       Si la taille des données n'est pas un multiple de la taille de bloc,
       les données seront complétées par des caractères '<literal>\0</literal>',
       autant que nécessaire.
      </para>
      <para>
       Le texte chiffré retourné peut être plus long que la taille des données
       passées en argument via <parameter>data</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Une des constantes <literal>MCRYPT_MODE_modename</literal>,
       parmi les valeurs de <literal>"ecb"</literal>, <literal>"cbc"</literal>, 
       <literal>"cfb"</literal>, <literal>"ofb"</literal>, 
       <literal>"nofb"</literal> et <literal>"stream"</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iv</parameter></term>
     <listitem>
      <para>
       Ce paramètre est utilisé pour l'initialisation en modes CBC, CFB et OFB, 
       et dans certains algorithmes en mode STREAM. Si vous ne fournissez pas de 
       vecteur d'initialisation et que l'algorithme en requiert un, la fonction
       va émettre une alerte, et utiliser un vecteur d'initialisation 
       entièrement constitué de '<literal>\0</literal>'.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne les données chiffrées, sous forme de &string;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>mcrypt_encrypt</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$iv_size = mcrypt_get_iv_size(MCRYPT_RIJNDAEL_256, MCRYPT_MODE_ECB);
$iv = mcrypt_create_iv($iv_size, MCRYPT_RAND);
$key = "This is a very secret key";
$text = "Meet me at 11 o'clock behind the monument.";
echo strlen($text) . "\n";

$crypttext = mcrypt_encrypt(MCRYPT_RIJNDAEL_256, $key, $text, MCRYPT_MODE_ECB, $iv);
echo strlen($crypttext) . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
42
64
]]>
    </screen>
   </example>
  </para>
  <para>
   Voir aussi
   <function>mcrypt_module_open</function> pour une meilleure API et
   un exemple.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
