<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.8 Maintainer: didou Status: ready -->
<!-- Reviewed: yes -->
  <refentry id="function.mcrypt-create-iv">
   <refnamediv>
    <refname>mcrypt_create_iv</refname>
    <refpurpose>Crée un vecteur d'initialisation à partir d'une
    source aléatoire
   </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>mcrypt_create_iv</methodname>
      <methodparam><type>int</type><parameter>size</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>source</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>mcrypt_create_iv</function> sert à créer un IV
     (vecteur d'initialisation).
    </para>
    <para>
     Le paramètre <parameter>size</parameter> détermine la taille de IV,
     le paramètre <parameter>source</parameter> (par défaut, un nombre aléatoire)
     spécifie la source de IV.
    </para>
    <para>
     La source peut être <constant>MCRYPT_RAND</constant> (générateur de
     nombres aléatoires système), <constant>MCRYPT_DEV_RANDOM</constant>
     (lecture des données depuis le fichier <filename>/dev/random</filename>) et
     <constant>MCRYPT_DEV_URANDOM</constant> (lecture des données depuis
      le fichier <filename>/dev/urandom</filename>). <constant>MCRYPT_RAND</constant>
      est la seule à être supportée sous Windows car Windows (bien sûr) n'a pas de fichier
      du type <filename>/dev/random</filename> ou du type
     <filename>/dev/urandom</filename>.
    </para>
    <note>
     <para>
      Lorsque vous utilisez <constant>MCRYPT_RAND</constant>, rappelez-vous d'appeler
      la fonction <function>srand</function> avant la fonction
      <function>mcrypt_create_iv</function> pour initialiser le générateur de
      nombres aléatoires ; ce n'est pas effectué automatiquement comme c'est le cas
      pour la fonction <function>rand</function>.
     </para>
    </note>
    <para>
     <example>
      <title>Exemple avec <function>mcrypt_create_iv</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$size = mcrypt_get_iv_size(MCRYPT_CAST_256, MCRYPT_MODE_CFB);
$iv = mcrypt_create_iv($size, MCRYPT_DEV_RANDOM);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Le VI est uniquement une solution alternative pour initialiser les
     routines de chiffrement. Le VI n'a pas besoin d'être spécifiquement
     secret, même si c'est mieux. Vous pouvez même l'envoyer avec vos
     données chiffrées sans perdre de sécurité.
    </para>
    <para>
     Plus d'informations sont disponibles sur les sites de
     <ulink url="&url.mcrypt.iv;">&url.mcrypt.iv;</ulink>,
     <ulink url="&url.mcrypt.bcm;">&url.mcrypt.bcm;</ulink> et dans le chapitre
     9.3 du livre "Applied Cryptography" de Schneier (ISBN 0-471-11709-9).
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
