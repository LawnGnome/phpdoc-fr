<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.9 Maintainer: didou Status: ready -->
<!-- Reviewed: yes -->
  <refentry id="function.mcrypt-module-open">
   <refnamediv>
    <refname>mcrypt_module_open</refname>
    <refpurpose>
      Ouvre le module de l'algorithme et du mode à utiliser
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>mcrypt_module_open</methodname>
      <methodparam><type>string</type><parameter>algorithm</parameter></methodparam>
      <methodparam><type>string</type><parameter>algorithm_directory</parameter></methodparam>
      <methodparam><type>string</type><parameter>mode</parameter></methodparam>
      <methodparam><type>string</type><parameter>mode_directory</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>mcrypt_module_open</function> ouvre le module de l'algorithme et du mode à utiliser.
     Le nom de l'algorithme est spécifié par le paramètre
     <parameter>algorithm</parameter> (par exemple : "twofish"), ou bien une des
     constantes MCRYPT_ciphername. La bibliothèque est refermée en appelant
     mcrypt_module_close, mais il n'est pas nécessaire
     d'appeler cette fonction si <function>mcrypt_generic_end</function> est
     utilisé. Normalement, <function>mcrypt_module_open</function>
     retourne un pointeur de cryptage, ou bien &false; en cas d'erreur.
    </para>
    <para>
     <parameter>algorithm_directory</parameter> et
     <parameter>mode_directory</parameter> servent à repérer les
     modules de cryptage. Si vous fournissez un nom de dossier, il sera
     utilisé.
     Si vous passez une chaîne vide (""), la valeur utilisé par
     <parameter>mcrypt.algorithms_dir</parameter> ou
     <parameter>mcrypt.modes_dir</parameter> sera celle indiquée dans les
     directives de configuration. Lorsque ces paramètres ne sont pas fournis
     les valeurs par défaut, compilées avec la bibliothèque, sont
     utilisées. (Généralement /usr/local/lib/libmcrypt.)
    </para>
    <para>
     <example>
      <title>Exemple avec <function>mcrypt_module_open</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$td = mcrypt_module_open(MCRYPT_DES, '',
        MCRYPT_MODE_ECB, '/usr/lib/mcrypt-modes');

$td = mcrypt_module_open('rijndael-256', '', 'ofb', '');
?>
]]>
      </programlisting>
     </example>
     L'exemple ci-dessus va essayer d'ouvrir le module de chiffrement par
     DES, dans le dossier par défaut, et le mode EBC dans le dossier
     /usr/lib/mcrypt-modes.
    </para>
    <para>
     <example>
      <title>Utilisation de <function>mcrypt_module_open</function> pour encrypter</title>
      <programlisting role="php">
<![CDATA[
<?php
/* Charge un chiffrement */
$td = mcrypt_module_open('rijndael-256', '', 'ofb', '');

/* Crée le VI et détermine la taille de la clé */
$iv = mcrypt_create_iv(mcrypt_enc_get_iv_size($td), MCRYPT_DEV_RANDOM);
$ks = mcrypt_enc_get_key_size($td);

/* Crée la clé */
$key = substr(md5('very secret key'), 0, $ks);

/* Intialise le chiffrement */
mcrypt_generic_init($td, $key, $iv);

/* Chiffre les données */
$encrypted = mcrypt_generic($td, 'This is very important data');

/* Libère le gestionnaire de chiffrement */
mcrypt_generic_deinit($td);

/* Initialise le module de chiffrement pour le déchiffrement */
mcrypt_generic_init($td, $key, $iv);

/* Déchiffre les données */
$decrypted = mdecrypt_generic($td, $encrypted);

/* Libère le gestionnaire de déchiffrement, et ferme le module */
mcrypt_generic_deinit($td);
mcrypt_module_close($td);

/* Affiche la chaîne */
echo trim($decrypted)."\n";
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     La première ligne de l'exemple ci-dessus va essayer d'ouvrir le chiffrement
     DES, dans le dossier par défaut, et le mode EBC dans le dossier
     <filename>/usr/lib/mcrypt-modes</filename>. Le second exemple utilise
     les chaînes comme nom pour le chiffrement et le mode. Cela ne fonctionne
     que si l'extension est compilée avec libmcrypt 2.4.x or 2.5.x.
    </para>
    <para>
     Voir aussi
     <function>mcrypt_module_close</function>,
     <function>mcrypt_generic</function>,
     <function>mdecrypt_generic</function>,
     <function>mcrypt_generic_init</function> et
     <function>mcrypt_generic_deinit</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
