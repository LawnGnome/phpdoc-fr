<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/mcrypt.xml, last change in rev 1.2 -->
<!-- last change to 'mdecrypt-generic' in en/ tree in rev 1.7 -->
<refentry id="function.mdecrypt-generic">
   <refnamediv>
    <refname>mdecrypt_generic</refname>
    <refpurpose>Déchiffre</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>mdecrypt_generic</methodname>
      <methodparam><type>resource</type><parameter>td</parameter></methodparam>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>mdecrypt_generic</function> déchiffre les données 
     <parameter>data</parameter>. Notez que la longueur de
     la chaîne déchiffrée peut être plus longue que
     la chaîne originale, car elle peut avoir été
     complétée par des caractères "<literal>\0</literal>".
    </para>
    <para>
     <example>
      <title>Exemple avec <function>mdecrypt_generic</function></title>
      <programlisting role="php">
<![CDATA[
<?php
    /* Données */
    $key = 'Ceci est une très longue clé de chiffrement, voire même trop longue';
    $plain_text = 'Ceci sont des données importantes';
   
    /* Ouvre le module et crée un VI */ 
    $td = mcrypt_module_open ('des', '', 'ecb', '');
    $key = substr ($key, 0, mcrypt_enc_get_key_size ($td));
    $iv_size = mcrypt_enc_get_iv_size ($td);
    $iv = mcrypt_create_iv ($iv_size, MCRYPT_RAND);

    /* Initialise le module de chiffrement */
    if (mcrypt_generic_init ($td, $key, $iv) != -1) {

        /* Chiffre les données */
        $c_t = mcrypt_generic ($td, $plain_text);
        mcrypt_generic_deinit ($td);

        /* Réinitialise les buffers pour le déchiffrement */
        mcrypt_generic_init ($td, $key, $iv);
        $p_t = mdecrypt_generic ($td, $c_t);

        /* Nettoye */
        mcrypt_generic_deinit ($td);
        mcrypt_module_close ($td);
    }

    if (strncmp ($p_t, $plain_text, strlen($plain_text)) == 0) {
        echo "ok\n";
    } else {
        echo "erreur\n";
    }
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     L'exemple ci-dessus montre comment vérifier que les données avant
     chiffrage sont bien les mêmes que celles après
     chiffrage/déchiffrage. Il est très important de réinitialiser
     le buffer de chiffrement avec <function>mcrypt_generic_init</function> 
     avant que nous ne déchiffriez les données.
    </para>
    <para>
     Le gestionnaire de déchiffrement doit toujours être initialisé
     par la fonction <function>mcrypt_generic_init</function> avec une clée 
     et un VI avant d'appeler cette fonction. Lorsque le chiffrement est fait,
     il faut que vous libérirez les données chiffrées en appelant 
     <function>mcrypt_generic_deinit</function>.
     Voir <function>mcrypt_module_open</function> pour un exemple.
    </para>
    <para>
     Voir aussi
     <function>mcrypt_generic</function>,
     <function>mcrypt_generic_init</function> et
     <function>mcrypt_generic_deinit</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
