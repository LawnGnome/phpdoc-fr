<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.2 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry id="function.classkit-method-copy">
 <refnamediv>
  <refname>classkit_method_copy</refname>
  <refpurpose>Copie une méthode d'une classe vers une autre classe</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>classkit_method_copy</methodname>
   <methodparam><type>string</type><parameter>dClass</parameter></methodparam>
   <methodparam><type>string</type><parameter>dMethod</parameter></methodparam>
   <methodparam><type>string</type><parameter>sClass</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>sMethod</parameter></methodparam>
  </methodsynopsis>
  &warn.experimental.func;
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dClass</parameter></term>
     <listitem>
      <para>
       Classe de destination de la méthode copiée
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dMethod</parameter></term>
     <listitem>
      <para>
       Nom de la nouvelle méthode
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sClass</parameter></term>
     <listitem>
      <para>
       Classe source contenant la méthode à copier
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sMethod</parameter></term>
     <listitem>
      <para>
       Nom de la méthode à copier depuis la classe source. Si ce paramètre est omis,
       la valeur du paramètre <parameter>dMethod</parameter> est utilisée.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <!-- No changelog: it's only in PECL. -->
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>classkit_method_copy</function></title>
    <programlisting role="php">
<![CDATA[
<?php
class Foo {
    function example() {
        return "foo!\n";
    }
}

class Bar {
    // initialement, aucune méthode
}

// copie la méthode example() depuis la classe Foo vers la classe Bar et la nommer baz()
classkit_method_copy('Bar', 'baz', 'Foo', 'example');

// affiche la fonction copiée
echo Bar::baz();
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
foo!
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>classkit_method_add</function></member>
    <member><function>classkit_method_redefine</function></member>
    <member><function>classkit_method_remove</function></member>
    <member><function>classkit_method_rename</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
