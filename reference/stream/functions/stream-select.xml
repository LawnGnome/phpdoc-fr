<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->
  <refentry id="function.stream-select">
   <refnamediv>
    <refname>stream_select</refname>
    <refpurpose>Runs the equivalent of the select() system call on the given 
     arrays of streams with a timeout specified by tv_sec and tv_usec </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>stream_select</methodname>
      <methodparam><type>resource</type><parameter>&amp;read</parameter></methodparam>
      <methodparam><type>resource</type><parameter>&amp;write</parameter></methodparam>
      <methodparam><type>resource</type><parameter>&amp;except</parameter></methodparam>
      <methodparam><type>int</type><parameter>tv_sec</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>tv_usec</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>stream_select</function> accepte un tableau de flux et
     attend que l'un d'entre eux change de statut. Cette opération est équivalente
     à ce que fait la fonction <function>socket_select</function>, ormis le fait qu'elle
     travaille sur flux.
    </simpara>
    <simpara>
     Les flux qui sont listés dans le paramètre <parameter>read</parameter> seront
     surveillés en lecture, c'est à dire si de nouveaux octets sont disponibles
     en lecture (pour être précis, si une lecture ne bloquera pas, ce qui inclut
     aussi les flux qui sont en fin de fichier, auquel cas un appel à la fonction
     <function>fread</function> retournera une chaîne de taille 0).
    </simpara>
    <simpara>
     Les flux qui sont listés dans le paramètre <parameter>write</parameter> 
     seront surveillé en écriture (pour être précis, si une écriture ne 
     bloquera pas).
    </simpara>
    <simpara>
     Les flux qui sont listés dans le paramètre <parameter>except</parameter> 
     seront surveillé pour voir si une exception est levée.
    </simpara>
    <warning>
     <para>
      Lors de la fin de la fonction, les tableaux sont modifiés pour rapporter
      leurs évolutions respectives.
     </para>
    </warning>
    <simpara>
     Vous n'êtes pas obligés de passer tous les tableaux à la fonction
     <function>stream_select</function>. Vous pouvez en omettre certains,
     en utilisant un tabeau vide ou la valeur &null;. N'oubliez pas que ces
     tableaux sont passés <emphasis>par référence</emphasis> et qu'ils seront
     modifiés lorsque <function>stream_select</function> s'achèvera.
    </simpara>
    <para>
     Exemple
     <programlisting role="php">
<![CDATA[
<?php
/* Preparation du tableau de flux lecture */
$read = array($stream1, $stream2);

if (false === ($num_changed_streams = stream_select($read, $write = NULL, $except = NULL, 0))) {
    /* Gestion d'erreur */
} elseif ($num_changed_streams > 0) {
    /* Au moins un des flux a évolué  */
}
?>
]]>
     </programlisting>
    </para>
    <note>
     <para>
      A cause d'une limitation du Zend Engine actuel, il n'est pas possible
      de passer la valeur &null; directement comme paramètre d'une fonction
      qui s'attend à des paramètres passés par référence. Au lieu de cela,
      il est recommandé d'utiliser une variable temporaire, ou une expression
      don le membre de gauche est une variable temporaire. Comme ceci : 
      <programlisting role="php">
<![CDATA[
<?php
  stream_select($r, $w, $e = NULL, 0);
?>
]]>
     </programlisting>
     </para>
    </note>
    <simpara>
     Les paramètres <parameter>tv_sec</parameter> et <parameter>tv_usec</parameter>
     ensemle forment le délai d'expiration. Ce délai est la durée maximale
     d'exécution de <function>stream_select</function>.
     <parameter>tv_sec</parameter> peut valoir zéro, ce qui fait que
     <function>stream_select</function> s'achève immédiatement. C'est pratique
     pour réaliser du polling. Si <parameter>tv_sec</parameter> est &null; (pas de
     délai d'expiration), <function>stream_select</function> peut bloquer le script
     indéfiniment.
    </simpara>
    <simpara>
     En cas de succès, <function>stream_select</function> retourne le nomre de
     flux qui ont évolué, ce qui peut être zéro si le délai d'expiration
     a été atteint avant que les flux n'évoluent. En cas d'erreur, la 
     fonction retourne &false;.
    </simpara>
    <note>
     <para>
     Assurez vous de bien utiliser l'opérateur <literal>===</literal> lorsque vous
     recherchez des erreurs. Comme <function>stream_select</function> peut retourner
     0, une comparaison effectuée à l'aide de <literal>==</literal> 
     la confondrait avec une erreur.
     <programlisting role="php">
<![CDATA[
<?php
if (false === stream_select($r, $w, $e = NULL, 0)) {
    echo "stream_select() failed\n";
}
?>
]]>
     </programlisting>
     </para>
    </note>
    <note>
     <para>
      Gardez à l'esprit que certaines implémentations de flux doivent
      être gérées très prudemment. Voici quelques règles à suivre :
      <itemizedlist>
       <listitem>
        <simpara>
         Il faut toujours essayer d'utiliser <function>stream_select</function>
         sans délai d'expiration. Votre programme ne devrait rien faire si
         il ne reçoit pas de données extérieures. Les codes qui dépendent du
         délai d'expiration ne sont généralement pas portable, et difficiles
         à déboguer.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Si vous avez écrit ou lu dans un flux qui retournés dans les tableaux
         de flux, soyez bien conscient que ces flux n'ont peut être pas écrit
         ou lu la  totalité des données demandées. Soyez préparés à être en 
         mesure de lire un seul octet.
        </simpara>
       </listitem>
      </itemizedlist>
     </para>
    </note>
    <para>
     Voir aussi
     <function>stream_set_blocking</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
