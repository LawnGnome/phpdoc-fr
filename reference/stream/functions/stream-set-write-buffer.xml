<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./en/functions/filesystem.xml, last change in rev 1.2 -->
  <refentry id="function.stream-set-write-buffer">
   <refnamediv>
    <refname>stream_set_write_buffer</refname>
    <refpurpose>Configure la bufferisation de fichier pour un flux</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>stream_set_write_buffer</methodname>
      <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
      <methodparam><type>int</type><parameter>buffer</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>fwrite</function> est habituellement configur&eacute; avec
     un buffer de 8ko. Cela signifie que si deux processus veulent
     &eacute;crirent dans le m&ecirc;me flux de sortie (par exemple, un fichier),
     ils font une pause tous les 8ko pour laisser l'autre &eacute;crire aussi.
     <function>stream_set_write_buffer</function>
     configure la taille du buffer des op&eacute;rations d'&eacute;critures pour
     le flux <parameter>stream</parameter> avec la nouvelle valeur de
     <parameter>buffer</parameter> octets. Si <parameter>buffer</parameter> 
     vaut 0, les op&eacute;rations d'&eacute;critures ne seront pas bufferis&eacute;es.
     Cela signifie que chaque appel &agrave; <function>fwrite</function> 
     doit &ecirc;tre termin&eacute; pour qu'un autre processus soit autoris&eacute; &agrave; &eacute;crire
     dans le fichier.
    </simpara>
    <simpara>
     <function>stream_set_write_buffer</function> retourne 0 en cas de succ&egrave;s, et 
     EOF si la requ&ecirc;te &eacute;choue.
    </simpara>
    <para>
     L'exemple ci-dessous illustre l'utilisation de 
     <function>stream_set_write_buffer</function> pour cr&eacute;er un flux non
     bufferis&eacute;.
     <example>
      <title>Exemple avec <function>stream_set_write_buffer</function></title>
      <programlisting role="php">
<![CDATA[
$fp = fopen($file, "w");
if ($fp) {
  stream_set_write_buffer($fp, 0);
  fputs($fp, $output);
  fclose($fp);
}
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Voir aussi
     <function>fopen</function> et 
     <function>fwrite</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
