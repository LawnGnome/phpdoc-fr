<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
  <refentry id="function.stream-socket-client">
   <refnamediv>
    <refname>stream_socket_client</refname>
    <refpurpose>
     Ouvre une connexion socket Internet ou Unix
    </refpurpose> 
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>stream_socket_client</methodname>
      <methodparam><type>string</type><parameter>remote_socket</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>&amp;errno</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>&amp;errstr</parameter></methodparam>
      <methodparam choice="opt"><type>float</type><parameter>timeout</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
      <methodparam choice="opt"><type>resource</type><parameter>context</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>stream_socket_client</function> initie un fl&ocirc;t ou une connexion
     datagramme avec la destination <parameter>remote_socket</parameter>. Le type
     de socket cr&eacute;&eacute; est d&eacute;termin&eacute; par le transport sp&eacute;cifi&eacute; avec le formattage
     URL suivant : <literal>transport://target</literal>. Pour une socket Internet,
     (<constant>AF_INET</constant>) comme TCP et UDP, la <literal>cible</literal> 
     de <parameter>remote_socket</parameter> sera une adresse IP ou un nom d'h&ocirc;te.
     Pour une socket Unix,la <literal>cible</literal> doit &ecirc;tre un fichier de
     socket du syst&egrave;me.
    </para>
    <para>
     Le param&egrave;tre optionnel <parameter>timeout</parameter> sert &agrave; imposer un
     d&eacute;lai d'expiration, en secondes, &agrave; l'appel syst&egrave;me.
    </para>
    <para>
     <parameter>flags</parameter> est un champs de bits qui peut &ecirc;tre la combinaison
     de n'importe quelle option de connexion. Actuellement, les valeurs possibles
     pour ces options sont <constant>STREAM_CLIENT_ASYNC_CONNECT</constant> et
     <constant>STREAM_CLIENT_PERSISTENT</constant>.
    </para>
    <note>
     <simpara>
      Si vous n'avez pas besoin de mettre de d&eacute;lai d'expiration pour les op&eacute;rations
      via la socket, utilisez la fonction <function>stream_set_timeout</function>, 
      car <parameter>timeout</parameter> de <function>stream_socket_client</function> 
      ne s'appliqu que lors de la connexion &agrave; la socket.
     </simpara>
    </note>
    <para>
     <function>stream_socket_client</function> retourne une ressource de fl&ocirc;t,
     qui peut &ecirc;tre utilis&eacute;e avec d'autres fonctions de fichiers, comme
     <function>fgets</function>, <function>fgetss</function>,
     <function>fputs</function>, <function>fclose</function> et
     <function>feof</function>).
    </para>
    <para>
     Si l'appel &eacute;choue, <function>stream_socket_client</function> va retourner
     &false; et si les param&egrave;tres optionnels <parameter>errno</parameter> et
     <parameter>errstr</parameter> sont fournis, ils recevront l'erreur
     exacte qui est survenue dans le syst&egrave;me lors de l'appel &agrave; 
     <literal>connect()</literal>. Si la valeur retourn&eacute;e dans
     <parameter>errno</parameter> est <literal>0</literal> et que la fonction
     a retourn&eacute;e &false;, c'est une indication que l'erreur est survenue
     avant l'appel &agrave; <literal>connect()</literal>. Cela est probablement du
     &agrave; un probl&egrave;me d'initialisation de la socket. Notez que 
     <parameter>errno</parameter> et<parameter>errstr</parameter> 
     doivent &ecirc;tre pass&eacute; par r&eacute;f&eacute;rence.
    </para>
    <para>
     Suivant votre environnement, les sockets Unix ou le d&eacute;lai d'expiration
     peuvent ne pas &ecirc;tre disponibles. Une liste des transports disponibles
     qui sont disponibles sur le syst&egrave;me est accessible via
     <function>stream_get_transports</function>.
    </para>
    <para>
     Le fl&ocirc;t sera par d&eacute;faut ouvert en mode bloquant. Vous pouvez le passer
     en mode non bloquant en utilisant la fonction 
     <function>stream_set_blocking</function>.
     <example>
      <title>Exemple avec <function>stream_socket_client</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$fp = stream_socket_client("tcp://www.exemple.com:80", $errno, $errstr, 30);
if (!$fp) {
    echo "$errstr ($errno)<br>\n";
} else {
    fputs ($fp, "GET / HTTP/1.0\r\nHost: www.example.com\r\nAccept: */*\r\n\r\n");
    while (!feof($fp)) {
        echo fgets ($fp,1024);
    }
    fclose ($fp);
}
?>
]]>
      </programlisting>
     </example>
     L'exemple ci-dessous vous montre comment lire la date et l'heure
     sur un service UDP de type "daytime" (port 13) sur votre propre machine : 
     <example>
     <title>Utilisation de connexions UDP</title>
     <programlisting role="php">
<![CDATA[
<?php
$fp = stream_socket_client("udp://127.0.0.1:13", $errno, $errstr);
if (!$fp) {
    echo "ERREIR : $errno - $errstr<br>\n";
} else {
    fwrite($fp,"\n");
    echo fread($fp, 26);
    fclose($fp);
}
?>
]]>
     </programlisting>
     </example>
     <warning>
      <simpara>
        Les sockets UDP sembleront parfois s'ouvrir sans erreur, m&ecirc;me si l'h&ocirc;te
        distant n'est pas accessible. Cette erreur ne deviendra apparente que
        lorsque vous essaierez de lire ou &eacute;crire des donn&eacute;es avec cette
        socket. La raison &agrave; cela est que UDP est un protocole sans connexion,
        ce qui signifie que le syst&egrave;me d'exploitaiton n'a pas &agrave; &eacute;tablir de
        lien pour la socket, jusqu'&agrave; ce qu'il commence &agrave; &eacute;changer des donn&eacute;es.
      </simpara>
     </warning>
     &ipv6.brackets;
     Voir aussi
     <function>stream_socket_server</function>, 
     <function>stream_set_blocking</function>,
     <function>stream_set_timeout</function>, 
     <function>fgets</function>,
     <function>fgetss</function>, 
     <function>fputs</function>,
     <function>fclose</function>, 
     <function>feof</function> et
     l'<link linkend="ref.curl">extension CURL</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
