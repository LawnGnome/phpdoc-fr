<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.16 $ -->
<!-- EN-Revision: 1.14 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

  <refentry xml:id="function.stream-filter-prepend" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>stream_filter_prepend</refname>
    <refpurpose>Attache un filtre à un flux en début de liste</refpurpose> 
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>resource</type><methodname>stream_filter_prepend</methodname>
      <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
      <methodparam><type>string</type><parameter>filtername</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>read_write</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>params</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>stream_filter_prepend</function> ajoute le filtre 
     <parameter>filtername</parameter> à la liste de filtres attachés au
     flux <parameter>stream</parameter>. Ce filtre sera ajouté avec
     les paramètres spécifiés dans <parameter>params</parameter>
     à la <emphasis>fin</emphasis> de cette liste et sera donc
     appelé en dernier durant les opérations de flux.
     Pour ajouter un filtre à la fin de la liste, utilisez
     la fonction <function>stream_filter_prepend</function>.
    </para>
    <para>
     Par défaut, <function>stream_filter_prepend</function> va ajouter
     le filtre à la liste de filtres de lecture si le fichier a été ouvert
     en mode lecture (<literal>r</literal> et/ou <literal>+</literal>). Le
     filtre sera aussi attaché à la liste des filtres de lecture
     si le fichier a été ouvert en mode lecture (<literal>w</literal>, 
     <literal>a</literal> et/ou <literal>+</literal>).
     <constant>STREAM_FILTER_READ</constant>,
     <constant>STREAM_FILTER_WRITE</constant>, et/ou
     <constant>STREAM_FILTER_ALL</constant> peuvent aussi être utilisées
     dans le paramètre <parameter>read_write</parameter> pour contrôler
     ce comportement. Voyez la fonction
     <function>stream_filter_append</function> pour un exemple de l'utilisation
     de ce paramètre.
    </para>
    <para>
     Depuis PHP 5.0.1, cette fonction retourne une ressource qui peut être utilisée
     pour se référer à cette instance de filtre durant l'appel à la fonction
     <function>stream_filter_remove</function>.
     Dans les versions antérieures à PHP 5.1.0, cette fonction retourne &false;
     en cas de succès, &false; sinon.
    </para>
    <note>
     <title>Quand vous utilisez des filtres personnalisés</title>
     <simpara>
      <function>stream_register_filter</function> doit être appelée avant
      <function>stream_filter_prepend</function> pour enregistrer le filtre
      sous le nom de <parameter>filtername</parameter>.
     </simpara>
    </note>
    <note>
     <simpara>
      Les données du flux (locales et distantes) sont retournées en morceaux,
      les données non acheminées étant conservées dans le tampon interne.
      Lorsqu'un nouveau filtre est ajouté au début du flux, les données dans
      le tampon interne ne sont <emphasis>pas</emphasis> passées dans le nouveau
      filtre à ce moment là. Ceci est différent du comportement de
      <function>stream_filter_append</function>.
     </simpara>
    </note>
    <note>
     <simpara>
      Quand un filtre est ajouté pour la lecture et l'écriture, deux instances
      du filtres sont créées. <function>stream_filter_prepend</function> doit être
      appelée deux fois avec <constant>STREAM_FILTER_READ</constant> et 
      <constant>STREAM_FILTER_WRITE</constant> pour obtenir les ressources de filtres.
     </simpara>
    </note>
    <simpara>
     Voir aussi
     <function>stream_register_filter</function> et
     <function>stream_filter_append</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
