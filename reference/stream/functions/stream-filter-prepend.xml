<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
  <refentry id="function.stream-filter-prepend">
   <refnamediv>
    <refname>stream_filter_prepend</refname>
    <refpurpose>Attache un filtre à un flux en début de liste</refpurpose> 
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>stream_filter_prepend</methodname>
      <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
      <methodparam><type>string</type><parameter>filtername</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>read_write</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>params</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>stream_filter_prepend</function> ajoute le filtre 
     <parameter>filtername</parameter> à la liste de filtres attachés au
     flux <parameter>stream</parameter>. Ce filtre sera ajoutés avec
     les paramètres spécifiés dans <parameter>params</parameter>
     à la <emphasis>fin</emphasis> de cette liste et sera donc
     appelé en dernier durant les opérations de flux.
     Pour ajouter un filtre à la fin de la liste, utilisez
     la fonction <function>stream_filter_prepend</function>.
    </para>
    <para>
     Par défaut, <function>stream_filter_prepend</function> va ajouter
     le filtre à la liste de filtre de lecture si le fichier a été ouvert
     en mode lecture (<literal>r</literal> et/ou <literal>+</literal>). Le
     filtre sera aussi attaché à la liste des filtres de lecture
     si le fichier a été ouvert en mode lecture (<literal>w</literal>, 
     <literal>a</literal> et/ou <literal>+</literal>).
     <constant>STREAM_FILTER_READ</constant>,
     <constant>STREAM_FILTER_WRITE</constant>, et/ou
     <constant>STREAM_FILTER_ALL</constant> peuvent aussi être utilisées
     dans le paramètre <parameter>read_write</parameter> pour contrôler
     ce comportement. Voyez la fonction
     <function>stream_filter_append</function> pour un exemple de l'utilisation
     de ce paramètre.
    </para>
    <note>
     <title>Quand vous utilisez des filtres personnalisés</title>
     <simpara>
      <function>stream_register_filter</function> doit être appelé avant
      <function>stream_filter_prepend</function> pour enregistrer le filtre
      sous le nom de <parameter>filtername</parameter>.
     </simpara>
    </note>
    <simpara>
     Voir aussi
     <function>stream_register_filter</function> et
     <function>stream_filter_append</function>
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
