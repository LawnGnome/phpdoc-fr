<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->

<!-- splitted from ./fr/functions/fbsql.xml, last change in rev 1.8 -->
<!-- last change to 'fbsql-read-blob' in en/ tree in rev 1.28 -->
 <refentry id="function.fbsql-read-blob">
  <refnamediv>
   <refname>fbsql_read_blob</refname>
   <refpurpose>Lit un BLOB dans une base de données</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>string</type><methodname>fbsql_read_blob</methodname>
     <methodparam><type>string</type><parameter>blob_handle</parameter></methodparam>
     <methodparam choice="opt"><type>resource</type><parameter>link_identifier</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>fbsql_read_blob</function> retourne une chaîne de caractères
    contenant le BLOB <parameter>blob_handle</parameter>.
   </para>
   <para>
    <function>fbsql_read_blob</function> lit les données du BLOB dans
    la base de données. Si une sélection contient une colonne
    de type BLOB et/ou de type CLOB, FrontBase retournera directement les
    données lors de la lecture. Ce comportement par défaut peut être
    modifié avec la fonction <function>fbsql_set_lob_mode</function> pour que
    les fonctions de lecture ne retournent qu'un identifiant de
    BLOB ou CLOB. Si un identifiant est lu, il faut utiliser la fonction
    <function>fbsql_read_blob</function> pour obtenir la valeur du BLOB.
   </para>
   <example>
    <title>Exemple avec <function>fbsql_read_blob</function></title>
    <programlisting role="php">
<![CDATA[
<?php
   $link = fbsql_pconnect ("localhost", "_SYSTEM", "secret")
       or die ("Impossible de se connecter");
   $sql = "SELECT BLOB_COLUMN FROM BLOB_TABLE;";
   $rs = fbsql_query($sql, $link);
   $row_data = fbsql_fetch_row($rs);
   // $row_data[0] contiendra maintenant les données du blob de la première
   // ligne
   fbsql_free_result($rs);
   $rs = fbsql_query($sql, $link);
   fbsql_set_lob_mode($rs, FBSQL_LOB_HANDLE);
   $row_data = fbsql_fetch_row($rs);
   // $row_data[0] contiendra maintenant un identifiant vers les données du
   // blob de la première ligne
   $blob_data = fbsql_read_blob($row_data[0]);
   fbsql_free_result($rs);
?>
]]>
    </programlisting>
   </example>
   <para>
    Voir aussi
    <function>fbsql_create_blob</function>,
    <function>fbsql_read_blob</function>,
    <function>fbsql_read_clob</function> et
    <function>fbsql_set_lob_mode</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
