<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/fbsql.xml, last change in rev 1.8 -->
<!-- last change to 'fbsql-fetch-array' in en/ tree in rev 1.1 -->
 <refentry id="function.fbsql-fetch-array">
  <refnamediv>
   <refname>fbsql_fetch_array</refname>
   <refpurpose>
    Lit toute une ligne de résultat dans un tableau.
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>array</type><methodname>fbsql_fetch_array</methodname>
     <methodparam><type>resource</type><parameter>result</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>result_type</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>fbsql_fetch_array</function> retourne un tableau contenant
    la ligne courante du résultat <parameter>result</parameter>, ou
    &false; s'il n'y a plus de lignes.
   </para>
   <para>
    <function>fbsql_fetch_array</function> est une version améliorée
    de <function>fbsql_fetch_row</function>.  En plus de stocker les
    données dans un tableau indexé, elle les stocke
    aussi sous forme de tableau associatif, dont les clefs sont
    les noms des colonnes.
   </para>
   <para>
    Si deux colonnes (ou plus) ont le même nom, la dernière colonne
    sera utilisée. Pour accéder aux autres colonnes de même nom, vous
    devez absolument utiliser les indices numériques.
    <example>
     <title>Exemple avec <function>fbsql_fetch_array</function></title>
     <programlisting>
<![CDATA[
select t1.f1 as foo t2.f1 as bar from t1, t2
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Il est important de noter que <function>fbsql_fetch_array</function>
    n'est pas significativement plus lente que <function>fbsql_fetch_row</function>,
    tandis qu'elle apporte un confort d'utilisation notable.
   </para>
   <para>
    Le second argument optionnel <parameter>result_type</parameter>
    de <function>fbsql_fetch_array</function> est une constante qui peut prendre
    l'une des valeurs suivantes : <literal>FBSQL_ASSOC</literal>,
    <literal>FBSQL_NUM</literal> et <literal>FBSQL_BOTH</literal>.
   </para>
   <para>
    Pour plus de détails, reportez-vous à
    <function>fbsql_fetch_row</function> et <function>fbsql_fetch_assoc</function>.
   </para>
   <example>
    <title>Exemple avec <function>fbsql_fetch_array</function></title>
    <programlisting role="php">
<![CDATA[
<?php
  fbsql_connect($host, $user, $password);
  $result = fbsql_db_query("database","select user_id, fullname from table");
  while ($row = fbsql_fetch_array($result)) {
    echo "user_id : ".$row["user_id"]."<BR>\n";
    echo "user_id : ".$row[0]."<BR>\n";
    echo "Nom complet : ".$row["fullname"]."<BR>\n";
    echo "Nom complet : ".$row[1]."<BR>\n";
  }
  fbsql_free_result($result);
?>
]]>
    </programlisting>
   </example>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
