<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.4 Maintainer: yannick Status: ready -->
  <refentry id="reference.pcre.pattern.modifiers">
   <refnamediv>
    <refname>options de recherche</refname>
    <refpurpose>
      Options disponibles pour les expressions rationnelles.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <para>
     Les options de PCRE sont listées ci-dessous. Les noms entre
     parenthèses sont les noms internes à PCRE.
    </para>
    <para>
     <blockquote>
      <variablelist>
       <varlistentry>
        <term><emphasis>i</emphasis> (<literal>PCRE_CASELESS</literal>)</term>
        <listitem>
         <simpara>
          Effectue une recherche insensible à la casse.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><emphasis>m</emphasis> (<literal>PCRE_MULTILINE</literal>)</term>
        <listitem>
         <simpara>
          Par défaut, PCRE traite la chaîne sujet comme une seule
          ligne (même si cette chaîne contient des retours chariot).
          Le méta-caractère "début de ligne" (^) ne sera
          valable qu'une seule fois, au début de la ligne, et le
          méta caractère "fin de ligne " ($) ne sera valable
          qu'à la fin de la chaîne, ou avant le retour chariot
          final (à moins que l'option D ne soit activée). C'est le
          même fonctionnement qu'en Perl.
         </simpara>
         <simpara>
          Lorsque cette option est activée, " début de ligne " et
          " fin de ligne " correspondront alors aux caractères
          suivant et précédent immédiatement un
          caractère de nouvelle ligne, en plus du début
          et de la fin de la chaîne. C'est le même
          fonctionnement que l'option Perl /m. S'il n'y a pas de
          caractère de nouvelle ligne "\n" dans la chaîne sujet,
          ou s'il n'y a aucune occurrence de ^ ou $ dans le masque, cette option
          ne sert à rien.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><emphasis>s</emphasis> (<literal>PCRE_DOTALL</literal>)</term>
        <listitem>
         <simpara>
          Avec cette option, le méta caractère point (.)
          remplace n'importe quel caractère, y compris les nouvelles
          lignes. Sans cette option, le caractère point ne remplace
          pas les nouvelles lignes. Cette option est équivalente
          à l'option Perl /s. Une classe de caractères
          négative telle que [^a] acceptera toujours les
          caractères de nouvelles lignes, indépendamment
          de cette option.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><emphasis>x</emphasis> (<literal>PCRE_EXTENDED</literal>)</term>
        <listitem>
         <simpara>
          Avec cette option, les caractères d'espacement sont
          ignorés, sauf lorsqu'ils sont échappés,
          ou à l'intérieur d'une classe de caractères,
          et tous les caractères entre # non échappés
          et en dehors d'une classe de caractères, et le prochain
          caractère de nouvelle ligne sont ignorés. C'est
          l'équivalent Perl de l'option /x : elle permet l'ajout
          de commentaires dans les masques compliqués. Notez bien,
          cependant, que cela ne s'appliquent qu'aux caractères de
          données. Les caractères d'espacement ne doivent
          jamais apparaître dans les séquences spéciales
          d'un masque, par exemple dans la séquence (?( qui
          introduit une parenthèse conditionnelle.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><emphasis>e</emphasis></term>
        <listitem>
         <simpara>
          Avec cette option, <function>preg_replace</function> effectue la
          substitution normale des références arrières dans la
          chaîne de remplacement, puis l'évalue comme un code &php;, et
          utilise le résultat pour remplacer la chaîne de recherche.
          Les simples et doubles quotes sont échappées avec des backslashes
          (<literal>\</literal>) dans les références arrières substituées.
         </simpara>
         <para>
          Seule <function>preg_replace</function> utilise cette option. Elle est
          ignorée par les autres.
          <note>
           <simpara>
            Cette option n'est pas valable en &php; 3.
           </simpara>
          </note>
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><emphasis>A</emphasis> (<literal>PCRE_ANCHORED</literal>)</term>
        <listitem>
         <simpara>
          Avec cette option, le masque est ancré de force, c'est-à-dire
          que le masque doit s'appliquer juste au début
          de la chaîne sujet pour être
          considéré comme trouvé. Il est
          possible de réaliser le même effet en
          ajoutant les méta-caractères adéquats,
          ce qui est la seule manière de le faire en Perl.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><emphasis>D</emphasis> (<literal>PCRE_DOLLAR_ENDONLY</literal>)</term>
        <listitem>
         <simpara>
          Avec cette option, le méta-caractère $ ne sera
          valable qu'à la fin de la chaîne sujet. Sans
          cette option, $ est aussi valable avant une nouvelle ligne,
          si cette dernière est le dernier caractère de
          la chaîne. Cette option est ignorée si l'option
          <emphasis>m</emphasis> est activée. Il n'y a pas
          d'équivalent en Perl.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><emphasis>S</emphasis></term>
        <listitem>
         <simpara>
          Lorsqu'un masque est utilisé plusieurs fois, cela vaut
          la peine de passer quelques instants de plus pour l'analyser
          et optimiser le code pour accélérer les
          traitements ultérieurs. Cette option force cette
          analyse plus poussée. Actuellement, cette analyse
          n'est utile que pour les masques non ancrés, qui
          ne commencent pas par un caractère fixe.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><emphasis>U</emphasis> (<literal>PCRE_UNGREEDY</literal>)</term>
        <listitem>
         <simpara>
          Cette option inverse la tendance à la gourmandise des
          expressions rationnelles. Vous pouvez aussi inverser
          cette tendance au coup par coup avec un ?. De même, si
          cette option est activée, le <literal>?</literal> rendra
          gourmand une séquence. Cette option n'est pas compatible
          avec Perl. Elle peut aussi être mise dans le masque avec
          l'option <literal>?U</literal> dans le
          <link linkend="regexp.reference.internal-options">pattern</link>.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><emphasis>X</emphasis> (<literal>PCRE_EXTRA</literal>)</term>
        <listitem>
         <simpara>
          Cette option ajoute d'autres fonctionnalités incompatible
          avec le PCRE de Perl. Tous les anti-slash suivis d'une lettre qui
          n'aurait pas de signification particulière cause une erreur,
          permettant la réservation de ces combinaisons pour des ajouts
          fonctionnels ultérieurs. Par défaut, comme en Perl, les
          anti-slash suivis d'une lettre sans signification particulière
          sont traités comme des valeurs littérales. Actuellement,
          cette option ne déclenche pas d'autres fonctions.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><emphasis>u</emphasis> (<literal>PCRE8</literal>)</term>
        <listitem>
         <simpara>
          Cette option désactive les fonctionnalités additionnelles de
          PCRE qui ne sont pas compatibles avec Perl. Les chaînes sont
          traitées comme des chaînes UTF-8. Cette option est disponible
          en &php; 4.1.0 et plus récent sur plate-forme Unix et en &php; 
          4.2.3 et plus récent sur plate-forme Windows.
         </simpara>
        </listitem>
       </varlistentry>
      </variablelist>
 </blockquote>
 </para>
 </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
