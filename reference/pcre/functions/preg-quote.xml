<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/pcre.xml, last change in rev 1.3 -->
<!-- last change to 'preg-quote' in en/ tree in rev 1.2 -->
  <refentry id="function.preg-quote">
   <refnamediv>
    <refname>preg_quote</refname>
    <refpurpose>
      Echappement des caract&egrave;res sp&eacute;ciaux des expressions
      r&eacute;guli&egrave;res.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>preg_quote</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>delimiter</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>preg_quote</function> ajoute un antislash devant tous
     les caract&egrave;res de la cha&icirc;ne <parameter>str</parameter>.
     Cela est tr&egrave;s utile si vous avez une cha&icirc;ne qui va
     servir de masque, mais qui est g&eacute;n&eacute;r&eacute;e durant
     l'ex&eacute;cution.
    </para>
    <para>
     Si l'argument optionnel <parameter>delimiter</parameter> est fourni,
     il sera aussi &eacute;chapp&eacute;. Ceci est pratique pour &eacute;chapper
     le d&eacute;limiteur requis par les fonctions PCRE. Le slash / est le
     d&eacute;limiteur le plus r&eacute;pandu.
    </para>
    <para>
     Les caract&egrave;res sp&eacute;ciaux qui seront &eacute;chapp&eacute;s :
     <screen>. &#92;&#92; + * ? [ ^ ] $ ( ) { } = ! &lt; &gt; | :</screen>
    </para>
    <para>
     <example>
      <title>Prot&egrave;ge des caract&egrave;res sp&eacute;ciaux</title>
      <programlisting role="php">
&lt;?php
$keywords = "$40 pour un g3/400";
$keywords = preg_quote ($keywords, "/");
echo $keywords; // retourne &#92;$40 pour un g3&#92;/400
?&gt;
      </programlisting>
     </example>
     <example>
      <title>Mise en italique d'un mot dans un texte</title>
      <programlisting role="php">
&lt;?php
// Dans cet exemple, preg_quote($word) sert &agrave; &eacute;viter que les ast&eacute;risques
// prennent une valeur particuli&egrave;re dans l'exepression r&eacute;guli&egrave;re.
$textbody = "Ce livre est *tr&egrave;s* difficile &agrave; trouver.";
$word = "*tr&egrave;s*";
$textbody = preg_replace ("/".preg_quote($word)."/",
                          "&lt;B&gt;".$word."&lt;/B&gt;",
                          $textbody);
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
