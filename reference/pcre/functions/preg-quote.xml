<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.7 Maintainer: yannick Status: ready -->
  <refentry id="function.preg-quote">
   <refnamediv>
    <refname>preg_quote</refname>
    <refpurpose>
      Echappement des caractères spéciaux des expressions
      rationnelles
    </refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>string</type><methodname>preg_quote</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>delimiter</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>preg_quote</function> ajoute un anti-slash devant tous
     les caractères de la chaîne <parameter>str</parameter>.
     Cela est très utile si vous avez une chaîne qui va
     servir de masque, mais qui est générée durant
     l'exécution.
    </para>
    <para>
     Si l'argument optionnel <parameter>delimiter</parameter> est fourni,
     il sera aussi échappé. Ceci est pratique pour échapper
     le délimiteur requis par les fonctions PCRE. Le slash / est le
     délimiteur le plus répandu.
    </para>
    <para>
     Les caractères spéciaux qui seront échappés :
     <literal>. \\ + * ? [ ^ ] $ ( ) { } = ! &lt; &gt; | :</literal>
    </para>
    <para>
     <example>
      <title>Exemple avec <function>preg_quote</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$keywords = '$40 pour un g3/400';
$keywords = preg_quote($keywords, "/");
echo $keywords; // retourne \$40 pour un g3\/400
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Mise en gras d'un mot dans un texte</title>
      <programlisting role="php">
<![CDATA[
<?php
// Dans cet exemple, preg_quote($word) sert à éviter que les astérisques
// prennent une valeur particulière dans l'exepression rationnelle.

$textbody = 'Ce livre est *très* difficile à trouver.';
$word = '*très*';
$textbody = preg_replace ("/" . preg_quote($word) . "/",
                          "<strong>" . $word . "</strong>",
                          $textbody);
?>
]]>
      </programlisting>
     </example>
    </para>

    &note.bin-safe;

   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
