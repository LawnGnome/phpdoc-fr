<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->

<!-- splitted from ./fr/functions/pcre.xml, last change in rev 1.3 -->
<!-- last change to 'preg-match' in en/ tree in rev 1.2 -->
  <refentry id="function.preg-match">
   <refnamediv>
    <refname>preg_match</refname>
    <refpurpose>Expression régulière standard</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>preg_match</methodname>
      <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
      <methodparam><type>string</type><parameter>subject</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>matches</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>preg_match</function> analyse <parameter>subject</parameter>
     pour trouver l'expression <parameter>pattern</parameter>.
    </para>
    <para>
     Si <parameter>matches</parameter> est fourni, il sera rempli par
     les résultats de la recherche. $matches[0] contiendra le
     texte qui satisfait le masque complet, $matches[1] contiendra
     le texte qui satisfait la première parenthèse capturante,
     etc..
    </para>
    <para>
     Le paramètre <parameter>flags</parameter> peut prendre l'une des valeurs
     suivantes : 
     <variablelist>
      <varlistentry>
       <term><constant>PREG_OFFSET_CAPTURE</constant></term>
       <listitem>
        <simpara>
         Si cette option est activée, toutes les sous chaînes qui satisfont
         le masque seront aussi identifiées par leur offset. Notez que cela
         modifie le format de la valeur retournée , puisque chaque élément
         de réponse devient un tableau contenant la sous-chaîne résultat,
         à l'index <literal>0</literal> dans la chaîne <parameter>subject</parameter> 
         constant <literal>1</literal>. Cette option a été ajoutée en &php; 4.3.0 .
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     Le paramètre <parameter>flags</parameter> a été ajouté en 
     &php; 4.3.0 .
    </para>
    <para>
     <function>preg_match</function> retourne le nombre de fois où le
     masque <parameter>pattern</parameter> a été trouvé. Cela peut aller de
     0 (pas de solution) à un 1 car <function>preg_match</function> s'arrête
     dès qu'elle a trouvé une première solution. <function>preg_match_all</function>,
     au contraire, va continuer jusqu'à la fin de la chaîne <parameter>subject</parameter>.
     <function>preg_match</function> retourne &false; si une erreur survient.
    </para>
    <para>
     <example>
      <title>Extraction d'un numéro de page d'une chaîne.</title>
      <programlisting role="php">
<![CDATA[
<?php
if (preg_match("/page\s+#(\d+)/i", "Aller à la page numéro 9.", $parts)) {
    echo "La page suivante est $parts[1]";
} else {
    echo "Page introuvable.";
}
?>
]]>
      </programlisting>
     </example>
     <example>
      <title>Trouve le mot "web"</title>
      <programlisting role="php">
<![CDATA[
<?php
// \b, dans le masque, indique une limite de mot, de façon à ce que le mot
// "web" uniquement soit repéré, et pas seulement des parties de mots comme
// dans "webbing" ou "cobweb"
if (preg_match ("/\bweb\b/i", "PHP est le meilleur langage de script du web.")) {
    echo "Un mot a été trouvé.";
} else {
    echo "Un mot n'a pas été trouvé.";
}
if (preg_match ("/\bweb\b/i", "PHP est le meilleur langage de script pour les webagency.")) {
     echo "Un mot a été trouvé.";
} else {
    echo "Un mot n'a pas été trouvé.";
}
?>
]]>
      </programlisting>
     </example>
     <example>
      <title>Lire un nom de domaine dans une URL</title>
      <programlisting role="php">
<![CDATA[
<?php
// repérer le nom de l'hôte dans l'URL
  preg_match("/^(http:\/\/)?([^\/]+)/i", 
             "http://www.php.net/index.html", $matches);
  $host = $matches[2];
// repérer les deux derniers segments du nom de l'hôte
  preg_match("/[^\.\/]+\.[^\.\/]+$/",$host,$matches);
  echo "Le nom de domaine est : ".$matches[0]."\n";
?>
]]>
      </programlisting>
     </example>
     Cet exemple va afficher :
     <computeroutput>
<![CDATA[
Le nom de domaine est : php.net
]]>
     </computeroutput>
    </para>
    <para>
     Voir aussi
     <function>preg_match_all</function>,
     <function>preg_replace</function> et
     <function>preg_split</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
