<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<reference id="ref.shmop">
  <title>Mémoire partagée</title>
  <titleabbrev>shmop</titleabbrev>
    <partintro>
   <section id="shmop.intro">
    &reftitle.intro;
    <para>
    Shmop est un ensemble de fonctions simples pour gérer
    la mémoire partagée avec &php; (lecture,
    écriture, création et suppressions de segments de
    mémoire partagée UNIX). Ces fonctions ne fonctionnent pas
    sous Windows, car ce système d'exploitation ne supporte pas
    la mémoire partagée. Toutefois, depuis Windows 2000,
    en activant la librairie <filename>php_shmop.dll</filename>
    dans votre fichier &php.ini; vous activerez aussi cette fonctionnalité.
    Sous Windows, Shmop ne fonctionnera que si &php; est exécuté en mode ISAPI,
    comme Apache ou IIS (cela ne fonctionnera pas avec CLI ou CGI).
    </para>
    <note>
     <simpara>
      En PHP 4.0.3, ces fonctions étaient préfixées avec 
      <literal>shm</literal> au lieu de <literal>shmop</literal>.
     </simpara>
    </note>
   </section>

   <section id="shmop.requirements">
    &reftitle.required;
    &no.requirement;
   </section>

&reference.shmop.configure;

   <section id="shmop.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="shmop.resources">
    &reftitle.resources;
    <para>
    </para>
   </section>

   <section id="shmop.constants">
    &reftitle.constants;
    &no.constants;
   </section>
  <section id="shmop.examples">
    &reftitle.examples;
    <para>
     <example>
     <title>Introduction à la mémoire partagée</title>
      <programlisting role="php">
<![CDATA[
<?php
   
// Crée 100 octets de mémoire partagée avec
// un identifiant système "0xff3"
$shm_id = shmop_open(0xff3, "c", 0644, 100);
if(!$shm_id) {
	echo "Impossible de créer la mémoire partagée\n";
}

// Lire la taille de la mémoire partagée
$shm_size = shmop_size($shm_id);
echo "Un bloc de SHM de taille ".$shm_size. " a été créé.\n";

// Ecriture d'une chaîne de test dans ce segment
$shm_bytes_written = shmop_write($shm_id, "my shared memory block", 0);
if($shm_bytes_written != strlen("Mon bloc de mémoire partagée")) {
	echo "Impossible d'écrire toutes les données en mémoire\n";
}

// Lecture du segment
$my_string = shmop_read($shm_id, 0, $shm_size);
if(!$my_string) {
	echo "Impossible de lire toutes les données en mémoire\n";
}
echo "Les données mis en mémoire partagées sont : ".$my_string."\n";

//Maintenant, effacons le bloc, et fermons le segment de mémoire
if(!shmop_delete($shm_id)) {
	echo "Impossible d'effacer le segment de mémoire";
}
shmop_close($shm_id);
   
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
  </partintro>

&reference.shmop.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

