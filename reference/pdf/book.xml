<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.2 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<!-- Purpose: utilspec.nontext -->
<!-- Membership: pecl, external -->

<book xml:id="book.pdf" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>PDF</title>

 <!-- {{{ preface -->
 <preface xml:id="intro.pdf">
  &reftitle.intro;
  <para>
   Les fonctions PDF, en PHP, peuvent créer des fichiers PDF en
   utilisant la bibliothèque PDFlib, qui a été créée initialement
   par Thomas Merz et est actuellement maintenu par
   <link xlink:href="&url.pdf;">PDFlib GmbH</link>.
  </para>
  <para>
   La documentation de cette section n'est destinée qu'à être un aperçu
   des fonctions disponibles de la bibliothèque PDFlib et ne doit pas
   être considérée comme exhaustive. Pour une description complète
   et détaillée de chaque fonction, consultez le manuel de référence
   de PDFlib qui est inclu dans tous les paquets PDFlib, distribués
   par PDFlib GmbH. Il propose une bonne approche sur les capacités
   de PDFlib et contient la documentation la plus à jour de toutes les
   fonctions.
  </para>
  <para>
   Pour commencer rapidement, nous vous proposons de regarder les exemples
   qui se trouvent dans le paquet PDFlib. Ces exemples montrent l'affichage
   de textes simples, de vecteurs et de graphiques, mais aussi une utilisation
   des fonctions haut-niveaux, comme l'importation simplifiée de PDF (PDI).
  </para>
  <para>
   Toutes les fonctions de la PDFlib et du module PHP ont le même nom
   ainsi que les mêmes paramètres. Tant que vous ne l'avez pas configuré
   autrement, toutes les coordonnées sont mesurées en points
   PostScript. Il y a, en général, 73 points PostScript dans un pouce, mais cela
   dépend de la résolution de l'affichage. Reportez-vous au manuel de référence
   PDFlib inclus dans le paquet PDFlib pour une plus large explication concernant
   le système utilisé pour les coordonnées.
  </para>
  <para>
   Avec la version 6, PDFlib offre une API orientée objet pour PHP 5
   en plus d'une API procédurale pour PHP 4. La principale différence
   est :
  </para>
  <para>
   En PHP 4, tout d'abors, une ressource PDF doit avoir été récupérée avec une
   fonction comme
  </para>
  <para>
   $p = PDF_new().
  </para>
  <para>
   Cette ressource PDF est utilisée comme premier paramètre dans toutes les
   autres fonctions, comme
  </para>
  <para>
   PDF_begin_document($p, "", "").
  </para>
  <para>
   Cependant, en PHP 5, un objet PDFlib est créé avec
  </para>
  <para>
   $p = new PDFlib().
  </para>
  <para>
   Cet objet offre toutes les fonctions de l'API comme méthodes, e.g.
  </para>
  <para>
   $p->begin_document("", "").
  </para>
  <para>
   De plus, les exceptions ont été introduites en PHP 5, et sont supportées
   par PDFlib 6 et supérieur.
  </para>
  <para>
   Reportez-vous aux <link linkend="pdf.examples">exemples</link> ci-dessous
   pour plus d'informations.
  </para>
  <note>
   <para>
    Si vous êtes intéressé par un générateur de PDF libre qui n'utilisent
    pas de bibliothèques externes PDF, reportez-vous à cette
    <link linkend="faq.using.freepdf">section de la foire aux question</link>.
   </para>
  </note>
 </preface>
 <!-- }}} -->

 &reference.pdf.setup;
 &reference.pdf.constants;
 &reference.pdf.examples;
 &reference.pdf.reference;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

