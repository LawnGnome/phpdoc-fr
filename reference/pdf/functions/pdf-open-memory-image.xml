<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.4 Maintainer: yannick Status: ready -->
 <refentry id="function.pdf-open-memory-image">
  <refnamediv>
   <refname>pdf_open_memory_image</refname>
   <refpurpose>Ouvre une image créée en mémoire par &php;</refpurpose>
  </refnamediv>
  <refsect1>
   &reftitle.description;
    <methodsynopsis>
     <type>int</type><methodname>pdf_open_memory_image</methodname>
     <methodparam><type>resource</type><parameter>pdfdoc</parameter></methodparam>
     <methodparam><type>resource</type><parameter>image</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>pdf_open_memory_image</function> prend l'image 
    <parameter>image</parameter> créée par &php; avec les fonctions d'images, 
    et l'intègre dans l'objet PDF <parameter>pdf_object</parameter>. 
    Cette fonction retourne une ressource d'image PDF.
    <example>
     <title>Inclure une image &php; en PDF</title>
     <programlisting>
<![CDATA[
<?php
$im = ImageCreate(100, 100);
$col = ImageColorAllocate($im, 80, 45, 190);
ImageFill($im, 10, 10, $col);
$pim = pdf_open_memory_image($pdf, $im);
ImageDestroy($im);
pdf_place_image($pdf, $pim, 100, 100, 1);
pdf_close_image($pdf, $pim);
?>
]]>
     </programlisting>
    </example>
   </para>
    <para>
     Voir aussi
     <function>pdf_close_image</function> et 
     <function>pdf_place_image</function>.
    </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
