<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/misc.xml, last change in rev 1.3 -->
<!-- last change to 'eval' in en/ tree in rev 1.58 -->
  <refentry id="function.eval">
   <refnamediv>
    <refname>eval</refname>
    <refpurpose>Ex&eacute;cute une cha&icirc;ne comme un script &php;</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>mixed</type><methodname>eval</methodname>
      <methodparam><type>string</type><parameter>code_str</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>eval</function> &eacute;value la cha&icirc;ne
     <parameter>code_str</parameter> comme un script PHP. Parmi les utilisations
     possibles, cette fonction permet de stocker du code dans une base
     de donn&eacute;es, pour utilisation ult&eacute;rieure.
    </simpara>
    <simpara>
     Il faut bien garder en t&ecirc;te que le code pass&eacute;
     &agrave; <function>eval</function> doit &ecirc;tre valide, y
     compris les points virgules de fin de ligne et les s&eacute;quences
     d'&eacute;chappement, sinon l'ex&eacute;cution se terminera.
    </simpara>
    <simpara>
     N'oubliez pas que les variables utilis&eacute;es dans la fonction
     <function>eval</function> resteront accessibles dans le script principal.
    </simpara>
    <simpara>
     Une comande <literal>return</literal> terminera l'&eacute;valuation de
     la cha&icirc;ne imm&eacute;diatement. En PHP 4, <function>eval</function> reoturne
     &null; sauf si <literal>return</literal> est appel&eacute;e dans le
     code &eacute;valu&eacute;, auquel cas la valeur pass&eacute;e &agrave; <literal>return</literal> est
     retourn&eacute;e. En PHP 3, <function>eval</function> ne retourne par de valeur.
    </simpara>
    <para>
     <example>
      <title>
       Exemple avec <function>eval</function> - concat&eacute;nation de texte
      </title>
      <programlisting role="php">
<![CDATA[
<?php
  $string = 'tasse';
  $name = 'caf&eacute;';
  $str = 'Ceci est une $string avec mon $name dedans.<br />';
  echo $str;
  eval( "\$str = \"$str\";" );
  echo $str;
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     L'exemple ci-dessus devrait afficher :
       <screen>
<![CDATA[
Ceci est une $string avec mon $name dedans.
Ceci est une tasse avec mon caf&eacute; dedans.
]]>
       </screen>
    </para>
    &tip.ob-capture;
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
