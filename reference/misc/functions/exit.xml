<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.18 $ -->
<!-- EN-Revision: 1.14 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry id="function.exit">
 <refnamediv>
  <refname>exit</refname>
  <refpurpose>Affiche un message et termine le script courant</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>exit</methodname>
   <methodparam choice="opt"><type>string</type><parameter>status</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>void</type><methodname>exit</methodname>
   <methodparam><type>int</type><parameter>status</parameter></methodparam>
  </methodsynopsis>
  <para>
   Termine le script courant.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>status</parameter></term>
     <listitem>
      <para>
       Si <parameter>status</parameter> est une &string;, cette fonction affichera
       le <parameter>status</parameter>, si défini en tant que &string; juste avant
       de sortir.
      </para>
      <para>
       Si le paramètre <parameter>status</parameter> est un &integer;, cette valeur
       pourra être utilisée comme statut de sortie. Le statut de sortie peut être
       dans l'intervalle 0-255, le statut de sortie 255 est réservé par &php; et ne doit
       pas être utilisé. Le statut 0 est utilisé pour terminer le programme avec succès.
      </para>
      <note>
       <simpara>
        &php; &gt;= 4.2.0 n'affiche pas le message <parameter>status</parameter>
        si ce n'est pas un entier &integer;.
       </simpara>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>exit</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$filename = '/path/to/data-file';
$file = fopen($filename, 'r')
    or exit("Impossible d'ouvrir le fichier ($filename)");

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>exit</function> et un code d'erreur</title>
    <programlisting role="php">
<![CDATA[
<?php

// Quitte normalement
exit;
exit();
exit(0);

// Quitte avec un code d'erreur
exit(1);
exit(0376); // octal

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;

  &note.language-construct;

  <note>
   <para>
    Cette construction de langage est équivalente à <function>die</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>register_shutdown_function</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->