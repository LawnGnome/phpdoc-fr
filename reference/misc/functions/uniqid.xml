<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->

<!-- splitted from ./fr/functions/misc.xml, last change in rev 1.3 -->
<!-- last change to 'uniqid' in en/ tree in rev 1.2 -->
  <refentry id="function.uniqid">
   <refnamediv>
    <refname>uniqid</refname>
    <refpurpose>Génère un identifiant unique</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>uniqid</methodname>
      <methodparam><type>string</type><parameter>prefix</parameter></methodparam>
      <methodparam choice="opt"><type>bool</type><parameter>lcg</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>uniqid</function> retourne un identifiant
     préfixé unique, basé sur l'heure courante,
     en micro-secondes. Le préfixe peut servir à identifier
     facilement différents hôtes, si vous générez
     simultanément des fichiers depuis plusieurs hôtes,
     à la même micro-seconde.
     <parameter>prefix</parameter> peut prendre jusqu'à 114
     caractères.
    </simpara>
    <simpara>
     Si le paramètre optionnel <parameter>lcg</parameter> est
     &true;, <function>uniqid</function> ajoutera une entropie
     "combined LCG" à la fin de la valeur retournée, ce qui
     renforcera encore l'unicité de l'identifiant.
    </simpara>
    <simpara>
     Sans <parameter>prefix</parameter> (préfixe vide), la
     chaîne retournée fera 13 caractères. Si
     <parameter>lcg</parameter> est à &true;, elle fera 23
     caractères.
    </simpara>
    <note>
     <simpara>
      Le paramètre <parameter>lcg</parameter> est utilisé
      à partir de PHP 4 et PHP 3.0.13 et ultérieurs.
     </simpara>
    </note>
    <para>
     Si vous voulez utiliser un identifiant unique, ou bien gérer
     des cookies, il est recommandé d'utiliser un code
     tel que celui-ci :
     <example>
      <title>Exemple avec <function>uniqid</function></title>
      <programlisting role="php">
<![CDATA[
<?php
  $token = md5 (uniqid ("")); 
  // pas de section aleatoire.
  $better_token = md5 (uniqid (rand())); 
  // mieux, difficile a deviner
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Ceci va créer un identifiant de 32 caractères
     (un nombre hexadécimal de 128 ) qui sera très
     difficile à prédire.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
