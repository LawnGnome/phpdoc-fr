<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.2 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<refentry id="function.halt-compiler">
 <refnamediv>
  <refname>__halt_compiler</refname>
  <refpurpose>
   Stoppe l'exécution du compilateur
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>__halt_compiler</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Cette fonction stoppe l'exécution du compilateur. Ceci peut être très utile
   pour embarquer des données dans des scripts &php;, comme des fichiers
   d'installation.
  </para>
  <note>
   <para>
    <function>__halt_compiler</function> ne peut être utilisé que
    depuis une portée extérieure.
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>__halt_compiler</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Ouverture d'un fichier
$fp = fopen(__FILE__, 'r');

// Déplace le pointeur de fichier vers les données plus le
// saut de ligne (ceci dépend du format du fichier / OS)
fseek($fp, __COMPILER_HALT_OFFSET__ + strlen(PHP_EOL));

// Puis, on l'affiche
var_dump(stream_get_contents($fp));

// La fin de l'exécution du script
__halt_compiler();
les données installées (eg. tar, gz, etc..)
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->