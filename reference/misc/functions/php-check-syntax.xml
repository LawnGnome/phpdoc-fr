<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.5 Maintainer: didou Status: ready -->
<refentry id="function.php-check-syntax">
 <refnamediv>
  <refname>php_check_syntax</refname>
  <refpurpose>
   Vérifie la syntaxe &php; du fichier spécifié
  </refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>bool</type><methodname>php_check_syntax</methodname>
    <methodparam><type>string</type><parameter>file_name</parameter></methodparam>
    <methodparam choice="opt"><type>string</type><parameter>&amp;error_message</parameter></methodparam>
   </methodsynopsis>
   <simpara>
    <function>php_check_syntax</function> effectue une analyse de synthaxe du fichier
    <parameter>file_name</parameter> afin d'y rechercher des erreurs de script.
    Celà revient à exécuter la commande <command>php -l</command>
    depuis la <link linkend="features.commandline">ligne de commande</link>.
   </simpara>
   <simpara>
    Si le paramètre <parameter>error_message</parameter> est utilisé, il devrait contenir
    le message d'erreur issu de l'analyse.
    Le paramètre <parameter>error_message</parameter> doit être passé par 
    <link linkend="language.references">référence</link>.
   </simpara>
   <para>
    L'exemple suivant montre comment cette fonction peut être utilisée.
    <example>
     <title>Exemple avec <function>php_check_syntax</function></title>
     <programlisting role="php">
<![CDATA[
<?php

$error_message = "";
$filename = "./tests.php";

if(!php_check_syntax($filename, &$error_message)) {
   printf("Une erreur a été trouvé dans le fichier %s:\n\n%s\n", $filename, $error_message);
} else {
   printf("Le fichier %s ne contient pas d'erreur de synthaxe.", $filename);
}

?>
]]>
     </programlisting>
     &example.outputs.similar;
     <screen>
<![CDATA[
Une erreur a été trouvé dans le fichier ./tests.php:

parse error, unexpected T_STRING in /tmp/tests.php on line 81
]]>
     </screen>
    </example>
   </para>    
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
