<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 299169 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.maxdb-stmt-execute">
 <refnamediv>
  <refname>maxdb_stmt_execute</refname>
  <refname>maxdb_stmt::execute</refname>
  <refpurpose>Exécute une requête préparée</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>bool</type><methodname>maxdb_stmt_execute</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
  </methodsynopsis>
  <para>&style.oop;</para>
  <methodsynopsis>
   <type>bool</type><methodname>maxdb_stmt::execute</methodname>
   <void />
  </methodsynopsis>
  <para>
   <function>maxdb_stmt_execute</function> exécute une requête qui a été
   préparée auparavant en utilisant la fonction 
   <function>maxdb_prepare</function> représenté par la ressource 
   <parameter>stmt</parameter>. Lors de l'exécution, tous les marqueurs
   existants seront automatiquement remplacés par les données appropriées.
  </para>
  <para>
   Si la requête est du type UPDATE, DELETE ou INSERT, le nombre total de lignes
   affectées peut être déterminé en utilisant la fonction 
   <function>maxdb_stmt_affected_rows</function>. De même, si la requête
   rapporte un jeu de résultats, la fonction <function>maxdb_fetch</function>
   est utilisée.
  </para>
  <note>
   <para>
    Lors de l'utilisation de la fonction <function>maxdb_stmt_execute</function>,
    la fonction <function>maxdb_fetch</function> doit être utilisée
    pour récupérer les données avant d'effectuer toute autre requête additionnelle.
   </para>
  </note>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Style orienté objet</title>
   <programlisting role="php">
<![CDATA[
<?php
$maxdb = new maxdb("localhost", "MONA", "RED", "DEMODB");

/* Vérification de la connexion */
if (maxdb_connect_errno()) {
    printf("Echec de la connexion : %s\n", maxdb_connect_error());
    exit();
}

$maxdb->query("CREATE TABLE temp.mycity LIKE hotel.city");

/* Prépare une requête d'insertion */
$query = "INSERT INTO temp.mycity (zip, name, state) VALUES (?,?,?)";
$stmt = $maxdb->prepare($query);

$stmt->bind_param("sss", $val1, $val2, $val3);

$val1 = '11111';
$val2 = 'Georgetown';
$val3 = 'NY';

/* Exécute la requête */
$stmt->execute();

$val1 = '22222';
$val2 = 'Hubbatown';
$val3 = 'CA';

/* Exécute la requête */
$stmt->execute();

/* Fermeture de la requête */
$stmt->close();

/* Récupère toutes les lignes depuis myCity */
$query = "SELECT zip, name, state FROM temp.mycity";
if ($result = $maxdb->query($query)) {
    while ($row = $result->fetch_row()) {
        printf("%s (%s,%s)\n", $row[0], $row[1], $row[2]);
    }
    /* Libération du jeu de résultats */
    $result->close();
}

/* Effacement de la table */
$maxdb->query("DROP TABLE temp.mycity");

/* Fermeture de la connexion */
$maxdb->close();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Style procédural</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = maxdb_connect("localhost", "MONA", "RED", "DEMODB");

/* Vérification de la connexion */
if (maxdb_connect_errno()) {
    printf("Echec de la connexion : %s\n", maxdb_connect_error());
    exit();
}

maxdb_query($link, "CREATE TABLE temp.mycity LIKE hotel.city");

/* Prépare une requête d'insertion */
$query = "INSERT INTO temp.mycity (zip, name, state) VALUES (?,?,?)";
$stmt = maxdb_prepare($link, $query);

maxdb_stmt_bind_param($stmt, "sss", $val1, $val2, $val3);

$val1 = '11111';
$val2 = 'Georgetown';
$val3 = 'NY';

/* Exécute la requête */
maxdb_stmt_execute($stmt);

$val1 = '22222';
$val2 = 'Hubbatown';
$val3 = 'CA';

/* Exécute la requête */
maxdb_stmt_execute($stmt);

/* Fermeture de la requête */
maxdb_stmt_close($stmt);

/* Récupère toutes les lignes depuis myCity */
$query = "SELECT zip, name, state FROM temp.mycity";
if ($result = maxdb_query($link, $query)) {
    while ($row = maxdb_fetch_row($result)) {
        printf("%s (%s,%s)\n", $row[0], $row[1], $row[2]);
    }
    /* Libération du jeu de résultats */
    maxdb_free_result($result);
}

/* Effacement de la table */
maxdb_query($link, "DROP TABLE temp.mycity");

/* Fermeture de la connexion */
maxdb_close($link);
?>
]]>
   </programlisting>
  </example>
  &example.outputs.similar;
  <screen>
<![CDATA[
11111 (Georgetown,NY)
22222 (Hubbatown,CA)
]]>
  </screen>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>maxdb_prepare</function></member>
    <member><function>maxdb_stmt_bind_param</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->