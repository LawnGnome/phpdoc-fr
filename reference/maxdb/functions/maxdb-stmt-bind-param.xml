<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.9 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.maxdb-stmt-bind-param" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>maxdb_stmt_bind_param</refname>
  <refname>stmt->bind_param</refname>
  <refpurpose>Lie les variables à une requête préparée en tant que paramètres</refpurpose>
 </refnamediv>
 <refsect1>
  &reftitle.description;
  <para>Style procédural :</para>
  <methodsynopsis>
   <type>bool</type><methodname>maxdb_stmt_bind_param</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
   <methodparam><type>string</type><parameter>types</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">var1</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter role="reference">...</parameter></methodparam>
  </methodsynopsis>
  <para>Style orienté objet :</para>
  <classsynopsis>
   <ooclass><classname>stmt</classname></ooclass>
   <methodsynopsis>
    <type>bool</type>
    <methodname>bind_param</methodname>
    <methodparam><type>string</type><parameter>types</parameter></methodparam>
    <methodparam><type>mixed</type><parameter role="reference">var1</parameter></methodparam>
    <methodparam choice="opt"><type>mixed</type><parameter role="reference">...</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>Style procédural (syntaxe étendue) :</para>
  <methodsynopsis>
   <type>bool</type><methodname>maxdb_stmt_bind_param</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
   <methodparam><type>string</type><parameter>types</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">var</parameter></methodparam>
  </methodsynopsis>
  <para>Style orienté objet (méthode) (syntaxe étendue):</para>
  <classsynopsis>
   <ooclass><classname>stmt</classname></ooclass>
   <methodsynopsis>
    <type>bool</type>
    <methodname>bind_param</methodname>
    <methodparam><type>string</type><parameter>types</parameter></methodparam>
    <methodparam><type>array</type><parameter role="reference">var</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   <function>maxdb_stmt_bind_param</function> est utilisé pour lier les variables
   pour les marqueurs dans la requête SQL qui a été passée à 
   <function>maxdb_prepare</function>. 
   La chaîne <parameter>types</parameter> contient un ou plusieurs caractères
   qui spécifient le(s) type(s) correspondant aux variables liées.
  </para>
  <para>
   La syntaxe étendue de <function>maxdb_stmt_bind_param</function> permet de passer
   les paramètres en tant que tableaux plutôt qu'en tant que listes de variables &php; à la fonction.
   Si le tableau de variables n'a pas été utilisé avant l'appel à la fonction
   <function>maxdb_stmt_bind_param</function>, il doit être initialisé en tant que tableau vide.
   Voir les exemples sur l'utilisation de la fonction <function>maxdb_stmt_bind_param</function>
   avec la syntaxe étendue.
  </para>
  <para>
   Les variables pour les requêtes <literal>SELECT INTO SQL</literal> peuvent également
   être liées en utilisant la fonction <function>maxdb_stmt_bind_param</function>.
   Les paramètres pour les procédures de base de données peuvent être
   liés en utilisant la fonction <function>maxdb_stmt_bind_param</function>.
   Voir les exemples sur l'utilisation de la fonction <function>maxdb_stmt_bind_param</function>
   dans ce cas.
  </para>
  <para>
   Si une variable liée comme variable <literal>INTO</literal> à une requête SQL a 
   été utilisée avant, le contenu de cette variable sera écrasé par les données de la requête 
   <literal>SELECT INTO</literal>.
   Une référence sur cette variable sera invalide après un appel à la fonction
   <function>maxdb_stmt_bind_param</function>.
  </para>
  <para>
   Pour les paramètres <literal>INOUT</literal> des procédures de base de données,
   le contenu de la variable liée <literal>INOUT</literal> sera écrasé par la valeur de 
   sortie de la procédure de la base de données. Une
   référence sur cette variable sera invalide après un appel à la fonction
   <function>maxdb_stmt_bind_param</function>.
  </para>
  <para>
   <table>
    <title>Caractères spécifiant les types</title>
    <tgroup cols='2'>
     <thead>
      <row>
       <entry>Caractères</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>i</entry>
       <entry>correspond à une variable de type &integer;</entry>
      </row>
      <row>
       <entry>d</entry>
       <entry>correspond à une variable de type &float;</entry>
      </row>
      <row>
       <entry>s</entry>
       <entry>correspond à une variable de type &string;</entry>
      </row>
      <row>
       <entry>b</entry>
       <entry>correspond à une variable de type <literal>blob</literal> et sera envoyée dans le paquet</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>
 <refsect1>
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1>
  &reftitle.examples;
  <example>
   <title>Style orienté objet</title>
   <programlisting role="php">
<![CDATA[
<?php
$maxdb = new maxdb('localhost', 'MONA', 'RED', 'DEMODB');

/* Vérification de la connexion */
if (maxdb_connect_errno()) {
    printf("Echec de la connexion : %s\n", maxdb_connect_error());
    exit();
}

$maxdb->query ("CREATE TABLE temp.mycity LIKE hotel.city");
$maxdb->query ("INSERT INTO temp.mycity SELECT * FROM hotel.city");

$stmt = $maxdb->prepare("INSERT INTO temp.mycity VALUES (?, ?, ?)");
$stmt->bind_param('sss', $zip, $name, $state);

$zip = '11111';
$name = 'Georgetown';
$state = 'NY';

/* Exécution de la requête préparée */
$stmt->execute();

printf("%d ligne insérée.\n", $stmt->affected_rows);

/* Fermeture de la requête */
$stmt->close();

/* Nettoyage de la table CountryLanguage */
$maxdb->query("DELETE FROM temp.mycity WHERE name='Georgetown'");
printf("%d ligne effacée.\n", $maxdb->affected_rows);

/* Fermeture de la connexion */
$maxdb->close();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Style procédural</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = maxdb_connect("localhost", "MONA", "RED", "DEMODB");

/* Vérification de la connexion */
if (!$link) {
    printf("Echec de la connexion : %s\n", maxdb_connect_error());
    exit();
}

maxdb_query ($link, "CREATE TABLE temp.mycity LIKE hotel.city");
maxdb_query ($link, "INSERT INTO temp.mycity SELECT * FROM hotel.city");

$stmt = maxdb_prepare($link, "INSERT INTO temp.mycity VALUES (?, ?, ?)");
maxdb_stmt_bind_param($stmt, 'sss', $zip, $name, $state);

$zip = '11111';
$name = 'Georgetown';
$state = 'NY';

/* Exécution de la requête préparée */
maxdb_stmt_execute($stmt);

printf("%d ligne insérée.\n", maxdb_stmt_affected_rows($stmt));

/* Fermeture de la requête */
maxdb_stmt_close($stmt);

/* Nettoyage de la table CountryLanguage */
maxdb_query($link, "DELETE FROM temp.mycity WHERE name='Georgetown'");
printf("%d ligne effacée.\n", maxdb_affected_rows($link));

/* Fermeture de la connexion */
maxdb_close($link);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
1 ligne insérée.
1 ligne effacée.
]]>
   </screen>
  </example>
  <example>
   <title>Style procédural (SELECT INTO)</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = maxdb_connect("localhost", "MONA", "RED", "DEMODB");

/* Vérification de la connexion */
if (!$link) {
    printf("Echec de la connexion : %s\n", maxdb_connect_error());
    exit();
}

/* Exécution d'une requête SQL */
$stmt = maxdb_prepare ($link, "SELECT price INTO ? FROM hotel.room where hno = ? and type = ?");
if (!$stmt) {
    printf ("Echec de la préparation : %s\n", maxdb_error($link));
}

$hno = "50";
$rtype = "suite";

maxdb_stmt_bind_param($stmt, 'dss', $price, $hno, $rtype);
maxdb_stmt_execute($stmt);

printf ("%f\n", $price);

maxdb_stmt_close ($stmt);
?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
21.600000
]]>
  </screen>
  <example>
   <title>Style procédural (DB procedure)</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = maxdb_connect("localhost", "MONA", "RED", "DEMODB");

/* Vérification de la connexion */
if (!$link) {
    printf("Echec de la connexion : %s\n", maxdb_connect_error());
    exit();
}

maxdb_report (MAXDB_REPORT_OFF);
maxdb_query($link,"DROP DBPROC test_proc");
maxdb_report (MAXDB_REPORT_ERROR);

$query = "create dbproc test_proc (INOUT e_text char(72)) AS select * from SYSDBA.DUAL; fetch into :e_text;";

maxdb_query($link, $query);

/* Exécution d'une requête SQL */
$stmt = maxdb_prepare ($link, "CALL test_proc (?)");
if (!$stmt) {
    printf ("Echec de la préparation : %s\n", maxdb_error($link));
}

maxdb_stmt_bind_param($stmt, 's', $result);
maxdb_stmt_execute($stmt);

printf ("%s\n", $result);

maxdb_stmt_close ($stmt);
?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
a
]]>
  </screen>
  <example>
   <title>Style orienté objet (syntaxe étendue)</title>
   <programlisting role="php">
<![CDATA[
<?php
$maxdb = new maxdb('localhost', 'MONA', 'RED', 'DEMODB');

/* Vérification de la connexion */
if (maxdb_connect_errno()) {
    printf("Connect failed: %s\n", maxdb_connect_error());
    exit();
}

$maxdb->query ("CREATE TABLE temp.mycity LIKE hotel.city");
$maxdb->query ("INSERT INTO temp.mycity SELECT * FROM hotel.city");

$stmt = $maxdb->prepare("INSERT INTO temp.mycity VALUES (?, ?, ?)");

$arr = array();

$stmt->bind_param('iss', $arr);

$arr[0] = 11111;
$arr[1] = 'Georgetown';
$arr[2] = 'NY';

/* Exécution de la requête préparée */
$stmt->execute();

printf("%d ligne insérée.\n", maxdb_stmt_affected_rows($stmt));

$arr[0] = 22222;
$arr[1] = 'New Orleans';
$arr[2] = 'LA';

/* Exécution de la requête préparée */
$stmt->execute();

printf("%d ligne insérée.\n", $stmt->affected_rows);

/* Fermeture de la requête et de la connexion */
$stmt->close();

$result = $maxdb->query("SELECT * from temp.mycity WHERE zip = '11111' OR zip = '22222'");
if ($result) {
    while ($row = $result->fetch_row()) {
        printf ("%s %s %s\n", $row[0], $row[1], $row[2]);
    }
}

/* Nettoyage de la table CountryLanguage */
$maxdb->query("DELETE FROM temp.mycity WHERE name='Georgetown'");
$maxdb->query("DELETE FROM temp.mycity WHERE name='New Orleans'");
printf("%d lignes effacées.\n", $maxdb->affected_rows);

/* Fermeture de la connexion */
$maxdb->close();
?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
1 ligne insérée.
1 ligne insérée.
11111 Georgetown NY
22222 New Orleans LA
2 lignes effacées.
]]>
  </screen>
 </refsect1>
 <refsect1>
  &reftitle.seealso;
  <para>
   <function>maxdb_stmt_bind_result</function>,
   <function>maxdb_stmt_execute</function>,
   <function>maxdb_stmt_fetch</function>,
   <function>maxdb_prepare</function>,
   <function>maxdb_stmt_send_long_data</function>,
   <function>maxdb_stmt_errno</function> et
   <function>maxdb_stmt_error</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
