<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.3 Maintainer: yannick Status: ready -->
  <refentry id="function.maxdb-prepare">
   <refnamediv>
    <refname>maxdb_prepare</refname>
    <refname>maxdb->prepare</refname>
    <refpurpose>
     Prépare une requête SQL pour exécution
    </refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
    &title.procedural;
     <methodsynopsis>
      <type>resource</type><methodname>maxdb_prepare</methodname>
      <methodparam><type>resource</type><parameter>link</parameter></methodparam>
      <methodparam><type>string</type><parameter>query</parameter></methodparam>
     </methodsynopsis>
     &title.oop;
     <classsynopsis>
      <ooclass><classname>stmt</classname></ooclass>
      <methodsynopsis>
       <type>resource</type><methodname>prepare</methodname>
       <methodparam><type>string</type><parameter>query</parameter></methodparam>
      </methodsynopsis>
     </classsynopsis>
     <para>
      <function>maxdb_prepare</function> prépare la requête SQL pointée
      par la chaîne de requête et retourne un gestionnaire de requête
      à utiliser pour les opérations futures sur la requête. La requête doit être
      composée d'une seule requête SQL.
     </para>
     <note>
      <para>
       Vous ne devez pas ajouter de point-virgule ou de <literal>\g</literal>
       à la fin de la requête.
      </para>
     </note>
     <para>
      Le paramètre <parameter>query</parameter> peut inclure un ou
      plusieurs marqueurs dans la requête SQL en y intégrant des
      point d'interrogations (<literal>?</literal>) aux positions voulues.
     </para>
     <note>
      <para>
       Les marqueurs sont autorisés uniquement à des positions 
       précises dans les requêtes SQL. Par exemple, ils sont autorisés
       dans la liste VALUE() d'une requête INSERT (pour spécifier une valeur 
       de colonne pour une ligne), ou dans une comparaison avec une colonne
       dans une clause WHERE pour spécifier une valeur de comparaison. 
      </para>
      <para>
       Cependant, ils ne sont pas autorisés pour les identifiants (comme les noms
       de tables ou de colonnes), dans la liste SELECT qui nomme les colonnes
       à être retournées par les requêtes SELECT), ou pour spécifier les opérants
       d'un opérateur binaire comme le signe égal (<literal>=</literal>). 
       La dernière restriction est nécessaire car il est impossible de déterminer
       le type du paramètre. En général, les paramètres sont légaux uniquement
       dans les requêtes <literal>Data Manipulation Languange (DML)</literal>
       et non dans les requêtes <literal>Data Defination Language
       (DDL)</literal>. 
      </para>
     </note>
     <para>
      Les marqueurs doit être liés aux variables en utilisant les fonctions 
      <function>maxdb_stmt_bind_param</function> et/ou 
      <function>maxdb_stmt_bind_result</function> avant d'exécuter
      la requête ou de récupérer les lignes.
     </para>
   </refsect1>
   <refsect1>
    &reftitle.returnvalues;
    <para>
     <function>maxdb_prepare</function> retourne une ressource de requête ou
     &false; si une erreur survient.
    </para>
   </refsect1>
   <refsect1>
    &reftitle.examples;
    <example>
     <title>Style orienté objet</title>
     <programlisting role="php">
<![CDATA[
<?php
$maxdb = new maxdb("localhost", "MONA", "RED", "DEMODB");

/* Vérification de la connexion */
if (maxdb_connect_errno()) {
   printf("Echec dela connexion : %s\n", maxdb_connect_error());
   exit();
}

$city = "Rosemont";

/* Création d'une requête préparée */
if ($stmt = $maxdb->prepare("SELECT state FROM hotel.city WHERE name=?")) {

   /* Lie les paramètres aux marqueurs */
   $stmt->bind_param("s", $city);

   /* Exécute la requête */
   $stmt->execute();

   /* Lie les variables de résultats */
   $stmt->bind_result($district);

   /* Récupération des valeurs */
   $stmt->fetch();

   printf("%s est dans %s\n", $city, $district);

   /* Fermeture de la requête */
   $stmt->close();
}

/* Fermeture de la connexion */
$maxdb->close();
?>
]]>
     </programlisting>
    </example>
    <example>
     <title>Style procédural</title>
     <programlisting role="php">
<![CDATA[
<?php
$link = maxdb_connect("localhost", "MONA", "RED", "DEMODB");

/* Vérification de la connexion */
if (maxdb_connect_errno()) {
   printf("Echec dela connexion : %s\n", maxdb_connect_error());
   exit();
}

$city = "Rosemont";

/* Création d'une requête préparée */
if ($stmt = maxdb_prepare($link, "SELECT state FROM hotel.city WHERE name=?")) {

   /* Lie les paramètres aux marqueurs */
   maxdb_stmt_bind_param($stmt, "s", $city);

   /* Exécute la requête */
   maxdb_stmt_execute($stmt);

  /* Lie les variables de résultats */
   maxdb_stmt_bind_result($stmt, $district);

   /* Récupération des valeurs */
   maxdb_stmt_fetch($stmt);

   printf("%s est dans %s\n", $city, $district);

   /* Fermeture de la requête */
   maxdb_stmt_close($stmt);
}

/* Fermeture de la connexion */
maxdb_close($link);
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
Rosemont est dans IL
]]>
     </screen>
    </example>
   </refsect1>
   <refsect1>
    &reftitle.seealso;
    <para>
     <function>maxdb_stmt_execute</function>,
     <function>maxdb_stmt_fetch</function>,
     <function>maxdb_stmt_bind_param</function>,
     <function>maxdb_stmt_bind_result</function> et
     <function>maxdb_stmt_close</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->