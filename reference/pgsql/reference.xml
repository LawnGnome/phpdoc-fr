<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.19 $ -->
<!-- EN-Revision: 1.28 Maintainer: jsgoupil Status: ready -->
<!-- Purpose: database.vendors -->
<!-- Membership: bundled, external -->
<!-- Reviewed: no -->

<reference id="ref.pgsql">
 <title>PostgreSQL</title>
 <titleabbrev>PostgreSQL</titleabbrev>

 <partintro>
  <section id="pgsql.intro">
   &reftitle.intro;
   <para>
    La base de données PostgreSQL est un produit Open Source, disponible
    sans frais. PostgreSQL, développé au département de
    Science informatique, à UC Berkeley, met en place la majorité
    des concepts des bases relationnelles actuellement disponibles sur le
    marché. PostgreSQL accepte le langage SQL92/SQL3, assure
    l'intégrité transactionnelle et l'extension de type.
    PostgreSQL est une évolution du code original de Berkeley.
   </para>
  </section>

  <section id="pgsql.requirements">
   &reftitle.required;
   <para>
    Pour accéder au support PostgreSQL, vous avez besoin de PostgreSQL 6.5
    ou plus récent ; PostgreSQL 7.0 ou plus récent pour activer toutes les
    fonctionnalités du module PostgreSQL. PostgreSQL supporte de nombreux
    jeux de caractères, y compris les jeux multi-octets asiatiques. La
    version courante et plus de détails sur PostgreSQL sont accessibles
    sur le site <ulink url="&url.pgsql;">&url.pgsql;</ulink> et
    la <ulink url="&url.pgsql.manual;">Documentation PostgreSQL</ulink>.
   </para>
  </section>

  &reference.pgsql.configure;

  &reference.pgsql.ini;

  <section id="pgsql.resources">
  &reftitle.resources;
   <para>
    Il y a deux types de ressource utilisé dans le module PostgreSQL.
    La première est l'identifiant pour la connexion à la base de données
    et le second est une ressource qui contient le résultat d'une requête.
   </para>
  </section>

  &reference.pgsql.constants;

  <section id="pgsql.notes">
  &reftitle.notes;
   <note>
    <para>
     Les fonctions ne sont pas toutes supportées par toutes les versions.
     Cela dépend de votre version de libpq (La bibliothèque cliente de
     PostgreSQL C) et comment libpq est compilé. Si les extensions PHP
     PostreSQL sont manquantes, alors c'est parce que votre version de
     libpq ne les supporte pas.
    </para>
   </note>
   <note>
    <para>
     La plupart des fonctions PostgreSQL acceptent le paramètre
     <parameter>connection</parameter> comme premier paramètre optionnel.
     S'il n'est pas fourni, la dernière connexion ouverte est utilisée.
     Si elle n'existe pas, les fonctions retournent &false;.
    </para>
   </note>
   <note>
    <para>
     PostgreSQL transforme automatiquement tous les identifiants (par exemple,
     les noms de tables/colonnes) en minuscule à la création d'objet et lors de
     la requête. Pour forcer l'utilisation des caractères majuscules ou
     minuscules et majuscules des identifiants, vous devez échapper l'identifiant
     en utilisant des guillemets ("").
    </para>
   </note>
   <note>
    <para>
     PostgreSQL n'a pas de commande spéciale pour récupérer les schémas des
     bases de données (par exemple, toutes les tables dans la base de données).
     À la place, il y a un schéma standard nommé
     <literal>information_schema</literal> dans PostgreSQL 7.4 et supérieure
     contenant les vues du système avec toutes les informations nécessaires, dans
     un format de requête facile. Voyez la
     <ulink url="&url.pgsql.manual;">Documentation PostgreSQL</ulink> pour tous
     les détails.
    </para>
   </note>
  </section>

  <section id="pgsql.examples">
   &reftitle.examples;
    <para>
     Ce simple exemple montre comment se connecter, exécuter une requête et
     afficher les lignes résultantes et se déconnecter d'une base de données
     PostgreSQL.
     <example>
      <title>Exemple général de l'extension PostgreSQL</title>
      <programlisting role="php">
<![CDATA[
<?php
// Connexion, sélection de la base de données
$dbconn = pg_connect("host=localhost dbname=publishing user=www password=foo");
    or die('Connexion impossible : ' . pg_last_error());

// Exécution de la requête SQL
$query = 'SELECT * FROM auteurs';
$result = pg_query($query) or die('Échec requête : ' . pg_last_error());

// Affichage des résultats en HTML
echo "<table>\n";
while ($line = pg_fetch_array($result, null, PGSQL_ASSOC)) {
    echo "\t<tr>\n";
    foreach ($line as $col_value) {
        echo "\t\t<td>$col_value</td>\n";
    }
    echo "\t</tr>\n";
}
echo "</table>\n";

// Libère le resultset
pg_free_result($result);

// Ferme la connexion
pg_close($dbconn);
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
 </partintro>

&reference.pgsql.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
