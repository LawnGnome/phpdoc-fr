<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.5 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.pg-send-prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_send_prepare</refname>
  <refpurpose>
   Envoie une requête pour créer une requête préparée avec les paramètres
   donnés, sans attendre la fin de son exécution
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>pg_send_prepare</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>stmtname</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>
   Envoie une requête pour créer une requête préparée avec les paramètres
   donnés, sans attendre la fin de son exécution.
  </para>
  <para>
   Cette fonction est la version asynchrone de <function>pg_prepare</function>
   : elle retourne &true; si elle a été capable de répartir la requête et
   &false; si elle n'a pas été capable. Après un appel réussi, appelez
   <function>pg_get_result</function> pour déterminer si le serveur a créé
   correctement la requête préparée.
   Les paramètres de la fonctions sont gérés de la même manière que
   <function>pg_execute</function>. Comme <function>pg_execute</function>, la
   fonction ne fonctionnera pas sur les versions antérieures à PostgreSQL 7.4.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       La ressource de connexion de la base de données PostgreSQL. Lorsque
       <parameter>connection</parameter> n'est pas présent, la connexion par
       défaut est utilisée. La connexion par défaut est la dernière connexion
       faite par <function>pg_connect</function> ou <function>pg_pconnect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>stmtname</parameter></term>
     <listitem>
      <para>
       Le nom à donner à la requête préparée. Il doit être unique à chaque
       session. Si une chaîne vide est spécifiée ("") alors une requête sans
       nom est créée, écrasant les requêtes sans nom précédemment définies.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       La requête SQL avec ses paramètres. Elle doit contenir seulement une seule
       requête. Plusieurs requêtes séparées par des points-virgules ne sont
       pas autorisées. Si des paramètres sont utilisés, ils sont référés à
       $1, $2, etc.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; en cas de succès, &false; en cas d'échec. Utilisez
   <function>pg_get_result</function> pour déterminer le résultat de la
   requête.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple <function>pg_send_prepare</function></title>
    <programlisting role="php">
<![CDATA[
<?php
  $dbconn = pg_connect("dbname=publisher") or die("Connexion impossible");

  // Prépare une requête pour l'exécution
  if (!pg_connection_busy($dbconn)) {
    pg_send_prepare($dbconn, "my_query", 'SELECT * FROM magasins WHERE nom = $1');
    $res1 = pg_get_result($dbconn);
  }

  // Exécute la requête préparée. Notez qu'il n'est pas nécessaire d'échapper
  // la chaîne "Joe's Widgets"
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Joe's Widgets"));
    $res2 = pg_get_result($dbconn);
  }
  
  // Exécute la même requête préparée, cette fois avec un paramètre différent
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Vêtements Vêtements Vêtements"));
    $res3 = pg_get_result($dbconn);
  }
  
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_connect</function></member>
    <member><function>pg_pconnect</function></member>
    <member><function>pg_execute</function></member>
    <member><function>pg_send_execute</function></member>
    <member><function>pg_send_query_params</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
