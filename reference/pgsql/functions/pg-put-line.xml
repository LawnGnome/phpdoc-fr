<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->
    <refentry id="function.pg-put-line">
   <refnamediv>
    <refname>pg_put_line</refname>
    <refpurpose>Envoie une chaîne au serveur PostgreSQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>pg_put_line</methodname>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
     </methodsynopsis>
     <methodsynopsis>
      <type>bool</type><methodname>pg_put_line</methodname>
      <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_put_line</function> envoie une chaîne (terminée
     par &null;) au serveur PostgreSQL. Ceci est pratique pour effectuer
     des insertions très rapides dans une table, initiée par une
     opération de copie PostgreSQL <literal>copy-operation</literal>. Le caractère
     final &null; est automatiquement ajouté.
     &return.success;
    </para>
    <note>
     <para>
      Notez que l'application doit explicitement ajouter les deux caractères
      "\." à la fin de la chaîne pour indiquer au serveur qu'elle a finit
      d'envoyer des données.
     </para>
    </note>
    <para>
     <example>
      <title>Exemple avec <function>pg_put_line</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$conn = pg_pconnect("dbname=foo");
pg_query($conn, "create table bar (a int4, b char(16), d float8)");
pg_query($conn, "copy bar from stdin");
pg_put_line($conn, "3\tBonjour le monde\t4.5\n");
pg_put_line($conn, "4\tAu revoir le monde\t7.11\n");
pg_put_line($conn, "\\.\n");
pg_end_copy($conn);
?>
]]>
      </programlisting>
     </example>
    </para>
    <warning>
     <para>
      L'utilisation de <function>pg_put_line</function> produit des
      opérations sur de très larges objets, ce qui peut conduire 
      <function>pg_lo_read</function> et <function>pg_lo_tell</function>
      à échouer en suivant. Vous pouvez utiliser les fonctions 
      <function>pg_copy_from</function> et <function>pg_copy_to</function>
      à la place.
     </para>
    </warning>
    <para>
     Voir aussi 
     <function>pg_end_copy</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
