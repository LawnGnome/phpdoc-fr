<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.10 $ -->
<!-- EN-Revision: 1.4 Maintainer: yannick Status: ready -->
  <refentry id="function.pg-lo-write">
   <refnamediv>
    <refname>pg_lo_write</refname>
    <refpurpose>Ecrit un objet de grande taille PostgreSQL</refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>int</type><methodname>pg_lo_write</methodname>
      <methodparam><type>resource</type><parameter>large_object</parameter></methodparam>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>len</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_lo_write</function> écrit dans l'objet de grande
     taille autant de données possible, issues de la variable
     <parameter>buf</parameter> et retourne le nombre d'octets
     réellement écrits, ou &false; en cas d'erreur.
     <parameter>large_object</parameter> est une ressource d'objet de grande taille,
     obtenu avec <function>pg_lo_open</function>.
    </para>
    <para>
     Pour manipuler un objet de grande taille (<literal>lo</literal>), il est nécessaire
     de placer les opérations dans un bloc de transaction.
    </para>
    <note>
     <para>
      Auparavant, cette fonction s'appelait <literal>pg_lowrite()</literal>.
     </para>
    </note>
    <para>
     Voir aussi
     <function>pg_lo_create</function> et
     <function>pg_lo_open</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
