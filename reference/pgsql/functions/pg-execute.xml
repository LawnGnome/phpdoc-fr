<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.5 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.pg-execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_execute</refname>
  <refpurpose>
   Envoie une requête pour exécuter une requête préparée avec les
   paramètres donnés et attend le résultat
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>pg_execute</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>stmtname</parameter></methodparam>
   <methodparam><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>resource</type><methodname>pg_execute</methodname>
   <methodparam><type>string</type><parameter>stmtname</parameter></methodparam>
   <methodparam><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
   Envoie une requête pour exécuter une requête préparée avec les
   paramètres donnés et attend le résultat.
  </para>
  <para>
   <function>pg_execute</function> est comme <function>pg_query_params</function>, 
   mais la commande qui sera exécutée est spécifiée en nommant une requête
   préalablement préparée, au lieu de donner une chaîne en tant que requête.
   Cette caractéristique permet aux commandes qui seront utilisées à
   plusieurs reprises d'être analysées et planifiées qu'une seule fois,
   plutôt que d'être exécutées chaque fois. La requête doit avoir été
   préalablement préparée dans la session courante.
   <function>pg_execute</function> est supportée seulement avec les versions
   PostgreSQL 7.4 ou plus récentes; la commande échouera si vous l'utilisez
   avec des versions antérieures.
  </para>
  <para>
   Les paramètres sont identiques à la fonction <function>pg_query_params</function>
   à l'exception du nom de la requête préparée qui est donnée à la place de la
   requête sous forme de chaîne.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       La ressource de connexion de la base de données PostgreSQL. Lorsque
       <parameter>connection</parameter> n'est pas présent, la connexion par
       défaut est utilisée. La connexion par défaut est la dernière connexion
       faite par <function>pg_connect</function> ou <function>pg_pconnect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>stmtname</parameter></term>
     <listitem>
      <para>
       Le nom de la requête préparée à exécuter. Si une chaîne vide est
       spécifiée (""), alors la requête qui n'est pas nommée est exécutée. Le
       nom doit avoir été précédemment préparé en utilisant
       <function>pg_prepare</function>, <function>pg_send_prepare</function>
       ou une commande SQL <literal>PREPARE</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       Un tableau de valeurs de paramètres pour substituer les variables $1, $2, etc.
       dans la requête préparée originale. Le nombre d'éléments présents dans
       le tableau doit concorder avec le nombre de variables à remplacer.
      </para>
      <warning>
       <para>
        Les éléments sont convertis en chaînes de caractères en appelant cette
        fonction.
       </para>
      </warning>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Une ressource de résultats en cas de succès ou &false; en cas d'échec.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>pg_execute</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Connexion à une base de données nommée "marie"
$dbconn = pg_connect("dbname=marie");

// Prépare une requête pour l'exécution
$result = pg_prepare($dbconn, "my_query", 'SELECT * FROM magasins WHERE nom = $1');

// Exécute la requête préparée. Notez qu'il n'est pas nécessaire d'échapper
// la chaîne "Joe's Widgets"
$result = pg_execute($dbconn, "my_query", array("Joe's Widgets"));

// Exécute la même requête préparée, cette fois avec un paramètre différent
$result = pg_execute($dbconn, "my_query", array("Vêtements Vêtements Vêtements"));

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_prepare</function></member>
    <member><function>pg_send_prepare</function></member>
    <member><function>pg_query_params</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
