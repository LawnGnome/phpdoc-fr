<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/pgsql.xml, last change in rev 1.3 -->
<!-- last change to 'pg-fetch-object' in en/ tree in rev 1.2 -->
  <refentry id="function.pg-fetch-object">
   <refnamediv>
    <refname>pg_Fetch_Object</refname>
    <refpurpose>Lit une ligne dans un objet.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>object</type><methodname>pg_fetch_object</methodname>
      <methodparam><type>resource</type><parameter>result</parameter></methodparam>
      <methodparam><type>int</type><parameter>row</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>result_type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_fetch_object</function> retourne un objet dont les
     membres sont les champs de la ligne demand&eacute;e, ou
     &false; , si il n'y a plus de lignes.
    </para>
    <para>
     <function>pg_fetch_object</function> est similaire &agrave;
      <function>pg_fetch_array</function>, avec une diff&eacute;rence majeure :
      c'est un objet qui est retourn&eacute;, au lieu d'un tableau. Par
      cons&eacute;quent, cela signifie que vous ne pouvez acc&eacute;der aux
      membres qu'avec leur nom, et non plus leur offset
      (les nombres ne sont pas autoris&eacute;s comme nom de membre).
    </para>
    <para>
      L'argument optionnel <parameter>result_type</parameter> de
      <parameter>result_type</parameter> est une constante qui peut prendre les
      valeurs suivantes : PGSQL_ASSOC, PGSQL_NUM, et PGSQL_BOTH.
     <note>
      <para>
       <parameter>result_type</parameter> a &eacute;t&eacute; ajout&eacute; dans
       PHP 4.0.
      </para>
     </note>
    </para>
    <para>
     Au niveau vitesse, <function>pg_fetch_object</function> est aussi rapide que
     <function>pg_fetch_row</function> et presque aussi rapide que
     <function>pg_fetch_row</function> (la diff&eacute;rence est non significative).
    </para>
    <para>
     Voir aussi
     <function>pg_fetch_array</function> et
     <function>pg_fetch_row</function>.
     <example>
      <title>Lecture d'un objet Postgres</title>
      <programlisting role="php">
&lt;?php
$database = "verlag";
$db_conn = pg_connect("host=localhost port=5432 dbname=$database");
if (!$db_conn):
?&gt;
    &lt;H1&gt;Connexion impossible &agrave; la base postgres &lt;?php echo $database &gt;&lt;/H1&gt; &lt;?php
    exit;
endif;
$qu = pg_exec($db_conn, "SELECT * FROM verlag ORDER BY autor");
$row = 0; // postgres r&eacute;clame un compteur de ligne, d'autres bases ne le font pas.
while ($data = pg_fetch_object($qu, $row)):
    echo $data-&gt;autor." (";
    echo $data-&gt;jahr ."): ";
    echo $data-&gt;titel."&lt;BR&gt;";
    $row++;
endwhile;
?&gt;
&lt;PRE&gt;&lt;?php
$fields[] = array("autor", "Author");
$fields[] = array("jahr",  "  Year");
$fields[] = array("titel", " Title");
$row= 0; // Postgres r&eacute;clame un compteur de ligne, d'autres bases ne le font pas.
while ($data = pg_fetch_object($qu, $row)):
    echo "----------\n";
    reset($fields);
    while (list(,$item) = each($fields)):
        echo $item[1].": ".$data-&gt;$item[0]."\n";
    endwhile;
    $row++;
endwhile;
echo "----------\n";
?&gt;
&lt;/PRE&gt;
&lt;?php
pg_freeresult($qu);
pg_close($db_conn);
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
