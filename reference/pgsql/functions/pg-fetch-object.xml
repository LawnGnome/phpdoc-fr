<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.10 $ -->
<!-- EN-Revision: 1.12 Maintainer: yannick Status: ready -->
  <refentry id="function.pg-fetch-object">
   <refnamediv>
    <refname>pg_fetch_object</refname>
    <refpurpose>Lit une ligne de résultat PostgreSQL dans un objet</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>object</type><methodname>pg_fetch_object</methodname>
      <methodparam><type>resource</type><parameter>result</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>row</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>result_type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_fetch_object</function> retourne un objet dont les
     membres sont les champs de la ligne demandée, ou
     &false;, s'il n'y a plus de lignes.
    </para>
    <para>
     <function>pg_fetch_object</function> est similaire à
      <function>pg_fetch_array</function>, avec une différence majeure :
      c'est un objet qui est retourné, au lieu d'un tableau. Par
      conséquent, cela signifie que vous ne pouvez accéder aux
      membres qu'avec leur nom, et non plus leur offset
      (les nombres ne sont pas autorisés comme nom de membre).
    </para>
    &database.fetch-null;
    <para>
     <parameter>row</parameter> est le numéro de la ligne (enregistrement).
     Le numéro de la première ligne vaut 0.
    </para>
    <para>
     Au niveau vitesse, <function>pg_fetch_object</function> est aussi rapide que
     <function>pg_fetch_row</function> et presque aussi rapide que
     <function>pg_fetch_row</function> (la différence est non significative).
    </para>
    <note>
     <para>
      Depuis la version 4.1.0 de &php;, <parameter>row</parameter> est optionnel.
     </para>
     <para>
      Depuis &php; 4.3.0, <parameter>result_type</parameter> vaut par défaut 
      <literal>PGSQL_ASSOC</literal> tandis que pour les versions plus récentes, 
      <literal>PGSQL_BOTH</literal> était la valeur par défaut. Il n'y a aucune utilité
      pour les propriétés numériques, depuis que celles-ci sont invalides en &php;.
     </para>
     <para>
      <parameter>result_type</parameter> sera sûrement supprimé dans les prochaines
      version.
     </para>
    </note>
    <para>
     <example>
      <title>Exemple avec <function>pg_fetch_object</function></title>
      <programlisting role="php">
<![CDATA[
<?php 

$database = 'store';

$db_conn = pg_connect("host=localhost port=5432 dbname=$database");
if (!$db_conn) {
    echo "La connexion a la base $database a échouée\n";
    exit;
}

$qu = pg_query($db_conn, "SELECT * FROM books ORDER BY author");

$row = 0; // postgres a besoin d'un compteur

while ($data = pg_fetch_object($qu, $row)) {
    echo $data->author . " (";
    echo $data->year . "): ";
    echo $data->title . "<br />";
    $row++;
}

pg_free_result($qu);
pg_close($db_conn);

?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Depuis 4.1.0, <parameter>row</parameter> est devenu optionnel.
      Appeler <function>pg_fetch_array</function> incrémentera
      le pointeur interne de 1.
     </para>
    </note>
    <para> 
     Voir aussi
     <function>pg_query</function>, 
     <function>pg_fetch_array</function>,
     <function>pg_fetch_assoc</function>,
     <function>pg_fetch_row</function> et
     <function>pg_fetch_result</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
