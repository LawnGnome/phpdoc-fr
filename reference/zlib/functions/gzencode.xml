<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.13 $ -->
<!-- EN-Revision: 1.4 Maintainer: didou Status: ready -->
<!-- Reviewed: no -->
  <refentry id="function.gzencode">
   <refnamediv>
    <refname>gzencode</refname>
    <refpurpose>Crée une chaîne compressée</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>gzencode</methodname>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>level</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>encoding_mode</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>gzencode</function> retourne la version compressée
     de la chaîne <parameter>data</parameter>, compatible avec le résultat
     de la commande <command>gzip</command> ou &false; si une erreur survient.
     Le paramètre optionnel <parameter>level</parameter> peut prendre une valeur
     comprise entre 0 (pas de compression) et 9 (compression maximale). Par
     défaut, le niveau de compression est le niveau de la bibliothèque Zlib.
    </para>
    <para>
     Vous pouvez aussi utiliser les constantes <constant>FORCE_GZIP</constant>
     (la valeur par défaut) ou <constant>FORCE_DEFLATE</constant> comme
     troisième paramètre optionnel <parameter>encoding_mode</parameter>. Si
     vous utilisez <constant>FORCE_DEFLATE</constant>, vous obtiendrez
     une chaîne réduite (deflated) avec les en-têtes Zlib ad hoc, mais
     sans la somme de contrôle finale CRC32.
     <note>
      <para>
       <parameter>level</parameter> a été ajouté en &php; 4.2. Avant
       cette version <function>gzencode</function> n'utilisait
       que le paramètre <parameter>data</parameter> et optionnellement
       <parameter>encoding_mode</parameter>.
      </para>
     </note>
    </para>
    <para>
     La chaîne résultante contient les en-têtes et la structure de données
     appropriée pour en faire un fichier .gz standard, c'est à dire :
     <example>
      <title>Créer un fichier gzip</title>
      <programlisting role="php">
<![CDATA[
<?php
$data = implode("", file("bigfile.txt"));
$gzdata = gzencode($data, 9);
$fp = fopen("bigfile.txt.gz", "w");
fwrite($fp, $gzdata);
fclose($fp);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Pour plus de détails sur le format de fichier GZIP, reportez-vous
     à la RFC <ulink url="&url.rfc;1952">GZIP file format specification
     version 4.3</ulink> (RFC 1952).
    </para>
    <para>
     Voir aussi
     <function>gzcompress</function>
     <function>gzuncompress</function>
     <function>gzdeflate</function> et
     <function>gzinflate</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
