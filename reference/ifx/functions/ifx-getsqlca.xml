<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
<!-- EN-Revision: 1.9 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.ifx-getsqlca" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ifx_getsqlca</refname>
  <refpurpose>Retourne le contenu de la variable sqlca.sqlerrd[0..5] après une requête</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>ifx_getsqlca</methodname>
   <methodparam><type>resource</type><parameter>result_id</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retourne une pseudo-ligne (tableau associatif) avec sqlca.sqlerrd[0]
   à sqlca.sqlerrd[5] après la requête associée <parameter>result_id</parameter>.
  </para>
  <para>
   Pour les requêtes <literal>INSERT</literal>, <literal>UPDATE</literal>
   et <literal>DELETE</literal>, les valeurs retournées sont celles fixées
   par le serveur après avoir exécuté la requête. Cela donne accès au
   nombre de lignes affectées, ainsi qu'au numéro de série d'insertion.
   Pour les requêtes de type <literal>SELECT</literal>, les valeurs
   retournées sont celles qui ont été préparées. Utiliser cette fonction
   économise l'exécution d'une requête <literal>SELECT
   dbinfo('sqlca.sqlerrdx')</literal>, étant donné qu'elle retourne les
  valeurs qui ont été sauvées par le pilote ifx au moment approprié.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result_id</parameter></term>
     <listitem>
      <para>
       <parameter>result_id</parameter> est un identifiant de résultats valide,
       retourné par la fonction <function>ifx_query</function> ou la fonction
       <function>ifx_prepare</function> (requêtes de type SELECT uniquement !).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau associatif, composé des entrées suivantes :
   <literal>sqlerrd0</literal>, <literal>sqlerrd1</literal>,
   <literal>sqlerrd2</literal>, <literal>sqlerrd3</literal>,
   <literal>sqlerrd4</literal> et <literal>sqlerrd5</literal>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Lire les valeurs de sqlca.sqlerrd[x]</title>
    <programlisting role="php">
<![CDATA[
<?php
/* On suppose que la première colonne d'une table 
'quelconque' est un numéro de série */
$qid = ifx_query("insert into sometable
                  values (0, '2nd column', 'another column') ", $connid);
if (!$qid) {
    /* ... erreur ... */
}
$sqlca = ifx_getsqlca($qid);
$serial_value = $sqlca["sqlerrd1"];
echo "Le numéro de série de la valeur insérée est : $serial_value<br />\n";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->