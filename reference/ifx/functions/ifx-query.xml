<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
<!-- EN-Revision: 1.12 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.ifx-query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ifx_query</refname>
  <refpurpose>Envoie une requête Informix</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>ifx_query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam><type>resource</type><parameter>link_identifier</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>cursor_type</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>blobidarray</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>ifx_query</function> envoie une requête au serveur
   actif courant, associé à l'identifiant de connexion
   <parameter>link_identifier</parameter>.
  </para>
  <para>
   Pour les requêtes de type SELECT, un pointeur est déclaré, et ouvert.
   Les autres seront exécutées immédiatement.
  </para>
  <para>
   Pour les autres requêtes, le nombre de lignes affectées (estimé ou exact) est
    enregistré pour être lu avec <function>ifx_affected_rows</function>.
  </para>
  <para>
   Si le contenu d'une colonne est de type TEXT (ou BYTE) vous pouvez
   aussi utiliser les fonctions <function>ifx_textasvarchar</function> et
   <function>ifx_byteasvarchar</function>. Cela vous permettra d'utiliser
   les colonnes TEXT ( ou BYTE ) comme des colonnes de type VARCHAR (mais
   plus long, tout de même), et vous n'aurez pas besoin de l'identifiant
   de BLOB.
  </para>
  <para>
   Avec les fonctions <function>ifx_textasvarchar</function> et
   <function>ifx_byteasvarchar</function> (valeurs par défaut), les
   requêtes SELECT retourneront des identifiants de BLOB. Ces identifiants
   peuvent être une chaîne ou un fichier, suivant la configuration
   (voir plus loin).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       La requête, sous la forme d'une &string;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>link_identifier</parameter></term>
     <listitem>
      <para>
       L'identifiant du lien.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cursor_def</parameter></term>
     <listitem>
      <para>
       Ce paramètre optionnel vous permet de choisir le type de curseur,
       <literal>scroll</literal> et/ou <literal>hold</literal>.
       C'est un masque qui peut être soit <constant>IFX_SCROLL</constant>,
       soit <constant>IFX_HOLD</constant>, ou les deux. Si vous ne
       fournissez pas ce paramètre, le curseur est un curseur normal séquentiel.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>blobidarray</parameter></term>
     <listitem>
      <para>
       Si vous avez une colonne de type BLOB (BYTE ou TEXT) dans une requête de
       modification, vous pouvez passer un paramètre
       <parameter>blobidarray</parameter> qui contiendra les identifiants
       des BLOB à modifier, et vous devrez remplacer cette colonne par
       un point d'interrogation (?) dans la requête.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un identifiant de résultats Informix en cas de succès, ou
   &false; si une erreur survient.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     Afficher toutes les lignes de la table "ordres" sous la forme html du serveur IFX
    </title>
    <programlisting role="php">
<![CDATA[
<?php
ifx_textasvarchar(1);      // Utilisation du mode "text mode" pour les BLOBs
$res_id = ifx_query("select * from orders", $conn_id);
if (! $res_id) {
    printf("Can't select orders : %s\n<br />%s<br />\n", ifx_error(), ifx_errormsg());
    die;
}
ifx_htmltbl_result($res_id, "border=\"1\"");
ifx_free_result($res_id);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Insertion de valeurs dans la table "catalogue" IFX</title>
    <programlisting role="php">
<![CDATA[
<?php

// Créer un identifiant de BLOB pour une colonne de type BYTE et une de type TEXT
$textid = ifx_create_blob(0, 0, "Colonne Text en mémoire");
$byteid = ifx_create_blob(1, 0, "Colonne Byte en mémoire");

// Stocke l'identifiant du BLOB dans le tableau BLOBid
$blobidarray[] = $textid;
$blobidarray[] = $byteid;

// Exécute la requête
$query = "insert into catalog (stock_num, manu_code, " .
         "cat_descr,cat_picture) values(1,'HRO',?,?)";
$res_id = ifx_query($query, $conn_id, $blobidarray);
if (! $res_id) {
    /* ... erreur ... */
}

// Libération du résultat
ifx_free_result($res_id);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ifx_connect</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->