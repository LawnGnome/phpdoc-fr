<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/ifx.xml, last change in rev 1.9 -->
<!-- last change to 'ifx-query' in en/ tree in rev 1.2 -->
 <refentry id="function.ifx-query">
  <refnamediv>
   <refname>ifx_query</refname>
   <refpurpose>Envoie une requ&ecirc;te Informix.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>ifx_query</methodname>
     <methodparam><type>string</type><parameter>query</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>link_identifier</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>cursor_type</parameter></methodparam>
     <methodparam choice="opt"><type>mixed</type><parameter>
      blobidarray
      </parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>ifx_query</function> retourne un identifiant positif de
    r&eacute;sultat Informix en cas de succ&egrave;s, et &false; en cas d'erreur.
   </para>
   <para>
    L'entier de type "identifiant de r&eacute;sultat" est utilis&eacute; par4
    d'autres fonctions pour lire les r&eacute;sultats. Pour un exemple,
    reportez-vous &agrave; <function>ifx_affected_rows</function> pour
    conna&icirc;tre le nombre de lignes affect&eacute;es.
   </para>
   <para>
    <function>ifx_query</function> envoie une requ&ecirc;te au serveur
    actif courant, associ&eacute; &agrave; l'identifiant de connexion
    <parameter>link_identifier</parameter>. Si
    <parameter>link_identifier</parameter> n'est pas fourni,
    la derni&egrave;re connexion ouverte sera utilis&eacute;e. Si aucune connexion
    n'a &eacute;t&eacute; ouverte, <function>ifx_query</function> va essayer d'en
    cr&eacute;er une, en appelant <function>ifx_connect</function>.
   </para>
   <para>
    Ex&eacute;cute la requ&ecirc;te <parameter>query</parameter> sur la connexion
    <parameter>conn_id</parameter>. Pour les requ&ecirc;tes de type SELECT, un
    pointeur est d&eacute;clar&eacute;, et ouvert.  L'option
    <parameter>cursor_type</parameter> permet de choisir le type de
    pointeur, "scroll" et/ou "hold". <parameter>cursor_type</parameter> accepte
    les deux valeurs s&eacute;par&eacute;es, et leur combinaison. Les
    requ&ecirc;tes d'autre type sont &agrave; ex&eacute;cution imm&eacute;diate.
   </para>
   <para>
    Le nombre de lignes affect&eacute;es (estim&eacute; ou exact) est
    enregistr&eacute; pour &ecirc;tre lu avec <function>ifx_affected_rows</function>.
   </para>
   <para>
    Si vous avez une colonne de type BLOB (BYTE ou TEXT) dans une requ&ecirc;te de
    modification, vous pouvez passer un param&egrave;tre
    <parameter>BLOBidarray</parameter> qui contiendra les identifiants
    des BLOB &agrave; modifier, et vous devrez remplacer cette colonne par
    un point d'interrogation (?) dans la requ&ecirc;te.
   </para>
   <para>
    Si le contenu d'une colonne de type TEXT (ou BYTE) vous pouvez
    aussi utiliser les fonctions <function>ifx_textasvarchar</function> et
    <function>ifx_byteasvarchar</function>. Cela vous permettra d'utiliser
    les colonnes TEXT ( ou BYTE ) comme des colonnes de type VARCHAR (mais
    plus long, tout de m&ecirc;me), et vous n'aurez pas besoin de l'identifiant
    de BLOB.
   </para>
   <para>
    Avec les fonctions <function>ifx_textasvarchar</function> et
    <function>ifx_byteasvarchar</function> (valeurs par d&eacute;faut), les
    requ&ecirc;tes SELECT retourneront des identifiants de BLOB. Cet identifiant
    peut &ecirc;tre une cha&icirc;ne ou un fichier, suivant la configuration
    (voir plus loin).
   </para>
   <para>
    Voir aussi
    <function>ifx_connect</function>.
    <example>
     <title>
      Afficher toutes les lignes de la table "ordres" sous la forme html
     </title>
     <programlisting role="php">
ifx_textasvarchar(1);      // Utilisation du mode "text mode" pour les BLOBs
$res_id = ifx_query("select * from orders", $conn_id);
if (! $res_id) {
    printf("Impossible de s&eacute;lectionner des lignes dans : %s\n&lt;br&gt;%s&lt;br&gt;\n", ifx_error());
    ifx_errormsg();
    die;
}
ifx_htmltbl_result($res_id, "border=\"1\"");
ifx_free_result($res_id);
     </programlisting>
    </example>
    <example>
     <title>Insertion de valeurs dans la table "catalogue" </title>
     <programlisting role="php">
&lt;?php
// cr&eacute;er un identifiant de BLOB pour une colonne de type BYTE et une de type TEXT
$textid = ifx_create_blob(0, 0, "Colonne Text en m&eacute;moire");
$byteid = ifx_create_blob(1, 0, "Colonne Byte en m&eacute;moire");
// Stocke l'identifiant du BLOB dans le tableau BLOBid
$BLOBidarray[] = $textid;
$BLOBidarray[] = $byteid;
// ex&eacute;cute la requ&ecirc;te
$query = "insert into catalog (stock_num, manu_code, " .
         "cat_descr,cat_picture) values(1,'HRO',?,?)";
$res_id = ifx_query($query, $conn_id, $BLOBidarray);
if (! $res_id) {
//  ... erreur ...
}
// lib&eacute;ration du r&eacute;sultat
ifx_free_result($res_id);
?&gt;
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
