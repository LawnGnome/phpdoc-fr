<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.18 $ -->
<!-- EN-Revision: 1.12 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<section xml:id="ifx.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <note>
  <para>
    Avant que vous ne lanciez le script "configure", assurez-vous que la variable
    d'environnement <literal>"INFORMIXDIR"</literal> a été correctement
    paramétrée, et que $INFORMIXDIR/bin est dans votre PATH.
    Vérifiez cela en étudiant le résultat de la fonction <function>phpinfo</function>
    avant de commencer à utiliser cette extension. <function>phpinfo</function>
    devrait lister ces variables d'environnement. C'est le cas aussi bien pour
    les modes CGI que module Apache. Vous pouvez aussi mettre en place
    ces variables dans votre script de démarrage Apache.
  </para>
  <para>
   Les bibliothèques partagées Informix doivent être accessibles pour le chargement
   (vérifiez LD_LIBRARY_PATH et ld.so.conf/ldconfig).
  </para>
 </note>
  <note>
   <title>Notes sur l'utilisation des BLOB (TEXT et BYTE)</title>
   <para>
    Les objets de type BLOB sont normalement gérés par des
    identifiants de BLOB. Les requêtes de sélection retournent
    un identifiant de BLOB pour chaque colonne de type BYTE et TEXT. Vous
    pouvez en lire le contenu, avec des commandes de type
    <literal>"string_var = ifx_get_blob($BLOB_id);"</literal> ; si vous souhaitez ramener le BLOB en
    mémoire (avec: <literal>"ifx_blobinfile_mode(0);"</literal>). Si vous préférez
    recevoir le contenu d'une colonne BLOB dans un fichier, utilisez
    <function>ifx_blobinfile_mode</function>, et ifx_get_blob($BLOB_id)
    vous retournera le nom du fichier. Utilisez les fonctions habituelles
    d'accès aux fichiers pour lire son contenu.
   </para>
   <para>
    Pour les requêtes INSERT/UPDATE, vous devez créer les identifiants
    de BLOB vous-même, avec la fonction <function>ifx_create_blob</function>.
    Puis, vous placez l'identifiant de BLOB dans un tableau, et remplacez
    la colonne par un point d'interrogation (?). Pour les UPDATE/INSERT, vous
    êtes responsable du contenu du BLOB, avec la fonction
    <function>ifx_update_blob</function>.
   </para>
   <para>
    Le comportement par défaut des colonnes de type BLOB peut être
    modifié en affectant de nouvelles valeurs aux variables de configuration
    (même à la volée) :
   </para>
   <para>
    Variable de configuration : ifx.textasvarchar
   </para>
   <para>
    Variable de configuration  : ifx.byteasvarchar
   </para>
   <para>
    Fonctions à utiliser lors de l'exécution :
   </para>
   <para>
    ifx_textasvarchar(0) : utilise l'identifiant de BLOB avec des colonnes de type
    TEXT, dans les requêtes SELECT
   </para>
   <para>
    ifx_byteasvarchar(0) : utilise l'identifiant de BLOB avec des colonnes de type
    BYTE, dans les requêtes SELECT
   </para>
   <para>
    ifx_textasvarchar(1) : retourne les colonnes de type TEXT sous la forme de
    VARCHAR, sans utiliser les identifiants de BLOB dans les requêtes SELECT.
   </para>
   <para>
    ifx_byteasvarchar(1) : retourne les colonnes de type BYTE sous la forme de
    VARCHAR, sans utiliser les identifiants de BLOB dans les requêtes SELECT.
   </para>
   <para>
    Variable de configuration : ifx.BLOBinfile
   </para>
   <para>
    Fonctions à utiliser lors de l'exécution :
   </para>
   <para>
    ifx_blobinfile_mode(0) : retourne les colonnes de type BYTE en mémoire ;
    l'identifiant de BLOB vous donnera accès au contenu.
   </para>
   <para>
    ifx_blobinfile_mode(1) : retourne les colonnes de type BYTE dans un fichier ;
    l'identifiant de BLOB vous donnera accès au nom de ce fichier.
   </para>
   <para>
    En affectant la valeur 1 à ifx_text/byteasvarchar, vous pouvez
    utiliser les colonnes de type TEXT et BYTE dans les requêtes SELECT
    comme des champs VARCHAR (mais plus long). Étant donné la gestion
    des chaînes par &php;, cette technique conserve les données
    binaires. Les données retournées peuvent contenir n'importe
    quoi, et vous êtes responsable de la bonne manipulation de ces valeurs.
   </para>
   <para>
    En affectant la valeur 1 à <function>ifx_blobinfile_mode</function>,
    utilisez le nom de fichier retourné par <function>ifx_get_blob</function>
    pour accéder au contenu du BLOB. Notez bien que vous êtes tenu
    responsable de l'effacement des fichiers temporaires, créés par
    Informix. Chaque nouvelle ligne lue sur le serveur va créer un nouveau
    fichier temporaire, pour chaque colonne de type BYTE.
   </para>
   <para>
    L'emplacement des fichiers temporaires peut être modifié, grâce
    à la variable <literal>"blobdir"</literal>, (par défaut, <literal>"."</literal>, c'est-à-dire,
    le dossier courant). Une valeur telle que <literal>BLOBdir="tmpBLOB"</literal> simplifiera le
    nettoyage des fichiers temporaires, accidentellement oubliés (les noms
    commencent tous par <literal>"blb"</literal>).
   </para>
  </note>
  <note>
   <title>Suppression automatique des espaces (SQLCHAR et SQLNCHAR)</title>
   <para>
    Elle peut être mise en place avec la variable de configuration.
   </para>
   <para>
    ifx.charasvarchar : avec la valeur 1, les espaces de fin de champs seront
    automatiquement supprimés.
   </para>
  </note>
  <note>
   <title>NULL values</title>
   <para>
    Lorsque la variable de configuration ifx.nullformat (ou que la fonction
    <function>ifx_nullformat</function>) est à un, les colonnes contenant
    la valeur NULL retourneront la chaîne <literal>"NULL"</literal> et, sinon, retourneront
    une chaîne vide. Cela vous permet de faire la différence entre
    les colonnes vides et celles qui contiennent la valeur NULL.
   </para>
  </note>

 <para>
 <table>
  <title>Options de configuration</title>
  <tgroup cols="4">
   <thead>
    <row>
     <entry>Nom</entry>
     <entry>Par défaut</entry>
     <entry>Modifiable</entry>
     <entry>Historique</entry>
    </row>
   </thead>
    <tbody>
    <row>
     <entry>ifx.allow_persistent</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Supprimé depuis &php; 5.2.1</entry>
    </row>
    <row>
     <entry>ifx.max_persistent</entry>
     <entry>"-1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Supprimé depuis &php; 5.2.1</entry>
    </row>
    <row>
     <entry>ifx.max_links</entry>
     <entry>"-1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Supprimé depuis &php; 5.2.1</entry>
    </row>
    <row>
     <entry>ifx.default_host</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Supprimé depuis &php; 5.2.1</entry>
    </row>
    <row>
     <entry>ifx.default_user</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Supprimé depuis &php; 5.2.1</entry>
    </row>
    <row>
     <entry>ifx.default_password</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Supprimé depuis &php; 5.2.1</entry>
    </row>
    <row>
     <entry>ifx.blobinfile</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Supprimé depuis &php; 5.2.1</entry>
    </row>
    <row>
     <entry>ifx.textasvarchar</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Supprimé depuis &php; 5.2.1</entry>
    </row>
    <row>
     <entry>ifx.byteasvarchar</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Supprimé depuis &php; 5.2.1</entry>
    </row>
    <row>
     <entry>ifx.charasvarchar</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Supprimé depuis &php; 5.2.1</entry>
    </row>
    <row>
     <entry>ifx.nullformat</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Supprimé depuis &php; 5.2.1</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 &ini.php.constants;
 </para>

&ini.descriptions.title;
<para>
 <variablelist>
  <varlistentry xml:id="ini.ifx.allow-persistent">
   <term>
    <parameter>ifx.allow_persistent</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <para>
        Active les connexions persistantes à une base de données Informix.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.ifx.max-persistent">
   <term>
    <parameter>ifx.max_persistent</parameter>
    &integer;
   </term>
   <listitem>
    <para>
     Nombre maximum de connexions persistantes à une base de données Informix,
     par processus.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.ifx.max-links">
   <term>
    <parameter>ifx.max_links</parameter>
    &integer;
   </term>
   <listitem>
    <para>
     Nombre maximum de connexions à une base de données Informix par processus,
     en incluant les connexions persistantes.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.default-host">
   <term>
    <parameter>ifx.default_host</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
     Hôte par défaut où se connecter si aucun hôte n'est spécifié par les
     fonctions <function>ifx_connect</function> ou <function>ifx_pconnect</function>.
     Cette option ne s'applique pas si le &safemode; est activé.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.default-user">
   <term>
    <parameter>ifx.default_user</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
     Utilisateur par défaut si aucun utilisateur n'est spécifié par les fonctions
     <function>ifx_connect</function> ou <function>ifx_pconnect</function>.
     Cette option ne s'applique pas si le &safemode; est activé.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.default-password">
   <term>
    <parameter>ifx.default_password</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
     Mot de passe par défaut si aucun mot de passe n'est spécifié par les fonctions
     <function>ifx_connect</function> ou <function>ifx_pconnect</function>.
     Cette option ne s'applique pas si le &safemode; est activé.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.blobinfile">
   <term>
    <parameter>ifx.blobinfile</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <para>
     Lorsque cette option est activée, les colonnes de type <literal>"blob"</literal> seront retournées
     dans un fichier. Par défaut, elles seront retournées en mémoire. Il est possible
     de modifier dynamiquement cette valeur grâce à la fonction
    <function>ifx_blobinfile_mode</function>.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.textasvarchar">
   <term>
    <parameter>ifx.textasvarchar</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <para>
    Lorsque cette option est activée, les colonnes de type <literal>"TEXT"</literal> seront retournées
    dans une chaîne de caractères. Par défaut, elles seront retournées en mémoire. Il est possible
    de modifier dynamiquement cette valeur grâce à la fonction
    <function>ifx_textasvarchar</function>.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.byteasvarchar">
   <term>
    <parameter>ifx.byteasvarchar</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <para>
     Lorsque cette option est activée, les colonnes de type <literal>"BYTE"</literal>
     seront retournées dans une chaîne de caractères. Par
     défaut, elles seront retournées en mémoire.
     Il est possible de modifier dynamiquement cette valeur grâce
     à la fonction <function>ifx_textasvarchar</function>.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.charasvarchar">
   <term>
    <parameter>ifx.charasvarchar</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <para>
     Lorsque cette option est activée, les espaces en fin de
     chaîne de caractères seront conservés lors d'une
     commande FETCH.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.nullformat">
   <term>
    <parameter>ifx.nullformat</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <para>
     Lorsque cette option est activée, les colonnes de valeur &null;
     seront retournées comme des chaînes de caractères
     vides. Il est possible de modifier dynamiquement cette valeur
     grâce à la fonction <function>ifx_nullformat</function>.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
</para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

