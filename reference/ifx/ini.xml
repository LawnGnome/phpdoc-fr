<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<section id="ifx.configuration">
 &reftitle.runtime;
 &extension.runtime;
 <note>
  <para>
    Avant que vous ne lanciez le script "configure", assurez-vous que la variable
    d'environnement "INFORMIXDIR" a &eacute;t&eacute; correctement
    param&eacute;tr&eacute;e, et que $INFORMIXDIR/bin est dans votre PATH.
    V&eacute;rifiez cela en &eacute;tudiant le r&eacute;sultat de la fonction <function>phpinfo</function>
    avant de commencer &agrave; utiliser cette extension. <function>phpinfo</function>
    devrait lister ces variables d'environnement. C'est la cas aussi bien pour
    les modes CGI que module Apache. Vous pouvez aussi mettre en place
    ces variables dans votre script de d&eacute;marrage Apache.
  </para>
  <para>
   Les libraries partag&eacute;es Informix doivent &ecirc;tre accessibles pour le chargement
   (v&eacute;rifi&eacute;ez LD_LIBRARY_PATH et ld.so.conf/ldconfig).
  </para>
 </note>
  <note>
   <title>Notes sur l'utilisation des BLOBs (TEXT et BYTE)</title>
   <para>
    Les objets de type BLOBs sont normalement g&eacute;r&eacute;s par des
    identifiants de BLOB. Les requ&ecirc;tes de s&eacute;lection retournent
    un identifiant de BLOB pour chaque colonne de type BYTE et TEXT. Vous
    pouvez en lire le contenu, avec des commandes de types
    "string_var = ifx_get_blob($BLOB_id);" ; si vous souhaitez ramener le BLOB en
    m&eacute;moire (avec: "ifx_blobinfile_mode(0);"). Si vous pr&eacute;f&eacute;rez
    recevoir le contenu d'une colonne BLOB dans un fichier, utilisez
    <function>ifx_blobinfile_mode</function>, et ifx_get_blob($BLOB_id)
    vous retournera le nom du fichier. Utilisez les fonctions habituelles
    d'acc&egrave;s aux fichiers pour lire son contenu.
   </para>
   <para>
    Pour les requ&ecirc;tes INSERT/UPDATE, vous devez cr&eacute;er les identifiants
    de BLOB par vous m&ecirc;me, avec la fonction <function>ifx_create_blob</function>.
    Puis, vous placez l'identifiant de BLOB dans un tableau, et remplacez
    la colonne par un point d'interrogation. Pour les UPDATE/INSERT, vous
    &ecirc;tes responsable du contenu du BLOB, avec la fonction
    <function>ifx_update_blob</function>.
   </para>
   <para>
    Le comportement par d&eacute;faut des colonnes de type BLOB peut &ecirc;tre
    modifi&eacute; en affectant de nouvelles valeurs aux variables de configuration
    (m&ecirc;me &agrave; la vol&eacute;e) :
   </para>
   <para>
    Variable de configuration : ifx.textasvarchar
   </para>
   <para>
    Variable de configuration  : ifx.byteasvarchar
   </para>
   <para>
    Fonctions &agrave; utiliser lors de l'ex&eacute;cution :
   </para>
   <para>
    ifx_textasvarchar(0) : Utilise l'identifiant de BLOB avec des colonnes de type
    TEXT, dans les requ&ecirc;tes SELECT
   </para>
   <para>
    ifx_byteasvarchar(0) : Utilise l'identifiant de BLOB avec des colonnes de type
    BYTE, dans les requ&ecirc;tes SELECT
   </para>
   <para>
    ifx_textasvarchar(1) : Retourne les colonnes de type TEXT sous la forme de
    VARCHAR, sans utiliser les identifiants de BLOB dans les requ&ecirc;tes SELECT.
   </para>
   <para>
    ifx_byteasvarchar(1) : Retourne les colonnes de type BYTE sous la forme de
    VARCHAR, sans utiliser les identifiants de BLOB dans les requ&ecirc;tes SELECT.
   </para>
   <para>
    Variable de configuration : ifx.BLOBinfile
   </para>
   <para>
    Fonctions &agrave; utiliser lors de l'ex&eacute;cution :
   </para>
   <para>
    ifx_blobinfile_mode(0) : Retourne les colonnes de type BYTE en m&eacute;moire,
    l'identifiant de BLOB vous donnera acc&egrave;s au contenu.
   </para>
   <para>
    ifx_blobinfile_mode(1) : Retourne les colonnes de type BYTE dans un fichier,
    l'identifiant de BLOB vous donnera acc&egrave;s au nom de ce fichier.
   </para>
   <para>
    En affectant la valeur de 1 &agrave; ifx_text/byteasvarchar, vous pouvez
    utiliser les colonnes de type TEXT et BYTE dans les requ&ecirc;tes SELECT
    comme des champs VARCHAR (mais plus long). Etant donn&eacute; la gestion
    des cha&icirc;nes par PHP, cette technique conserve les donn&eacute;es
    binaires. Les donn&eacute;es retourn&eacute;es peuvent contenir n'importe
    quoi, et vous &ecirc;tes responsable de la bonne manipulation de ces valeurs.
   </para>
   <para>
    En affectant la valeur de 1 &agrave; <function>ifx_blobinfile_mode</function>,
    utilisez le nom de fichier retourn&eacute; par <function>ifx_get_blob</function>
    pour acc&eacute;der au contenu du BLOB. Notez bien que vous &ecirc;tes tenu
    responsable de l'effacement des fichiers temporaires, cr&eacute;&eacute;s par
    Informix. Chaque nouvelle ligne lue sur le serveur va cr&eacute;er un nouveau
    fichier temporaire, pour chaque colonne de type BYTE.
   </para>
   <para>
    L'emplacement des fichiers temporaire peut &ecirc;tre modifi&eacute;, gr&acirc;ce
    &agrave; la variable "blobdir", (par d&eacute;faut, ".", c'est-&agrave;-dire,
    le dossier courant). Une valeur telle que BLOBdir="tmpBLOB" simplifiera le
    nettoyage des fichiers temporaires, accidentellement oubli&eacute;s (les noms
    commencent tous par "blb").
   </para>
  </note>
  <note>
   <title>Suppression automatique des espaces (SQLCHAR et SQLNCHAR)</title>
   <para>
    Elle peut &ecirc;tre mise en place avec la variable de configuration.
   </para>
   <para>
    ifx.charasvarchar : avec la valeur 1, les espaces de fin de champs seront
    automatiquement supprim&eacute;s.
   </para>
  </note>
  <note>
   <title>NULL values</title>
   <para>
    Lorsque la variable de configuration ifx.nullformat (ou que la fonction
    <function>ifx_nullformat</function>) est &agrave; un, les colonnes contenant
    la valeur NULL retourneront la cha&icirc;ne "NULL", et sinon, retourneront
    une cha&icirc;ne vide. Cela vous permet de faire la diff&eacute;rence entre
    les colonnes vides et celles qui contiennent la valeur NULL.
   </para>
  </note>

 <para>
 <table>
  &ini.table.title;
  <tgroup cols="3">
   <thead>
    &ini.table.top;
   </thead>
    <tbody>
    <row>
     <entry>ifx.allow_persistent</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>ifx.max_persistent</entry>
     <entry>"-1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>ifx.max_links</entry>
     <entry>"-1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>ifx.default_host</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>ifx.default_user</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>ifx.default_password</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
    </row>
    <row>
     <entry>ifx.blobinfile</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>ifx.textasvarchar</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>ifx.byteasvarchar</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>ifx.charasvarchar</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
    <row>
     <entry>ifx.nullformat</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
  &ini.table.bottom;
 </para>
 <para>
    &ini.descriptions.title;
 <variablelist>
  <varlistentry id="ini.ifx.allow-persistent">
   <term>
    <parameter>ifx.allow_persistent</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <para>
        Active les connexions persistantes &agrave; une base de donn&eacute;es Informix.
    </para>
   </listitem>
  </varlistentry>
  
  <varlistentry id="ini.ifx.max-persistent">
   <term>
    <parameter>ifx.max_persistent</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <para>
        Nombre maximum de connexions persistantes &agrave; une base de donn&eacute;es Informix,
    par processus.
    </para>
   </listitem>
  </varlistentry>
  
  <varlistentry id="ini.ifx.max-links">
   <term>
    <parameter>ifx.max_links</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <para>
        Nombre maximum de connexions &agrave; une base de donn&eacute;es Informix par processus,
    en incluant les connexions persistantes.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry id="ini.ifx.default-host">
   <term>
    <parameter>ifx.default_host</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
        H&ocirc;te par d&eacute;faut o&ugrave; se connecter si aucun h&ocirc;te n'est sp&eacute;cifi&eacute; par les
    fonctions <function>ifx_connect</function> ou <function>ifx_pconnect</function>.
    Cette option ne s'applique pas si le &safemode; est activ&eacute;.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry id="ini.ifx.default-user">
   <term>
    <parameter>ifx.default_user</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
        Utilisateur par d&eacute;faut si aucun utilisateur n'est sp&eacute;cifi&eacute; par les fonctions
    <function>ifx_connect</function> ou <function>ifx_pconnect</function>.
    Cette option ne s'applique pas si le &safemode; est activ&eacute;.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry id="ini.ifx.default-password">
   <term>
    <parameter>ifx.default_password</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
        Mot de passe par d&eacute;faut si aucun mot de passe n'est sp&eacute;cifi&eacute; par les fonctions
    <function>ifx_connect</function> ou <function>ifx_pconnect</function>.
    Cette option ne s'applique pas si le &safemode; est activ&eacute;.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry id="ini.ifx.blobinfile">
   <term>
    <parameter>ifx.blobinfile</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <para>
    Lorsque cette option est activ&eacute;e, les colonnes de type "blob" seront retourn&eacute;es
    dans un fichier. Par d&eacute;faut, elles seront retourn&eacute;es en m&eacute;moire. Il est possible
    de modifier dynamiquement cette valeur gr&acirc;ce &agrave; la fonction
    <function>ifx_blobinfile_mode</function>.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry id="ini.ifx.textasvarchar">
   <term>
    <parameter>ifx.textasvarchar</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <para>
    Lorsque cette option est activ&eacute;e, les colonnes de type "TEXT" seront retourn&eacute;es
    dans une cha&icirc;ne de caract&egrave;res. Par d&eacute;faut, elles seront retourn&eacute;es en m&eacute;moire. Il est possible
    de modifier dynamiquement cette valeur gr&acirc;ce &agrave; la fonction
    <function>ifx_textasvarchar</function>.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry id="ini.ifx.byteasvarchar">
   <term>
    <parameter>ifx.byteasvarchar</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <para>
        Lorsque cette option est activ&eacute;e, les colonnes de type "BYTE"
        seront retourn&eacute;es dans une cha&icirc;ne de caract&egrave;res. Par
        d&eacute;faut, elles seront retourn&eacute;es en m&eacute;moire.
        Il est possible    de modifier dynamiquement cette valeur gr&acirc;ce
        &agrave; la fonction <function>ifx_textasvarchar</function>.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry id="ini.ifx.charasvarchar">
   <term>
    <parameter>ifx.charasvarchar</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <para>
        Lorsque cette option est activ&eacute;e, les espaces en fin de
        cha&icirc;ne de caract&egrave;res seront conserv&eacute;s lors d'une
        commande FETCH.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry id="ini.ifx.nullformat">
   <term>
    <parameter>ifx.nullformat</parameter>
    <type>bool</type>
   </term>
   <listitem>
    <para>
  	    Lorsque cette option est activ&eacute;e, les colonnes de valeur &null;
	    seront retourn&eacute;es comme des cha&icirc;nes de caract&egrave;res
	    vides. Il est possible	de modifier dynamiquement cette valeur
	    gr&acirc;ce &agrave; la fonction <function>ifx_nullformat</function>.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

