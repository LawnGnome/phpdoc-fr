<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.1 Maintainer: didou Status: ready -->
  <refentry id="function.arrayobject-getiterator">
   <refnamediv>
    <refname>ArrayObject::getiterator</refname>
    <refpurpose>
     Créé un nouvel itérateur à partir d'une instance ArrayObject
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>ArrayIterator</type><methodname>ArrayObject::getIterator</methodname>
     <void/>
    </methodsynopsis>
    <para>
     <function>ArrayObject::getIterator</function> retourne un itérateur
     à partir d'un objet de classe <classname>ArrayObject</classname>.
    </para>
    <para>
     <example>
      <title>Exemple avec <function>ArrayObject::getIterator</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array = array('1' => 'un',
               '2' => 'deux',
               '3' => 'trois');

$arrayobject = new ArrayObject($array);

$iterator = $arrayobject->getIterator();

while($iterator->valid()) {
    echo $iterator->key() . ' => ' . $iterator->current() . "\n";

    $iterator->next();
}
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
1 => un
2 => deux
3 => trois
]]>
      </screen>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
