<?xml version='1.0' encoding='utf-8'?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.spl-autoload-register" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>spl_autoload_register</refname>
  <refpurpose>
   Enregistre une fonction comme __autoload()
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>spl_autoload_register</methodname>
   <methodparam choice="opt"><type>callback</type><parameter>autoload_function</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>spl_autoload_register</function> enregistre une fonction
   dans la pile <function>__autoload</function> fournie. Si la pile 
   n'est pas encore active, elle est activée.
  </para>
  <para>
   Si votre code dispose déjà d'une fonction <function>__autoload</function>,
   alors cette fonction doit explicitement enregistrer la pile __autoload. 
   Ceci est du au fait que <function>spl_autoload_register</function> 
   remplace le cache du moteur pour la fonction
   <function>__autoload</function> par soit <function>spl_autoload</function>, 
   soit <function>spl_autoload_call</function>.
  </para>
  <para>
   Si vous devez utiliser plusieurs fonctions d'autochargement,
   la fonction <function>spl_autoload_register</function> est faîte pour cela.
   Elle crée une file d'attente de fonctions d'autochargement, et les exécute
   les unes après les autres, dans l'ordre qu'elles ont été définies.
   A contrario, la fonction <function>__autoload</function> ne peut être définie
   qu'une seule fois.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>autoload_function</parameter></term>
     <listitem>
      <para>
       La fonction <function>__autoload</function> à enregistrer.
       Si aucun paramètre n'est fourni, alors, l'implémentation par
       défaut de la fonction <function>spl_autoload</function> sera enregistrée.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Ajout du support des espaces de noms.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>spl_autoload_register</function></title>
    <programlisting role="php">
<![CDATA[
<?php

namespace Foobar;

class Foo {
    static public function test($name) {
        print '[['. $name .']]';
    }
}

spl_autoload_register(__NAMESPACE__ .'\Foo::test'); // Depuis PHP 5.3.0

new InexistentClass;

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
[[Foobar\InexistentClass]]
Fatal error: Class 'Foobar\InexistentClass' not found in ...
]]>
    </screen>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->