<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 321951 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<!-- Membership: pecl -->

<book xml:id="book.mysqlnd-qc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Plugin de cache des résultats de requêtes Mysqlnd</title>
 <titleabbrev>mysqlnd_qc</titleabbrev>

 <preface xml:id="intro.mysqlnd-qc">
  &reftitle.intro;
  <para>
   Le plugin de cache des résultats de requêtes Mysqlnd ajoute
   la possibilité de mettre en cache les requêtes côté client
   pour toutes les extensions PHP MySQL en utilisant
   <link linkend="book.mysqlnd">mysqlnd</link>.
  </para>
  <para>
   Depuis la version PHP 5.3.3, le driver natif MySQL pour PHP (
   <literal>mysqlnd</literal>) dispose d'un plugin interne de l'API C.
   Les plugins C, comme le plugin de mise en cache des requêtes,
   peuvent étendre les fonctionnalités de
   <link linkend="book.mysqlnd">mysqlnd</link>.
  </para>
  <para>
   Lesplugins Mysqlnd comme le plugin de mise en cache des requêtes
   opère de façon transparente d'un point de vue utilisateur. Le plugin
   de cache supporte toutes les applications PHP ainsi que toutes les
   extension PHP MySQL (<link linkend="ref.mysqli">mysqli</link>,
   <link linkend="ref.mysql">mysql</link>,
   <link linkend="ref.pdo-mysql">PDO_MYSQL</link>). Il ne modifie
   pas les APIs existantes.
  </para>
  <para>
   Aucun modification significative n'est nécessaire pour mettre
   en cache une requête. Le cache a 2 modes de fonctionnement. Il
   peut soit mettre en cache toutes les requêtes (non recommandé),
   soit uniquement celles marquées avec une certaine astuce SQL
   (recommandé).
  </para>

  <section xml:id="mysqlnd-qc.key_features">
   <title>Principales caractéristiques</title>
   <para>
    <itemizedlist>
     <listitem>
      <para>
       Transparent et facile d'utilisation.
      </para>
      <para>
       <itemizedlist>
        <listitem>
         <para>
          supporte toutes les extensions PHP MySQL
         </para>
        </listitem>
        <listitem>
         <para>
          aucune modification d'API
         </para>
        </listitem>
        <listitem>
         <para>
          de très simples modifications des applications sont nécessaires
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>

     <listitem>
      <para>
       Stratégie d'invalidation flexible
      </para>
      <para>
       <itemizedlist>
        <listitem>
         <para>
          Time-to-Live (TTL)
         </para>
        </listitem>
        <listitem>
         <para>
          défini par l'utilisation
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>

     <listitem>
      <para>
       Stockage avec différents scopes et durée de vie
      </para>
      <para>
       <itemizedlist>
        <listitem>
         <para>
          Défaut (Hash, processus mémoire)
         </para>
        </listitem>
        <listitem>
         <para>
          <link linkend="ref.apc">APC</link>
         </para>
        </listitem>
        <listitem>
         <para>
          MEMCACHE
         </para>
        </listitem>
        <listitem>
         <para>
          sqlite
         </para>
        </listitem>
        <listitem>
         <para>
          défini par l'utilisateur
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </itemizedlist>
   </para>
  </section>

  <section xml:id="mysqlnd-qc.limitations">
   <title>Limitations</title>
   <para>
    La version courante 1.0.1 de PECL mysqlnd_qc ne supporte pas
    PHP 5.4.
   </para>
   <para>
    Les requêtes préparées et bufferisées sont totalement
    supportées. Ansi, le plugin est capable de mettre en cache
    toutes les requêtes issues des extensions
    <literal>mysqli</literal> et <literal>PDO_MySQL</literal>, qui
    sont les deux seules API PHP MySQL à offrir le support des
    requêtes préparées.
   </para>
  </section>

  <section xml:id="mysqlnd-qc.architecture">
   <title>Architecture</title>
   <para>
    La mise en cache des requêtes est implémentée comme extension PHP.
    Elle est écrite en C et opère en dessous de PHP. Lors du démarrage
    de l'interpréteur PHP, elle est enregistrée comme un plugin
    <link linkend="book.mysqlnd">mysqlnd</link> pour remplacer
    les méthodes sélectionnées mysqlnd C.
   </para>
   <para>
    Lors de l'exécution de PHP, elle filtre les requêtes envoyées depuis
    mysqlnd (PHP) vers le serveur MySQL. Si une chaîne de requête
    commence avec une astuce SQL (<literal>/*qc=on*/</literal>) pour
    activer la mise en cache, et que la requête n'est pas encore
    dans le cache, le plugin de mise en cache de requêtes enregistrera
    les données brutes émises depuis MySQL vers PHP pour répondre
    à la requête. La mise en cache de requêtes enregistre les données
    brutes dans son cache et les fournira de nouveau, si elles sont
    toujours valides, lors de l'utilisation d'une astuce identique.
   </para>
   <para>
    Notez que la mise en cache des requêtes ne stocke pas les jeux
    de résultats décodés sous forme de <literal>zvals</literal>
    (structure C struct représentant une variable PHP).
    Elle stocke les données brutes émises par le protocole
    client/serveur MySQL. Dans le cas d'une astuce de cache,
    <link linkend="book.mysqlnd">mysqlnd</link> doit toujours décoder
    les données brutes en variables PHP avant de passer le résultat
    à l'espace utilisateur. Cette approche a un avantage majeur :
    la simplicité. En outre, cette approche élimine le besoin de
    sérialiser les données depuis le stockage du cache.
   </para>
  </section>

 </preface>


 &reference.mysqlnd-qc.setup;
 &reference.mysqlnd-qc.constants;
 &reference.mysqlnd-qc.usage;
 &reference.mysqlnd-qc.reference;
 &reference.mysqlnd-qc.changes;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
