<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334762 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="hwapi.checkin">
 <refnamediv>
  <refname>hw_api::checkin</refname>
  <refpurpose>Archive un objet</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>hw_api::checkin</methodname>
   <methodparam><type>array</type><parameter>parameter</parameter></methodparam>
  </methodsynopsis>
  <para>
   Archive un objet ou une hiérarchie d'objets. Le paramètre obligatoire
   <parameter>parameter</parameter> contient un <literal>"objectIdentifier"</literal>
   et les éléments optionnels <literal>"version"</literal>, <literal>"comment"</literal>, <literal>"mode"</literal> et
   <literal>"objectQuery"</literal>. <literal>"version"</literal> spécifie la version de l'objet.
   Elle est constituée de versions majeure et mineure, séparées par des
   virgules. Si une version n'existe pas, la version mineure est incrémentée.
   <literal>"mode"</literal> peut être l'une des constantes suivantes :
   <variablelist>
    <varlistentry>
     <term>HW_API_CHECKIN_NORMAL</term>
     <listitem>
      <simpara>
       Archive et valide l'objet. L'objet doit être un document.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>HW_API_CHECKIN_RECURSIVE</term>
     <listitem>
      <simpara>
       Si l'objet à archiver est une collection, tous les fils seront
       vérifiés récursivement, s'ils sont des documents. Tenter d'archiver
       une collection générera une erreur.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>HW_API_CHECKIN_FORCE_VERSION_CONTROL</term>
     <listitem>
      <simpara>
       Archive un objet même s'il ne passe pas sous le contrôle de
       versions.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>HW_API_CHECKIN_REVERT_IF_NOT_CHANGED</term>
     <listitem>
      <simpara>
       Vérifie s'il existe une version différente de la dernière version.
       À moins que cela ne soit le cas, l'objet sera alors archivé.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>HW_API_CHECKIN_KEEP_TIME_MODIFIED</term>
     <listitem>
      <simpara>
       Conserve la date de modification de l'objet le plus récent.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>HW_API_CHECKIN_NO_AUTO_COMMIT</term>
     <listitem>
      <simpara>
       L'objet n'est pas automatiquement validé lors de l'archivage.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>parameter</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="hwapi.checkout" /></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
