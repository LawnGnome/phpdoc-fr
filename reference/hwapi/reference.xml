<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
 <reference id="ref.hwapi">
  <title>Hyperwave API</title>
  <titleabbrev>Hyperwave API</titleabbrev>

  <partintro>

   <section id="hwapi.intro">
    &reftitle.intro;
    <para>
     <productname>Hyperwave</productname> a été développé à 
     l'<ulink url="&url.iicm;">IICM</ulink> à Graz. Le projet a commencé
     avec le nom de <acronym>Hyper-G</acronym>, puis il est devenu
     Hyperwave, lors de sa commercialisation en 1996.
    </para>
    <para>
     Hyperwave n'est pas un logiciel libre. Sa version courante, la 5.5,
     est disponible à <ulink url="&url.hyperwave;">&url.hyperwave;</ulink>.  
     Une version limitée dans le temps est commandable gratuitement (30 jours).
    </para>
    <para>
     Voir aussi le module <link linkend="ref.hyperwave">Hyperwave</link>.
    </para>
    <para>
     Hyperwave est un système d'information comparable à une base de données
     (<acronym>HIS</acronym>, Hyperwave Information Server). Il se
     concentre sur le stockage et la gestion de documents. Un document
     peut être n'importe quelle pièce de données qui soit stockable dans
     un fichier. Chaque document est accompagné de son propre enregistrement.
     L'enregistrement contient les méta-données du document. Les métas données
     sont des listes d'attributs qui peuvent être manipulés par l'utilisateur.
     Certains attributs sont gérés par le serveur Hyperwave, les autres
     peuvent être modifiés par l'utilisateur.
    </para>
   </section>

   <section id="hwapi.requirements">
    &reftitle.required;
    <para>
     Depuis 2001, il y a un SDK Hyperwave disponible. Il supporte Java,
     JavaScript et C++. Cette extension PHP est basée sur l'interface C++.
     Pour activer le support hwapi de PHP, vous devez installer le
     SDK d'abord.
    </para>
   </section>

&reference.hwapi.configure;

   <section id="hwapi.apache">
    <title>intégration dans Apache</title>
    <para>
     L'intégration dans Apache et éventuellement d'autres serveurs est
     déjà décrite dans le <link linkend="ref.hyperwave">module Hyperwave</link>,
     qui a été la première extension à se connecter au serveur Hyperwave.
    </para>
   </section>

   &reference.hwapi.ini;

   <section id="hwapi.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   <section id="hwapi.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section id="hwapi.classes">
    <title>Classes</title>
    <para>
     L'API fournie avec l'extension HW_API est complétement orientée objet.
     Elle est très similaire à l'interface C++ du SDK Hyperwave.
     Elle est constituée des classes suivantes :
     <itemizedlist>
      <listitem>
       <simpara>
        <classname>HW_API</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Object</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Attribute</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Error</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Content</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Reason</classname>
          </simpara>
         </listitem>
     </itemizedlist>
     Certains classes basiques comme <classname>HW_API_String</classname>,
     <classname>HW_API_String_Array</classname>, etc., qui existent dans le SDK
     Hyperwave SDK n'ont pas été implémentées, car PHP a de puissants ersatz pour elles.
    </para>
    <para>
     Chaque classe dispose de certaines méthodes, dont les noms sont identiques à
     leur alter ego du SDK Hyperwave SDK. Le passage des arguments à ces fonctions
     diffère de toutes les autres extensions PHP, mais est proche de l'API C++
     du SDK Hyperwave. Au lieu de passer plusieurs paramètres, ils sont tous
     placés dans un tableau associatif, et transmis sous la forme d'un seul
     paramètre. Les paramètres les plus communs sont listés ci-dessous. Si d'autres
     paramètres sont nécessaires, ils seront documentés à chaque cas.
     <itemizedlist>
      <listitem>
       <simpara>
        <classname>objectIdentifier</classname> Le nom ou l'identifiant de l'objet,
        e.g. "rootcollection", "0x873A8768 0x00000002".
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>parentIdentifier</classname> Le nom ou l'identifiant de l'objet
        qui est considéré comme parent.
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>object</classname> Une instance de la classe HW_API_Object.
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>parameters</classname> Une instance de la classe HW_API_Object.
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>version</classname> La version de l'objet.
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>mode</classname> Un entier qui détermine la méthode
        d'exécution de l'opération.
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>attributeSelector</classname> Un tableau de chaînes de
        caractères, chacun contenant le nom d'un attribut. C'est le cas si
        vous lisez des enregistrements d'objets, et que vous voulez inclure
        certains attributs.
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>objectQuery</classname> Une requête pour sélectionner 
        certains objets dans une liste. Elle est utilisée pour réduire
        le nombre d'objets qui a été livré par une fonction comme
        <function>hw_api->children</function> ou <function>hw_api->find</function>.
          </simpara>
         </listitem>
     </itemizedlist>
    </para>
   </section>
  </partintro>

&reference.hwapi.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
