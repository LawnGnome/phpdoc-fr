<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

 <reference xml:id="ref.hwapi" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Hyperwave API &Functions;</title>

  <partintro>
   <section xml:id="hwapi.apache">
    <title>intégration dans Apache</title>
    <para>
     L'intégration dans Apache et éventuellement d'autres serveurs est
     déjà décrite dans le <link linkend="ref.hw">module Hyperwave</link>,
     qui a été la première extension à se connecter au serveur Hyperwave.
    </para>
   </section>

   <section xml:id="hwapi.classes">
    <title>Classes</title>
    <para>
     L'API fournie avec l'extension HW_API est complètement orientée objet.
     Elle est très similaire à l'interface C++ du SDK Hyperwave.
     Elle est constituée des classes suivantes :
     <itemizedlist>
      <listitem>
       <simpara>
        <classname>HW_API</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Object</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Attribute</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Error</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Content</classname>
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>HW_API_Reason</classname>
          </simpara>
         </listitem>
     </itemizedlist>
     Certains classes basiques comme <classname>HW_API_String</classname>,
     <classname>HW_API_String_Array</classname>, etc., qui existent dans le SDK
     Hyperwave SDK n'ont pas été implémentées, car PHP a de puissants ersatz pour elles.
    </para>
    <para>
     Chaque classe dispose de certaines méthodes, dont les noms sont identiques à
     leur alter ego du SDK Hyperwave SDK. Le passage des arguments à ces fonctions
     diffère de toutes les autres extensions PHP, mais est proche de l'API C++
     du SDK Hyperwave. Au lieu de passer plusieurs paramètres, ils sont tous
     placés dans un tableau associatif, et transmis sous la forme d'un seul
     paramètre. Les paramètres les plus communs sont listés ci-dessous. Si d'autres
     paramètres sont nécessaires, ils seront documentés à chaque cas.
     <itemizedlist>
      <listitem>
       <simpara>
        <classname>objectIdentifier</classname> Le nom ou l'identifiant de l'objet,
        e.g. <literal>"rootcollection"</literal>, <literal>"0x873A8768 0x00000002"</literal>.
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>parentIdentifier</classname> Le nom ou l'identifiant de l'objet
        qui est considéré comme parent.
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>object</classname> Une instance de la classe HW_API_Object.
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>parameters</classname> Une instance de la classe HW_API_Object.
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>version</classname> La version de l'objet.
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>mode</classname> Un entier qui détermine la méthode
        d'exécution de l'opération.
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>attributeSelector</classname> Un tableau de chaînes de
        caractères, chacun contenant le nom d'un attribut. C'est le cas si
        vous lisez des enregistrements d'objets, et que vous voulez inclure
        certains attributs.
          </simpara>
         </listitem>
      <listitem>
       <simpara>
        <classname>objectQuery</classname> Une requête pour sélectionner 
        certains objets dans une liste. Elle est utilisée pour réduire
        le nombre d'objets qui a été livré par une fonction comme
        <function>hw_api->children</function> ou <function>hw_api->find</function>.
          </simpara>
         </listitem>
     </itemizedlist>
    </para>
    <note>
     <para>
      Les méthodes retournant un &boolean; peuvent retourner &true;, &false; ou 
      un objet <classname>HW_API_Error</classname>.
     </para>
    </note>
   </section>
  </partintro>

&reference.hwapi.entities.functions;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->