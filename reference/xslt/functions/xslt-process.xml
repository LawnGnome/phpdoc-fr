<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/xslt.xml, last change in rev 1.1 -->
<!-- last change to 'xslt-process' in en/ tree in rev 1.3 -->
  <refentry id="function.xslt-process">
   <refnamediv>
    <refname>xslt_process</refname>
    <refpurpose>Transforme des donn&eacute;es XML</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>boolean</type><methodname>xslt_process</methodname>
       <methodparam><type>string</type><parameter>xsl_data</parameter></methodparam>
       <methodparam><type>string</type><parameter>xml_data</parameter></methodparam>
       <methodparam><type>string</type><parameter>result</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>xslt_process</function> prend la cha&icirc;ne
     string <parameter>xsl_data</parameter> comme feuille de style XSLT, et
     des donn&eacute;es XML dans <parameter>xml_data</parameter>. Le r&eacute;sultat
     de la transformation sera plac&eacute; dans <parameter>result</parameter>.
     <function>xslt_process</function> retourne &true;
     en cas de succ&egrave;s, et &false; sinon. Vous
     pourrez lire les erreurs survenues gr&acirc;ce aux fonctions
     <function>xslt_errno</function> et <function>xslt_error</function>.
    </para>
    <para>
     <example>
     <title>Utilisation de <function>xslt_process</function> pour transformer trois</title>
     <programlisting role="php">
&lt;?php
$xslData = '&lt;xsl:stylesheet
  version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
&lt;xsl:template match="article"&gt;
    &lt;table border="1" cellpadding="2" cellspacing="1"&gt;
        &lt;tr&gt;
            &lt;td width="20%"&gt;
             &amp;#160;
            &lt;/title&gt;
            &lt;td width="80%"&gt;
                &lt;h2&gt;&lt;xsl:value-of select="title"&gt;&lt;/h2&gt;
                &lt;h3&gt;&lt;xsl:value-of select="author"&gt;&lt;/h3&gt;
                &lt;br&gt;
                &lt;xsl:value-of select="body"&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/table&gt;
&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;';
$xmlData = '
&lt;?xml version="1.0"&gt;
&lt;article&gt;
    &lt;title&gt;Learning German&lt;/title&gt;
    &lt;author&gt;Sterling Hughes&lt;/author&gt;
    &lt;body&gt;
      Essential phrases:
      &lt;br&gt;
      &lt;br&gt;
      K&amp;#246;nnen Sie mir sagen, wo die Toilette ist?&lt;br&gt;
      Ein grosses Bier, bitte!&lt;br&gt;
      Noch eins, bitte.&lt;br&gt;
    &lt;/body&gt;
&lt;/article&gt;';
if (xslt_process($xslData, $xmlData, $result))
{
    echo "Voici un brillant article sur l'apprentissage du ";
    echo " fran&ccedil;ais: ";
    echo "&lt;br&gt;\n&lt;br&gt;";
    echo $result;
}
else
{
    echo "Une erreur est survenue durant le traitement XSL...\n";
    echo "\tErreur num&eacute;ro : " . xslt_errno() . "\n";
    echo "\tMessage d'erreur : " . xslt_error() . "\n";
    exit;
}
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
