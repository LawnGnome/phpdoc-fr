<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 327484 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id='function.xslt-set-scheme-handlers' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>xslt_set_scheme_handlers</refname>
  <refpurpose>Configure un gestionnaire de Scheme pour un processeur <acronym>XSLT</acronym></refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>xslt_set_scheme_handlers</methodname>
   <methodparam><type>resource</type><parameter>xh</parameter></methodparam>
   <methodparam><type>array</type><parameter>handlers</parameter></methodparam>
  </methodsynopsis>
  <para>
   Configure le gestionnaire de scheme (gestionnaire XPath) pour le document.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &xslt.parameter.xh;
    <varlistentry>
     <term><parameter>handlers</parameter></term>
     <listitem>
      <para>
       Un tableau possédant les clés suivantes : <literal>"get_all"</literal>, 
       <literal>"open"</literal>, <literal>"get"</literal>, <literal>"put"</literal>,
       et <literal>"close"</literal>.
      </para>
      <para>
       Chaque entrée doit être un nom de fonction ou un tableau du format
       suivant : <literal>array($obj, "method")</literal>.
      </para>
      <para>
       Notez que le tableau fourni ne doit pas nécessairement contenir
       tous les éléments du gestionnaire (bien que cela reste possible),
       mais il doit uniquement correspondre au format
       <literal>"handler" =&gt; "function"</literal> décrit ci-dessus.
      </para>
      <para>
       Chacune des fonctions individuelles de scheme appelée est au format suivant :
       <screen>
<![CDATA[
string   get_all(resource processor, string scheme, string rest)
resource open(resource processor, string scheme, string rest)
int      get(resource processor, resource fp, string &data)
int      put(resource processor, resource fp, string data)
void     close(resource processor, resource fp)
]]>
       </screen>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>xslt_set_scheme_handlers</function></title>
    <para>
     Par exemple, voici une implémentation de la fonction PHP "file_exists()".
    </para>
    <programlisting role="php">
<![CDATA[
<?php

// Définition du gestionnaire
function mySchemeHandler($processor, $scheme, $rest)
{
    $rest = substr($rest,1);    // pour effacer le premier '/', automatiquement ajouté par le moteur
    if ($scheme == 'file_exists') {
        // Le résultat est retourné dans une chaîne XML
        return '<?xml version="1.0" encoding="UTF-8"?><root>' . (file_exists($rest) ? 'true' : 'false') . '</root>';
    }
}

$SchemeHandlerArray = array('get_all' => 'mySchemeHandler');

// Démarre le moteur
$params = array();
$xh = xslt_create();

xslt_set_scheme_handlers($xh, $SchemeHandlerArray);

$result = xslt_process($xh, "myFile.xml", "myFile.xsl", NULL, array(), $params);
xslt_free($xh);

echo $result;

?>
]]>
    </programlisting>
    <para>
     Ensuite, dans la feuille de style, vous pouvez tester si un fichier existe avec :
    </para>
    <programlisting role="xml">
<![CDATA[
<xsl:if test="document('file_exists:anotherXMLfile.xml')/root='true'">
 <!-- Le fichier existe -->
</xsl:if>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>xslt_set_scheme_handler</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
