<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.12 Maintainer: yannick Status: ready -->
 <refentry id="function.call-user-func">
  <refnamediv>
   <refname>call_user_func</refname>
   <refpurpose>
    Appelle une fonction utilisateur
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
     <methodsynopsis>
      <type>mixed</type><methodname>call_user_func</methodname>
      <methodparam><type>callback</type><parameter>function</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>parameter</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
   <para>
    <function>call_user_func</function> appelle la fonction utilisateur
    <parameter>function_name</parameter>, et lui passe les paramètres
    <parameter>parameter</parameter>.
    <example>
     <title>Exemple avec <function>call_user_func</function></title>
     <programlisting role="php">
<![CDATA[
<?php
function barbier ($type) 
{
  echo "Vous vouliez une coupe $type, pas de problème";
}
  
call_user_func('barbier', 'à la one again');
call_user_func('barbier', 'militaire');
call_user_func('barbier', 'au bol');
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Les méthodes d'objets peuvent être appelées statiquement
    en passant <literal>array($objectname, $methodname)</literal> au
    paramètre <parameter>function</parameter>.
    <example>
     <title>Exemple avec <function>call_user_func</function> et une méthode de classe</title>
      <programlisting role="php">
<![CDATA[
<?php
class maclasse {
  function dit_bonjour() 
  {
    echo "Bonjour!\n";
  }
}

$classname = "maclasse";

call_user_func(array($classname,'dit_bonjour'));
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Notez que les paramètres pour <function>call_user_func</function> ne sont 
      pas passés par référence.
      <informalexample>
       <programlisting role="php">
<![CDATA[
<?php
function increment(&$var)
{
    $var++;
}

$a = 0;
call_user_func('increment', $a);
echo $a; // 0

call_user_func_array('increment', array(&$a)); // Vous pouvez utiliser ceci à la place
echo $a; // 1
?>
]]>
       </programlisting>
      </informalexample>
     </para>
    </note>
    <para>
     Voir aussi
     <function>is_callable</function>,
     <function>call_user_func_array</function> et
     &seealso.callback;.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
