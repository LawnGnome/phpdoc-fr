<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 324522 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.register-shutdown-function" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>register_shutdown_function</refname>
  <refpurpose>Enregistre une fonction de rappel pour exécution à l'extinction</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>register_shutdown_function</methodname>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>parameter</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Enregistre une fonction de rappel <parameter>callback</parameter>
   pour exécution à l'extinction ou lorsque
   <link linkend="function.exit"><literal>exit</literal></link> est appelé.
  </para>
  <para>
   Plusieurs appels à <function>register_shutdown_function</function> sont
   possibles dans le même script, et les fonctions seront appelées dans le
   même ordre que celui dans lequel elles sont enregistrées. Si vous appelez
   <link linkend="function.exit"><literal>exit</literal></link>
   durant l'une des fonctions d'extinction, le processus sera définitivement
   arrêté, sans que les autres fonctions soient appelées.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       La fonction de rappel à enregistrer.
      </para>
      <para>
       La fonction de rappel est exécuté comme faisant parti de la
       requête, aussi, il est possible d'envoyer quelque à la sortie
       depuis cette dernière, puis d'accéder aux buffers de sortie.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>parameter</parameter></term>
     <listitem>
      <para>
       Il est possible de passer des paramètres aux fonctions d'extinction
       en configurant ces paramètres supplémentaires.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si la fonction de rappel ne peut être appelée pour diverses raisons, une
   alerte de niveau <constant>E_WARNING</constant> sera émise.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.1.0</entry>
       <entry>
        Les fonctions d'extinction font maintenant partie de la requête.
        Dans les versions précédentes, et sous Apache, les fonctions enregistrées
        étaient appelée une fois que la requête était complètement terminée.
        (y compris lorsque les buffers ont été vidés) ce qui fait qu'il
        n'était pas possible d'envoyer de contenu au navigateur avec 
        <link linkend="function.echo"><literal>echo</literal></link> ou
        <link linkend="function.print"><literal>print</literal></link>,
        ou encore lire le contenu avec les fonctions
        <function>ob_get_contents</function>.
        Les en-têtes étaient également toujours envoyés.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>register_shutdown_function</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function shutdown()
{
    // Voici notre fonction shutdown
    // dans laquelle nous pouvons faire
    // toutes les dernières opérations
    // avant la fin du script.

    echo 'Script exécuté avec succès', PHP_EOL;
}

register_shutdown_function('shutdown');
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Le dossier de travail du script peut changer dans la fonction d'extinction
    sous quelques serveurs web, e.g. Apache.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="ini.auto-append-file">auto_append_file</link></member>
    <member><link linkend="function.exit"><literal>exit</literal></link></member>
    <member>La section sur la <link
    linkend="features.connection-handling">gestion des connexions</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->