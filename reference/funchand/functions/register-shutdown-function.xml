<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.9 Maintainer: yannick Status: ready -->
 <refentry id="function.register-shutdown-function">
  <refnamediv>
   <refname>register_shutdown_function</refname>
   <refpurpose>
    Enregistre une fonction pour exécution à l'extinction
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
     <methodsynopsis>
      <type>void</type><methodname>register_shutdown_function</methodname>
      <methodparam><type>callback</type><parameter>function</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>parameter</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
   <simpara>
    <function>register_shutdown_function</function> enregistre la fonction
    <parameter>func</parameter> pour exécution à l'extinction
    du script.
   </simpara>
    <para>
     Plusieurs appels à <function>register_shutdown_function</function> sont
     possibles dans le même script, et les fonctions seront appelées dans le
     même ordre que celui dans lequel elles sont enregistrées. Si vous appelez
     <function>exit</function> durant l'une des fonctions d'extinction,
     le processus sera définitivement arrété, sans que les autres fonctions
     soient appelées.
    </para>
    <para>
     En &php; 4.0.6 et précédent sous Apache, les fonctions d'extinction 
     sont appelées après la fin de la requête
     (notamment les buffers ont été vidés), ce qui fait qu'il est impossible
     d'afficher du texte depuis cette fonction, avec <function>echo</function> ou
     <function>print</function>, ou encore de lire le contenu des buffers
     avec <function>ob_get_contents</function>.
     Depuis &php; 4.1, les fonctions d'extinction sont appelées comme une partie
     de la requête, donc, il est possible d'envoyer l'affichage depuis ces dernières.
     Il n'y a actuellement aucune façon de traiter les données après le traitement
     complet de la requête.
    </para>
    <para>
     Depuis &php; 4, il est possible de passer des paramètres à la fonction d'extinction en 
     passant des paramètres additionnels à la fonction 
     <function>register_shutdown_function</function>.
    </para>
    <note>
     <para>
      Typiquement, les fonctions non définies causent des
      erreurs fatales en &php;, mais lorsque la fonction 
      <parameter>function</parameter> est appelée avec 
      <function>register_shutdown_function</function> en étant non définie,
      une erreur de type <constant>E_WARNING</constant> est générée. De plus,
      pour des raisons internes à &php; cette erreur va être indiquée 
      comme <literal>Unknown at line #0</literal>. 
     </para>
    </note>
    <note>
     <para>
      Le dossier de travail du script peut changer dans la fonction d'extinction
      sous quelques serveurs web, e.g. Apache.
     </para>
    </note>
    <para>
     Voir aussi
     <link linkend="ini.auto-append-file">auto_append_file</link>,
     <function>exit</function>, et la section sur la 
     <link linkend="features.connection-handling">gestion des connexions</link>.
    </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
