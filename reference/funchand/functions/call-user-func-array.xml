<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.17 $ -->
<!-- EN-Revision: 1.21 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.call-user-func-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>call_user_func_array</refname>
  <refpurpose>Appelle une fonction utilisateur avec les paramètres rassemblés en tableau</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>call_user_func_array</methodname>
   <methodparam><type>callback</type><parameter>function</parameter></methodparam>
   <methodparam><type>array</type><parameter>param_arr</parameter></methodparam>
  </methodsynopsis>
  <para>
   Appelle la fonction utilisateur <parameter>function</parameter> avec les paramètres
   <parameter>param_arr</parameter>, rassemblés dans un tableau.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>function</parameter></term>
     <listitem>
      <para>
       La fonction à appeler.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>param_arr</parameter></term>
     <listitem>
      <para>
       Les paramètres à passer à la fonction, sous la forme d'un tableau indexé.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne le résultat de la fonction, ou &false; si une erreur survient.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>call_user_func_array</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function debug($var, $val)
{
    echo "***DEBUGGING\nVARIABLE: $var\nVALUE:";
    if (is_array($val) || is_object($val) || is_resource($val)) {
        print_r($val);
    } else {
        echo "\n$val\n";
    }
    echo "***\n";
}

$c = mysql_connect();
$host = $_SERVER["SERVER_NAME"];

call_user_func_array('debug', array("host", $host));
call_user_func_array('debug', array("c", $c));
call_user_func_array('debug', array("_POST", $_POST));
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Exemple avec <function>call_user_func_array</function> en utilisant un espace de nom</title>
    <programlisting role="php">
<![CDATA[
<?php

namespace Foobar;

class Foo {
    static public function test($name) {
        print "Hello {$name}!\n";
    }
}

// Depuis PHP 5.3.0
call_user_func_array(__NAMESPACE__ .'::Foo::test', array('Hannes'));
// Hello Hannes!

// Depuis PHP 5.3.0
call_user_func_array(array(__NAMESPACE__ .'::Foo', 'test'), array('Philip'));
// Hello Philip!

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Utilisation d'une fonction lambda</title>
    <programlisting role="php">
<![CDATA[
<?php

$func = function($arg1, $arg2) {
    return $arg1 * $arg2;
};

var_dump(call_user_func_array($func, array(2, 4))); /* Depuis PHP 5.3.0 */
// int(8)

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Les variables référencées dans le paramètre <parameter>param_arr</parameter>
    sont passées à la fonction par référence, les autres sont passées par leur
    valeur. En d'autres termes, cela ne dépend pas de la signature de la fonction
    suivant que le paramètre est passé par valeur ou par référence.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>call_user_func</function></member>
    <member>&seealso.callback;</member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->