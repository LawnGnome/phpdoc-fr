<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.4 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.svn-status" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>svn_status</refname>
  <refpurpose>Récupère le statut des fichiers et des dossiers de la copie de travail</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>svn_status</methodname>
   <methodparam><type>string</type><parameter>path</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Retourne le statut des fichiers et des dossiers de la copie de travail, en fournissant
   les modifications, les ajouts, les suppressions, ainsi que les autres modifications
   des éléments de la copie de travail.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>path</parameter></term>
     <listitem>
      <para>
       Chemin local vers le fichier ou le dossier dont on souhaite récupérer le statut.
      </para>
      &svn.relativepath;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Toute combinaison de <constant>SVN_NON_RECURSIVE</constant>,
       <constant>SVN_ALL</constant> (indépendamment du statut de modification),
       <constant>SVN_SHOW_UPDATES</constant> (les entrées seront ajoutées pour les éléments
       qui ne sont pas à jour), <constant>SVN_NO_IGNORE</constant> (néglige les propriétés
       <literal>svn:ignore</literal> lors de l'analyse des nouveaux fichiers)
       et <constant>SVN_IGNORE_EXTERNALS</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau indexé numériquement de tableaux associatifs
   détaillant le statut des éléments du référentiel :
  </para>
  <screen>
<![CDATA[
Array (
    [0] => Array (
        // information sur l'élément
    )
    [1] => ...
)
]]>
  </screen>
  <para>
   L'information sur un élément est un tableau associatif qui peut contenir
   les clés suivantes :
  </para>
  <variablelist>
   <varlistentry>
    <term><varname>path</varname></term>
     <listitem>
      <simpara>
       Chemin vers le fichier/dossier de cette entrée sur le système de fichiers
       local.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>text_status</varname></term>
     <listitem>
      <simpara>
       Statut du texte de l'élément. &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>repos_text_status</varname></term>
     <listitem>
      <simpara>
       Statut du texte de l'élément dans le référentiel. Ne survient que si
       <parameter>update</parameter> est défini à &true;.
       &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>prop_status</varname></term>
     <listitem>
      <simpara>
       Statut de la propriété de l'élément. &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>repos_prop_status</varname></term>
     <listitem>
      <simpara>
       Statut de la propriété de l'élément dans le référentiel. Ne survient que si
       <parameter>update</parameter> est défini à &true;. &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>locked</varname></term>
     <listitem>
      <simpara>
       Si l'élément est verrouillé. (Définit que si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>copied</varname></term>
     <listitem>
      <simpara>
       Si l'élément a été copié ou non (prévu pour l'ajout avec la journalisation).
       (Définit que si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>switched</varname></term>
     <listitem>
      <simpara>
       Si l'élément a changé de référentiel de référence, 
       en utilisant la commande switch.
       (Définit que si &true;)
      </simpara>
     </listitem>
   </varlistentry>
  </variablelist>
  <para>
   Ces clés ne sont définies que si l'élément est versionné :
  </para>
  <variablelist>
   <varlistentry>
    <term><varname>name</varname></term>
     <listitem>
      <simpara>
       Nom de base de l'élément dans le référentiel.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>url</varname></term>
     <listitem>
      <simpara>
       URL de l'élément dans le référentiel.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>repos</varname></term>
     <listitem>
      <simpara>
       URL de base du référentiel.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>revision</varname></term>
     <listitem>
      <simpara>
       Révision de l'élément dans la copie de travail.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>kind</varname></term>
     <listitem>
      <simpara>
       Type de l'élément, i.e. fichier ou dossier. &svn.referto.type;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>schedule</varname></term>
     <listitem>
      <simpara>
       Action prévue pour l'élément, i.e. ajout ou suppression.
       Les constantes pour ces nombres magiques ne sont pas disponibles,
       elles peuvent être émulées en utilisant :
      </simpara>
       <programlisting role="php">
<![CDATA[
<?php
if (!defined('svn_wc_schedule_normal')) {
    define('svn_wc_schedule_normal',  0); // rien de spécial
    define('svn_wc_schedule_add',     1); // élément à ajouté
    define('svn_wc_schedule_delete',  2); // élément à supprimé
    define('svn_wc_schedule_replace', 3); // élément à ajouté et effacé
}
?>
]]>
      </programlisting>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>deleted</varname></term>
     <listitem>
      <simpara>
       Si l'élément a été supprimé, mais les révisions parentes existent toujours
       (Définit que si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>absent</varname></term>
     <listitem>
      <simpara>
       Si l'élément est absent, mais que Subversion sait qu'il devrait se
       trouver ici. (Définit que si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>incomplete</varname></term>
     <listitem>
      <simpara>
       Si l'entrée du fichier pour un dossier est incomplète.
       (Définit que si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>cmt_date</varname></term>
     <listitem>
      <simpara>
       Timestamp Unix de la date de la dernière validation.
       (Non-Affecté par le paramètre <parameter>update</parameter>).
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>cmt_rev</varname></term>
     <listitem>
      <simpara>
       Révision de la dernière livraison. (Non-Affecté par le paramètre
       <parameter>update</parameter>).
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>cmt_author</varname></term>
     <listitem>
      <simpara>
       Nom de l'auteur de la dernière livraison. (Non-Affecté par le
       paramètre <parameter>update</parameter>).
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>prop_time</varname></term>
     <listitem>
      <simpara>
       Timestamp Unix représentant la date/heure de la dernière mise à jour
       des propriétés.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>text_time</varname></term>
     <listitem>
      <simpara>
       Timestamp Unix représentant la date/heure de la dernière mise à jour
       du texte.
      </simpara>
     </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.experimental.func;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple d'utilisation</title>
    <para>
     Cet exemple montre une utilisation basique de cette fonction.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
print_r(svn_status(realpath('wc')));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array (
    [0] => Array (
        [path] => /home/bob/wc/sandwich.txt
        [text_status] => 8 // l'élément a été modifié
        [repos_text_status] => 1 // Aucune information disponible, utilisez update
        [prop_status] => 3 // aucun changement
        [repos_prop_status] => 1 // Aucune information disponible, utilisez update
        [name] => sandwich.txt
        [url] => http://www.example.com/svnroot/deli/trunk/sandwich.txt
        [repos] => http://www.example.com/svnroot/
        [revision] => 123
        [kind] => 1 // fichier
        [schedule] => 0 // aucune action de prévue
        [cmt_date] => 1165543135
        [cmt_rev] => 120
        [cmt_author] => Alice
        [prop_time] => 1180201728
        [text_time] => 1180201729
    )
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>svn_update</function></member>
    <member><function>svn_log</function></member>
    <member><link xlink:href="&url.svn.manual.status;">Documentation SVN de la commande <literal>"svn status"</literal></link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
