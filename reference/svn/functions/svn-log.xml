<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.svn-log" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>svn_log</refname>
  <refpurpose>Récupère le message d'historisation d'une URL du référentiel</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>svn_log</methodname>
   <methodparam><type>string</type><parameter>repos_url</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>start_revision</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>end_revision</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>svn_log</function> récupère l'historique complète de l'élément 
   correspondant à l'URL <parameter>repos_url</parameter>, ou l'historique d'une révision spécifique
   si <parameter>start_revision</parameter> est spécifié. Cette fonction est équivalent
   à la commande <userinput>svn log --verbose -r $start_revision $repos_url</userinput>.
  </para>
  <warning>
   <para>
    Pour les référentiels dont l'historique est important, la sortie peut
    être énorme (un tableau dont chaque élément représente une révision).
    Cette fonction ne supporte pas le drapeau
    <userinput>--limit NUM</userinput>, ni un intervalle de révisions
    (<userinput>start_revision</userinput> doit être un entier).
   </para>
  </warning>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>repos_url</parameter></term>
     <listitem>
      <para>
       URL dans le référentiel de l'élément dont on doit récupérer l'historique.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>start_revision</parameter></term>
     <listitem>
      <para>
       Numéro de révision de la première historisation à récupérer. Utilisez
       la constante <constant>SVN_REVISON_HEAD</constant> pour récupérer
       l'historisation de la révision la plus récente.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>end_revision</parameter></term>
     <listitem>
      <para>
       Numéro de révision de la dernière historisation à récupérer. Par défaut vaut
       <parameter>start_revision</parameter> s'elle est spécifié sinon vaut la
       constante <constant>SVN_REVISION_INITIAL</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       Nombre d'historisations à récupérer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Toutes combinaisons de <constant>SVN_OMIT_MESSAGES</constant>,
       <constant>SVN_DISCOVER_CHANGED_PATHS</constant> et
       <constant>SVN_STOP_ON_COPY</constant>, par défaut vaut
       <userinput>SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY</userinput>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   En cas de succès, cette fonction retourne un tableau de fichiers
   au format :
   <screen>
<![CDATA[
[0] => Tableau, ordonné du numéro de révision le plus grand, au plus petit
(
    [rev] => numéro de révision
    [author] => nom de l'auteur
    [msg] => message d'historisation
    [date] => date, au format ISO 8601, i.e. date('c')
    [paths] => Tableau, décrivant les fichiers modifiés
        (
            [0] => Array
                (
                    [action] => lettre, spécifiant la modification
                    [path] =>  chemin absolu du référentiel vers le fichier modifié
                )
            [1] => ...
        )
)
[1] => ...
]]>
    </screen>
  </para>
  <note>
   <para>
    La sortie sera toujours un tableau indexé numériquement de tableaux,
    même s'il n'y en a aucun, ou seulement un seul message d'historisation.
   </para>
  </note>
  <para>
   La valeur de <varname>action</varname> est une sous-partie de
   <link xlink:href="&url.svn.manual.status;">la sortie de statut
    dans la première colonne</link>, où les valeurs possibles sont :
  </para>
  <table>
   <title>Actions</title>
   <tgroup cols="2">
     <thead>
      <row>
       <entry>Lettre</entry>
       <entry>Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>M</entry>
       <entry>L'élément a été modifié</entry>
      </row>
      <row>
       <entry>A</entry>
       <entry>L'élément a été ajouté</entry>
      </row>
      <row>
       <entry>D</entry>
       <entry>L'élément a été effacé</entry>
      </row>
      <row>
       <entry>R</entry>
       <entry>L'élément a été remplacé</entry>
      </row>
     </tbody>
    </tgroup>
  </table>
  <para>
   Si aucune modification n'a été effectué à l'élément, un tableau
   vide sera retourné.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.experimental.func;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>svn_log</function></title>
    <programlisting role="php">
<![CDATA[
<?php
print_r( svn_log('http://www.example.com/', 23) );
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [0] => Array
    (
        [rev] => 23
        [author] => 'joe'
        [msg] => 'Add cheese and salami to our sandwich.'
        [date] => '2007-04-06T16:00:27-04:00'
        [paths] => Array
            (
                [0] => Array
                    (
                        [action] => 'M'
                        [path] =>  '/sandwich.txt'
                    )
            )
    )
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <link xlink:href="&url.svn.manual.log;">Documentation SVN pour la commande <literal>"svn log"</literal></link>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
