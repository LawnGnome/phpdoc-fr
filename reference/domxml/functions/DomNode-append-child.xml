<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.13 $ -->
<!-- EN-Revision: 1.14 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->

<refentry id="function.domnode-append-child">
 <refnamediv>
  <refname>DomNode->append_child</refname>
  <refpurpose>
   Ajoute un nouveau fils à la fin des enfants
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>DOMNode</classname></ooclass>
   <methodsynopsis>
    <type>DOMNode</type><methodname>append_child</methodname>
    <methodparam><type>DOMNode</type><parameter>newnode</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   Cette fonction ajoute un fils à une liste existante de fils ou crée une
   nouvelle liste de fils.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>newnode</parameter></term>
     <listitem>
      <para>
       Le noeud qui sera ajouté. Il peut être créé avec
       <xref linkend="function.domdocument-create-element" />,
       <xref linkend="function.domdocument-create-text-node" /> etc. ou 
       simplement en utilisant un autre noeud.
      </para>
      <note>
       <para>
        Vous ne pouvez pas ajouter un <classname>DOMAttribute</classname> en
        utilisant cette méthode. Utilisez <xref linkend="function.domelement-set-attribute" /> 
        à la place.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne le noeud ajouté en cas de succès ou &false; en cas d'échec.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Vous n'êtes plus autorisé d'insérer un noeud à partir d'un autre
        document.
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Avant &php; 4.3.0, le nouveau fils est dupliqué avant d'être ajouté.
        Par conséquent, le nouveau fils est une copie qui peut être modifiée
        sans altérer le noeud utilisé dans cette fonction. Si le noeud passé
        a des fils, ils seront aussi dupliqués, ce qui rend cette fonction
        pratique pour copier des documents XML complexes. La valeur retournée
        est le noeud fils ajouté. Si vous voulez apporter des modifications
        au noeud fils, vous devez utiliser le noeud retourné.
       </entry>
      </row>
      <row>
       <entry>4.3.0 et 4.3.1</entry>
       <entry>
        Le nouveau fils <parameter>newnode</parameter> est d'abord déconnecté
        de son contexte, s'il est déjà fils d'un DomNode. Le noeud est donc
        déplacé et n'est plus copié. Ceci est le comportement qui correspond
        aux spécifications W3C. Si vous avez besoin de l'ancien comportement,
        utilisez <xref linkend="function.domnode-clone-node" /> avant
        d'ajouter.
       </entry>
      </row>
      <row>
       <entry>4.3.2</entry>
       <entry>
        Le nouveau fils <parameter>newnode</parameter> est d'abord déconnecté
        de son contexte, s'il est déjà dans l'arbre. Les mêmes règles
        s'appliquent.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1> 

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   L'exemple suivant ajoute un nouveau noeud dans un document, et modifie son
   attribut <literal>align</literal> à <literal>left</literal>.
  </para>
  <para>
   <example>
    <title>Ajouter un noeud fils avec dom xml</title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = domxml_new_doc("1.0");
$node = $doc->create_element("para");
$newnode = $doc->append_child($node);
$newnode->set_attribute("align", "left");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   L'exemple ci-dessus peut être aussi écrit comme ceci : 
  </para>
  <para>
   <example>
    <title>Ajouter un noeud fils avec dom xml (méthode 2)</title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = domxml_new_doc("1.0");
$node = $doc->create_element("para");
$node->set_attribute("align", "left");
$newnode = $doc->append_child($node);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Un exemple plus complexe est celui ci-dessous. Il commence par rechercher
   un élément, le duplique avec ses fils, et l'ajoute comme frère.
   Finalement, un nouvel attribut est ajouté, et le document complet est publié.
  </para>
  <para>
   <example>
    <title>Ajouter un noeud fils avec DOM XML (exemple 3)</title>
    <programlisting role="php">
<![CDATA[
<?php
include("exemple.inc");

if(!$dom = domxml_open_mem($xmlstr)) {
  echo "Erreur lors de l'analyse du document\n";
  exit;
}

$elements = $dom->get_elements_by_tagname("informaltable");
print_r($elements);
$element = $elements[0];

$parent = $element->parent_node();
$newnode = $parent->append_child($element);
$children = $newnode->children();
$attr = $children[1]->set_attribute("align", "left");

$xmlfile = $dom->dump_mem();
echo htmlentities($xmlfile);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   L'exemple ci-dessus peut aussi être réalisé avec la fonction
   <xref linkend="function.domnode-insert-before" /> au lieu de
   <xref linkend="function.domnode-append-child" />.
  </para>
 </refsect1>

 <refsect1 role="migration">
  <title>Migration vers &php; 5</title>
  <para>
   Vous devriez utiliser <xref linkend='function.dom-domnode-appendchild' />.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.domnode-insert-before" /></member>
    <member><xref linkend="function.domnode-clone-node" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
