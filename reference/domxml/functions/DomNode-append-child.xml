<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.10 Maintainer: didou Status: ready -->
  <refentry id="function.domnode-append-child">
   <refnamediv>
    <refname>DomNode->append_child</refname>
    <refpurpose>
     Ajoute un nouveau fils à la fin des enfants
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>object</type><methodname>DomNode->append_child</methodname>
     <methodparam><type>object</type><parameter>newnode</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>DomNode->append_child</function> ajoute le noeud
     <parameter>newnode</parameter> à une liste
     de fils existante, ou bien crée une nouvelle liste de fils. Un noeud
     fils peut être créé avec les fonctions
     <function>domdocument_create_element</function>,
     <function>domdocument_create_text</function>, etc. ou bien en
     utilisant simplement un autre noeud.
    </para>
    <para>
     (&php; &lt; 4.3) Avant d'être ajouté, un noeud est d'abord dupliqué. Par conséquent,
     le nouveau fils est une copie qui peut être modifiée sans altérer le
     noeud utilisé dans cette fonction. Si le noeud passé a des
     fils, ils seront aussi dupliqués, ce qui rend cette fonction
     pratique pour copier des documents XML complexes. La valeur retournée
     est le noeud fils ajouté. Si vous voulez apporter des modifications
     au noeud fils, vous devez utiliser le noeud retourné.
    </para>
    <para>
     (&php; 4.3.0/4.3.1) Le nouveau fils <parameter>newnode</parameter> est d'abord déconnecté
     de son contexte, s'il est déjà fils d'un DomNode. Le noeud est donc déplacé
     et n'est plus copié.
    </para>
    <para>
     (&php; &gt;= 4.3) Le nouveau fils <parameter>newnode</parameter> est d'abord
     déconnecté de son contexte, s'il existait dans le document. Par conséquent,
     le noeud est déplacé et ce n'est plus une copie. C'est le comportement
     compatible avec les spécifications du consortium W3C. SI vous voulez dupliquer
     de grandes parties d'un document XML, utiliser la fonction 
     <function>DomNode->clone_node</function> avant de l'ajouter.
    </para>
    <para>
     l'exemple suivant ajoute un nouveau noeud dans un document, et modifie son
     attribut "align" à "left".
     <example>
      <title>ajouter un noeud fils avec dom xml</title>
      <programlisting role="php">
<![CDATA[
<?php
$doc = domxml_new_doc("1.0");
$node = $doc->create_element("para");
$newnode = $doc->append_child($node);
$newnode->set_attribute("align", "left");
?>
]]>
      </programlisting>
     </example>
     l'exemple ci-dessus peut etre aussi écrit comme ceci : 
     <example>
      <title>ajouter un noeud fils avec dom xml (méthode 2)</title>
      <programlisting role="php">
<![CDATA[
<?php
$doc = domxml_new_doc("1.0");
$node = $doc->create_element("para");
$node->set_attribute("align", "left");
$newnode = $doc->append_child($node);
?>
]]>
      </programlisting>
     </example>
     un exemple plus complexe est celui ci-dessous. il commence par rechercher
     un élément, le duplique avec ses fils, et l'ajoute comme frère. finalement,
     un nouvel attribut est ajouté, et le document complet est publié.
     <example>
      <title>Ajouter un noeud fils avec DOM XML (exemple 3)</title>
      <programlisting role="php">
<![CDATA[
<?php
  include("exemple.inc");

  if(!$dom = domxml_open_mem($xmlstr)) {
    echo "erreur lors de l'analyse du document\n";
    exit;
  }

  $elements = $dom->get_elements_by_tagname("informaltable");
  print_r($elements);
  $element = $elements[0];

  $parent = $element->parent_node();
  $newnode = $parent->append_child($element);
  $children = $newnode->children();
  $attr = $children[1]->set_attribute("align", "left");

  echo "<pre>";
  $xmlfile = $dom->dump_mem();
  echo htmlentities($xmlfile);
  echo "</pre>";
?>
]]>
      </programlisting>
     </example>
     l'exemple ci-dessus peut aussi être réalisé avec la fonction
     <function>domnode_insert_before</function> au lieu de
     <function>domnode_append_child</function>.
    </para>
    <para>
     Voir aussi 
     <function>domnode_insert_before</function> et
     <function>domnode_clone_node</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
