<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 283807 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.domnode-insert-before" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DomNode->insert_before</refname>
  <refpurpose>
   Insère un nouveau noeud fils
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>domelement</type><methodname>DomNode->insert_before</methodname>
   <methodparam><type>domelement</type><parameter>newnode</parameter></methodparam>
   <methodparam><type>domelement</type><parameter>refnode</parameter></methodparam>
  </methodsynopsis>
  <para>
   <methodname>DomNode->insert_before</methodname> insère le nouveau noeud fils 
   <parameter>newnode</parameter> juste avant le noeud fils <parameter>refnode</parameter>. 
   La valeur retournée est la valeur du noeud inséré. Si vous devez faire
   des modifications sur le fils, vous devez utiliser le noeud retourné.
  </para>
  <para>
   (PHP &gt;= 4.3 uniquement) Si <parameter>newnode</parameter> fait déjà partie
   du document, il sera d'abord déconnecté de son contexte courant. Si 
   <parameter>refnode</parameter> vaut &null; alors <parameter>newnode</parameter>
   sera inséré à la fin de la liste des fils.
  </para>
  <para>
   <function>domnode_insert_before</function> est très similaire à 
   <function>domnode_append_child</function> comme l'exemple ci-dessous le
   montre : il réalise la même fonction que l'exemple de 
   <function>domnode_append_child</function>.
  </para>
  <para>
   <example>
    <title>Ajouter un noeud fils DOM XML</title>
    <programlisting role="php">
<![CDATA[
include("example.inc");

if(!$dom = domxml_open_mem($xmlstr)) {
  echo "Erreur durant l'analyse du document\n";
  exit;
}

$elements = $dom->get_elements_by_tagname("informaltable");
print_r($elements);
$element = $elements[0];

$newnode = $element->insert_before($element, $element);
$children = $newnode->children();
$attr = $children[1]->set_attribute("align", "left");

echo "<pre>";
$xmlfile = $dom->dump_mem();
echo htmlentities($xmlfile);
echo "</pre>";
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Voir aussi
   <function>domnode_append_child</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
