<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343899 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.apc-load-constants" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>apc_load_constants</refname>
  <refpurpose>
   Charge un jeu de constantes depuis le cache
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>apc_load_constants</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>case_sensitive</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
 <para>
   Charge un jeu de constantes depuis le cache.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       Le nom du jeu de constantes (qui a été stocké avec la fonction
       <function>apc_define_constants</function>) à récupérer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>case_sensitive</parameter></term>
     <listitem>
      <para>
       Le comportement par défaut pour les constantes est d'être déclarées
       en tenant compte de la casse ;
       i.e. <literal>CONSTANT</literal> et <literal>Constant</literal>
       représentent des valeurs différentes. Si ce paramètre est évalué à &false;,
       les constantes seront déclarées en tant que symboles insensibles à la casse.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>apc_load_constants</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$constants = array(
    'UN'   => 1,
    'DEUX'   => 2,
    'TROIS' => 3,
);
apc_define_constants('numbers', $constants);
apc_load_constants('numbers');
echo UN, DEUX, TROIS;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
123
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>apc_define_constants</function></member>
    <member><function>define</function></member>
    <member><function>constant</function></member>
    <member>
     Ou <link linkend="language.constants">la référence sur les constantes PHP</link>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
