<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.3 Maintainer: gui Status: ready -->
<!-- Reviewed: no -->
<chapter xml:id="mysqli.mysqlnd" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">

 <title>Le pilote natif MySQL</title>

 <para>
  Cette partie du manuel fournit un aperçu du pilote natif MySQL.
 </para>

 <para>
  <emphasis role="bold">Qu'est-ce donc?</emphasis>
 </para>

 <para>
  Le pilote natif MySQL est un substitut à la bibliothèque cliente MySQL
  (libmysql). Le pilote natif MySQL fait partie des branches officielles PHP 5.3 et
  PHP 6.
 </para>

 <para>
  Les extensions de base de données MySQL
  <literal>mysqli</literal> et PDO MYSQL communiquent toutes avec le serveur MySQL.
  Auparavant, les extensions utilisaient les services de la librairie cliente MySQL et
  étaient compilées par rapport à elle pour utiliser son protocole client-serveur.
 </para>

 <para>
  Avec le pilote natif MySQL, il y a maintenant une alternative car les extensions
  de base de données MySQL peuvent être compilées pour utiliser le pilote natif plutôt 
  que la librairie cliente MySQL.
 </para>

 <para>
  Le pilote natif MySQL est écrit en C comme une extensions PHP.
  MySQL Native Driver is written in C as a PHP extension.
 </para>

 <para>
  <emphasis role="bold">Ce que ce n'est pas</emphasis>
 </para>

 <para>
  Bien que le pilote natif MySQL soit écrit comme une extension PHP, il est important
  de noter qu'il ne fournit pas une nouvelle API au programmeur PHP. Les API programmeur
  sont fournies par l'extension MySQL, <literal>mysqli</literal> et PDO
  MySQL. Ces extensions peuvent maintenant utiliser les services du pilote natif MySQL pour communiquer
  avec le serveur MySQL. Ainsi, vous ne devez pas considérer le pilote natif MySQL comme une API.
 </para>

 <para>
  <emphasis role="bold">Pourquoi l'utiliser?</emphasis>
 </para>

 <para>
  Utiliser le pilote natif MySQL offre bon nombre d'avantages par rapport à
  la librairie MySQL cliente.
 </para>

 <para>
  L'ancienne librairie MySQL cliente a été écrite par MySQL AB et a donc été publiée
  sous licence MySQL, ce qui a eu pour conséquence de désactiver le support de MySQL
  par défaut dans PHP? Vu que le pilote natif MySQL a été développé comme partie intégrante
  du projet PHP, il est publié sous licence PHP, ce qui résout les soucis de licence problématique
  dans le passé.
 </para>

 <para>
  De plus, auparavant, vous deviez compiler les extensions de base de données
  MySQL par rapport à une copie de la librairie MySQL cliente, ce qui signifie que
  vous deviez avoir MySQL d'installé sur la machine sur laquelle vous compiliez PHP à
  partir des sources. Ainsi, quand votre application PHP était exécutée, les extensions
  MySQL appelaient les fichier de la librairie MySQL cliente au démarrage, ceux-ci devant
  être obligatoirement installés sur le système. Avec le pilote natif MySQL, ce n'est plus le cas
  car il est inclus dans la distribution standard. Ainsi, vous n'aurez plus besoin d'avoir MySQL
  installé pour compiler PHP ou exécuter des applications PHP faisant appel à une base de données.
 </para>

 <para>
  Du fait que le pilote natif MySQL soit écrit comme une extension PHP, il est intimement
  lié au coeur de PHP. Ceci implique une meilleure efficacité, notamment en ce qui concerne
  l'utilisation de la mémoire, car le pilote utilise l'allocation mémoire de PHP et par 
  conséquent supporte les limites de mémoire. Utiliser le pilote natif MySQL aboutit à des
  performances égales sinon meilleurs qu'avec la librairie cliente MySQL, car l'utilisation
  de la mémoire est beaucoup plus efficace. Le fait que lors de l'utilisation de la librairie cliente
  MySQL, chaque enregistrement est stockée deux fois en mémoire alors que le client natif MySQL ne les
  stocké qu'une fois constitue un bon exemple de bonne gestion de la mémoire.
 </para>

 <para>
  <emphasis role="bold">Fonctionnalités spéciales</emphasis>
 </para>

 <para>
  Le pilote natif MySQL fournit aussi quelques fonctionnalités spéciales non
  disponibles avec la librairie cliente MySQL, listées ci- dessous :
 </para>

 <itemizedlist>

  <listitem>
   <para>
    Des connexions persistantes améliorées
   </para>
  </listitem>

  <listitem>
   <para>
    La fonction spéciale <function>mysqli_fetch_all</function>
   </para>
  </listitem>

  <listitem>
   <para>
    Des appels aux statistiques de performance :
    <function>mysqli_get_cache_stats</function>,
    <function>mysqli_get_client_stats</function>,
    <function>mysqli_get_connection_stats</function>
   </para>
  </listitem>

 </itemizedlist>

 <para>
  Les statistiques de performances peuvent s'avérer très utiles pour identifier
  des goulets d'étranglement de performances.
 </para>

 <para>
  Le pilote natif MySQL fournit aussi des connexions persistantes lors de son
  utilisation avec l'extension <literal>mysqli</literal>.
 </para>

 <para>
  <emphasis role="bold">Installation sous Unix</emphasis>
 </para>

 <para>
  Par défaut, les extensions de base de données MySQL sont configurées pour
  utiliser la librairie cliente MySQL. Pour utiliser le pilote natif MySQL,
  PHP doit être compilé en spécifiant explicitement que les extensions de base de
  données MySQL doivent être compilées par rapport à lui. C'est fait grâce aux options
  de configuration précédant la compilation de PHP en elle-même.
 </para>

 <para>
  Par exemple, pour compiler l'extension MySQL, <literal>mysqli</literal>
  et PDO MySQL en utilisant le pilote natif MYSQL, la commande suivante doit être passée :
 </para>

<programlisting role="shell">./configure --with-mysql=mysqlnd \
--with-mysqli=mysqlnd \
--with-pdo-mysql=mysqlnd \
[autres options]</programlisting>

 <para>
  <emphasis role="bold">Installation sous Windows</emphasis>
 </para>

 <para>
  Dans les distributions officielle de PHP à partir de la version 5.3, le
  pilote natif MySQL est activé par défaut et aucune configuration supplémentaire n'est
  nécessaire pour l'utiliser. Toutes les extensions de base de données MySQL l'utiliseront alors.
 </para>

 <para>
  <emphasis role="bold">Utiliser des connexions persistantes</emphasis>
 </para>

 <para>
  Les extensions de base de données MySQL ne supportent pas les connexions persistantes
  quand elles sont utilisées avec la librairie cliente MySQL. Par contre, elle les supportent
  lorsqu'elles utilisent le pilote natif MySQL. Quand une connexion est initiée, le nom d'hôte
  est préfixé avec <quote>p:</quote>. Le code suivant en montre l'exemple, en créant une connexion
  avec <literal>mysqli</literal> :
 </para>

<programlisting role="php">$host="p:localhost";
$port=3306;
$socket="/tmp/mysql.sock";
$user="root";
$password="password";
$dbname="test";

$conn = new mysqli($host, $user, $password, $dbname, $port, $socket)
   or die ('On ne peut pas se connecter au serveur de base de données' . mysqli_connect_error());</programlisting>

 <para>
  <emphasis role="bold">Utilisation de 
  <function>mysqli_fetch_all</function></emphasis>
 </para>

 <para>
  Si vous utilisez <literal>mysqli</literal> avec le pilote natif MySQL, vous avez
  accès au nouvel appel d'API
  <function>mysqli_fetch_all</function>.
 </para>

 <para>
  Comme <function>mysqli_fetch_all</function> retourne tous les enregistrements comme un tableau
  en un seule passe, il peut consommer davantage de mémoire que certaines fonctions identiques comme
  <function>mysqli_fetch_array</function>, qui retourne un enregistrement à la fois. Cependant, si vous
  voulez itérer le jeu de résultats, vous aurez besoin d'une boucle qui aura un impact sur les 
  performances. Ainsi, <function>mysqli_fetch_all</function> doit être utilisé dans les situations où le
  résultat sera transmis à une autre couche pour être traité.
 </para>

 <para>
  <emphasis role="bold">Utilisation des donnés statistiques</emphasis>
 </para>

 <para>
  Le pilote natif MySQL peut collecter des statistiques sur la communication entre
  le client et le serveur. Ces statistiques sont des trois sortes :
 </para>

 <itemizedlist>

  <listitem>
   <para>
    Les statistiques client
   </para>
  </listitem>

  <listitem>
   <para>
    Les statistiques de connexion
   </para>
  </listitem>

  <listitem>
   <para>
    Les statistiques de cache Zval
   </para>
  </listitem>

 </itemizedlist>

 <para>
  Si vous utilisez l'extension <literal>mysqli</literal>, ces statistiques sont disponibles
  via trois appels d'API :
 </para>

 <itemizedlist>

  <listitem>
   <para>
    <function>mysqli_get_client_stats</function>
   </para>
  </listitem>

  <listitem>
   <para>
    <function>mysqli_get_connection_stats</function>
   </para>
  </listitem>

  <listitem>
   <para>
    <function>mysqli_get_cache_stats</function>
   </para>
  </listitem>

 </itemizedlist>

 <para>
  <emphasis role="bold">Accéder aux statistiques client</emphasis>
 </para>

 <para>
  Pour accéder aux statistiques client, vous devez appeler
  <function>mysqli_get_client_stats</function>. L'appel à la fonction ne requiert
  aucun paramètre.
 </para>

 <para>
  Cette fonction retourne un tableau associatif contenant le nom de la statistique comme clé
  et la donnée statistiques comme valeur.
 </para>

 <para>
  Les statistiques client peuvent aussi être accédées via la fonction
  <function>phpinfo</function>.
 </para>

 <para>
  <emphasis role="bold">Accéder aux statistiques de connexion</emphasis>
 </para>

 <para>
  Pour accéder aux statistiques client, vous devez appeler
  <function>mysqli_get_connection_stats</function>. Cette fonction prend en paramètre
  le descripteur de connexion à la base de données.
 </para>

 <para>
  Cette fonction retourne un tableau associatif contenant le nom de la statistique comme clé
  et la donnée statistiques comme valeur.
 </para>

 <para>
  <emphasis role="bold">Accéder aux statistiques de cache Zval</emphasis>
 </para>

 <para>
  Le pilote natif MySQL collecte aussi des statistiques sur son cache interne de Zval.
  Ces statistiques peuvent être accédées en utilisant
  <function>mysqli_get_cache_stats</function>.
 </para>

 <para>
  Les statistiques de cache Zval obtenues peuvent permettre de régler avec précision un
  paramètre du <filename>php.ini</filename> relatif au cache Zval, aboutissant à de meilleures
  performances.
 </para>

 <para>
  <emphasis role="bold">Statistiques retournées par le pilote natif MySQL</emphasis>
 </para>

 <para>
  Le tableau suivant présente une liste des statistiques retournées par les fonction
  <function>mysqli_get_client_stats</function>,
  <function>mysqli_get_connections_stats</function> et
  <function>mysqli_get_cache_stats</function>.
 </para>

 <informaltable>
  <tgroup cols="1">
   <colspec colwidth="30*"/>
   <tbody>
    <row>
     <entry><emphasis role="bold">Statistique</emphasis></entry>
    </row>
    <row>
     <entry>bytes_sent</entry>
    </row>
    <row>
     <entry>bytes_received</entry>
    </row>
    <row>
     <entry>packets_sent</entry>
    </row>
    <row>
     <entry>packets_received</entry>
    </row>
    <row>
     <entry>protocol_overhead_in</entry>
    </row>
    <row>
     <entry>protocol_overhead_out</entry>
    </row>
    <row>
     <entry>bytes_received_ok_packet</entry>
    </row>
    <row>
     <entry>bytes_received_eof_packet</entry>
    </row>
    <row>
     <entry>bytes_received_rset_header_packet</entry>
    </row>
    <row>
     <entry>bytes_received_rset_field_meta_packet</entry>
    </row>
    <row>
     <entry>bytes_received_rset_row_packet</entry>
    </row>
    <row>
     <entry>bytes_received_prepare_response_packet</entry>
    </row>
    <row>
     <entry>bytes_received_change_user_packet</entry>
    </row>
    <row>
     <entry>packets_sent_command</entry>
    </row>
    <row>
     <entry>packets_received_ok</entry>
    </row>
    <row>
     <entry>packets_received_eof</entry>
    </row>
    <row>
     <entry>packets_received_rset_header</entry>
    </row>
    <row>
     <entry>packets_received_rset_field_meta</entry>
    </row>
    <row>
     <entry>packets_received_rset_row</entry>
    </row>
    <row>
     <entry>packets_received_prepare_response</entry>
    </row>
    <row>
     <entry>packets_received_change_user</entry>
    </row>
    <row>
     <entry>result_set_queries</entry>
    </row>
    <row>
     <entry>non_result_set_queries</entry>
    </row>
    <row>
     <entry>no_index_used</entry>
    </row>
    <row>
     <entry>bad_index_used</entry>
    </row>
    <row>
     <entry>slow_queries</entry>
    </row>
    <row>
     <entry>buffered_sets</entry>
    </row>
    <row>
     <entry>unbuffered_sets</entry>
    </row>
    <row>
     <entry>ps_buffered_sets</entry>
    </row>
    <row>
     <entry>ps_unbuffered_sets</entry>
    </row>
    <row>
     <entry>flushed_normal_sets</entry>
    </row>
    <row>
     <entry>flushed_ps_sets</entry>
    </row>
    <row>
     <entry>ps_prepared_never_executed</entry>
    </row>
    <row>
     <entry>ps_prepared_once_executed</entry>
    </row>
    <row>
     <entry>rows_fetched_from_server_normal</entry>
    </row>
    <row>
     <entry>rows_fetched_from_server_ps</entry>
    </row>
    <row>
     <entry>rows_buffered_from_client_normal</entry>
    </row>
    <row>
     <entry>rows_buffered_from_client_ps</entry>
    </row>
    <row>
     <entry>rows_fetched_from_client_normal_buffered</entry>
    </row>
    <row>
     <entry>rows_fetched_from_client_normal_unbuffered</entry>
    </row>
    <row>
     <entry>rows_fetched_from_client_ps_buffered</entry>
    </row>
    <row>
     <entry>rows_fetched_from_client_ps_unbuffered</entry>
    </row>
    <row>
     <entry>rows_fetched_from_client_ps_cursor</entry>
    </row>
    <row>
     <entry>rows_skipped_normal</entry>
    </row>
    <row>
     <entry>rows_skipped_ps</entry>
    </row>
    <row>
     <entry>copy_on_write_saved</entry>
    </row>
    <row>
     <entry>copy_on_write_performed</entry>
    </row>
    <row>
     <entry>command_buffer_too_small</entry>
    </row>
    <row>
     <entry>connect_success</entry>
    </row>
    <row>
     <entry>connect_failure</entry>
    </row>
    <row>
     <entry>connection_reused</entry>
    </row>
    <row>
     <entry>reconnect</entry>
    </row>
    <row>
     <entry>pconnect_success</entry>
    </row>
    <row>
     <entry>active_connections</entry>
    </row>
    <row>
     <entry>active_persistent_connections</entry>
    </row>
    <row>
     <entry>explicit_close</entry>
    </row>
    <row>
     <entry>implicit_close</entry>
    </row>
    <row>
     <entry>disconnect_close</entry>
    </row>
    <row>
     <entry>in_middle_of_command_close</entry>
    </row>
    <row>
     <entry>explicit_free_result</entry>
    </row>
    <row>
     <entry>implicit_free_result</entry>
    </row>
    <row>
     <entry>explicit_stmt_close</entry>
    </row>
    <row>
     <entry>implicit_stmt_close</entry>
    </row>
    <row>
     <entry>mem_emalloc_count</entry>
    </row>
    <row>
     <entry>mem_emalloc_ammount</entry>
    </row>
    <row>
     <entry>mem_ecalloc_count</entry>
    </row>
    <row>
     <entry>mem_ecalloc_ammount</entry>
    </row>
    <row>
     <entry>mem_erealloc_count</entry>
    </row>
    <row>
     <entry>mem_erealloc_ammount</entry>
    </row>
    <row>
     <entry>mem_efree_count</entry>
    </row>
    <row>
     <entry>mem_malloc_count</entry>
    </row>
    <row>
     <entry>mem_malloc_ammount</entry>
    </row>
    <row>
     <entry>mem_calloc_count</entry>
    </row>
    <row>
     <entry>mem_calloc_ammount</entry>
    </row>
    <row>
     <entry>mem_realloc_count</entry>
    </row>
    <row>
     <entry>mem_realloc_ammount</entry>
    </row>
    <row>
     <entry>mem_free_count</entry>
    </row>
    <row>
     <entry>proto_text_fetched_null</entry>
    </row>
    <row>
     <entry>proto_text_fetched_bit</entry>
    </row>
    <row>
     <entry>proto_text_fetched_tinyint</entry>
    </row>
    <row>
     <entry>proto_text_fetched_short</entry>
    </row>
    <row>
     <entry>proto_text_fetched_int24</entry>
    </row>
    <row>
     <entry>proto_text_fetched_int</entry>
    </row>
    <row>
     <entry>proto_text_fetched_bigint</entry>
    </row>
    <row>
     <entry>proto_text_fetched_decimal</entry>
    </row>
    <row>
     <entry>proto_text_fetched_float</entry>
    </row>
    <row>
     <entry>proto_text_fetched_double</entry>
    </row>
    <row>
     <entry>proto_text_fetched_date</entry>
    </row>
    <row>
     <entry>proto_text_fetched_year</entry>
    </row>
    <row>
     <entry>proto_text_fetched_time</entry>
    </row>
    <row>
     <entry>proto_text_fetched_datetime</entry>
    </row>
    <row>
     <entry>proto_text_fetched_timestamp</entry>
    </row>
    <row>
     <entry>proto_text_fetched_string</entry>
    </row>
    <row>
     <entry>proto_text_fetched_blob</entry>
    </row>
    <row>
     <entry>proto_text_fetched_enum</entry>
    </row>
    <row>
     <entry>proto_text_fetched_set</entry>
    </row>
    <row>
     <entry>proto_text_fetched_geometry</entry>
    </row>
    <row>
     <entry>proto_text_fetched_other</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_null</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_bit</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_tinyint</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_short</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_int24</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_int</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_bigint</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_decimal</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_float</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_double</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_date</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_year</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_time</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_datetime</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_timestamp</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_string</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_blob</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_enum</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_set</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_geometry</entry>
    </row>
    <row>
     <entry>proto_binary_fetched_other</entry>
    </row>
   </tbody>
  </tgroup>
 </informaltable>

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
