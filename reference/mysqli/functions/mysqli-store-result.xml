<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.6 Maintainer: yannick Status: ready -->
  <refentry id="function.mysqli-store-result">
   <refnamediv>
    <refname>mysqli_store_result</refname>
    <refname>mysqli->store_result</refname>
    <refpurpose>Transfère un jeu de résultats à partir de la dernière requête</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     &title.procedural;
    <methodsynopsis>
     <type>object</type><methodname>mysqli_store_result</methodname>
     <methodparam><type>object</type><parameter>link</parameter></methodparam>
    </methodsynopsis>
    &title.oop;
    <classsynopsis>
     <ooclass><classname>mysqli</classname></ooclass>
     <methodsynopsis>
      <type>object</type>
      <methodname>store_result</methodname>
      <methodparam><type>void</type><parameter></parameter></methodparam>
     </methodsynopsis>
    </classsynopsis>
    <para>
     Transfère le jeu de résultats à partir de la dernière
     requête sur la connexion à la base de données 
     spécifiée par le paramètre <parameter>link</parameter> pour 
     une utilisation avec <function>mysqli_data_seek</function>.
    </para>
    <note>
     <para>
      Il est toujours conseillé de libérer la mémoire allouée
      pour le résultat en utilisant la fonction <function>mysqli_free_result</function>,
      lors du transfert de grands résultats en utilisant la fonction 
      <function>mysqli_store_result</function> cela devient particulièrement
      important.
     </para>
    </note>
    <note>
     <para>
      <function>mysqli_store_result</function> retourne &false; dans le cas où la requête ne retourne
      pas de jeu de résultat (si la requête est de type INSERT par exemple). Cette fonction
      retournera toujours &false; si le jeu de résultats ne peut être lu. Vous pouvez savoir si il y a une 
      erreur en utilisant la fonction <function>mysqli_error</function> et en regardant si elle 
      renvoie une chaîne vide, ou si <function>mysqli_errno</function> retourne zéro, ou
      bien si <function>mysqli_field_count</function> retourne une valeur différente de zéro.
      Une autre raison pour que cette fonction retourne &false; est que le jeu de résultats
      retourné après une requête réussie appelé par <function>mysqli_query</function>
      est trop long (la mémoire pour celui-ci ne peut être allouée). 
      Si <function>mysqli_field_count</function> retourne une valeur différente de zéro,
      le traitement devrait produire un jeu de résultats non vide.
     </para>
    </note>
   </refsect1>
   <refsect1>
    &reftitle.returnvalues;
    <para>
     Retourne un résultat sotcké sous la forme d'un objet ou &false; si une erreur survient.
    </para>
   </refsect1>
   <refsect1>
    &reftitle.seealso;
    <para>
     <function>mysqli_real_query</function> et
     <function>mysqli_use_result</function>.
    </para>
   </refsect1>
   <refsect1>
    &reftitle.examples;
    <para>
     Voir <function>mysqli_multi_query</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
