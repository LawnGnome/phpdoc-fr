<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 283835 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
<!-- Purpose: database.abstract -->
<!-- Membership: pecl -->
<!-- State: experimental -->

<book xml:id="book.sdodasrel" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>SDO Relationnel Service d'Accès de Données</title>
 <titleabbrev>SDO-DAS-Relational</titleabbrev>

 <!-- {{{ preface -->
 <preface xml:id="intro.sdodasrel">
  &reftitle.intro;
  <para>
   <!-- This warns that the extension is experimental -->
    &warn.experimental;
  </para>
  <para>
   Afin d'utiliser le Service d'Accès de Données Relationnel pour les Objets
   de Service de Données, vous devrez comprendre certains concepts derrière
   le SDO : le graphique de données, l'objet de données, le moyen de
   déconnexion pour travailler, le changement du sommaire, les expressions
   XPath et les propriétés, et ainsi de suite. Si vous n'êtes pas familier
   avec ses idées, vous devriez regarder en premier à <link
   linkend='ref.sdo'>la section sur le SDO</link>. De plus, le DAS
   Relationnel utilise l'extension SDO pour s'isoler des communications
   spécifiques aux bases de données. Afin d'utiliser le DAS Relationnel, vous
   devrez être capable de créer et passer une connexion de base de données
   PDO; pour cette raison, vous devrez aussi regarder <link
   linkend="intro.pdo">la section sur le PDO</link>.
  </para>

  <para>
   Le travail de DAS Relationnel est de déplacer les données entre les
   applications et une base de données relationnelle. Afin de faire cela, vous
   devez dire quelle sorte de données vont être transférées entre les
   entités de base de données
   - tables, colonnes, clés primaires et clés étrangères -
   et les éléments de modèle SDO
   - types, propriétés, relations de retenue et ainsi de suite.
   Vous spécifiez ces informations comme des métadonnées lorsque vous
   construisez le DAS Relationnel.
  </para>

  <procedure xml:id='overview'>
   <title>Vue d'ensemble des Opérations</title>
   <step>
    <para>
     La première étape est d'appeler le constructeur de DAS Relationnel, en
     lui passant les métadonnées qui définissent les relations entre la base de
     données et le modèle SDO. Il y a des exemples plus bas.
    </para>
   </step>

   <step>
    <para>
     L'étape suivante devrait être l'appel des méthodes
     <function>executeQuery</function>
     ou
     <function>executePreparedQuery</function>
     sur le DAS Relationnel, en leur passant soit une requête SQL littérale
     pour le DAS pour préparer et exécuter ou une requête préparée avec des
     paramètres fictifs et une liste des valeurs à être insérées. Vous pouvez
     aussi avoir besoin de spécifier un peu de métadonnées à propos de la
     requête, ainsi le DAS Relationnel saura exactement quelles colonnes
     seront retournées de la base de données et dans quel ordre. Vous devez
     aussi passer une connexion de base de données PDO.
    </para>

    <para>
     La valeur de retour de
     <function>executeQuery</function>
     ou
     <function>executePreparedQuery</function>
     est un graphique de données normalisé contenant toutes les données du
     jeu de résultats. Pour une requête qui retourne les données obtenues à
     partir de plusieurs tables, ce graphique contiendra plusieurs objets
     de données, liés avec les relations SDO contenues. Il pourrait aussi
     y avoir des données de références qui ne sont pas de contenues Ã
     l'intérieur des données.
    </para>

    <para>
     Une fois que la requête a été exécutée et le graphique de données
     construit, il n'est pas nécessaire pour l'instance de DAS Relationnel ou
     pour la connexion de base de données. Il n'y a pas de verrou gardé sur
     la base de données. Le DAS Relationnel et la connexion de base de
     données PDO peuvent être tous deux passés au ramasse miettes.
    </para>
   </step>
   <step>
    <para>
     Il est probable que les données dans le graphique de données passent par
     plusieurs modifications. Le graphique de données peut être sérialisé
     dans une session PHP et ainsi peut avoir une vie au-delà d'une
     interaction client-serveur. Les objets de données peuvent être créés et
     ajoutés au graphique, les objets de données déjà dans le graphique
     peuvent être supprimés et les objets de données dans le graphique
     peuvent être modifiés.
    </para>
   </step>
   <step>
    <para>
     Enfin, les changements effectués sur le graphique de données peuvent
     être appliqués à la base de donnés en utilisant la méthode
     <function>applyChanges</function>
     de DAS Relationnel. Pour cela, une autre instance de DAS Relationnel
     doit être construite, en utilisant les mêmes métadonnées, et une autre
     connexion à la base de données obtenue. La connexion et le graphique de
     données sont passés à
     <function>applyChanges</function>.
     Ã€ ce point, le DAS Relationnel examine les changements et génère les
     requêtes SQL INSERT, UPDATE et DELETE nécessaires pour appliquer les
     changements. Toutes les requêtes UPDATE et DELETE sont qualifiées avec
     les valeurs originales des données, donc il se peut que les données
     aillent changées dans la base de données en attendant que les données
     soient détectées. En assumant qu'aucune collision de ce type ne s'est
     produite, les changements seront envoyés à la base de données.
     L'application peut alors continuer à travailler avec le graphique de
     données, effectuer d'autres changements et les appliquer, ou peut le
     jeter.
    </para>
   </step>
  </procedure>
  <para>
   Il y a d'autres moyens de travailler avec les données dans la base de
   données : il est possible de créer simplement les objets de données et les
   écrire à la base de données sans effectuer d'appel préliminaire à
   <function>executeQuery</function>,
   par exemple. Ce scénario et les autres sont explorés dans les
   <link linkend="sdo.das.rel.examples">exemples</link> de la section plus
   bas.
  </para>
 </preface>
 <!-- }}} -->

 &reference.sdodasrel.setup;
 &reference.sdodasrel.constants;
 &reference.sdodasrel.examples;
 &reference.sdodasrel.limitations;
 &reference.sdodasrel.reference;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

