<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.sdo-das-relational-executequery" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SDO_DAS_Relational::executeQuery</refname>
  <refpurpose>
   Exécute une requête SQL donnée à une base de données relationnelle et
   retourne les résultats comme graphique de données normalisé.
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>SDODataObject</type>
   <methodname>SDO_DAS_Relational::executeQuery</methodname>
   <methodparam>
    <type>PDO</type>
    <parameter>database_handle</parameter>
   </methodparam>
   <methodparam>
    <type>string</type>
    <parameter>SQL_statement</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>array</type>
    <parameter>column_specifier</parameter>
   </methodparam>
  </methodsynopsis>
  &warn.experimental.func;
  <para>
   Exécute une requête donnée à la base de données relationnelle en utilisant
   la ressource de base de données PDO fourni. Utilise le modèle qui est
   bâti des métadonnées pour interpréter le jeu de résultats.
   Retourne un graphique de données.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>PDO_database_handle</term>
     <listitem>
      <para>
       Construit en utilisant l'extension PDO.
       Une ligne typique pour construire un descripteur de base de données PDO
       devrait ressembler à ceci :
       <programlisting role="php" xml:id="sdo.das.rel.eq.examples.pdo">
<![CDATA[
$dbh = new PDO("mysql:dbname=COMPAGNIEDB;host=localhost",DATABASE_USER,DATABASE_PASSWORD);
]]>
       </programlisting>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>SQL_statement</term>
     <listitem>
      <para>
       La requête SQL à être exécutée sur la base de données.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>column_specifier</term>
     <listitem>
      <para>
       Le DAS Relationnel doit examiner le jeu de résultats et pour chaque
       colonne, provenant de quelle table et quelle colonne de la table il
       vient.
       Dans certaines circonstances, il peut trouver les informations pour
       lui-même, mais la plupart du temps il ne le peut pas.
       Dans ces cas, une colonne spécifique est requise, qui est un tableau
       qui identifie les colonnes. Chaque entrée dans le tableau est simplement
       une &string; dans la forme
       <varname>table-name.column_name</varname>.
      </para>
      <para>
       Le spécificateur de colonne est requis lorsqu'il y a des noms de
       colonnes similaires dans les métadonnées de base de données.
       Par exemple, dans une base de données utilisée dans ces exemples,
       toutes les tables ont une colonne
       <varname>id</varname>
       et une colonne
       <varname>nom</varname>.
       Lorsque DAS Relationnel récupère le jeu de résultats à partir de PDO,
       il peut le faire avec l'attribut PDO_FETCH_ASSOC, ce qui permettra aux
       colonnes dans les jeux de résultats d'être marquées avec un nom de
       colonne, mais on ne pourra pas distinguer les entrées similaires.
       Alors cela fonctionnera seulement lorsqu'il y aura aucune entrée
       similaire possible dans les jeux de résultats.
      </para>
      <para>
       Pour résumer, spécifier un tableau de spécificateurs de colonne
       lorsqu'il y a une incertitude à propos des colonnes qui pourraient
       venir de quelle table. Il faut l'omettre seulement lorsque chaque nom
       des colonnes dans les métadonnées de base de données est unique.
      </para>
      <para>
       Tous les exemples dans la section d'<link
       linkend='sdo.das.rel.examples'>Exemples</link> utilisent un
       spécificateur de colonne. Il y a un exemple dans le dossier
       <filename>Scenarios</filename> de l'installation qui ne fait pas :
       il ne fonctionne seulement avec la table employe et parce que il
       travaille seulement avec une seule table, il ne peut y avoir des noms de
       colonnes similaires.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un graphique de données.
   Spécifiquement, elle retourne un objet racine d'un type spécial. Sous cet
   objet de racine se trouvera les données du jeu de résultat. L'objet de
   racine aura une propriété de valeurs multiples contenue avec le même nom
   que le type racine d'application spécifié dans le constructeur, et la
   propriété continuera un ou plusieurs objets de donnés du type de racine de
   l'application.
  </para>
  <para>
   Dans le cas que la requête aucune données, l'objet spécial de racine pour
   le type de racine de l'application sera vide.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <function>SDO_DAS_Relational::executeQuery</function> peut jeter une
   exception SDO_DAS_Relational_Exception si elle n'est pas capable de
   construire le graphique de données correctement.
   Cela peut arriver pour un certains nombres de raisons :
   par exemple, si elle trouve qu'elle n'a pas de clés primaire dans le jeu de
   résultats pour tous les objets.
   Le DAS Relationnel attrape toutes les exceptions de PDO et obtient des
   informations de diagnostique de PDO qui inclut un
   SDO_DAS_Relationnal_Exception qui sera alors jeté.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Veuillez visitez la section
   <link linkend='sdo.das.rel.examples'>exemples</link>
   dans la section information générale à propos des DAS Relationnel pour
   beaucoup d'exemples en appelant cette méthode.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
