<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.6 Maintainer: yannick Status: ready -->
  <refentry id="function.get-meta-tags">
   <refnamediv>
    <refname>get_meta_tags</refname>
    <refpurpose>
     Extrait tous les méta tags d'un fichier
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>get_meta_tags</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>use_include_path</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>get_meta_tags</function> ouvre le fichier <parameter>filename</parameter>
     et l'analyse ligne par ligne à la recherche de balises
     &lt;meta&gt;. Le fichier peut être un fichier local ou 
     une <acronym>URL</acronym>. L'analyse cesse lors de la rencontre de la balise 
     <literal>&lt;/head&gt;</literal>.
     </para>
     <para>
     En donnant la valeur de 1 au paramètre optionnel
     <parameter>use_include_path</parameter> fera que 
     <function>get_meta_tags</function> recherchera aussi le fichier
     dans l'include path.
    </para>    
     <para> 
     <example>
      <title>Exemple de Meta Tags</title>
      <programlisting role="html">
<![CDATA[
<meta name="author" content="name">
<meta name="keywords" content="php documentation">
<meta name="DESCRIPTION" content="a php manual">
<meta name="geo.position" content="49.33;-86.59">
</head> <!-- cesse l'analyse ici -->
]]>
      </programlisting>
     </example>
     Attention au format des nouvelles lignes : &php; utilise une fonction
     native pour analyser le fichier, et les fichiers Mac ne seront pas
     reconnus.
    </para>
    <para> 
     La valeur de la propriété sera utilisé comme clé du tableau,
     et sa valeur comme valeur correspondante de la clé. Vous pourrez
     ainsi passer en revue facilement ce tableau avec les fonctions 
     de tableaux standard. Les caractères spéciaux présents dans la
     valeur seront replacés par un souligné (<literal>"_"</literal>),
     et le reste est converti en minuscule. Si deux balises méta possèdent
     le même nom, seul la dernière sera retournée.
    </para>
    <para>
     <example>
      <title>Résultat de <function>get_meta_tags</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// Supposons que les balises ci-dessus sont disponibles sur example.com
  $tags = get_meta_tags('http://www.example.com/');

// Notez que les clés sont en minuscule, et 
// le . a été remplacé par _ dans la clé
  echo $tags['author'];       // nom
  echo $tags['keywords'];     // documentation php 
  echo $tags['description'];  // un manuel PHP
  echo $tags['geo_position']; // 49.33;-86.59
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Depuis &php; 4.0.5, <function>get_meta_tags</function> supporte
      les attributs HTML sans guillemets.
     </para>
    </note>
    <para>
     Voir aussi
     <function>htmlentities</function> et
     <function>urlencode</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
