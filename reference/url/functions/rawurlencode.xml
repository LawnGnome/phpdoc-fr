<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.15 $ -->
<!-- EN-Revision: 1.11 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.rawurlencode" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>rawurlencode</refname>
  <refpurpose>Encode une chaîne en URL, selon la RFC 1738</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>rawurlencode</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
  </methodsynopsis>
  <para>
   Encode la chaîne fournie, en accord avec la
   <link xlink:href="&url.rfc;1738">RFC 1738</link>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       L'URL à encoder.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne une chaîne dont tous les caractères non alphanumériques
   (hormis <screen>-_.</screen>) auront été remplacés
   par des séquences <literal>%xy</literal>
   (<literal>%</literal>), avec xy, deux valeurs hexadécimales.
   Ce codage est conforme à la <link xlink:href="&url.rfc;1738">RFC 1738</link>
   qui évite que les caractères spéciaux soient interprétés
   comme des délimiteurs, et pour protéger les URL lors
   du transfert (contrairement à certains systèmes email).
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>rawurlencode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo '<a href="ftp://user:', rawurlencode('foo @+%/'),
     '@ftp.example.com/x.txt">';
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="html">
<![CDATA[
<a href="ftp://user:foo%20%40%2B%25%2F@ftp.example.com/x.txt">
]]>
    </screen>
   </example>
  </para>
  <para>
   Ou, si vous transmettez un composant PATH_INFO  d'une URL :
  </para>
  <para>
   <example>
    <title>Exemple avec <function>rawurlencode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo '<a href="http://example.com/department_list_script/',
    rawurlencode('sales and marketing/Miami'), '">';
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="html">
<![CDATA[
<a href="http://example.com/department_list_script/sales%20and%20marketing%2FMiami">
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>rawurldecode</function></member>
    <member><function>urldecode</function></member>
    <member><function>urlencode</function></member>
    <member><link xlink:href="&url.rfc;1738">RFC 1738</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->