<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.6 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->
 <refentry id="function.imagecolorallocatealpha">
  <refnamediv>
   <refname>imagecolorallocatealpha</refname>
   <refpurpose>Alloue une couleur à une image</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>imagecolorallocatealpha</methodname>
     <methodparam><type>resource</type><parameter>image</parameter></methodparam>
     <methodparam><type>int</type><parameter>red</parameter></methodparam>
     <methodparam><type>int</type><parameter>green</parameter></methodparam>
     <methodparam><type>int</type><parameter>blue</parameter></methodparam>
     <methodparam><type>int</type><parameter>alpha</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>imagecolorallocatealpha</function> se comporte comme 
    <function>imagecolorallocate</function> avec en plus le paramètre de
    transparence <parameter>alpha</parameter> qui prend une
    valeur entre <literal>0</literal> et <literal>127</literal>.
    <literal>0</literal> indique une opacité complète tandis que 
    <literal>127</literal> indique une transparence complète.
   </para>
   <para>
    <function>imagecolorallocatealpha</function> retourne &false; 
    si l'allocation a échoué.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>imagecolorallocatealpha</function></title>
     <programlisting role="php">
<![CDATA[
<?php
$size = 300;
$image=imagecreatetruecolor($size, $size);

// quelque chose pour obtenir un fond blanc avec une bordure noire 
$back = imagecolorallocate($image, 255, 255, 255);
$border = imagecolorallocate($image, 0, 0, 0);
imagefilledrectangle($image, 0, 0, $size - 1, $size - 1, $back);
imagerectangle($image, 0, 0, $size - 1, $size - 1, $border);

$yellow_x = 100;
$yellow_y = 75;
$red_x    = 120;
$red_y    = 165; 
$blue_x   = 187;
$blue_y   = 125; 
$radius   = 150;

// alloue des couleurs avec des valeurs alpha
$yellow = imagecolorallocatealpha($image, 255, 255, 0, 75);
$red    = imagecolorallocatealpha($image, 255, 0, 0, 75);
$blue   = imagecolorallocatealpha($image, 0, 0, 255, 75);

// Dessine 3 ellipses
imagefilledellipse($image, $yellow_x, $yellow_y, $radius, $radius, $yellow);
imagefilledellipse($image, $red_x, $red_y, $radius, $radius, $red);   
imagefilledellipse($image, $blue_x, $blue_y, $radius, $radius, $blue);

// Ne pas oublier d'envoyer un header correct
header('Content-type: image/png');

// et finallement, afficher le résultat
imagepng($image);
imagedestroy($image);
?>
]]>
     </programlisting>
    </example>
   </para>
   &note.gd.2;
    <para>
     Voir aussi
     <function>imagecolorallocate</function> et
     <function>imagecolordeallocate</function>.
    </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
