<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.imagecolorallocatealpha" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagecolorallocatealpha</refname>
  <refpurpose>Alloue une couleur à une image</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>imagecolorallocatealpha</methodname>
   <methodparam><type>resource</type><parameter>image</parameter></methodparam>
   <methodparam><type>int</type><parameter>red</parameter></methodparam>
   <methodparam><type>int</type><parameter>green</parameter></methodparam>
   <methodparam><type>int</type><parameter>blue</parameter></methodparam>
   <methodparam><type>int</type><parameter>alpha</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagecolorallocatealpha</function> se comporte comme
   <function>imagecolorallocate</function> avec en plus le paramètre de
   transparence <parameter>alpha</parameter>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>red</parameter></term>
     <listitem>
      <para>
       Valeur pour le composant rouge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>green</parameter></term>
     <listitem>
      <para>
       Valeur pour le composant vert.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>blue</parameter></term>
     <listitem>
      <para>
       Valeur pour le composant bleu.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>alpha</parameter></term>
     <listitem>
      <para>
       Une valeur entre &zero; et <literal>127</literal>.
       &zero; indique une opacité complète tandis que
       <literal>127</literal> indique une transparence complète.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   Les paramètres de couleurs sont des entiers compris entre 0 et 255, ou
   des hexadécimaux compris entre 0x00 et 0xFF.
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un identifiant de couleur ou &false; si l'allocation échoue.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Avant la version 5.1.3</entry>
       <entry>
        Retourne -1 si l'allocation échoue.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>imagecolorallocatealpha</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$size = 300;
$image=imagecreatetruecolor($size, $size);

// quelque chose pour obtenir un fond blanc avec une bordure noire
$back = imagecolorallocate($image, 255, 255, 255);
$border = imagecolorallocate($image, 0, 0, 0);
imagefilledrectangle($image, 0, 0, $size - 1, $size - 1, $back);
imagerectangle($image, 0, 0, $size - 1, $size - 1, $border);

$yellow_x = 100;
$yellow_y = 75;
$red_x    = 120;
$red_y    = 165;
$blue_x   = 187;
$blue_y   = 125;
$radius   = 150;

// alloue des couleurs avec des valeurs alpha
$yellow = imagecolorallocatealpha($image, 255, 255, 0, 75);
$red    = imagecolorallocatealpha($image, 255, 0, 0, 75);
$blue   = imagecolorallocatealpha($image, 0, 0, 255, 75);

// Dessine 3 ellipses
imagefilledellipse($image, $yellow_x, $yellow_y, $radius, $radius, $yellow);
imagefilledellipse($image, $red_x, $red_y, $radius, $radius, $red);
imagefilledellipse($image, $blue_x, $blue_y, $radius, $radius, $blue);

// Ne pas oublier d'envoyer un header correct
header('Content-type: image/png');

// et finallement, afficher le résultat
imagepng($image);
imagedestroy($image);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Affichage de l'exemple : imagecolorallocatealpha()</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/image.imagecolorallocatealpha.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  &note.gd.2;
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>imagecolorallocate</function></member>
    <member><function>imagecolordeallocate</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
