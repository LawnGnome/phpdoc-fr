<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->
  <refentry id="function.exif-read-data">
   <refnamediv>
    <refname>exif_read_data</refname>
    <refpurpose>Lit les en-têtes EXIF des images JPEG et TIFF</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>array</type><methodname>exif_read_data</methodname>
     <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>sections</parameter></methodparam>
     <methodparam choice="opt"><type>bool</type><parameter>arrays</parameter></methodparam>
     <methodparam choice="opt"><type>bool</type><parameter>thumbnail</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>exif_read_data</function> lit les en-têtes EXIF des images JPEG et TIFF.
     Elle retourne un tableau associatif avec comme index les noms des
     en-têtes, et en valeur, les valeurs des en-têtes. Si aucune donnée n'a pu
     être lue, elle retourne &false;.
    </para>
    <para>
     <parameter>filename</parameter> est le nom du fichier à lire. Il ne peut pas
     être une URL.
    </para>
    <para>
     <parameter>sections</parameter> est une liste de valeur séparée par des virgules
     des sections qui devront être présentées dans le tableau de résultat.
     <informaltable>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry>FILE</entry>
        <entry>FileName (nom du ficher), FileSize(taille du fichier), 
        FileDateTime (date de modification du fichier), SectionsFound (sections trouvées)</entry>
       </row>
       <row>
        <entry>COMPUTED</entry>
        <entry>html (attributs HTML), Width (largeur), Height (Hauteur), IsColor (couleur ou noir et blanc)
        et quelques autres si ils sont disponibles.
        </entry>
       </row>
       <row>
        <entry>ANY_TAG</entry>
        <entry>Toutes les informations concernant cette balise, comme par exemple
        IFD0, EXIF, ...</entry>
       </row>
       <row>
        <entry>IFD0</entry>
        <entry>Toutes les balises IFD0. Dans les images normales, ils contiennent les
        dimensions de l'images, etc...</entry>
       </row>
       <row>
        <entry>THUMBNAIL</entry>
        <entry>Un fichier qui contient une minitaure, si il y a un second IFD.
        Toutes les informations mises en balises à propos de cette miniature
        seront stockées dans cette section.</entry>
       </row>
       <row>
        <entry>COMMENT</entry>
        <entry>En-tête de commentaire des images JPEG.</entry>
       </row>
       <row>
        <entry>EXIF</entry>
        <entry>La section EXIF est une sous section de la section IFD0. Elle
        contient des informations plus détaillées sur les images. La plupart
        de ces index sont reliés aux appareils numériques.</entry>
       </row>
      </tbody>
     </tgroup>
     </informaltable>
    </para>
    <para>
     <parameter>arrays</parameter> spécifie si chaque section doit être
     un tableau ou non. Les sections <emphasis>FILE</emphasis>,
     <emphasis>COMPUTED</emphasis> et <emphasis>THUMBNAIL</emphasis> seront
     toujours transformées en tableau, car elle contiennent des noms qui
     risquent d'être en conflit.
    </para>
    <para>
     <parameter>thumbnail</parameter> indique si il faut lire la miniature
     elle-même, et pas seulement les données en balises.
    </para>
    <note>
     <para>
      Les en-têtes Exif sont souvent présents dans les en-têtes d'images JPEG/TIFF,
      générées par les appareils numériques, mais malheureusement, chaque
      fabriquant d'appareils ont tous une idée différente pour
      étiquetter leurs images, et vous ne pourrez pas compter sur des
      en-têtes communs.
     </para>
    </note>
    <para>
     <example>
      <title>Exemple avec <function>exif_read_data</function></title>
      <programlisting role="php">
<![CDATA[
<?php
echo "test1.jpg : <br />\n";
$exif = exif_read_data ('tests/test1.jpg','IFD0');
echo $exif===false ? "No header data found.<br />\n" : "Image contains headers<br />";
$exif = exif_read_data ('tests/test2.jpg',0,true);
echo "test2.jpg : <br />\n";
foreach($exif as $key=>$section) {
    foreach($section as $name=>$val) {
        echo "$key.$name: $val<br />\n";
    }
}?>
]]>
      </programlisting>
      <para>
      La première commande échoue, car l'image n'a pas d'en-têtes d'informations.
       <screen role="php">
<![CDATA[
test1.jpg:
No header data found.
test2.jpg:
FILE.FileName: test2.jpg
FILE.FileDateTime: 1017666176
FILE.FileSize: 1240
FILE.FileType: 2
FILE.SectionsFound: ANY_TAG, IFD0, THUMBNAIL, COMMENT
COMPUTED.html: width="1" height="1"
COMPUTED.Height: 1
COMPUTED.Width: 1
COMPUTED.IsColor: 1
COMPUTED.ByteOrderMotorola: 1
COMPUTED.UserComment: Exif test image.
COMPUTED.UserCommentEncoding: ASCII
COMPUTED.Copyright: Photo (c) M.Boerger, Edited by M.Boerger.
COMPUTED.Copyright.Photographer: Photo (c) M.Boerger
COMPUTED.Copyright.Editor: Edited by M.Boerger.
IFD0.Copyright: Photo (c) M.Boerger
IFD0.UserComment: ASCII
THUMBNAIL.JPEGInterchangeFormat: 134
THUMBNAIL.JPEGInterchangeFormatLength: 523
COMMENT.0: Comment #1.
COMMENT.1: Comment #2.
COMMENT.2: Comment #3end
]]>
THUMBNAIL.JPEGInterchangeFormat: 134
THUMBNAIL.Thumbnail.Height: 1
THUMBNAIL.Thumbnail.Height: 1
       </screen>
      </para>
     </example>
    </para>
    <note>
     <para>
      Si l'image contient des données IFD0, alors la section COMPUTED contient
      l'entrée ByteOrderMotorola qui vaut 0 pour little-endian (intel) et 1 pour
      big-endian (motorola). Ceci a été ajoué en PHP 4.3.
     </para>
     <para>
      Lorsqu'un en-tête Exif contient une note de Copyright, cet en-tête 
      peut alors contenir lui même deux valeurs. Comme cette solution est
      incohérente avec les standards Exif 2.10, la section COMPUTED retournera
      les deux en-têtes, <emphasis>Copyright.Photographer</emphasis>
      et <emphasis>Copyright.Editor</emphasis>, tandis que les sections IFD0 contiennent
      le tableau d'octets avec des caractères NULL pour séparer les deux entrées.
      Ou bien, juste la première entére si le type de données était erroné
      (comportement par défaut de Exif). La section COMPUTED va aussi contenir une
      entrée <emphasis>Copyright</emphasis>, qui sera soit la chaîne originale
      de copyright, soit une liste de valeur séparée par des virgules de
      photos et de copyright de l'auteur.
     </para>
    </note>
    <note>
     <para>
      La balise UserComment présente le même problème que la balise Copyright. Elle
      peut stocker deux valeurs : en premier, le jeu de caractères utilisé, puis
      la valeur elle-même. Si c'est le cas, la section IFD contiendra uniquement
      le jeu de caractères, ou bien un tableau d'octets. La section COMPUTED 
      va stocker les deux entrées <emphasis>UserCommentEncoding</emphasis> et 
      <emphasis>UserComment</emphasis>. L'index <emphasis>UserComment</emphasis> 
      est disponible dans les deux cas, et il est préférable de l'utiliser, plutôt 
      que la valeur de la section IFD0.
     </para>
     <para>
      Si les commentaires utilisateurs utilisent l'Unicode ou bien le JIS et que le module
      mbstring est accessible, ces jeux de caractères seront automatiquement changés
      en fonction la configuration de EXIF dans le fichier &php.ini;. Cette
      possibilité a été ajoutée en PHP 4.3.
     </para>
    </note>
    <note>
     <para>
     La hauteur (Height) et la largeur (Width) sont calculés de la même façon que
     la fonction <function>getimagesize</function> le fait, et leurs valeurs ne
     devraient jamais différer. De même, l'index html est la représentation textuelle
     utilisée dans une balise image HTML classique.
     </para>
    </note>
    <note>
     <para>
     Depuis PHP 4.3, cette fonction peut aussi lire les sections <acronym>IFD</acronym>
     incluent dans les tableaux, et retournée sous cette forme. De plus, la taille
     d'une miniature intégrée est retournée dans le sous tableau 
     <emphasis>THUMBNAIL</emphasis> et la fonction <function>exif_read_data</function> 
     peut retourner les miniatures au format <acronym>TIFF</acronym>. Enfin, il n'y a
     plus de longueur maximale pour les valeurs retournées (hormis la place en mémoire).
     </para>
    </note>
    <note>
      <simpara>
       Cette fonction est uniquement disponible en PHP 4, si il a été compilé
       avec l'option <option role="configure">--enable-exif</option>.
       Ses fonctionnalités et comportement ont changés en PHP 4.2. Les premières
       versions étaient très instables.
      </simpara>
      <simpara>
       Depuis PHP 4.3, les commentaires utilisateurs peuvent être automatiquement
       convertis d'un jeu de caractères à l'autre avec l'extension
       <option role="configure">--enable-mbstring</option>.
      </simpara>
      <simpara>
       Cette fonction ne requiert pas la librairie GD.
      </simpara>
      <simpara>
       Voir aussi
       <function>exif_thumbnail</function> et
       <function>getimagesize</function>.
      </simpara>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
