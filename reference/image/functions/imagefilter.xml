<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.3 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
  <refentry id="function.imagefilter">
   <refnamediv>
    <refname>imagefilter</refname>
    <refpurpose>
     Applique un filtre à une image
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <methodsynopsis>
     <type>bool</type><methodname>imagefilter</methodname>
     <methodparam><type>resource</type><parameter>src_im</parameter></methodparam>
     <methodparam><type>int</type><parameter>filtertype</parameter></methodparam>
      <methodparam  choice="opt"><type>int</type><parameter>args</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>imagefilter</function> applique le filtre <parameter>filtertype</parameter>
     à l'image en utilisant le paramètre <parameter>args</parameter> lorsque 
     cela est nécessaire.
    </para>
    <para>
     Le paramètre <parameter>filtertype</parameter> peut prendre l'une des valeurs suivantes :
     <itemizedlist>
      <listitem>
       <simpara>
        <parameter>img_filter_negate</parameter> : renverse toutes les couleurs de l'image.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>img_filter_grayscale</parameter> : convertit l'image en 
        <literal>grayscale</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>img_filter_brightness</parameter> : modifie la luminosité de
        l'image. Utilisez le paramètre <parameter>args</parameter> pour définir 
        la luminosité.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>img_filter_contrast</parameter> : modifie le contraste de 
        l'image. Utilisez le paramètre <parameter>args</parameter> pour définir 
        le contraste.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>img_filter_colorize</parameter>: Identique au paramètre 
        <parameter>img_filter_grayscale</parameter> excepté que vous pouvez spécifier
        une couleur. Utilisez trois arguments séparés dans le paramètre 
        <parameter>args</parameter> sous la forme <parameter>red</parameter>, 
        <parameter>blue</parameter>, <parameter>green</parameter>.
        L'intervalle pour chaque couleur est 0 - 255.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>img_filter_edgedetect</parameter> : utilise la détection des bords
        pour les mettre en évidence dans l'image.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>img_filter_emboss</parameter> : grave l'image en relief.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>img_filter_gaussian_blur</parameter> : brouille l'image en utilisant la 
        méthode gaussienne.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>img_filter_selective_blur</parameter> : brouille l'image.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>img_filter_mean_removal</parameter> : son utilisation signifie le  déplacement pour réaliser un effet "peu précis".
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>img_filter_smooth</parameter> : rend l'image lissoir 
        (<literal>smooth</literal>).
        Utilisez le paramètre <parameter>args</parameter> pour définir le degré
        de lissoir.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    &note.bundled.gd;
    <para>
     &return.success;
    </para>
    <para>
     <example>
      <title>Exemple avec <function>imagefilter</function> en utilisant le
      paramètre <parameter>img_filter_grayscale</parameter></title>
      <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('dave.png');
if ($im && imagefilter($im, IMG_FILTER_GRAYSCALE)) {
    echo 'Image convertie en grayscale.';
    imagepng($im, 'dave.png');
} else {
    echo 'La convertion en grayscale a échoué.';
}

imagedestroy($im);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Exemple avec <function>imagefilter</function> en utilisant le
      paramètre <parameter>img_filter_brightness</parameter></title>
      <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('sean.png');
if ($im && imagefilter($im, IMG_FILTER_BRIGHTNESS, 20)) {
    echo 'La luminosité de l\'image a été modifiée.';
    imagepng($im, 'sean.png');
} else {
    echo 'Echec lors de la modification de la luminosité.';
}

imagedestroy($im);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Exemple avec <function>imagefilter</function> en utilisant le
      paramètre <parameter>img_filter_colorize</parameter></title>
      <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('philip.png');

/* R, G, B, donc 0, 255, 0 correspond au vert */
if ($im && imagefilter($im, IMG_FILTER_COLORIZE, 0, 255, 0)) {
    echo 'L\'image a été ombragée en vert avec succès.';
    imagepng($im, 'philip.png');
} else {
    echo 'Echec lors de la modification de l\'ombrage.';
}

imagedestroy($im);
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
