<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.18 $ -->
<!-- EN-Revision: 1.7 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry id="function.imagecopyresampled">
 <refnamediv>
  <refname>imagecopyresampled</refname>
  <refpurpose>Copie, redimensionne, rééchantillonne une image</refpurpose>
 </refnamediv>
 <refsect1>
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imagecopyresampled</methodname>
   <methodparam><type>resource</type><parameter>dst_image</parameter></methodparam>
   <methodparam><type>resource</type><parameter>src_image</parameter></methodparam>
   <methodparam><type>int</type><parameter>dst_x</parameter></methodparam>
   <methodparam><type>int</type><parameter>dst_y</parameter></methodparam>
   <methodparam><type>int</type><parameter>src_x</parameter></methodparam>
   <methodparam><type>int</type><parameter>src_y</parameter></methodparam>
   <methodparam><type>int</type><parameter>dst_w</parameter></methodparam>
   <methodparam><type>int</type><parameter>dst_h</parameter></methodparam>
   <methodparam><type>int</type><parameter>src_w</parameter></methodparam>
   <methodparam><type>int</type><parameter>src_h</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagecopyresampled</function> copie une zone
   rectangulaire de l'image <parameter>src_im</parameter> vers
   l'image <parameter>dst_im</parameter>. Durant la copie,
   la zone est rééchantillonnée de manière à conserver la clarté
   de l'image durant une réduction.
   &return.success;
  </para>
  <para>
   <parameter>dst_im</parameter> est l'image de destination,
   <parameter>src_im</parameter> est l'image source.
   Si les hauteurs et largeurs des source et destination
   diffèrent, l'image copiée sera étirée
   de manière appropriée.
   Les coordonnées sont celles du coin supérieur gauche.
   <function>imagecopyresampled</function> peut servir à copier
   des zones d'une image vers elle-même, (si <parameter>dst_image</parameter> 
   est la même que <parameter>src_image</parameter>) mais si les régions se
   chevauchent, les résultats sont imprévisibles.
  </para>
  <note>
   <para>
    Il y a un problème dû aux limitations de la taille de la palette
    (255 + 1 couleurs différentes). Filtrer ou rééchantillonner une image
    demande plus de 255 couleurs, une approximation est alors utilisée pour 
    calculer le nouveau nombre de couleurs. Avec une palette, si une nouvelle
    couleur ne peut être allouée, la couleur la plus proche (en théorie)
    est utilisée. Ce n'est pas toujours la couleur la plus proche visuellement.
    Cela peut générer des problèmes étranges, comme des images blanches.
    Pour éviter ce problème, passez en image TrueColor, comme celles 
    générée par la fonction <function>imagecreatetruecolor</function>.
   </para>
  </note>
  &note.gd.2;
 </refsect1>

 <refsect1>
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple simple</title>
    <para>
     Cet exemple redimensionne une image à la moitié de sa taille originale.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Le fichier
$filename = 'test.jpg';
$percent = 0.5;

// Content type
header('Content-type: image/jpeg');

// Calcul des nouvelles dimensions
list($width, $height) = getimagesize($filename);
$new_width = $width * $percent;
$new_height = $height * $percent;

// Redimensionnement
$image_p = imagecreatetruecolor($new_width, $new_height);
$image = imagecreatefromjpeg($filename);
imagecopyresampled($image_p, $image, 0, 0, 0, 0, $new_width, $new_height, $width, $height);

// Affichage
imagejpeg($image_p, null, 100);
?>
]]>
    </programlisting>
   </example>
  </para>

  <para>
   <example>
    <title>Redimensionnement proportionnel d'une image</title>
    <para>
     Cet exemple affichera une image avec une largeur ou une hauteur maximale
     de 200 pixels.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Le fichier
$filename = 'test.jpg';

// Définition de la largeur et de la hauteur maximale
$width = 200;
$height = 200;

// Content type
header('Content-type: image/jpeg');

// Cacul des nouvelles dimensions
list($width_orig, $height_orig) = getimagesize($filename);

$ratio_orig = $width_orig/$height_orig;

if ($width/$height > $ratio_orig) {
  $width = $height*$ratio_orig;
} else {
  $height = $width/$ratio_orig;
}

// Redimensionnement
$image_p = imagecreatetruecolor($width, $height);
$image = imagecreatefromjpeg($filename);
imagecopyresampled($image_p, $image, 0, 0, 0, 0, $width, $height, $width_orig, $height_orig);

// Affichage
imagejpeg($image_p, null, 100);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1>
  &reftitle.seealso;
  <para>
   <function>imagecopyresized</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->