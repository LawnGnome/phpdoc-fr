<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.17 $ -->
<!-- EN-Revision: 1.11 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

 <refentry id="function.imagecolorallocate">
  <refnamediv>
   <refname>imagecolorallocate</refname>
   <refpurpose>Alloue une couleur pour une image</refpurpose>
  </refnamediv>
  <refsect1>
   &reftitle.description;
    <methodsynopsis>
     <type>int</type><methodname>imagecolorallocate</methodname>
     <methodparam><type>resource</type><parameter>image</parameter></methodparam>
     <methodparam><type>int</type><parameter>red</parameter></methodparam>
     <methodparam><type>int</type><parameter>green</parameter></methodparam>
     <methodparam><type>int</type><parameter>blue</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>imagecolorallocate</function> retourne un identifiant de couleur,
    représentant la couleur composée avec les couleurs <acronym>RGB</acronym>
    (<parameter>red</parameter>, <parameter>green</parameter>,
    <parameter>blue</parameter>).
    Les paramètres <parameter>red</parameter>, <parameter>green</parameter> et
    <parameter>blue</parameter> sont les valeurs respectives des composants
    rouge, vert et bleue de la couleur voulue. Ces paramètres sont des entiers
    compris entre 0 et 255 ou des hexadécimaux compris entre 0x00 and 0xFF.
    <function>imagecolorallocate</function>
    doit être appelée pour créer chaque couleur
    qui sera représentée par <parameter>image</parameter>.
   </para>
   <note>
    <para>
     Le premier appel à <function>imagecolorallocate</function>
     remplit la couleur de fond avec la palette des images - images créées en
     utilisant <function>imagecreate</function>.
    </para>
   </note>
   <para>
    <example>
    <title>Exemple avec <function>imagecolorallocate</function></title>
     <programlisting role="php">
<![CDATA[
<?php

$im = imagecreate(100, 100);

// Le fond de l'image est en rouge
$background = imagecolorallocate($im, 255, 0, 0);

// On définit des couleurs avec des entiers ..
$white = imagecolorallocate($im, 255, 255, 255);
$black = imagecolorallocate($im, 0, 0, 0);

// .. ou des hexadécimaux
$white = imagecolorallocate($im, 0xFF, 0xFF, 0xFF);
$black = imagecolorallocate($im, 0x00, 0x00, 0x00);

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    <function>imagecolorallocate</function> retourne -1 si l'allocation
    échoue.
   </para>
    <para>
     Voir aussi
     <function>imagecolorallocatealpha</function> et
     <function>imagecolordeallocate</function>.
    </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
