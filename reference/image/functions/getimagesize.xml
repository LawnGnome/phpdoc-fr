<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
<!-- EN-Revision: 1.22 Maintainer: didou Status: ready -->
 <refentry id="function.getimagesize">
  <refnamediv>
   <refname>getimagesize</refname>
   <refpurpose>Retourne la taille d'une image</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>array</type><methodname>getimagesize</methodname>
     <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     <methodparam choice="opt"><type>array</type><parameter>imageinfo</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>getimagesize</function> va déterminer la taille des images
    de type <acronym>GIF</acronym>, <acronym>JPG</acronym>,
    <acronym>PNG</acronym>, <acronym>SWF</acronym>,
    <acronym>SWC</acronym>, <acronym>PSD</acronym>,
    <acronym>TIFF</acronym>, <acronym>BMP</acronym>,
    <acronym>IFF</acronym>, <acronym>JP2</acronym>,
    <acronym>JPX</acronym>, <acronym>JB2</acronym>,
    <acronym>JPC</acronym>, <acronym>XBM</acronym> ou
    <acronym>WBMP</acronym> et en retourner
    les dimensions, le type d'image, et une chaîne type
    &quot;height/width&quot;, à placer dans une
    balise <acronym>HTML</acronym> <sgmltag>IMG</sgmltag> normale.
   </para>
   <note>
    <para>
     Le support de <acronym>JPC</acronym>, <acronym>JP2</acronym>,
     <acronym>JPX</acronym>, <acronym>JB2</acronym>,
     <acronym>XBM</acronym> et <acronym>WBMP</acronym> a été ajouté en &php;
     4.3.2. Le support de <acronym>SWC</acronym>, lui, en &php; 4.3.0.
    </para>   
   </note>
   <para>
    <function>getimagesize</function> retourne un tableau de 4 éléments.
    L'index 0 contient la longueur. L'index 1 contient la largeur. L'index 2
    contient le type de l'image : 
    1 = <acronym>GIF</acronym>, 
    2 = <acronym>JPG</acronym>,
    3 = <acronym>PNG</acronym>, 
    5 = <acronym>PSD</acronym>, 
    6 = <acronym>BMP</acronym>,
    7 = <acronym>TIFF</acronym> (Ordre des octets Intel),
    8 = <acronym>TIFF</acronym> (Ordre des octets Motorola), 
    9 = <acronym>JPC</acronym>,  
    10 = <acronym>JP2</acronym>,  
    11 = <acronym>JPX</acronym>,  
    12 = <acronym>JB2</acronym>,  
    13 = <acronym>SWC</acronym>,  
    14 = <acronym>IFF</acronym>.
    Ces valeurs correspondent aux constantes IMAGETYPE
    qui ont été ajoutée en PHP 4.3. 
    L'index 3 contient la chaîne à placer dans les balises
    <acronym>IMG</acronym> : <literal>"height=xxx width=xxx"</literal>.
    <example>
     <title>Exemple avec <function>getimagesize</function></title>
     <programlisting role="php">
<![CDATA[
<?php
list($width, $height, $type, $attr) = getimagesize("img/flag.jpg");
echo "<img src=\"img/flag.jpg\" alt=\"Exemple de getimagesize()\" $attr />";
?>>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    <example>
     <title><function>getimagesize</function> avec une URL</title>
     <programlisting role="php">
<![CDATA[
<?php
$size = getimagesize("http://www.example.com/gifs/logo.gif");
// Si le nom du fichier comporte des espaces, encodez-le !
$size = getimagesize("http://www.example.com/gifs/lo%20go.gif");
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Avec les images <acronym>JPG</acronym>, deux en-têtes supplémentaires sont
    retournés : <literal>channels</literal> et <literal>bits</literal>.
    <literal>channels</literal> vaudra 3 avec les images RGB, et 4 avec les
    images CMYK. <literal>bits</literal> est le nombre de bits pour chaque couleur.
   </para>
  <para>
    Depuis PHP 4.3, <literal>bits</literal> et
    <literal>channels</literal> sont présent pour tous les types d'images.
    Cependant, la présence de ces valeurs peut mener à la confusion. Par exemple,
    une image <acronym>GIF</acronym> utilise toujours trois canaux par pixel,
    mais le nombre de bits par pixel ne peut être calculé dans le cas
    d'une image animée <acronym>GIF</acronym> ayant une table de couleur globale.
   </para>
   <para>
    Certains formats peuvent ne contenir aucune image, ou bien plusieurs images.
    Dans ces cas, <function>getimagesize</function> peut ne pas être capable de
    déterminer correctement la taille de l'image. <function>getimagesize</function> 
    retourne alors zéro comme taille de hauteur et largeur.
   </para>
   <para>
    Depuis PHP 4.3, <function>getimagesize</function> retourne aussi un paramètre
    additionnel, <literal>mime</literal>, qui correspond au type MIME d'une image.
    Cette information peut être utilisée pour envoyer l'en-tête HTTP correct.
    <example>
     <title><function>getimagesize</function> et types MIME</title>
     <programlisting role="php">
<![CDATA[
<?php
$size = getimagesize($filename);
$fp = fopen($filename, "rb");
if ($size && $fp) {
  header("Content-type: {$size['mime']}");
  fpassthru($fp);
  exit;
} else {
  // error
}
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Si l'accès à <parameter>filename</parameter> est impossible,
    ou si ce n'est pas une image valide, <function>getimagesize</function>
    retournera <literal>NULL</literal> et générera une alerte.
   </para>
   <para>
    Le paramètre optionnel <parameter>imageinfo</parameter> permet
    d'extraire des informations supplémentaires du fichier image.
    Actuellement, cette option va retourner différents marqueurs
    <acronym>JPG</acronym> APP dans un tableau associatif. Certains programmes
    utilisent ces marqueur APP pour préciser les informations dans
    les balises HTML. Un marqueur commun est le marqueur APP13, décrit
    à <ulink url="&url.iptc;">&url.iptc;</ulink>. Vous pouvez utiliser
    la fonction <function>iptcparse</function> pour analyser ce marqueur, et
    obtenir des informations intelligibles.
    <example>
     <title><function>getimagesize</function> qui retourne IPTC</title>
     <programlisting role="php">
<![CDATA[
<?php
  $size = getimagesize("testimg.jpg", $info);
  if (isset($info["APP13"])) {
    $iptc = iptcparse($info["APP13"]);
    var_dump($iptc);
  }
?>
]]>
     </programlisting>
    </example>
    <note>
     <simpara>
      Le support de JPEG 2000 a été ajouté en PHP 4.3.2. Notez que JPC et JP2
      sont capables d'avoirs des composants avec une profondeur de bit différente.
      Dans ce cas, la valeur de "bits" est la plus grande profondeur de bit 
      rencontrée. De même, les fichiers JP2 peuvent contenir le support multiple 
      JPEG 2000 codestreams. Dans ce cas, <function>getimagesize</function> 
      retourne les valeurs pour le premier codestream rencontré à la racine du 
      fichier.
     </simpara>
    </note>
    <note>
     <simpara>
      <function>getimagesize</function> ne requiert pas la bibliothèque GD.
     </simpara>
     <simpara>
      Le support URL a été ajouté en PHP 4.0.5.
     </simpara>
     <simpara>
      Le support du format TIFF a été ajouté en PHP 4.2.
     </simpara>
    </note>
   </para>
   <para>
    Voir aussi 
    <function>image_type_to_mime_type</function>, 
    <function>exif_imagetype</function>, 
    <function>exif_read_data</function> et
    <function>exif_thumbnail</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
