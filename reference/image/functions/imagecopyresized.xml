<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.10 $ -->
<!-- EN-Revision: 1.3 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
 <refentry id="function.imagecopyresized">
  <refnamediv>
   <refname>imagecopyresized</refname>
   <refpurpose>Copie et redimensionne une partie d'une image</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>imagecopyresized</methodname>
     <methodparam><type>resource</type><parameter>dst_im</parameter></methodparam>
     <methodparam><type>resource</type><parameter>src_im</parameter></methodparam>
     <methodparam><type>int</type><parameter>dstX</parameter></methodparam>
     <methodparam><type>int</type><parameter>dstY</parameter></methodparam>
     <methodparam><type>int</type><parameter>srcX</parameter></methodparam>
     <methodparam><type>int</type><parameter>srcY</parameter></methodparam>
     <methodparam><type>int</type><parameter>dstW</parameter></methodparam>
     <methodparam><type>int</type><parameter>dstH</parameter></methodparam>
     <methodparam><type>int</type><parameter>srcW</parameter></methodparam>
     <methodparam><type>int</type><parameter>srcH</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>imagecopyresized</function> copie une partie rectangulaire d'une image
    dans une autre image de destination. <parameter>dst_im</parameter> est l'image
    de destination, <parameter>src_im</parameter> est l'image source. Si les dimensions
    de la source et de la destination ne sont pas égales, un
    étirement adéquat est effectué pour faire correspondre
    les deux. Les coordonnées fournies sont définies par rapport
    au coin supérieur gauche. Cette fonction peut être
    utilisée pour recopier des régions à l'intérieur
    d'une même image, si <parameter>dst_im</parameter> et
    <parameter>src_im</parameter> sont identiques : mais si les
    régions se chevauchent, le résultat risque d'être
    incohérent.
   </para>
   <note>
    <para>
     Il y a un problème dû aux limitations de la taille de la palette
     (255 + 1 couleurs différentes). Filtrer ou rééchantillonner une image
     demande plus de 255 couleurs, une approximation est alors utilisée pour 
     calculer le nouveau nombre de couleurs. Avec une palette, si une nouvelle
     couleur ne peut être alloueé, la couleur la plus proche (en théorie)
     est utilisée ; ce n'est pas toujours celle qui est la plus proche visuellement.
     Cela peut générer des problèmes étranges, comme des images blanches.
     Pour éviter ce problème, passez en image true color, comme celles 
     générée par la fonction <function>imagecreatetruecolor</function>.
    </para>
   </note>
   <para>
    Voir aussi
    <function>imagecopyresampled</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
