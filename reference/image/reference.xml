<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<reference id="ref.image">
 <title>Images</title>
 <titleabbrev>Graphisme</titleabbrev>

 <partintro>
   <section id="image.intro">
    &reftitle.intro;
    <para>
     PHP ne se limite pas à la génération de pages HTML. Il peut aussi servir
     à créer et manipuler des images, dans un grand choix de formats,
     comme gif, png, jpg, wbmp et xpm. Et même, PHP peut générer
     directement des images pour le navigateur, avec la librarie GD.
     GD et PHP auront aussi besoin d'autres librairies, en fonction
     des formats que vous souhaitez utiliser.
    </para>
    <para>
     Vous pouvez utiliser les fonctions PHP pour obtenir les
     tailles des images aux formats 
     <acronym>JPEG</acronym>, <acronym>GIF</acronym>,
     <acronym>PNG</acronym>, <acronym>SWF</acronym>,
     <acronym>TIFF</acronym> et <acronym>JPEG2000</acronym>.
    </para>
    <para>
     <note>
      <simpara>
       Lisez la section sur les pré-requis pour savoir comment améliorer
       les possibilités le lecture, modification et écriture d'images, ainsi
       que les possibilités de lecture d'images prises par des appareils
       numériques.
      </simpara>
     </note>
    </para>
   </section>

   <section id="image.requirements">
    &reftitle.required;
    <para>
     Si vous disposez de la librairie <acronym>GD</acronym> (disponible
     à <ulink url="&url.gd;">&url.gd;</ulink>) vous pourrez aussi créer
     et manipuler ces images.
    </para>
    <para>
   Les formats des images que vous pourrez manipuler dépendent de la
   version de GD que vous installerez, et de toute autre librairie
   dont GD a besoin pour traiter à ces images. Les versions
   antérieures à la version 1.6 supportent le
   <acronym>GIF</acronym>, mais pas le <acronym>PNG</acronym>.
   Pour les versions plus récentes, c'est le contraire.
      <note>
       <simpara>
        Depuis PHP 4.3, il existe une version de GD qui est distribuée avec
        PHP. Cette version contient des fonctionnalités supplémentaires, comme
        les canaux alpha, et il est recommandé de l'utiliser de préférence à
        la librairie externe, car elle est mieux supportée, et bien plus 
        stable.
       </simpara>
      </note>
    </para>
    <para>
     Vous pouvez aussi améliorer GD en lui ajoutant des formats
     d'images supplémentaires.
     <table>
     <title>Formats d'images supportés</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Format d'image</entry>
         <entry>Librairie à télécharger</entry>
         <entry>Notes</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><literal>gif</literal></entry>
         <entry></entry>
         <entry>
          Uniquement supporté en versions de GD antérieures à gd-1.6. 
          Le support des images GIF est disponible <emphasis>en lecture seule</emphasis>
          depuis PHP 4.3.0, et dans la version de la librairie qui est fournie
          avec la distribution de &php;.
         </entry>
        </row>
        <row>
         <entry><literal>jpeg-6b</literal></entry>
         <entry><ulink url="&url.jpeg;">&url.jpeg;</ulink></entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>png</literal></entry>
         <entry><ulink url="&url.libpng;">&url.libpng;</ulink></entry>
         <entry>
          Uniquement supporté avec GD plus récente que gd-1.6.
         </entry>
        </row>
        <row>
         <entry><literal>xpm</literal></entry>
         <entry><ulink url="&url.libxpm;">&url.libxpm;</ulink></entry>
         <entry>
          Il est probable que vous ayez déjà cette librairie disponible si
          votre système dispose d'un environnement X.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

    <para>
     Vous pouvez aussi améliorer GD en lui ajoutant des fonctionalités de 
     manipulation de polices. Les librairies suivantes sont supportées : 
     <table>
     <title>Supported font libraries</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Librarie de police</entry>
         <entry>Téléchargement</entry>
         <entry>Notes</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><literal>FreeType 1.x</literal></entry>
         <entry><ulink url="&url.freetype;">&url.freetype;</ulink></entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>FreeType 2</literal></entry>
         <entry><ulink url="&url.freetype;">&url.freetype;</ulink></entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>T1lib</literal></entry>
         <entry><ulink url="&url.t1lib;">&url.t1lib;</ulink>)</entry>
         <entry>
          Support des polices de Type 1.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     Si vous avez compilé PHP avec l'option <option role="configure">--enable-exif</option>
     vous serez capable d'accéder aux données stockées dans les entêtes des images
     <acronym>JPEG</acronym> et <acronym>TIFF</acronym>. De cette façon, vous
     pouvez lire les méta données générées par les appareils numériques.
     Ces fonctions ne requièrent par la librairie <acronym>GD</acronym>.
     <note>
      <simpara>
       PHP ne requiert aucune librairie supplémentaire pour gérer les données EXIF.
      </simpara>
     </note>
    </para>
   </section>

   &reference.image.configure;

   &reference.image.ini;

   <section id="image.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   &reference.image.constants;


   <section id="image.examples">
    &reftitle.examples;
    <para>
     <example>
      <title>Création d'une image PNG avec PHP</title>
      <programlisting role="php">
<![CDATA[
<?php
    header("Content-type: image/png");
    $string = $_GET['text'];
    $im     = imagecreatefrompng("images/button1.png");
    $orange = imagecolorallocate($im, 220, 210, 60);
    $px     = (imagesx($im) - 7.5 * strlen($string)) / 2;
    imagestring($im, 3, $px, 9, $string, $orange);
    imagepng($im);
    imagedestroy($im);
?>
]]>
      </programlisting>
     </example>
     Cet exemple doit être appelé depuis une page HTML avec une balise
     image telle que : <literal>&lt;img src=&quot;button.php?text&quot;&gt;</literal>. 
     Le script ci-dessus, button.php, prend la chaîne 
     &quot;text&quot; et l'inscrit sur le fond d'image appelé
     &quot;images/button1.png&quot; et l'affiche. C'est une méthode très
     pratique pour éviter de redessiner un nouveau bouton, dès que vous
     changez le texte d'un bouton. De cette façon, ils sont générés dynamiquement
     .
    </para>
   </section>
 </partintro>

&reference.image.functions;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->