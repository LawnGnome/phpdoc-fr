<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.17 $ -->
<!-- EN-Revision: 1.27 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
 <refentry id="function.mail">
  <refnamediv>
   <refname>mail</refname>
   <refpurpose>Envoi de mail</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>bool</type><methodname>mail</methodname>
     <methodparam><type>string</type><parameter>to</parameter></methodparam>
     <methodparam><type>string</type><parameter>subject</parameter></methodparam>
     <methodparam><type>string</type><parameter>message</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>additional_headers</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>additional_parameters</parameter></methodparam>
    </methodsynopsis>
   <simpara>
    <function>mail</function> poste automatiquement le message
    <parameter>message</parameter> à destination de
    <parameter>to</parameter>. Les destinataires multiples doivent être
    séparés par des virgules. Les emails avec pièces jointes
    ou contenus particuliers (comme les emails en HTML), peuvent
    être réalisés avec cette fonction. Il faut respecter 
    l'encodage MIME. Pour plus de détails, voyez
    <ulink url="&url.email.mime.zend;">&url.zend.mail;</ulink> et
    <ulink url="&url.pear.package;Mail_Mime">les classes PEAR MIME</ulink>.
   </simpara>
   <simpara>
     Les RFC suivantes peuvent aussi se révéler utiles : 
     <ulink url="&url.rfc;1896">RFC 1896</ulink>,
     <ulink url="&url.rfc;2045">RFC 2045</ulink>,
     <ulink url="&url.rfc;2046">RFC 2046</ulink>,
     <ulink url="&url.rfc;2047">RFC 2047</ulink>,
     <ulink url="&url.rfc;2048">RFC 2048</ulink> et 
     <ulink url="&url.rfc;2049">RFC 2049</ulink>.
    </simpara>
   <para>
    <function>mail</function> retourne &true; si le mail
    est envoyé, et &false; sinon.
   </para>
   <warning>
     <para>
      L'implémentation de la fonction <function>mail</function> sur les systèmes 
      Microsoft Windows est différente en plusieurs points par rapport à celle des 
      systèmes Unix.
      Premièrement, <function>mail</function> n'utilise pas un binaire local pour
      composer le message mais opère uniquement sur les sockets directement, ce qui
      signifie qu'un <literal>MTA</literal> (Mail Transfert Agent) doit écouter 
      un socket réseau (qui peut être local ou distant).
      Deuxièmement, les en-têtes personnalisés comme <literal>From:</literal>,
      <literal>Cc:</literal>, <literal>Bcc:</literal> et <literal>Date:</literal>
      <emphasis role="strong">ne sont pas</emphasis> par le <literal>MTA</literal>
      dans un premier temps, mais sont parsés par &php;.
      Seules les versions de &php; inférieures à la version 4.3 supportent l'en-tête 
      <literal>Cc:</literal> (et est sensible à la casse).
      Les versions de &php; &gt;= 4.3 supportent toutes les en-têtes mentionnés et 
      ne sont pas sensibles à la casse.
     </para>
    </warning>
   <para>
    <example>
     <title>Envoi de courrier électronique (mail)</title>
     <programlisting role="php">
<![CDATA[
<?php
mail("maxou@example.com", "Mon Sujet", "Ligne 1\nLigne 2\nLigne 3");
?>
]]>
     </programlisting>
    </example>
   </para>
   <simpara>
    Le quatrième argument passé sera inséré à
    la fin de l'en-tête. Typiquement, cela permet d'insérer des
    en-têtes supplémentaires. Les en-têtes multiples doivent
    être séparés par des retours chariots et des caractères de nouvelle ligne
    (\r\n).
   </simpara>
   <note>
    <para>
    Vous devez utiliser les caractères <literal>\r\n</literal> pour séparer
    les en-têtes bien que quelques MTA Unix fonctionnent avec uniquement 
    un caracètre de nouvelle ligne (<literal>\n</literal>).
    </para>
   </note>
   <para>
    <example>
     <title>Envoi de eMail avec des en-têtes supplémentaires</title>
     <programlisting role="php">
<![CDATA[
<?php
mail("personne@example.com", "Le sujet", $message,
     "From: webmaster@{$_SERVER['SERVER_NAME']}\r\n"
    ."Reply-To: webmaster@{$_SERVER['SERVER_NAME']}\r\n"
    ."X-Mailer: PHP/" . phpversion());
?>
]]>
     </programlisting>
    </example>
    </para>
    <para>
    Le paramètre <parameter>additional_parameters</parameter>
    peut être utilisé pour passer un paramètre additionnel au programme,
    défini lorsqu'il envoie le mail en utilisant le paramètre de configuration
    <literal>sendmail_path</literal>. Par exemple, cela peut être utilisé
    pour définir l'adresse d'expédition lorsque le logiciel sendmail est utilisé
    avec l'option <literal>-f</literal>. Vous devriez sûrement ajouter 
    l'utilisateur sous lequel tourne votre serveur web à votre configuration
    sendmail afin d'éviter qu'un en-tête 'X-Warning' ne soit ajouté à votre 
    message lorsque vous utilisez cette méthode pour définir l'adresse 
    d'expédition.
    <example>
     <title>
      Envoi de eMail avec des en-têtes supplémentaires et
      un paramètre de ligne de commande supplémentaire
     </title>
     <programlisting role="php">
<![CDATA[
<?php

mail("personne@example.com", "Le sujet", $message,
     "From: webmaster@{$_SERVER['SERVER_NAME']}", "-fwebmaster@{$_SERVER['SERVER_NAME']}");
?>
]]>
     </programlisting>
    </example>
    </para>
    <note>
     <para>
      Le cinquième paramètre a été ajouté depuis la version 4.0.5 de &php;.
      Depuis la version 4.2.3 de &php;, ce paramètre est désactivé dans le
      <link linkend="ini.safe-mode">safe_mode</link> et la fonction
      <function>mail</function> affichera un message d'avertissement
      et retournera &false; si vous tentez de l'utiliser.
     </para>
    </note>
    <para>
    Vous pouvez aussi utiliser des techniques simples de
    concaténation de chaînes pour construire des
    messages complexes :
    <example>
     <title>Envoi de mail complexe avec <function>mail</function></title>
     <programlisting role="php">
<![CDATA[
<?php
/* destinataire */
$to  = "Mary <mary@example.com>" . ", " ; // notez la virgule
$to .= "Kelly <kelly@example.com>";

/* sujet */
$subject = "Anniversaires à souhaiter en Août";

/* message */
$message = '
<html>
<head>
 <title>Rappel des anniversaires d'Août</title>
</head>
<body>
<p>Voici la liste des anniversaires du mois d'Août!</p>
<table>
 <tr>
  <th>Ami</th><th>Jour</th><th>Mois</th><th>Année</th>
 </tr>
 <tr>
  <td>Guillaume</td><td>3</td><td>Août</td><td>1970</td>
 </tr>
 <tr>
  <td>Sandra</td><td>17</td><td>Août</td><td>1973</td>
 </tr>
</table>
</body>
</html>
';

/* Pour envoyer un mail au format HTML, vous pouvez configurer le type Content-type. */
$headers  = "MIME-Version: 1.0\r\n";
$headers .= "Content-type: text/html; charset=iso-8859-1\r\n";

/* D'autres en-têtes */
$headers .= "To: Mary <mary@example.com>, Kelly <kelly@example.com>\r\n";
$headers .= "From: Birthday Reminder <birthday@example.com>\r\n";
$headers .= "Cc: birthdayarchive@example.com\r\n";
$headers .= "Bcc: birthdaycheck@example.com\r\n";

/* et hop, à la poste */
mail($to, $subject, $message, $headers);
?>
]]>
     </programlisting>
    </example>
   </para>
   <note>
    <para>
     Assurez-vous qu'il n'y ait aucune nouvelle ligne (ou d'autres
     espaces ou caractères blancs) dans les paramètres <parameter>to</parameter>
     ou <parameter>subject</parameter>, car cela peut avoir des effets
     secondaires irrationnels.
    </para>
   </note>
   <note>
    <para>
     Le paramètre <parameter>to</parameter> ne peut pas être une adresse
     de la forme &quot;Quelqu'un &lt;quidam@example.com&gt;&quot;. La commande
     mail ne traitera pas correctement ce format vers le MTA (tout particulièrement sur les systèmes
     Microsoft Windows).
    </para>
   </note>
   <para>
    Voir aussi
    <function>imap_mail</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
