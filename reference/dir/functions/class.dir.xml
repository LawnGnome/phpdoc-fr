<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="class.dir" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>dir</refname>
  <refpurpose>Retourne une instance de la classe Directory</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>Directory</classname></ooclass>
   <classsynopsisinfo>
    <ooclass>
     <classname>Directory</classname>
    </ooclass>
   </classsynopsisinfo>
   <fieldsynopsis>
    <type>string</type><varname>path</varname>
   </fieldsynopsis>
   <fieldsynopsis>
    <type>resource</type><varname>handle</varname>
   </fieldsynopsis>
   <methodsynopsis><type>string</type><methodname>Directory::read</methodname><void/></methodsynopsis>
   <methodsynopsis><type>void</type><methodname>Directory::rewind</methodname><void/></methodsynopsis>
   <methodsynopsis><type>void</type><methodname>Directory::close</methodname><void/></methodsynopsis>
  </classsynopsis>
  <para>
   Un mécanisme pseudo-objet permet la lecture d'un dossier.
   L'argument <parameter>directory</parameter> est ouvert.
   Deux propriétés sont disponibles une fois le dossier
   ouvert : le pointeur peut être utilisé avec d'autres
   fonctions telles que <function>readdir</function>,
   <function>rewinddir</function> et <function>closedir</function>.
   Le chemin du dossier est le chemin fourni lors de la construction
   de l'objet. Trois méthodes sont disponibles : la lecture, la remise à zéro
   et la fermeture de dossier.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>dir</function></title>
    <para>
     Notez la façon dont la valeur de retour de <function>dir::read</function>
     est vérifiée dans l'exemple suivant. Nous testons si la valeur est
     identique (égale et de même type que -- voyez <link
     linkend="language.operators.comparison">opérateurs de comparaison</link>
     pour plus de détails) &false; sinon, toute entrée dans le nom serait évalué
     à &false; causera l'arrêt de la boucle (exemple, un répertoire nommé 0).
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$d = dir("/etc/php5");
echo "Pointeur : " . $d->handle . "\n";
echo "Chemin : " . $d->path . "\n";
while (false !== ($entry = $d->read())) {
   echo $entry . "\n";
}
$d->close();
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Pointeur : Resource id #2
Chemin : /etc/php5
.
..
apache
cgi
cli
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    L'ordre dans lequel les entrées du dossier sont retournées avec la
    méthode read dépend de votre système.
   </para>
  </note>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
