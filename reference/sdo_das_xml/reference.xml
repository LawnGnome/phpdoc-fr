<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.26 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<reference xml:id="ref.sdo-das-xml" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>&Functions; SDO DAS XML</title>

 <partintro>
  <!-- FIXME: Upgrade to the new-oo-markup -->
  <!-- class definition section -->
  <section xml:id='sdo-das-xml.classes'><!-- {{{ -->
 &reftitle.classes;
 <para>
  Le XML DAS fournit deux classes principales.
  La première est SDO_DAS_XML qui est la classe principale utilisée
  pour récupérer les données depuis le source XML et utilisée
  pour écrire les données.
  La seconde est la classe SDO_DAS_XML_Document
  qui représente les données du document XML.
 </para>
 <para>
  Il y a également quelques classes d'exceptions qui peuvent
  être lancées si des erreurs sont trouvées lors d'une recherche
  ou de l'analyse du fichier xsd ou du fichier XML.
 </para>

 <section xml:id='sdo-das-xml.class.sdo_das_xml'>
  <title>
   <classname>SDO_DAS_XML</classname>
  </title>
  <para>
   C'est la classe principale de XML DAS, qui est utilisée pour
   récupérer les données depuis le source XML mais également
   pour écrire les données.
  </para>
  <section xml:id='sdo-das-xml.class.SDO_DAS_XML.methods'>
   &reftitle.methods;
   <itemizedlist>
    <listitem>
     <para>
     <link linkend='function.SDO-DAS-XML-create'>create</link>
     C'est une méthode statique disponible dans la classe SDO_DAS_XML.
     Utilisée pour construire l'objet SDO_DAS_XML.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend='function.SDO-DAS-XML-addTypes'>addTypes</link>
     Fonctionne de la même manière que la méthode <function>create</function>
     mais utilisée pour ajouter de contenu d'un second fichier schéma dans
     un XML DAS qui a déjà été créé.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend='function.SDO-DAS-XML-createDataObject'>createDataObject</link>
     Peut être utilisée pour construire l'objet de données SDO d'un type donnée.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend='function.SDO-DAS-XML-createDocument'>createDocument</link>
     Peut être utilisée pour construire l'objet Document XML.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend='function.SDO-DAS-XML-loadFile'>loadFile</link>
     Charge une instance XML depuis un fichier. Ce fichier peut
     être en local ou sur un hôte distant.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend='function.SDO-DAS-XML-loadString'>loadString</link>
     la même chose que la méthode ci-dessus. Charge l'instance XML
     qui est disponible sous la forme d'une chaîne de caractères.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend='function.SDO-DAS-XML-saveFile'>saveFile</link>
     sauvegarde l'objet SDO_DAS_XML_Document en tant qu'un fichier XML.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend='function.SDO-DAS-XML-saveString'>saveString</link>
     sauvegarde l'objet SDO_DAS_XML_Document en tant qu'une chaîne de caractères.
    </para>
   </listitem>
  </itemizedlist>
 </section>
</section>

<section xml:id='sdo-das-xml.class.sdo_das_xml_document'>
 <title>
  <classname>SDO_DAS_XML_Document</classname>
 </title>
 <para>
  Cette classe peut être utilisée pour récupérer le nom et l'espace de noms
  de l'élément document et pour récupérer l'objet racine du document.
  De plus, elle peut également être utilisée pour définir la version XML
  et l'encodage du document de sortie.
 </para>
 <section xml:id='sdo-das-xml.class.SDO_DAS_XML_Document.methods'>
  &reftitle.methods;
  <itemizedlist>
   <listitem>
    <para>
     <link linkend='function.SDO-DAS-XML-Document-getRootDataObject'>getRootDataObject</link>
     récupère l'objet racine DataObject.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend='function.SDO-DAS-XML-Document-getRootElementName'>getRootElementName</link>
     récupère le nom de l'objet racine DataObject.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend='function.SDO-DAS-XML-Document-getRootElementURI'>getRootElementURI</link>
     récupère l'URI de l'objet racine DataObject.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend='function.SDO-DAS-XML-Document-setEncoding'>setEncoding</link>
     définit l'encodage en fonction de la valeur fournie.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend='function.SDO-DAS-XML-Document-setXMLDeclaration'>setXMLDeclaraion</link>
     pour définir/supprimer la déclaration XML.
    </para>
   </listitem>
   <listitem>
    <para>
     <link linkend='function.SDO-DAS-XML-Document-setXMLVersion'>setXMLVersion</link>
     définit la version XML en fonction de la valeur fournie.
    </para>
   </listitem>
  </itemizedlist>
 </section>
</section>

<section xml:id='sdo-das-xml.class.sdo_das_xml_parserexception'>
 <title>
  <classname>SDO_DAS_XML_ParserException</classname>
 </title>
 <para>
  Est une sous classe de
  <classname>SDO_Exception</classname>.
  Lancée pour toutes les erreurs d'analyse lors du chargement
  des fichiers xsd/xml.
 </para>
</section>

<section xml:id='sdo-das-xml.class.sdo_das_xml_fileexception'>
 <title>
  <classname>SDO_DAS_XML_FileException</classname>
 </title>
 <para>
  Est une sous classe de
  <classname>SDO_Exception</classname>.
  Lancée par toutes les méthodes qui chargent des données depuis
  un fichier, lorsque le fichier ne peut être trouvé.
 </para>
</section>
</section>

<section xml:id='sdo-das-xml.limitations'>
 <title>Limitations avec la spécification SDO 2.0</title>
 <para>
  Les <link xlink:href='&url.ibm.sdo;'>spécifications SDO 2.0</link> définissent la
  concordance entre les types XML et les types SDO. Avec Java SDO, la
  concordance est implémentée par le XMLHelper. Avec SDO pour &php;, cette
  concordance est implémentée par les Services d'Accès de Données XML. Le
  XML DAS implémente la concordance décrite dans les spécifications SDO 2.0
  avec les restrictions suivantes :
 </para>

 <procedure xml:id='sdo-das-xml.limitations.simpletypes'>
  <title>Types Simples XML</title>
  <step>
   <para>
    Type Simple avec sdoJava:instanceClass
    - aucun support &php; fourni
   </para>
  </step>
  <step>
   <para>
    Type simple avec sdoJava:extendedInstanceClass
    - aucun support &php; fourni
   </para>
  </step>
  <step>
   <para>
    Type Simple avec une liste de itemType.
   </para>
  </step>
  <step>
   <para>
    Type Simple avec union.
   </para>
  </step>
 </procedure>
 <procedure xml:id='sdo-das-xml.limitations.complextypes'>
  <title>Types Complex XML</title>
  <step>
   <para>
    Type complexe avec sdo:aliasName
    - aucun support &php; pour ces types d'alias SDO.
   </para>
  </step>
 </procedure>

 <procedure xml:id='sdo-das-xml.limitations.attribute'>
  <title>Attribut XSD</title>
  <step>
   <para>
    Attribut avec sdo:aliasName
    - aucun support &php; pour les alias des propriétés SDO.
   </para>
  </step>
  <step>
   <para>
    Attribut avec une valeur par défaut
    - aucun support &php; pour les propriétés par défaut SDO.
   </para>
  </step>
  <step>
   <para>
    Attribut avec une valeur fixe
    - aucun support &php; pour les propriétés SDO en lecture-seule ou les valeurs par défaut.
   </para>
  </step>
  <step>
   <para>
    Attribut référençant un DataObject avec
    sdo:propertyType - aucun support pour sdo:propertyType="...".
   </para>
  </step>
  <step>
   <para>
    Attribut avec des propriétés bidirectionnelles d'un DataObject avec
    sdo:oppositeProperty et sdo:propertyType
    - aucun support &php; pour l'opposition SDO.
   </para>
  </step>
 </procedure>

  <procedure xml:id='sdo-das-xml.limitations.elements'>
   <title>Éléments XSD</title>
   <step>
    <para>
     Élément avec sdo:aliasName
     - aucun support &php; pour les alias de propriétés SDO.
    </para>
   </step>
   <step>
    <para>
     Élément avec un groupe de substitution.
    </para>
   </step>
  </procedure>

  <procedure xml:id='sdo-das-xml.limitations.elementsimpletype'>
   <title>Éléments XSD avec un type simple</title>
   <step>
    <para>
     Élément de SimpleType avec une valeur par défaut
     - aucun support &php; pour les valeurs par défaut SDO
    </para>
   </step>
   <step>
    <para>
     Élément de SimpleType avec une valeur fixe
     - aucun support &php; pour les propriétés en lecture-seules SDO ou les valeurs par défaut.
    </para>
   </step>
   <step>
    <para>
     Élément de SimpleType avec sdo:string
     - aucun support pour sdo:string="true".
    </para>
   </step>
   <step>
    <para>
     Élément référençant un objet DataObject avec
     sdo:propertyType  - aucun support pour sdo:propertyType="..."
    </para>
   </step>
   <step>
    <para>
     Élément avec une référence bidirectionnelle pour un object
     DataObject avec sdo:oppositeProperty et sdo:propertyType
     - aucun support &php; pour l'opposition SDO.
    </para>
   </step>
  </procedure>
  </section>
  <!-- }}} -->

 </partintro>
 &reference.sdo-das-xml.entities.functions;
</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->