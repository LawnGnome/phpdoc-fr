<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.6 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mhash-keygen-s2k" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mhash_keygen_s2k</refname>
  <refpurpose>Génère une clé</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>mhash_keygen_s2k</methodname>
   <methodparam><type>int</type><parameter>hash</parameter></methodparam>
   <methodparam><type>string</type><parameter>password</parameter></methodparam>
   <methodparam><type>string</type><parameter>salt</parameter></methodparam>
   <methodparam><type>int</type><parameter>bytes</parameter></methodparam>
  </methodsynopsis>
  <para>
   Génère une clé de <parameter>bytes</parameter>
   octets de long, à partir d'un mot de passe.
  </para>
  <para>
   Cette fonction utilise l'algorithme Salted S2K, spécifié
   dans OpenPGP (<link xlink:href="&url.rfc;2440">RFC 2440</link>).
  </para>
  <para>
   N'oubliez pas que les mots de passe fournis par les utilisateurs
   ne sont pas conseillés pour faire des clés cryptographiques,
   étant donné que les utilisateurs normaux retiennent des mots
   de passe qu'ils peuvent saisir au clavier. Ces mots de passe
   utilisent uniquement 6 à 7 des 8 bits d'un caractère (voire moins).
   Il est vivement recommandé d'appliquer une fonction de transformation
   (comme celle-ci), à un mot de passe utilisateur.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>hash</parameter></term>
     <listitem>
      <para>
       L'identifiant du hash utilisé pour créer la clé.
       Une parmis les constantes <literal>MHASH_XXX</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       Mot de passe fourni par l'utilisateur.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>salt</parameter></term>
     <listitem>
      <para>
       Doit être différent et suffisamment aléatoire pour chaque
       clé que vous génèrez, afin d'en créer des différentes.
       Ce grain de sel ("salt") reservira lorsque vous vérifierez
       les clés : c'est alors une bonne idée que de l'ajouter à la
       fin de la clé générée. <parameter>salt</parameter>
       doit avoir la longueur de 8 octets, et sera complété par
       des 0 si vous ne fournissez par suffisamment de données.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>bytes</parameter></term>
     <listitem>
      <para>
       La longueur de la clé, en octets.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la clé générée, sous la forme d'une &string;, ou
   &false; si une erreur survient.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->