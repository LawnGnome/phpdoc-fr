<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.11 Maintainer: yannick Status: ready -->
 <refentry id="function.curl-setopt">
  <refnamediv>
   <refname>curl_setopt</refname>
   <refpurpose>Modifie une option de transfert CURL</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>bool</type><methodname>curl_setopt</methodname>
     <methodparam><type>resource</type><parameter>ch</parameter></methodparam>
     <methodparam><type>integer</type><parameter>option</parameter></methodparam>
     <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>curl_setopt</function> fixe les options de transfert de la
    session CURL identifiée par <parameter>ch</parameter>.
    <parameter>option</parameter> est le nom de l'option à fixer,
    et <parameter>value</parameter> est sa valeur.
   </para>
   <para>
    <parameter>value</parameter> doit être de type "long" pour
    les options suivantes (spécifiée par <parameter>option</parameter>) :
    <itemizedlist>
     <listitem>
      <simpara>
       <parameter>CURLOPT_INFILESIZE</parameter> : Lorsque vous
       téléchargez un fichier sur un site distant, cette
       option sert à indiquer à &php; la taille maximale du
       fichier attendu.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_VERBOSE</parameter> : Choisissez une valeur non nulle
       pour que CURL vous affiche tous les événements. 
       Ecrit la sortie sur stderr ou dans le fichier spécifié en utilisant 
       <parameter>CURLOPT_STDERR</parameter>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_HEADER</parameter> : Choisissez une valeur non nulle
       pour que CURL inclut l'en-tête dans la valeur de retour.
      </simpara>
     </listitem>
     <listitem>
      <para>
       <parameter>CURLOPT_NOPROGRESS</parameter> : Choisissez une valeur non nulle
       pour que &php; n'affiche pas l'état des transferts CURL.
       <note>
        <simpara>
         &php; choisit automatiquement une valeur non nulle. Ne changez cette valeur
         que le temps du déboguage.
        </simpara>
       </note>
      </para>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_NOBODY</parameter> : Choisissez une valeur non nulle
       pour que le corps du transfert ne soit pas inclus dans la valeur de retour.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_FAILONERROR</parameter> : Choisissez une valeur non nulle
       pour que &php; traite silencieusement les codes HTTP supérieurs
       à 300. Le comportement par défaut est de retourner la
       page normalement, en ignorant ce code.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_UPLOAD</parameter> : Choisissez une valeur non nulle
       pour que &php; prépare un chargement.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_POST</parameter> : Choisissez une valeur non nulle
       pour que &php; fasse un HTTP POST. Un POST est un encodage normal
       "application/x-www-from-url", utilisé couramment par les formulaires
       HTML.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_FTPLISTONLY</parameter> : Choisissez une valeur non nulle
       pour que &php; ne fasse que lister les noms d'un dossier FTP.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_FTPAPPEND</parameter> : Choisissez une valeur non nulle
       pour que &php; concatène le fichier distant, plutôt que de
       l'écraser.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_NETRC</parameter> : Choisissez une valeur non nulle
       pour que &php; analyse votre fichier <filename>~./netrc</filename> 
       et utilise votre nom de compte et mot de passe sur le site distant 
       que vous souhaitez contacter.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_FOLLOWLOCATION</parameter> : Choisissez une valeur
       non nulle pour suivre toutes les en-têtes "Location: " que le
       serveur envoie dans les en-têtes HTTP (notez que cette fonction
       est récursive et que &php; suivra toutes les en-têtes
       "Location: " qu'il trouvera).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_PUT</parameter> : Choisissez une valeur non nulle
       pour que pour chargement se fasse par HTTP PUT. Le fichier à
       charger doit être fixé avec les options 
       <constant>CURLOPT_INFILE</constant> et <constant>CURLOPT_INFILESIZE</constant>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_MUTE</parameter> : Choisissez une valeur non nulle
       pour que &php; soit totalement silencieux concernant toutes les fonctions
       CURL.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_TIMEOUT</parameter> : Passez un entier "long" comme
       paramètre qui représente le temps maximum d'exécution
       de la fonction CURL.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_LOW_SPEED_LIMIT</parameter> : Passez un entier long
       qui représente la vitesse minimale en octets par secondes en
       dessous de laquelle, et pendant <constant>CURLOPT_LOW_SPEED_TIME</constant> 
       secondes, &php; considérera qu'elle est trop lente, et 
       annulera le transfert.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_LOW_SPEED_TIME</parameter> : Passez un entier "long"
       qui représente le temps en secondes, qui, si la vitesse de
       transfert reste en dessous de <constant>CURLOPT_LOW_SPEED_LIMIT</constant>,
       &php; considèrera que la connexion est trop lente, et l'annulera.
      </simpara>
     </listitem>
      <listitem>
      <simpara>
       <parameter>CURLOPT_RESUME_FROM</parameter> : Passez un entier "long",
       qui représente l'offset, en octets, à partir duquel vous voulez
       commencer le transfert.
      </simpara>
      </listitem>
     <listitem>
       <simpara>
        <parameter>CURLOPT_CAINFO</parameter>: Passez le nom d'un fichier
        contenant un ou plusieurs certificats pour vérifier la concordance.
        Celà n'a de sens que si vous l'utilisez en combinaison de l'option
        <parameter>CURLOPT_SSL_VERIFYPEER</parameter>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_SSL_VERIFYPEER</parameter>: Passez un entier long
        qui sera mis à 0 pour arrêter CURL de vérifier le certificat (CURL 7.10 démarre avec
        cette option à &true; par défaut).
        Les certificats alternatifs peuvent être spécifiés avec l'option 
        <parameter>CURLOPT_CAINFO</parameter> (ajouté dans CURL 7.9.8) ou
        un répertoire de certificat peut être spécifié avec l'option 
        <parameter>CURLOPT_CAPATH</parameter>. Tout comme CURL 7.10, CURL installe
        un paquet par défaut. <parameter>CURLOPT_SSL_VERIFYHOST</parameter>
        doit aussi être positionnée à 1 ou 0 si <parameter>CURLOPT_SSL_VERIFYPEER
        </parameter> est désactivée (par défaut à 2).
       </simpara>
      </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_SSLVERSION</parameter> : Passez un entier "long"
       qui contient la version de SSL (2 ou 3) à utiliser. Par
       défaut, &php; essayera de le déterminer
       lui-même, bien que dans certains cas, il vous faudra
       le faire manuellement.
      </simpara>
     </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_SSL_VERIFYHOST</parameter>: Passez un entier "long"
        si CURL doit vérifier le nom "commun" du certificat dans une connexion SSL.
        Si vous spécifiez la valeur 1, nous vérifirons l'existence du nom commun, 
        la valeur 2, nous nous assurerons qu'il correspond au nom d'hôte.
       </simpara>
      </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_TIMECONDITION</parameter> : Passez un entier "long"
       qui définit comment <constant>CURLOPT_TIMEVALUE</constant> 
       est utilisé. Vous pouvez choisir entre les valeurs 
       <constant>TIMECOND_IFMODSINCE</constant> ou 
       <constant>TIMECOND_ISUNMODSINCE</constant>.
       C'est une fonctionnalité HTTP.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_TIMEVALUE</parameter> : Passez un entier "long"
       qui représente le temps en secondes depuis le 1er janvier 1970.
       Cette valeur sera utilisée comme spécifié dans
       l'option <constant>CURLOPT_TIMEVALUE</constant>. Par défaut, 
       <constant>TIMECOND_IFMODSINCE</constant>
       sera utilisée.
      </simpara>
     </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_RETURNTRANSFER</parameter>: Définissez cette option à
        une valeur différente de zéro si vous voulez que CURL retourne directement le transfert 
        au lieu de l'afficher.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_NOSIGNAL</parameter>: Définissez cette option
        à une valeur différente de zéro si vous voulez que CURL ignore toutes les fonctions
        CURL, ce qui cause l'envoi d'un signal au processus &php;. Activé par défaut dans
        les SAPIs multi-threadés, les options de timeout peut toujours être utilisées.
        Ajouté dans CURL 7.10.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_DNS_USE_GLOBAL_CACHE</parameter>: Définissez cette
        valeur à une valeur différente de zéro si vous voulez que CURL utilise un cache DNS
        global. Cette option n'est pas thread-safe et est activée par défaut.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_DNS_CACHE_TIMEOUT</parameter>: Passez un entier
        long comme paramètre qui représente le temps en seconde que CURL doit 
        conserver les entrées DNS en mémoire. Cette option est définie à 120 (2minutes)
        par défaut.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_PORT</parameter>: Passezun entier long comme
        paramètre qui représente le numéro du port de connexion, à la place
        de la valeur par défaut utilisée par le protocole.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_TRANSFERTEXT</parameter>: Définissez cette option
        à une valeur différente de &zero; si vous voulez que CURL utilise le mode ASCII
        pour les transferts FTP. Pour LDAP, il récupère les données en texte plein au lieu
        d'Html. Sur les systèmes WIndows, stdout  ne sera pas définie en mode binaire.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_FTPASCII</parameter>: Un alias de
        <parameter>CURLOPT_TRANSFERTEXT</parameter>. Utilisez celui-là à la placeUse.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_FTP_USE_EPSV</parameter>: Définissez cette option à une 
        valeur différente de &zero; si vous voulez que CURL tente tout d'abord une commande
        EPSV pour les transferts FTP avant de revenir à une commande PASV. Définissez cette
        option à &zero; pour désactiver EPSV.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_HTTPPROXYTUNNEL</parameter>: Définissez cette option
        à une valeur différente de &zero; pour effectuer un tunnel à travers un proxy HTTP.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_FILETIME</parameter>:  Définissez une valeur différente 
        de &zero; si vous voulez que CURL tente de récupérer la date de modification
        du document distant. Vous pouvez également retrouver cette valeur en utilisant
        l'option <parameter>CURLINFO_FILETIME</parameter> avec
        <function>curl_getinfo</function>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_MAXREDIRS</parameter>: Passez un entier long comme
        valeur qui représente le nombre maximal de redirections HTTP à suivre.
        Utilisez cette option avec l'option 
        <parameter>CURLOPT_FOLLOWLOCATION</parameter>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_MAXCONNECTS</parameter>: Passez un entier long 
        comme valeur représentant le nombre maximal de connexions persistentes autorisées.
        Lorsque la limite est atteinte, l'option 
        <parameter>CURLOPT_CLOSEPOLICY</parameter>
        est utilisé pour afficher les connexions fermées.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_CLOSEPOLICY</parameter>: Définissez cette option
        à soit <parameter>CURLCLOSEPOLICY_LEAST_RECENTLY_USED</parameter>, soit
        <parameter>CURLCLOSEPOLICY_OLDEST</parameter>.
        Il y a trois autres constantes <parameter>CURLCLOSEPOLICY_</parameter>
        mais CURL ne les supporte pas encore.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_FRESH_CONNECT</parameter>: Définissez cette option
        à une valeur différente de &zero; pour forcer à utiliser une 
        nouvelle connexion au lieu de celle en cache.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_FORBID_REUSE</parameter>: Définissez cette option
        à une valeur différente de &zero; pour forcer la connexion à se fermer
        explicitement lorsque le processus est terminé et ne sera pas mise en cache pour être 
        réutilisée.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_CONNECTTIMEOUT</parameter>: Définissez un entier long
        comme valeur représentant le nombre de secondes à attendre durant
        la tentative de connexion. Utilisez une valeur de &zero; pour attendre indéfiniment.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_BINARYTRANSFER</parameter>: Définissez cette option
        à une valeur différente de &zero; pour retourner la ligne affichée lorsque
        l'option <parameter>CURLOPT_RETURNTRANSFER</parameter> est utilisée.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_PROXYTYPE</parameter>: Définissez cette option
        à soit <parameter>CURLPROXY_HTTP</parameter> (par défaut) ou
        <parameter>CURLPROXY_SOCKS5</parameter>. 
        Ceci a été ajouté en CURL 7.10.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_BUFFERSIZE</parameter>: Passez un entier long
        comme valeur représentant la taille du buffer à utiliser pour chaque lecture.
        Cependant, il n'y a aucune garantie que cette requête soit accomplie. Ceci 
        a été ajouté en CURL 7.10.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_HTTPGET</parameter>: Définissez cette option
        à une valeur différente de &zero; pour réinitialiser la méthode de requête HTTP
        à POST. Sachant que GET est la valeur par défaut, celà n'est uniquement nécessaire
        que si la méthode de requête a été changée.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_HTTP_VERSION</parameter>: Définissez cette option
        à <parameter>CURL_HTTP_VERSION_NONE</parameter> (défaut, laisse CURL
        décider la version à utiliser),
        <parameter>CURL_HTTP_VERSION_1_0</parameter> (force HTTP/1.0),
        or <parameter>CURL_HTTP_VERSION_1_1</parameter> (force HTTP/1.1).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_CRLF</parameter>: Définissez cette option à une
        valeur différente de &zero; si vous voulez convertir les nouvelles lignes Unix en 
        nouvelles lignes CRLF pour les transferts.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_PROXYPORT</parameter>: Passez un entier long
        comme valeur représentant le numéro du port du proxy à utiliser
        pour la connexion. Ce numéro de port peut également être défini
        dans l'option <parameter>CURLOPT_PROXY</parameter>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_UNRESTRICTED_AUTH</parameter>: Définissez cette 
        option à une valeur différente de &zero; pour garder l'envoi du nom
        de l'utilisateur ainsi que le mot de passe lorsque l'on suit les chemins
        (en utilisant <parameter>CURLOPT_FOLLOWLOCATION</parameter>), 
        même si le nom d'hôte change.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_FTP_USE_EPRT</parameter>: Définissez cette option
        à une valeur différente de &zero; pour utiliser EPRT (et LPRT) 
        lors de l'activation des téléchargements FTP.
        Utilisez &zero; pour désactiver EPRT et LPRT et ainsi, n'utiliser que PORT.
       </simpara>
      </listitem>
      <listitem>
       <para>
        <parameter>CURLOPT_HTTPAUTH</parameter>: Passez un entier long comme valeur
        qui définie la méthode d'identification HTTP désirée. Ces options sont :
        <parameter>CURLAUTH_BASIC</parameter>,
        <parameter>CURLAUTH_DIGEST</parameter>,
        <parameter>CURLAUTH_GSSNEGOTIATE</parameter>,
        <parameter>CURLAUTH_NTLM</parameter>,
        <parameter>CURLAUTH_ANY</parameter> et
        <parameter>CURLAUTH_ANYSAFE</parameter>.
       </para>
       <para>
        Vous pouvez utiliser le séparateur <literal>|</literal> ou un opérateur
        pour combiner plus d'une méthode. Si vous faîtes celà, CURL interrogera
        le serveur pour voir quelles sont les méthodes supportées et prendra
        la meilleur.
        <parameter>CURLAUTH_ANY</parameter> et un alias pour
        <literal>CURLAUTH_BASIC | CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>
        et <parameter>CURLAUTH_ANYSAFE</parameter> est un alias pour 
        <literal>CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>.
       </para>
      </listitem>
    </itemizedlist>
   </para>
   <para>
    <parameter>value</parameter> doit être une chaîne de
    caractères pour les valeurs suivantes de <parameter>option</parameter>
    <itemizedlist>
     <listitem>
      <simpara>
       <parameter>CURLOPT_URL</parameter> : L'URL que &php; va récupérer.
       Vous pouvez aussi choisir cette valeur lors de l'appel à
       <function>curl_init</function>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_USERPWD</parameter> : Passez une chaîne de
       caractères au format [nom]:[mot de passe], pour que &php;
       l'utilise lors de la connexion.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_PROXYUSERPWD</parameter> : Passez une chaîne
       de caractères au format [nom]:[mot de passe ], pour que &php;
       l'utilise lors de la connexion à un proxy HTTP.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_RANGE</parameter> : Passez une chaîne de
       caractères qui représente la plage de valeurs que
       vous désirez. Elle est au format "X-Y", où les
       valeurs de X ou Y peuvent être omises. Le transfert HTTP
       supporte aussi plusieurs intervalles, séparés par
       des virgules : X-Y,N-M.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_POSTFIELDS</parameter> : Passez une chaîne
       de caractères qui contient toutes les données à
       passer lors d'une opération de HTTP POST.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_REFERER</parameter> : Passez une chaîne de
       caractères qui contient l'en-tête de "REFERER",
       utilisé lors d'une requête HTTP.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_USERAGENT</parameter> : Passez une chaîne
       de caractères qui contient l'en-tête "user-agent"
       utilisé dans une requête HTTP.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_FTPPORT</parameter> : Passez une chaîne de
       caractères qui désignera l'adresse IP utilisée
       pour l'instruction FTP "PORT". L'instruction POST indique au serveur
       distant de se connecter à cette adresse IP. La chaîne peut
       être une adresse IP, un nom d'hôte, un nom d'interface
       réseau (sous UNIX), ou juste '-', pour utiliser les IP par
       défaut du système.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_COOKIE</parameter> : Passez une chaîne de
       caractères qui contiendra le contenu du cookie, à
       transmettre dans l'en-tête HTTP.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_SSLCERT</parameter> : Passez une chaîne de
       caractères qui contiendra le nom de fichier du certificat,
       au format PEM.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_SSLCERTPASSWD</parameter> : Passez une chaîne
       de caractères qui contient le mot de passe nécessaire
       pour utiliser le certificat <constant>CURLOPT_SSLCERT</constant>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_COOKIEFILE</parameter> : Passez une chaîne de
       caractères qui contiendra le nom du fichier contenant les
       données de cookie. Le fichier de cookie peut être au
       format Netscape, ou simplement des en-têtes HTTP écrits
       dans un fichier.
      </simpara>
     </listitem>
     <listitem>
      <para>
       <parameter>CURLOPT_CUSTOMREQUEST</parameter> : Passez une chaîne
       de caractères qui sera utilisée à la place de GET
       ou HEAD lors des requêtes HTTP. Cette commande est pratique pour
       effectuer un DELETE ou une autre commande HTTP exotique.
       Les valeurs valides sont <literal>GET</literal>, <literal>POST</literal>, et plus ; 
       i.e. n'entrez pas une requête HTTP ici. Pour le moment, 
       entrez 'GET /index.html HTTP/1.0\r\n\r\n' serait incorrect.
       <note>
        <simpara>
         N'utilisez pas cette commande sans vous assurer que le serveur l'accepte.
        </simpara>
       </note>
      </para>
     </listitem>
      <listitem>
       <para>
        <parameter>CURLOPT_PROXY</parameter>: Donnez le nom du proxy HTTP au tunnel
        qui le demande.
       </para>
      </listitem>
      <listitem>
       <para>
        <parameter>CURLOPT_INTERFACE</parameter>: Passez le nom de l'interface
        à utiliser. Celà peut être le nom d'une interface, une adresse IP ou encore le nom de 
        l'hôte.
       </para>
      </listitem>
      <listitem>
       <para>
        <parameter>CURLOPT_KRB4LEVEL</parameter>: Passez le degré de sécurité
        KRB4 (Kerberos 4). Chacune des valeurs (dans l'ordre du plus petit au plus grand)
        suivantes sont valides :  'clear', 'safe', 'confidential', 'private'.
        Si la chaîne passée ne correspond pas à une de ces valeurs, la valeur 'private' 
        sera définie. Positionner cette valeur à <literal>NULL</literal> revient à désactiver
        la sécurité KRB4. Actuellement, la sécurité KRB4 se fonctionne uniquement
        avec les transaction FTP.
       </para>
      </listitem>
      <listitem>
       <para>
        <parameter>CURLOPT_HTTPHEADER</parameter>: Passez un tableau d'en-têtes
        HTTP à positionner.
       </para>
      </listitem>
      <listitem>
       <para>
        <parameter>CURLOPT_QUOTE</parameter>: Passez un tableau de commandes FTP
        à passer au serveur pour les requêtes FTP.
       </para>
      </listitem>
      <listitem>
       <para>
        <parameter>CURLOPT_POSTQUOTE</parameter>: Passez un tableau de commandes 
        FTP à exécuter sur le serveur, après que les requêtes FTP ne soient effectuées.
       </para>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_RANDOM_FILE</parameter>: Passez une chaîne
        qui contient un nom de fichier à utiliser pour interroger le générateur de nombre aléatoire.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_EGBSOCKET</parameter>: Comme
        <parameter>CURLOPT_RANDOM_FILE</parameter> excepté que vous passez 
        une chaîne qui contient un nom de fichier vers le socket 
        <literal>Entropy Gathering Daemon</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_CAPATH</parameter>: Passez une chaîne
        qui contient un dossier qui contient les certificats CA. Utilisez cette option
        avec l'option <parameter>CURLOPT_SSL_VERIFYPEER</parameter>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_COOKIEJAR</parameter>: Passez une chaîne
        qui contient un nom de fichier pour y sauvegarder tous les cookies internes lorsque
        la connexion se ferme.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_SSL_CIPHER_LIST</parameter>: Passez une chaîne qui 
        contient une liste de ciphers à utiliser avec SSL. Par exemple, 
        <literal>RC4-SHA</literal> and <literal>TLSv1</literal> sont des listes
        valides de cipher.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_SSLKEY</parameter>: Passez une chaîne qui contient
        un nom de fichier contenant votre clé privée SSL.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_SSLKEYTYPE</parameter>: Passez une chaîne
        qui contient le type de votre clé SSL privée. Les types de clés supportés sont 
        <literal>"PEM"</literal> (default), <literal>"DER"</literal>,
        et <literal>"ENG"</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_SSLKEYPASSWD</parameter>: Passez une chaîne qui
        contient le mot de passe secret utiliser par votre clé SSL privée.
       </simpara>
       <note>
        <simpara>
         Du fait que cette option contient un mot de passe sensible, souvenez vous
         de conserver le script &php; qui le contient en toute sécurité.
        </simpara>
       </note>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_SSLENGINE</parameter>: Passez une chaîne qui contient
        l'identifiant pour le moteur de cryptage de votre clé privée.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_SSLENGINE_DEFAULT</parameter>: Passez une chaîne
        qui contient l'identifiant pour le moteur de cryptage utilisé pour les opérations
        de cryptage asymétrique.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_SSLCERTTYPE</parameter>: Passez une chaîne
        qui contient le format de votre certificat. Les formats supportés sont 
        <literal>"PEM"</literal> (default), <literal>"DER"</literal>,
        et <literal>"ENG"</literal>. Ceci a été ajouté à CURL 7.9.3.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_ENCODING</parameter>: Passez une chaîne
        qui définie le contenu des en-têtes <literal>Accept-Encoding:</literal>
        et active le décodage de la réponse. Les encodages supportés sont 
        <literal>"identity"</literal>, <literal>"deflate"</literal> et
        <literal>"gzip"</literal>. Si une chaîne vide <literal>""</literal> est utilisé,
        une en-tête contenant tous les types d'encodage supportés est envoyée.
       </simpara>
      </listitem>
      <listitem>
       <para>
        <parameter>CURLOPT_HTTP200ALIASES</parameter>: Passez un tableau
        de chaînes qui seront traitées comme réponses valides HTTP 200. Ceci a été ajouté en 
        CURL 7.10.3.
       </para>
      </listitem>
    </itemizedlist>
   </para>
   <para>
    Les options suivantes requièrent un pointeur de fichier, qui est
    obtenu avec la fonction <function>fopen</function> :
    <itemizedlist>
     <listitem>
      <simpara>
       <parameter>CURLOPT_FILE</parameter> : Le fichier de sortie de votre transfert.
       Par défaut, STDOUT.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_INFILE</parameter> : Le fichier d'entrée de
       votre transfert.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_WRITEHEADER</parameter> : Le fichier de destination
       de l'en-tête de la sortie du transfert.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>CURLOPT_STDERR</parameter> : Le fichier d'erreurs.
      </simpara>
     </listitem>
    </itemizedlist>
    </para>
    <para>
     Les options suivantes attendent une chaîne qui représente le nom d'une 
     fonction de callback :
     <itemizedlist>
      <listitem>
       <simpara>
        <parameter>CURLOPT_WRITEFUNCTION</parameter>: Passez le nom
        d'une fonction de callback où la fonction de callback prend deux paramètres.
        Le premier est la ressource CURL et le second, une chaîne contenant
        les données à écrire. En utilisant cette fonction de callback, il devient
        de votre responsabilité d'écrire les données. Retourne le nombre d'octets écris.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_READFUNCTION</parameter>: Passez le nom d'une
        fonction de callback où la fonction de callback prend deux paramètres.
        Le premier est la ressource CURL et le second, une chaîne contenant
        les données à lire. En utilisant cette fonction de callback, il devient
        de votre responsabilité de lire les données. Retourne le nombre d'octets lus.
        Retourne 0 à un signal EOF.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_PASSWDFUNCTION</parameter>: Passez le nom d'une
        fonction de callback où la fonction de callback prend trois paramètres.
        Le premier est la ressource CURL, le second, une chaîne contenant un 
        mot de passe de prompt et le troisième, est la longueur maximale du mot de passe.
        Retourne une chaîne contenant le mot de passe.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <parameter>CURLOPT_HEADERFUNCTION</parameter>: Passez le nom d'une
        fonction de callback où la fonction de callback prend deux paramètres.
        Le premier est la ressource CURL, le seond, une chaîne contenant les données de 
        l'en-tête à écrire. En utilisant cette fonction de callback, il en devient 
        de votre responsabilité de l'écriture des données de l'en-tête. Retourne le nombre
        d'octets écris.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title>
       Initialisation d'une nouvelle session CURL et recherche d'une page Web
      </title>
      <programlisting role="php">
<![CDATA[
<?php
// Création d'une ressource CURL
$ch = curl_init();

// Définition de l'URL et autres options appropriées
curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
curl_setopt($ch, CURLOPT_HEADER, 0);

// Récupération de l'URL et passage au navigateur
curl_exec($ch);

// Fermeture de la ressource CURL et libération des ressources systèmes
curl_close($ch);
?>
]]>
      </programlisting>
     </example>
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
