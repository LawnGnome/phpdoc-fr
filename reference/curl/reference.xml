<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.15 $ -->
<!-- EN-Revision: 1.14 Maintainer: didou Status: ready -->
<!-- Purpose: remote.other -->
<!-- Membership: bundled, external -->

<reference id="ref.curl">
 <title>CURL</title>
 <titleabbrev>CURL</titleabbrev>
 <partintro>
  <section id="curl.intro">
   &reftitle.intro;
   <para>
    &php; supporte libcurl, une bibliothèque créée par Daniel Stenberg,
    qui vous permet de vous connecter, de communiquer avec de nombreux serveurs,
    grâce à de nombreux protocoles. libcurl supporte actuellement
    les protocoles suivants : <acronym>HTTP</acronym>, <acronym>HTTPS</acronym>,
    <acronym>FTP</acronym>, <productname>gopher</productname>, <productname>telnet</productname>,
    <productname>dict</productname>, <productname>file</productname>, et
    <acronym>LDAP</acronym>. libcurl supporte aussi les certificats HTTPS,
    les POST HTTP, PUT HTTP, le chargement par FTP (ce qui peut être fait
    par l'extension FTP), les chargements par formulaire HTTP, les proxies,
    les cookies et l'identification par mot de passe et nom d'utilisateur.
   </para>
   <para>
    Ces fonctions ont été ajoutées en &php; 4.0.2.
   </para>
  </section>

  <section id="curl.requirements">
   &reftitle.required;
   <para>
    Pour pouvoir utiliser les fonctions de &php; CURL, vous devez installer le
    paquetage <ulink url="&url.curl;">libcurl</ulink>. &php; requiert la version
    libcurl 7.0.2-beta ou plus récente. En &php; 4.2.3,
    vous aurez besoin de libcurl version 7.9.0 ou plus. À partir de &php;
    4.3.0, vous aurez besoin de libcurl version 7.9.8 ou plus.
    &php; 5.0.0 requiert une version de libcurl supérieure ou égale
    à 7.10.5.
   </para>
  </section>

   &reference.curl.configure;

   &reference.curl.constants;

  <section id="curl.examples">
   &reftitle.examples;
   <para>
    Une fois que vous avez compilé &php; avec le support CURL, vous
    pouvez commencer à l'exploiter avec vos scripts &php;. Le principe
    de fonctionnement est d'initialiser une session CURL avec
    <function>curl_init</function>, puis de choisir toutes vos options
    de transfert avec <function>curl_setopt</function>, puis d'exécuter
    la session avec <function>curl_exec</function> et de finir votre
    session avec <function>curl_close</function>. Voici un exemple
    d'utilisation des fonctions CURL, qui récupère la page principale
    de example.com dans un fichier :
    <example>
     <title>Utilisation de CURL pour récupérer une page</title>
     <programlisting role="php">
<![CDATA[
<?php

$ch = curl_init("http://www.example.com/");
$fp = fopen("example_homepage.txt", "w");

curl_setopt($ch, CURLOPT_FILE, $fp);
curl_setopt($ch, CURLOPT_HEADER, 0);

curl_exec($ch);
curl_close($ch);
fclose($fp);
?>
]]>
     </programlisting>
    </example>
   </para>
  </section>
 </partintro>

&reference.curl.functions;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

