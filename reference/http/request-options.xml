<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 324122 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<appendix xml:id="http.request.options" xmlns="http://docbook.org/ns/docbook">
 <title>Options utilisables avec la classe HttpRequest et les fonctions relatives</title>
 <titleabbrev>Options de demande</titleabbrev>
  <variablelist xml:id="http.request.options.timeouts">
   <title>Options relatives aux délais d'expiration</title>
   <varlistentry xml:id="http.request.option.timeout">
    <term>
     timeout (&integer;)
    </term>
    <listitem>
     <simpara>
      durée maximale en secondes pendant laquelle la demande en entière peut terminer
      son action
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="http.request.option.connecttimeout">
    <term>
     connecttimeout (&integer;)
    </term>
    <listitem>
     <simpara>
      durée maximale en secondes pour se connecter. Incluant la résolution
      du nom
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="http.request.option.dns-cache-timeout">
    <term>
     dns_cache_timeout (&integer;)
    </term>
    <listitem>
     <simpara>
      durée maximale en secondes avant de faire expirer une entrée DNS du cache
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.request.options.urls">
   <title>Options relatives aux URL</title>
   <varlistentry xml:id="http.request.option.url">
    <term>
     url (&string;)
    </term>
    <listitem>
     <simpara>
      l'URL de la demande
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="http.request.option.port">
    <term>
     port (&integer;)
    </term>
    <listitem>
     <simpara>
      utilise un autre port que celui spécifié dans l'URL
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="http.request.option.redirect">
    <term>
     redirect (&integer;)
    </term>
    <listitem>
     <simpara>
      si l'on doit effectuer une redirection et combien l'on doit suivre ;
      par défaut, 0
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="http.request.option.unrestrictedauth">
    <term>
     unrestrictedauth (&boolean;)
    </term>
    <listitem>
     <simpara>
      si l'on doit continuer d'envoyer des identifiants lors des redirections
      vers un hôte différent
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     referer (&string;)
    </term>
    <listitem>
     <simpara>
      l'URL référante à envoyer
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.request.options.cookies">
   <title>Options associées aux cookies</title>
   <varlistentry>
    <term>
     encodecookies (&boolean;)
    </term>
    <listitem>
     <simpara>
      si les cookies personnalisés doivent être url-encodés avant l'envoi
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     cookies (<type>array</type>)
    </term>
    <listitem>
     <simpara>
      liste des cookies, sous la forme d'un tableau associatif , sous cette forme :
      <literal>array("cookie" => "value")</literal>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     cookiestore (&string;)
    </term>
    <listitem>
     <simpara>
      chemin vers un fichier où les cookies sont/seront stockés
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     cookiesession (&boolean;)
    </term>
    <listitem>
     <simpara>
      si vaut &true;, ne charge pas les cookies de session depuis le
      magasin de cookies
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.request.options.headers">
   <title>Options relatives aux en-têtes</title>
   <varlistentry>
    <term>
     useragent (&string;)
    </term>
    <listitem>
     <simpara>
      l'agent utilisateur à envoyer ; par défaut, 
      <literal>PECL::HTTP/x.y.z (PHP/x.y.z)</literal>; 
      omis si explicitement défini par une chaîne vide
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     lastmodified (&integer;)
    </term>
    <listitem>
     <simpara>
      timestamp pour l'en-tête <literal>If-(Un)Modified-Since</literal>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     etag (&string;)
    </term>
    <listitem>
     <simpara>
      etag pour l'en-tête <literal>If-(None-)Match</literal>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     headers (<type>array</type>)
    </term>
    <listitem>
     <simpara>
      liste des en-têtes personnalisés, sous la forme d'un tableau :
      <literal>array("header" => "value")</literal>
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.request.options.auth">
   <title>Options relatives à l'identification</title>
   <varlistentry>
    <term>
     httpauth (&string;)
    </term>
    <listitem>
     <simpara>
      Identification HTTP, au format "user:pass"
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     httpauthtype (&integer;)
    </term>
    <listitem>
     <simpara>
      <link linkend="http.constants.request.httpauth">constantes représentant
      les types d'identification HTTP</link>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     (<type>array</type>)
    </term>
    <listitem>
     <simpara>
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.request.options.proxy">
   <title>Options relatives aux proxy</title>
   <varlistentry>
    <term>
     proxyhost (&string;)
    </term>
    <listitem>
     <simpara>
      hôte du proxy, dans le format "host[:port]"
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     proxyport (&integer;)
    </term>
    <listitem>
     <simpara>
      utilise un port différent pour le proxy que celui spécifié dans
      proxyhost
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     proxytype (&integer;)
    </term>
    <listitem>
     <simpara>
      <link linkend="http.constants.request.proxy">constantes des types de proxy HTTP</link>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     proxyauth (&string;)
    </term>
    <listitem>
     <simpara>
      identifiant du proxy, au format "user:pass"
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     proxyauthtype (&integer;)
    </term>
    <listitem>
     <simpara>
      <link linkend="http.constants.request.httpauth">constantes des types d'identification </link>
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.request.options.transfer">
   <title>Options liées au transfert</title>
   <varlistentry>
    <term>
     compress (&boolean;)
    </term>
    <listitem>
     <simpara>
      si l'on doit demander ou accepter une réponse dont le contenu est encodé gzip/deflate
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     resume (&integer;)
    </term>
    <listitem>
     <simpara>
      commence le téléchargement à la position spécifié si le serveur le supporte
      (indiqué par le code réponse 206)
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     range (<type>array</type>)
    </term>
    <listitem>
     <simpara>
      tableau de tableaux, chaque contenant deux entiers, spécifiant l'intervalle
      de téléchargement si le serveur le supporte (indiqué par le code réponse 206) ;
      uniquement reconnu si l'option <literal>"resume"</literal> est vide
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.request.options.limits">
   <title>Options qui imposent des limites</title>
   <varlistentry>
    <term>
     maxfilesize (&integer;)
    </term>
    <listitem>
     <simpara>
      taille maximale de fichier pouvant être téléchargé ;
      n'a aucun effet, si la taille de l'entité demandé est inconnu
      (e.g. pages dynamiques avec un encodage de transfert, etc.)
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     low_speed_limit (&integer;)
    </term>
    <listitem>
     <simpara>
      la vitesse minimale de transfert qu'une demande réussie peut avoir
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     low_speed_time (&integer;)
    </term>
    <listitem>
     <simpara>
      la durée durant laquelle <literal>low_speed_limit</literal> doit être
      transféré pour une demande réussie
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     max_send_speed (&integer;)
    </term>
    <listitem>
     <simpara>
      vitesse maximale d'envoi, en octets par seconde
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     max_recv_speed (&integer;)
    </term>
    <listitem>
     <simpara>
      vitesse maximale de réception, en octets par seconde
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.request.options.callback">
   <title>Options de Callback</title>
   <varlistentry>
    <term>onprogress (<type>callable</type>)</term>
    <listitem><simpara>progression du callback</simpara></listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.request.options.network">
   <title>Options réseaux</title>
   <varlistentry>
    <term>interface (&string;)</term>
    <listitem><simpara>interface réseau de sortie (ifname, ip ou hostname)</simpara></listitem>
   </varlistentry>
   <varlistentry>
    <term>portrange (<type>array</type>)</term>
    <listitem><simpara>2 entiers spécifiant la rangée de port de sortie à essayer</simpara></listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.request.options.ssl">
   <title>SSL options</title>
   <varlistentry>
    <term>
     ssl (<type>array</type>)
    </term>
    <listitem>
     <note>
      <simpara>Les options SSL sont définies via un tableau contenant
       un nom d'option de demande simple "ssl".</simpara>
     </note>
     <variablelist>
      <varlistentry>
       <term>cert (&string;)</term>
       <listitem><simpara>chemin vers le certificat</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>certtype (&string;)</term>
       <listitem><simpara>type du certificat</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>certpasswd (&string;)</term>
       <listitem><simpara>mot de passe du certificat</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>key (&string;)</term>
       <listitem><simpara>chemin vers la clé</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>keytype (&string;)</term>
       <listitem><simpara>type de la clé</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>keypasswd (&string;)</term>
       <listitem><simpara>mot de passe pour la clé</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>engine (&string;)</term>
       <listitem><simpara>moteur ssl à utiliser</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>version (&integer;)</term>
       <listitem><simpara>version ssl à utiliser</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>verifypeer (&boolean;)</term>
       <listitem><simpara>si l'on doit vérifier le pair</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>verifyhost (&boolean;)</term>
       <listitem><simpara>si l'on doit vérifier l'hôte</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>cipher_list (&string;)</term>
       <listitem><simpara>liste des algorithmes de chiffrements autorisés</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>cainfo (&string;)</term>
       <listitem><simpara></simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>capath (&string;)</term>
       <listitem><simpara></simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>random_file (&string;)</term>
       <listitem><simpara></simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>egdsocket (&string;)</term>
       <listitem><simpara></simpara></listitem>
      </varlistentry>
     </variablelist>
    </listitem>
   </varlistentry>
  </variablelist>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->