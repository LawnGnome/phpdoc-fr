<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.8 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<appendix xml:id="http.constants" xmlns="http://docbook.org/ns/docbook">
  &reftitle.constants;
  &extension.constants;
  <variablelist xml:id="http.constants.support">
   <title>Constantes utilisables avec la fonction <function>http_support</function></title>
   <varlistentry>
    <term>
     <constant>HTTP_SUPPORT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      requête vers cette constante retournera toujours &true;
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_SUPPORT_REQUESTS</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      si le support des requêtes HTTP est fourni, i.e. le support libcurl est compilé
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_SUPPORT_MAGICMIME</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      si le support de l'interrogation du type de contenu des messages HTTP est fourni,
      i.e. le support libmagic est compilé
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_SUPPORT_ENCODINGS</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      si le support de l'encodage zlib est fourni, i.e. le support libz est compilé
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_SUPPORT_SSLREQUESTS</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      si l'on peut envoyer des demandes HTTP via SSL, i.e. libcurl est compilé avec le support SSL
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.params">
   <title>Constantes utilisables avec la fonction <function>http_parse_params</function></title>
   <varlistentry>
    <term>
     <constant>HTTP_PARAMS_ALLOW_COMMA</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      autorise les virgules, en plus des points-virgules, en tant que séparateur
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_PARAMS_ALLOW_FAILURE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      continue l'analyse après qu'une erreur ne soit survenue
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_PARAMS_RAISE_ERROR</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      lance une alerte &php; lors d'erreurs d'analyse
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_PARAMS_DEFAULT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      l'ensemble des trois valeurs ci-dessus
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.cookie">
   <title>Constantes utilisables avec la fonction <function>http_parse_cookie</function> et la valeur retournée</title>
   <varlistentry>
    <term>
     <constant>HTTP_COOKIE_PARSE_RAW</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      ne pas url-encoder les valeurs
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_COOKIE_SECURE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      si &quot;secure&quot; a été trouvé dans la liste des paramètres du cookie
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_COOKIE_HTTPONLY</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      si &quot;httpOnly&quot; a été trouvé dans la liste des paramètres du cookie
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.deflate">
   <title>Constantes utilisables avec la fonction <function>http_deflate</function> 
   et la classe <classname>HttpDeflateStream</classname></title>
   <varlistentry>
    <term>
     <constant>HTTP_DEFLATE_LEVEL_DEF</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_DEFLATE_LEVEL_MIN</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_DEFLATE_LEVEL_MAX</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_DEFLATE_TYPE_ZLIB</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_DEFLATE_TYPE_GZIP</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_DEFLATE_TYPE_RAW</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_DEFLATE_STRATEGY_DEF</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_DEFLATE_STRATEGY_FILT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_DEFLATE_STRATEGY_HUFF</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_DEFLATE_STRATEGY_RLE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_DEFLATE_STRATEGY_FIXED</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.encodingstream">
   <title>Constantes utilisables avec les classes <classname>HttpDeflateStream</classname> et <classname>HttpInflateStream</classname></title>
   <varlistentry>
    <term>
     <constant>HTTP_ENCODING_STREAM_FLUSH_NONE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      ne pas envoyer
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_ENCODING_STREAM_FLUSH_SYNC</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      flush synchronisé uniquement
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_ENCODING_STREAM_FLUSH_FULL</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      toutes les données sont envoyées
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.error">
   <title>Constantes utilisées pour le repport d'erreurs et d'exceptions</title>
   <varlistentry>
    <term>
     <constant>HTTP_E_RUNTIME</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      erreur d'exécution
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_E_INVALID_PARAM</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      un paramètre invalide a été passé
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_E_HEADER</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      header() ou opération similaire a échoué
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_E_MALFORMED_HEADERS</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      erreur d'analyse d'un en-tête HTTP
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_E_REQUEST_METHOD</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      méthode de demande inconnue/invalide
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_E_MESSAGE_TYPE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      avec un type de message d'une opération incompatible
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_E_ENCODING</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      erreur d'encodage/décodage
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_E_REQUEST</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      échec de la demande
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_E_REQUEST_POOL</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      échec dans la file de demande
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_E_SOCKET</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      exception d'un socket
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_E_RESPONSE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      échec d'une réponse
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_E_URL</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      URL invalide
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_E_QUERYSTRING</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      échec dans l'opération de requête
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.message">
   <title>Constantes utilisables avec la classe <classname>HttpMessage</classname></title>
   <varlistentry>
    <term>
     <constant>HTTP_MSG_NONE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      le message n'est pas d'un type spécifique
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_MSG_REQUEST</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      style du message de la demande
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_MSG_RESPONSE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      style du message de la réponse
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.querystring">
   <title>Constantes utilisables avec la classe <classname>HttpQueryString</classname></title>
   <varlistentry>
    <term>
     <constant>HTTP_QUERYSTRING_TYPE_BOOL</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_QUERYSTRING_TYPE_INT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_QUERYSTRING_TYPE_FLOAT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_QUERYSTRING_TYPE_STRING</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_QUERYSTRING_TYPE_ARRAY</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_QUERYSTRING_TYPE_OBJECT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.request.httpauth">
   <title>Constantes utilisables pour <literal>httpauthtype</literal> &link.http.request.option;</title>
   <varlistentry>
    <term>
     <constant>HTTP_AUTH_BASIC</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      utilise l'identification &quot;basic&quot;
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_AUTH_DIGEST</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      utilise l'identification &quot;digest&quot;
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_AUTH_NTLM</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      utilise l'identification &quot;NTLM&quot;
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_AUTH_GSSNEG</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      utilise l'identification &quot;GSS-NEGOTIATE&quot;
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_AUTH_ANY</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      tente n'importe quel schéma d'identification
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.request.protocol">
   <title>Constantes utilisables pour la version du protocole HTTP &link.http.request.option;</title>
   <varlistentry>
    <term>
     <constant>HTTP_VERSION_ANY</constant> <!-- HTTP_VERSION_NONE is deprecated -->
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      aucune version de protocole HTTP spécifique
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_VERSION_1_0</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      HTTP version 1.0
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_VERSION_1_1</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      HTTP version 1.1
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.request.ssl">
   <title>Constantes utilisables pour le type du protocole SSL et la version &link.http.request.option;</title>
   <varlistentry>
    <term>
     <constant>HTTP_SSL_VERSION_ANY</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      aucune version du protocole SSL spécifique
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_SSL_VERSION_TLSv1</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      utilise TLSv1 uniquement
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_SSL_VERSION_SSLv3</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      utilise SSLv3 uniquement
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_SSL_VERSION_SSLv2</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      utilise SSLv2 uniquement
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.request.proxy">
   <title>Constantes utilisées par le <literal>proxytype</literal> &link.http.request.option;</title>
   <varlistentry>
    <term>
     <constant>HTTP_PROXY_SOCKS4</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      le proxy est un proxy de type SOCKS4
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_PROXY_SOCKS5</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      le proxy est un proxy de type SOCKS5
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_PROXY_HTTP</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      proxy HTTP standart
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.request.dns">
   <title>Constantes utilisées pour le <literal>ipresolve</literal> &link.http.request.option;</title>
   <varlistentry>
    <term>
     <constant>HTTP_IPRESOLVE_V4</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      utilise IPv4 uniquement pour la recherche de noms
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_IPRESOLVE_V6</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      utilise IPv6 uniquement pour la recherche de noms
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_IPRESOLVE_ANY</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      utilise n'importe quel mécanisme uniquement pour la recherche de noms
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.request.methods">
   <title>Constantes prédéfinies pour la méthode de demande HTTP</title>
   <varlistentry>
    <term>
     <constant>HTTP_METH_GET</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_HEAD</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_POST</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_PUT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_DELETE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_OPTIONS</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_TRACE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_CONNECT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_PROPFIND</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_PROPPATCH</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_MKCOL</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_COPY</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_MOVE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_LOCK</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_UNLOCK</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_VERSION_CONTROL</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_REPORT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_CHECKOUT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_CHECKIN</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_UNCHECKOUT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_MKWORKSPACE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_UPDATE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_LABEL</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_MERGE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_BASELINE_CONTROL</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_MKACTIVITY</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_METH_ACL</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      <!-- TODO description -->
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.redirect">
   <title>Constantes utilisables avec la fonction <function>http_redirect</function></title>
   <varlistentry>
    <term>
     <constant>HTTP_REDIRECT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      demande la méthode de redirection applicable
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_REDIRECT_PERM</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      redirection permanente (<literal>301 Moved permanently</literal>)
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_REDIRECT_FOUND</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      redirection standart (<literal>302 Found</literal>)
     </simpara>
     <note>
      <simpara>
       Les RFC 1945 et RFC 2068 spécifies que le client n'est pas autorisé
       à changer la méthode de la demande de redirection. Cependant, la plupart
       des implémentations des agents utilisateurs existants gèrent une réponse 302
       comme s'il s'agissait d'une réponse 303, effectuant un GET sur la valeur du champ
       au regard de la méthode de la demande originale. Les codes statut 303 et 307
       ont été ajoutés pour les serveurs qui veulent, sans ambiguïté, effectuer un effacement,
       ce qui est attendu par le client.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_REDIRECT_POST</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      redirection applicable aux demandes POST (<literal>303 See other</literal>)
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_REDIRECT_PROXY</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      redirection de proxy (<literal>305 Use proxy</literal>)
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_REDIRECT_TEMP</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      redirection temporaire (<literal>307 Temporary Redirect</literal>)
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
  <variablelist xml:id="http.constants.url">
   <title>Constantes utilisables avec la fonction <function>http_build_url</function></title>
   <varlistentry>
    <term>
     <constant>HTTP_URL_REPLACE</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      remplace chaque partie de la première URL lorsqu'elles font parties de la seconde
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_URL_JOIN_PATH</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      joins les chemins relatifs
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_URL_JOIN_QUERY</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      joins les chaînes de requête
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_URL_STRIP_USER</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      enlève toutes les informations d'identification utilisateur
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_URL_STRIP_PASS</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      enlève toutes les informations d'identification concernant le mot de passe
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_URL_STRIP_AUTH</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      enlève toutes les informations d'identification
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_URL_STRIP_PORT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      enlève les numéros de port explicites
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_URL_STRIP_PATH</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      enlève le chemin complet
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_URL_STRIP_QUERY</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      enlève la chaîne de requête
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_URL_STRIP_FRAGMENT</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      enlève n'importe quel fragment (#identifier)
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <constant>HTTP_URL_STRIP_ALL</constant>
      (<type>integer</type>)
    </term>
    <listitem>
     <simpara>
      enlève tout
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->