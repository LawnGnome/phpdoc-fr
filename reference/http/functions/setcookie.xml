<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/http.xml, last change in rev 1.7 -->
<!-- last change to 'setcookie' in en/ tree in rev 1.2 -->
  <refentry id="function.setcookie">
   <refnamediv>
    <refname>setcookie</refname>
    <refpurpose>Envoie un cookie</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>bool</type><methodname>setcookie</methodname>
      <methodparam><type>string</type><parameter>name</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>value</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>expire</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>path</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>domain</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>secure</parameter></methodparam>
     </methodsynopsis>
   <para>
    <function>setcookie</function> définit un cookie qui sera envoyé
    avec le reste des en-têtes. Les cookies doivent passer avant toute autre
    en-tête (c'est une restriction des cookies, pas de PHP). Cela vous impose
    d'appeler cette fonction avant toute balise <literal>&lt;HTML></literal>
    ou <literal>&lt;HEAD></literal>.
   </para>
    <note>
     <para>
      En PHP 4, vous pouvez utiliser la bufferisation de sortie pour pouvoir
      envoyer du contenu avant d'appeler cette fonction, avec la contrepartie
      que toute votre page sera envoyé en une fois. Vous pouvez faire cela
      en appelant <function>ob_start</function> et <function>ob_end_flush</function>
      dans votre script, ou en activant la directive <literal>output_buffering</literal>
      dans votre fichier de configuration &php.ini;.
     </para>
    </note>    
   <para>
    Tous les arguments sauf <parameter>name</parameter> (nom) sont optionnels.
    Si seul le nom est présent, le cookie portant ce nom sera
    supprimé du navigateur de l'internaute. Vous pouvez aussi utiliser une
    chaîne vide comme valeur, pour ignorer un argument.
    Le paramètre <parameter>expire</parameter> est un
    timestamp UNIX, du même genre que celui retourné par
    <function>time</function> ou <function>mktime</function>.
    Le paramètre <parameter>secure</parameter> indique
    que le cookie doit être uniquement transmis à travers
    une connexion HTTPS sécurisée.
   </para>
    <para>
     Une fois que le cookie a été placé, il est accessible dans les variables globales
     <link linkend="reserved.variables.cookies">$_COOKIE</link> ou bien
     <varname>$HTTP_COOKIE_VARS</varname> arrays.  Notez que les 
     <link linkend="language.variables.superglobals">autoglobales</link> 
     telles que <varname>$_COOKIE</varname> sont disponibles en &php; depuis
     la version <ulink url="&url.php.release4.1.0;">4.1.0</ulink>.
     <varname>$HTTP_COOKIE_VARS</varname> existe depuis PHP 3.
     Les valeurs de cookies existent aussi dans la variable
     <link linkend="reserved.variables.request">$_REQUEST</link>.
    </para>
    <para>
    Erreurs communes :
    <itemizedlist>
     <listitem>
       <simpara>
        Les cookies ne seront accessibles qu'au chargement de la prochaine page,
        ou au rechargement de la page courante.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Les cookies doivent être effacés avec les mêmes paramètres
        que ceux utilisés lors de leur création.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <simpara>
     En PHP 3, les appels multiples à <function>setcookie</function> dans le
     même script seront effectués dans l'ordre inverse. Si vous essayez d'effacer
     un cookie avant d'insérer une nouvelle valeur, vous devez placer l'insertion
     avant l'effacement. En PHP 4, les appels multiples à
     <function>setcookie</function> sont effectués dan un ordre naturel.
    </simpara>
   <simpara>
    Les appels multiples à <function>setcookie</function> dans la même
    page seront réalisés dans l'ordre inverse. Si vous essayez
    d'effacer un cookie avant d'insérer une autre valeur, il faut
    placer l'insertion avant l'effacement.
   </simpara>
   <para>
    Quelques exemples :
    <example>
     <title>Exemples avec <function>setcookie</function></title>
     <programlisting role="php">
<![CDATA[
<?php
  setcookie("TestCookie","Valeur de test");
  setcookie("TestCookie",$value,time()+3600);  /* expire dans une heure */
  setcookie("TestCookie",$value,time()+3600,"/~rasmus/",".utoronto.ca",1);
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Notez que la partie "valeur" du cookie sera automatiquement
    encodée URL lorsque vous envoyez le cookie, et lorsque
    vous le recevez, il sera automatiquement décodé,
    et affecté à la variable du même nom que
    le cookie. Pour voir le résultat, essayez les scripts suivants :
    <example>
     <title>Affectation des valeurs de cookie</title>
     <programlisting role="php">
<![CDATA[
<?php
// Afficher un cookie 
echo $_COOKIE["TestCookie"];
echo $HTTP_COOKIE_VARS["TestCookie"];

// Une autre méthode pour afficher tous les cookies
print_r($_COOKIE);
?>
]]>
     </programlisting>
    </example>
   </para>
    <para>
     Lorsque vous effacez un cookie, vous devriez toujours vous assurer
     que la date d'expiration du cookie est déjà passée, pour déclencher
     le mécanisme de votre navigateur. Voici comment procéder : 
     <example>
      <title>Exemple d'effacement de cookies avec <function>setcookie</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// utilisation de la date moins une heure
setcookie ("TestCookie", "", time() - 3600);
setcookie ("TestCookie", "", time() - 3600, "/~rasmus/", ".exemple.com", 1);
?>
]]>
      </programlisting>
     </example>
    </para>
   <para>
    Vous pouvez aussi utiliser les cookies avec des tableaux, en utilisant la
    notation des tableaux. Cela a pour effet de créer autant de
    cookies que votre tableau a d'éléments, mais lorsque
    les cookies seront reçus par PHP, les valeurs seront
    placées dans un tableau :
    <example>
     <title>Utilisation des tableaux avec <function>setcookie</function></title>
     <programlisting role="php">
<![CDATA[
<?php
  setcookie( "cookie[three]", "cookiethree" );
  setcookie( "cookie[two]", "cookietwo" );
  setcookie( "cookie[one]", "cookieone" );
  if ( isset( $cookie ) ) {
    while( list( $name, $value ) = each( $cookie ) ) {
      echo "$name == $value<br>\n";
    }
  }
?>
]]>
     </programlisting>
    </example>
   </para>
    <note>
     <para>
      Pour plus d'informations sur les cookies, voyez les sp&eacute;cifications
      de cookies de Netscape &agrave; <ulink url="&spec.cookies;">&spec.cookies;</ulink> et 
      <ulink url="&url.rfc;2965">RFC 2965</ulink>.
     </para>
     <para>
      Vous pourrez noter que le param&egrave;tre <parameter>expire</parameter> prend un
      timestamp unique, et non pas la date au format <literal>Jour, JJ-Mois-AAAA
      HH:MM:SS GMT</literal>, car &php; fait la conversion en interne.
     </para>
    </note>
   <simpara>
    Microsoft Internet Explorer 4 utilisé avec le Service Pack 1
    ne gère pas bien les cookies qui possèdent un
    paramètre <parameter>path</parameter>.
   </simpara>
   <simpara>
    Netscape Communicator 4.05 et Microsoft Internet Explorer 3.x
    semblent ne pas gérer correctement les cookies lorsque
    <parameter>path</parameter> et <parameter>time></parameter> ne
    sont pas fournis.
   </simpara>
    <para>
     Voir aussi
     <function>header</function>.
    </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
