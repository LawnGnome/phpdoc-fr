<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.http-cache-last-modified" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>http_cache_last_modified</refname>
  <refpurpose>Mise en cache en fonction de la date de dernière modification</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>http_cache_last_modified</methodname>
   <methodparam choice="opt"><type>int</type><parameter>timestamp_or_expires</parameter></methodparam>
  </methodsynopsis>

  <para>
   Tente de mettre en cache l'entité envoyé en fonction de
   sa date de dernière modification.
  </para>
  <para>
   Si l'argument fourni est plus grand que &zero;, il sera considéré comme
   un timestamp Unix et sera envoyé comme date de dernière modification.
   S'il vaut &zero; ou s'il est omis, la date courante sera envoyée comme
   en-tête <literal>Last-Modified</literal>. S'il est négatif, il sera considéré comme
   une date d'expiration, en secondes, ce qui signifie que si la date de
   dernière modification demandée n'est pas dans l'intervalle de la
   période calculée, l'en-tête <literal>Last-Modified</literal> sera
   mise à jour et le corps actuel sera envoyé.
  </para>
  <para>
   Une entrée dans l'historique sera écrite dans l'historique du cache si le
   &link.http.configuration; <link linkend="http.configuration.log.cache">http.log.cache</link>
   est défini et que la mise en cache est un succès.
  </para>
  &note.http.send.API.mayuse;
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>timestamp_or_expires</parameter></term>
     <listitem>
      <para>
       Timestamp Unix
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &returns.http.false.orexits; avec un en-tête <literal>304 Not Modified</literal> si l'entité est mis en cache.
   &see.http.configuration.force_exit;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>http_cache_last_modified</function></title>
    <para>
     Mise en cache pour 5 secondes.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
http_cache_last_modified(-5);
printf("%s\n", http_date());
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>http_cache_etag</function></member>
    <member>&http.response.class.php51;</member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->