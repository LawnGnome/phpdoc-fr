<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.6 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
 <refentry id="function.mb-convert-variables">
  <refnamediv>
   <refname>mb_convert_variables</refname>
   <refpurpose>Convertit l'encodage de variables</refpurpose>
  </refnamediv>
  <refsect1>
   &reftitle.description;
    <methodsynopsis>
     <type>string</type><methodname>mb_convert_variables</methodname>
     <methodparam><type>string</type><parameter>to-encoding</parameter></methodparam>
     <methodparam><type>mixed</type><parameter>from-encoding</parameter></methodparam>
     <methodparam><type>mixed</type><parameter role="reference">vars</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter role="reference">...</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>mb_convert_variables</function> convertit l'encodage
    des variables <parameter>vars</parameter> depuis l'encodage
    <parameter>from-encoding</parameter> vers l'encodage
    <parameter>to-encoding</parameter>, puis retourne le nom
    de l'encodage détecté, en cas de succès, ou &false;
    en cas d'échec.
   </para>
   <para>
     <function>mb_convert_variables</function> place les chaînes dans un tableau ou un objet pour détecter
     l'encodage, mais la détection a tendance à échouer pour les chaînes de caractères de petites tailles.
     De ce fait, il est impossible de mixer les encodages dans un tableau ou un objet "simple".
    </para>
   <para>
    <parameter>from-encoding</parameter> est une liste d'encodages possibles
    pour les variables <parameter>vars</parameter>, fourni sous forme d'un
    tableau ou d'une liste d'encodages, séparés par des virgules.
    Si <parameter>from-coding</parameter> est omis,
    les encodages fournis dans <function>mb_detect_order</function> sont
    utilisés.
   </para>
   <para>
    <parameter>vars</parameter> est une référence sur une variable
    à convertir. Les chaînes, tableaux et objets sont aussi supportés.
    <function>mb_convert_variables</function> prend tous ces paramètres 
    avec le même encodage.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>mb_convert_variables</function></title>
     <programlisting role="php">
<![CDATA[
<?php
/* Convertit les variables $post1, $post2 en encodage interne */
$interenc = mb_internal_encoding();
$inputenc = mb_convert_variables($interenc, "ASCII,UTF-8,SJIS-win", $post1, $post2);
?>
]]>
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
