<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.2 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<chapter xml:id="mbstring.php4.req" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Prérequis de l'encodage en PHP</title>
  <para>
   Les jeux de caractères suivants sont bien supportés par PHP.
  <itemizedlist>
   <listitem>
    <para>
     Jeux de caractères mono-octets :
     <itemizedlist>
      <listitem>
       <simpara>
        qui sont compatibles avec la norme ASCII (compatible ISO646)
        pour les caractères de l'intervalle <literal>00h</literal> à
        <literal>7fh</literal>.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </listitem>
   <listitem>
    <para>
     Jeux de caractères multi-octets :
     <itemizedlist>
      <listitem>
       <simpara>
        qui sont compatibles avec la norme ASCII (compatible ISO646)
        pour les caractères de l'intervalle <literal>00h</literal> à
        <literal>7fh</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        qui n'utilisent pas les séquences de type ISO2022.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        qui n'utilisent pas de valeur dans l'intervalle <literal>00h</literal> à
        <literal>7fh</literal> dans les séquences composées, qui
        représentent un caractère unique.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </listitem>
  </itemizedlist>
 </para>
 <para>
  Les jeux de caractères suivants risquent de ne pas fonctionner en PHP.
  <informalexample>
   <programlisting>
<![CDATA[
JIS, SJIS, ISO-2022-JP, BIG-5
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  Même si aucun script PHP écrit avec ces jeux de caractères ne fonctionne,
  notamment si des chaînes encodées sont utilisées comme identifiants,
  ou valeurs littérales dans le script, vous pouvez éviter d'utiliser ces
  jeux en activant le filtre transparent <literal>mbstring</literal> pour les
  données d'entrées HTTP.
 </para>
 <note>
  <para>
   Il est déconseillé d'utiliser les jeux SJIS, BIG5, CP936, CP949 et
   GB18030 pour l'encodage interne, à moins que vous ne soyez très familiers
   avec l'analyseur, l'exécuteur et le jeu de caractère lui-même.
  </para>
 </note>
 <note>
  <para>
   Si vous vous connectez à une base de données avec PHP, il est recommandé
   d'utiliser le même jeu de caractères pour la base de données et pour le
   <literal>jeu interne</literal> pour améliorer le confort d'utilisation
   mais aussi les performances.
  </para>
  <para>
   Si vous utilisez PostgreSQL, le jeu de caractères utilisé dans la base
   de données et celui de PHP peuvent différer car cette base supporte
   la traduction automatique de jeu de caractères.
  </para>
 </note>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

