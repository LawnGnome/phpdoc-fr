<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
 <reference id="ref.pcntl">
  <title>Contr&ocirc;le des processus</title>
  <titleabbrev>PCNTL</titleabbrev>
  <partintro>
   <para>
    Le gestionnaire de contr&ocirc;le des processus n'est pas activ&eacute; par d&eacute;faut.
    Il faut utiliser l'option de configuration
    <link linkend="install.configure.enable-pcntl">--enable-pcntl</link>
    lors de la compilation de PHP pour l'activer.
   </para>
   <para>
    La liste suivante rassemble tous les signaux qui sont actuellement
    support&eacute;s par les fonctions de gestion des processus de PHP. Reportez
    vous &agrave; votre manuel pour plus de d&eacute;tails sur les comportements de ces
    signaux.
   <table>
    <title>Signaux support&eacute;s</title>
    <tgroup cols="2">
     <tbody>
      <row>
       <entry><literal>SIG_IGN</literal></entry>
       <entry><literal>SIGFPE</literal></entry>
       <entry><literal>SIGCONT</literal></entry>
      </row>
      <row>
       <entry><literal>SIG_DFL</literal></entry>
       <entry><literal>SIGKILL</literal></entry>
       <entry><literal>SIGSTOP</literal></entry>
      </row>
      <row>
       <entry><literal>SIG_ERR</literal></entry>
       <entry><literal>SIGUSR1</literal></entry>
       <entry><literal>SIGTSTP</literal></entry>
      </row>
      <row>
       <entry><literal>SIGHUP</literal></entry>
       <entry><literal>SIGUSR2</literal></entry>
       <entry><literal>SIGTTIN</literal></entry>
      </row>
      <row>
       <entry><literal>SIGINT</literal></entry>
       <entry><literal>SIGSEGV</literal></entry>
       <entry><literal>SIGTTOU</literal></entry>
      </row>
      <row>
       <entry><literal>SIGQUIT</literal></entry>
       <entry><literal>SIGPIPE</literal></entry>
       <entry><literal>SIGURG</literal></entry>
      </row>
      <row>
       <entry><literal>SIGILL</literal></entry>
       <entry><literal>SIGALRM</literal></entry>
       <entry><literal>SIGXCPU</literal></entry>
      </row>
      <row>
       <entry><literal>SIGTRAP</literal></entry>
       <entry><literal>SIGTERM</literal></entry>
       <entry><literal>SIGXFSZ</literal></entry>
      </row>
      <row>
       <entry><literal>SIGABRT</literal></entry>
       <entry><literal>SIGSTKFLT</literal></entry>
       <entry><literal>SIGVTALRM</literal></entry>
      </row>
      <row>
       <entry><literal>SIGIOT</literal></entry>
       <entry><literal>SIGCHLD</literal></entry>
       <entry><literal>SIGPROF</literal></entry>
      </row>
      <row>
       <entry><literal>SIGBUS</literal></entry>
       <entry><literal>SIGCLD</literal></entry>
       <entry><literal>SIGWINCH</literal></entry>
      </row>
      <row>
       <entry><literal>SIGPOLL</literal></entry>
       <entry><literal>SIGIO</literal></entry>
       <entry><literal>SIGPWR</literal></entry>
      </row>
      <row>
       <entry><literal>SIGSYS</literal></entry>
       <entry><literal></literal></entry>
       <entry><literal></literal></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   </para>

   <section id="pcntl-example">
    <title>Exemple de contr&ocirc;le de processus</title>
    <para>
     Cet exemple effectue un fork du processus d&eacute;mon gr&acirc;ce &agrave; un gestionnaire de
     signaux.
    </para>
    <example>
     <title>Process Control Example</title>
     <programlisting role="php">
&lt;?php
  $pid = pcntl_fork();
  if ($pid == -1) {
     die("could not fork"); 
  } else if ($pid) {
     exit(); // we are the parent 
  } else {
     // we are the child
  }

// detatch from the controlling terminal
  if (!posix_setsid()) {
    die("could not detach from terminal");
  }

// setup signal handlers
  pcntl_signal(SIGTERM, "sig_handler");
  pcntl_signal(SIGHUP, "sig_handler");

// loop forever performing tasks
  while(1) {
    // do something interesting here
}

function sig_handler($signo) {
     switch($signo) {
         case SIGTERM:
             // handle shutdown tasks
             exit;
             break;
         case SIGHUP:
             // handle restart tasks
             break;
         default:
             // handle all other signals
     }
}
?&lt;
     </programlisting>
    </example>
   </section>
  </partintro>








&reference.pcntl.functions;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

