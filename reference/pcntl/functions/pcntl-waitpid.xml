<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/pcntl.xml, last change in rev 1.1 -->
<!-- last change to 'pcntl-waitpid' in en/ tree in rev 1.1 -->
 <refentry id="function.pcntl-waitpid">
  <refnamediv>
   <refname>pcntl_waitpid</refname>
   <refpurpose>Attend la fin de l'ex&eacute;cution d'un processus fils</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>pcntl_waitpid</methodname>
     <methodparam><type>int</type><parameter>pid</parameter></methodparam>
     <methodparam><type>int</type><parameter>status</parameter></methodparam>
     <methodparam><type>int</type><parameter>options</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>pcntl_waitpid</function> suspend l'ex&eacute;cution du processus
    courant jusqu'&agrave; ce que un processus fils sp&eacute;cifi&eacute; par le param&egrave;tre
    <parameter>pid</parameter> ait termin&eacute;, ou bien qu'un signal ait mis
    fin &agrave; ce processus ou qu'un signal ait appel&eacute; un gestionnaire de signaux.
    Si le processus fils identifi&eacute; par <parameter>pid</parameter> est d&eacute;j&agrave;
    termin&eacute; au moment de l'appel de cette fonction (on les appelle
    des processus "zombie"), la fonction se termine imm&eacute;diatement.
    Toute ressource syst&egrave;me utilis&eacute; par le processus fils est lib&eacute;r&eacute;e.
    Reportez vous &agrave; la page de man waitpid(2) pour avoir des d&eacute;tails
    sur le comportement de cette fonction sur votre syst&egrave;me.
   </para>
   <para>
    <function>pcntl_waitpid</function> retourne l'identifiant de 
    processus du processus fils qui s'est termin&eacute;, ou bien -1 en cas
    d'erreur ou encore z&eacute;ro si <constant>WNOHANG</constant> a &eacute;t&eacute; utilis&eacute;e
    et qu'aucun processus fils n'&eacute;tait disponible.
   </para>
   <para>
    Le param&egrave;tre <parameter>pid</parameter> peut prendre l'une des valeurs
    suivantes :
    <table>
     <title>Valeurs possibles de <parameter>pid</parameter></title>
     <tgroup cols="2">
      <tbody>
       <row>
	<entry><literal>&lt; -1</literal></entry>
	<entry>
	 attend que tous les processus fils dont l'identifiant de groupe
	 est &eacute;gal &agrave; la valeur absolue de <parameter>pid</parameter> soient 
	 termin&eacute;s.
	</entry>
       </row>
       <row>
	<entry><literal>-1</literal></entry>
	<entry>
	 attend que tous les processus fils soient termin&eacute;s. Ceci est le
	 m&ecirc;me comportement que celui de la fonction <function>wait</function>.
	</entry>
       </row>
       <row>
        <entry><literal>0</literal></entry>
        <entry>
	 attend que tous les processus fils dont l'identifiant de groupe
	 est &eacute;gal &agrave; celui du processus courant soient termin&eacute;s.
        </entry>
       </row>
       <row>
        <entry><literal>&gt; 0</literal></entry>
        <entry>
	 attend que le processus fils dont l'identifiant est
	 &eacute;gal &agrave; <parameter>pid</parameter> soit termin&eacute;.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
    <function>pcntl_waitpid</function> enregistrera des informations sur
    le statut courant du processus dans le param&egrave;tre 
    <parameter>status</parameter>, qui peut &ecirc;tre acc&eacute;d&eacute; avec les
    fonctions suivantes :
    <function>pcntl_wifexited</function>,
    <function>pcntl_wifstopped</function>,
    <function>pcntl_wifsignaled</function>,
    <function>pcntl_wexitstatus</function>,
    <function>pcntl_wtermsig</function> et
    <function>pcntl_wstopsig</function>.
   </para>
   <para>
    Le param&egrave;tre <parameter>options</parameter> peut prendre la valeur
    de z&eacute;ro, ou plusieurs des constantes globales suivantes 
    (combinez les avec l'op&eacute;rateur <literal>OR</literal>) :
    <table>
     <title>Valeurs possibles de <parameter>options</parameter></title>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry><literal>WNOHANG</literal></entry>
        <entry>
	 retourne imm&eacute;diatement si aucun processus fils ne s'est termin&eacute;.
	</entry>
       </row>
       <row>
        <entry><literal>WUNTRACED</literal></entry>
        <entry>
        retourne lorsque les processus fils sont arr&ecirc;t&eacute;s et que leur
        status n'a pas &eacute;t&eacute; mis &agrave; jour.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
    Voir aussi 
    <function>pcntl_fork</function>,
    <function>pcntl_signal</function>,
    <function>pcntl_wifexited</function>,
    <function>pcntl_wifstopped</function>,
    <function>pcntl_wifsignaled</function>,
    <function>pcntl_wexitstatus</function>,
    <function>pcntl_wtermsig</function> et
    <function>pcntl_wstopsig</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
