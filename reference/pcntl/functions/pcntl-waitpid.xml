<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.7 Maintainer: yannick Status: ready -->
 <refentry id="function.pcntl-waitpid">
  <refnamediv>
   <refname>pcntl_waitpid</refname>
   <refpurpose>Attend la fin de l'exécution d'un processus fils</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>pcntl_waitpid</methodname>
     <methodparam><type>int</type><parameter>pid</parameter></methodparam>
     <methodparam><type>int</type><parameter>&amp;status</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>options</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>pcntl_waitpid</function> suspend l'exécution du processus
    courant jusqu'à ce que un processus fils spécifié par le paramètre
    <parameter>pid</parameter> ait terminé, ou bien qu'un signal ait mis
    fin à ce processus ou qu'un signal ait appelé un gestionnaire de signaux.
    Si le processus fils identifié par <parameter>pid</parameter> est déjà
    terminé au moment de l'appel de cette fonction (on les appelle
    des processus "zombie"), la fonction se termine immédiatement.
    Toute ressource système utilisé par le processus fils est libérée.
    Reportez-vous à la page de man waitpid(2) pour avoir des détails
    sur le comportement de cette fonction sur votre système.
   </para>
   <para>
    <function>pcntl_waitpid</function> retourne l'identifiant de
    processus du processus fils qui s'est terminé, ou bien -1 en cas
    d'erreur ou encore zéro si <constant>WNOHANG</constant> a été utilisée
    et qu'aucun processus fils n'était disponible.
   </para>
   <para>
    Le paramètre <parameter>pid</parameter> peut prendre l'une des valeurs
    suivantes :
    <table>
     <title>Valeurs possibles de <parameter>pid</parameter></title>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry><literal>&lt; -1</literal></entry>
        <entry>
         attend que tous les processus fils dont l'identifiant de groupe
         est égal à la valeur absolue de <parameter>pid</parameter> soient
         terminés.
        </entry>
       </row>
       <row>
        <entry><literal>-1</literal></entry>
        <entry>
        attend que tous les processus fils soient terminés. Ceci est le
        même comportement que celui de la fonction <function>wait</function>.
        </entry>
       </row>
       <row>
        <entry>&zero;</entry>
        <entry>
         attend que tous les processus fils dont l'identifiant de groupe
         est égal à celui du processus courant soient terminés.
        </entry>
       </row>
       <row>
        <entry><literal>&gt; 0</literal></entry>
        <entry>
         attend que le processus fils dont l'identifiant est
         égal à <parameter>pid</parameter> soit terminé.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <note>
    <para>
     Si <parameter>pid</parameter> vaut <literal>-1</literal>, celà équivaut
     à utiliser la fonction <function>pcntl_wait</function> (minimum
     <parameter>options</parameter>).
    </para>
   </note>
   <para>
    <function>pcntl_waitpid</function> enregistrera des informations sur
    le statut courant du processus dans le paramètre
    <parameter>status</parameter>, qui peut être accédé avec les
    fonctions suivantes :
    <function>pcntl_wifexited</function>,
    <function>pcntl_wifstopped</function>,
    <function>pcntl_wifsignaled</function>,
    <function>pcntl_wexitstatus</function>,
    <function>pcntl_wtermsig</function> et
    <function>pcntl_wstopsig</function>.
   </para>
   <para>
    Le paramètre <parameter>options</parameter> peut prendre la valeur
    de zéro, ou plusieurs des constantes globales suivantes
    (combinez les avec l'opérateur <literal>OR</literal>) :
    <table>
     <title>Valeurs possibles de <parameter>options</parameter></title>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry><literal>WNOHANG</literal></entry>
        <entry>
         retourne immédiatement si aucun processus fils ne s'est terminé.
        </entry>
       </row>
       <row>
        <entry><literal>WUNTRACED</literal></entry>
        <entry>
        retourne lorsque les processus fils sont arrêtés et que leur
        status n'a pas été mis à jour.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
    Voir aussi
    <function>pcntl_fork</function>,
    <function>pcntl_signal</function>,
    <function>pcntl_wifexited</function>,
    <function>pcntl_wifstopped</function>,
    <function>pcntl_wifsignaled</function>,
    <function>pcntl_wexitstatus</function>,
    <function>pcntl_wtermsig</function> et
    <function>pcntl_wstopsig</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
