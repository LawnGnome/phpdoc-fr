<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/pcntl.xml, last change in rev 1.1 -->
<!-- last change to 'pcntl-fork' in en/ tree in rev 1.1 -->
 <refentry id="function.pcntl-fork">
  <refnamediv>
   <refname>pcntl_fork</refname>
   <refpurpose>Forks the currently running process</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>int</type><methodname>pcntl_fork</methodname>
     <void/>
    </methodsynopsis>
   <para>
    <function>pcntl_fork</function> cr&eacute;e un processus fils, qui ne diff&egrave;re du
    processus p&egrave;re que par l'identifiant de processus et l'identifiant
    PPID. Reportez vous &agrave; la page de man fork(2) pour avoir des d&eacute;tails
    sur le comportement de cette fonction sur votre syst&egrave;me.
   </para>
   <para>
    En cas de succ&egrave;s, le PID (identifiant de processus) du fils est retourn&eacute;
    dans le processus p&egrave;re, et 0 est retourn&eacute; dans le processus fils. En cas 
    d'&eacute;chec, -1 est retourn&eacute; dans le contexte du p&egrave;re, aucun processu fils ne
    sera cr&eacute;&eacute; et PHP l&egrave;vera une erreur.
   </para>
   <para>
    Voir aussi 
    <function>pcntl_waitpid</function> et
    <function>pcntl_signal</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
