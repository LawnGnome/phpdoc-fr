<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.1 Maintainer: yannick Status: ready -->
<refentry id="function.Memcache-increment">
 <refnamediv>
  <refname>memcache::increment</refname>
  <refpurpose>Incrément la valeur d'un élément</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>int</type><methodname>memcache::increment</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>memcache::increment</function> incrémente la valeur d'un élément
   identifié par la clé <parameter>key</parameter> par la valeur
   <parameter>value</parameter>. Si l'élément identifié par la clé 
   <parameter>key</parameter> n'est pas de type numérique et ne peut
   être converti en nombre, la valeur de cette élément sera défini à 
   <parameter>value</parameter>.
  </para>
  <para>
   Le paramètre <parameter>value</parameter> est optionnel. Par défaut, il vaut 1.
  </para>
  <note>
   <para>
    N'utilisez pas <function>memcache::increment</function> avec les éléments
    stockés compressés. Dans ce cas, l'appel à la fonction
    <function>memcache::get</function> échouera.
   </para>
  </note>
  <para>
   Vous pouvez également utiliser la fonction 
   <function>memcache_increment</function>.
   Regardez l'exemple ci-dessous.
  </para>
  <example>
   <title>Exemple avec <function>memcache::increment</function></title>
   <programlisting role="php">
<![CDATA[
<?php

/* API procédurale */
$memcache_obj = memcache_connect('memcache_host', 11211);
/* incrémentation du compteur de 2 */
$current_value = memcache_increment($memcache_obj, 'counter', 2);

/* API orientée objet */
$memcache_obj = new Memcache;
$memcache_obj->connect('memcache_host', 11211);
/* incrémentation du compteur de 3 */
$current_value = $memcache_obj->increment('counter', 3);

?>
]]>
   </programlisting>
  </example>
  <para>
   <function>memcache::increment</function> retourne la nouvelle valeur de l'élément
   en cas de succès ou &false; en cas d'échec.
  </para>
  <para>
   <function>memcache::increment</function> <emphasis>ne crée pas</emphasis>
   l'élément s'il n'existe pas.
  </para>
  <para>
   Voir aussi
   <function>memcache::decrement</function> et
   <function>memcache::replace</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
