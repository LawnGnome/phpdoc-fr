<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.1 Maintainer: yannick Status: ready -->
<refentry id="function.Memcache-connect">
 <refnamediv>
  <refname>memcache::connect</refname>
  <refpurpose>Ouvre une connexion avec le serveur 
  <literal>Memcache</literal></refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>bool</type><methodname>memcache::connect</methodname>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>memcache::connect</function> établie une connexion avec le serveur 
   de cache <literal>Memcache</literal>. Les paramètres 
   <parameter>host</parameter> et <parameter>port</parameter>
   désignent respectivement l'hôte et le port où le serveur 
   <literal>Memcache</literal> attend des connexions.
   Le paramètre <parameter>port</parameter> est optionnel, la valeur par
   défaut est 11211. Vous pouvez également définir un paramètre
   <parameter>timeout</parameter>, qui sera utiliser lors de la connexion avec
   les serveur. Faîtes attention si vous changez la valeur par défaut :
   vous pouvez perdre tous les avantages du système de cache si votre connexion
   est trop lente.
  </para>
  <para>
   La connexion, qui a été ouverte en utilisant la fonction
   <function>memcache::connect</function> sera automatiquement fermée 
   à la fin de votre script. Vous pouvez néanmoins la clôre en utilisant la
   fonction <function>memcache::close</function>.
  </para>
  <para>
   Vous pouvez également utiliser la fonction 
   <function>memcache_connect</function>.
   Regardez l'exemple ci-dessous.
  </para>
  <example>
   <title>Exemple avec <function>memcache::connect</function></title>
   <programlisting role="php">
<![CDATA[
<?php

/* API procédurale */

$memcache_obj = memcache_connect('memcache_host', 11211);

/* API orientée objet */

$memcache = new Memcache;
$memcache->connect('memcache_host', 11211);

?>
]]>
   </programlisting>
  </example>
  <para>
   &return.success;
  </para>
  <para>
   Voir aussi
   <function>memcache::pconnect</function> et
   <function>memcache::close</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
