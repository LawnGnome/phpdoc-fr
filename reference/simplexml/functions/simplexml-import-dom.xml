<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.13 $ -->
<!-- EN-Revision: 1.11 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id='function.simplexml-import-dom' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>simplexml_import_dom</refname>
  <refpurpose>Construit un objet <literal>SimpleXMLElement</literal> à partir d'une
   node DOM</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>SimpleXMLElement</type><methodname>simplexml_import_dom</methodname>
   <methodparam><type>DOMNode</type><parameter>node</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>class_name</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction prend une node d'un document <link linkend="ref.dom">DOM</link>
   et la transforme en node SimpleXML. Ce nouvel objet peut alors être
   utilisé comme un élément natif SimpleXML.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>node</parameter></term>
     <listitem>
      <para>
       Un élémént node <link linkend="ref.dom">DOM</link>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>class_name</parameter></term>
     <listitem>
      <para>
       Vous pouvez utiliser ce paramètre optionnel afin que
       <function>simplexml_load_string</function> retourne un objet
       de la classe spécifiée. Cette classe doit étendre la classe
       <type>SimpleXMLElement</type>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un <type>SimpleXMLElement</type> ou
   &false; si une erreur survient.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Import DOM</title>
    <programlisting role="php">
<![CDATA[
<?php
$dom = new DOMDocument;
$dom->loadXML('<books><book><title>blah</title></book></books>');
if (!$dom) {
    echo 'Erreur durant l'analyse du document';
    exit;
}

$s = simplexml_import_dom($dom);

echo $s->book[0]->title; // blah
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>dom_import_simplexml</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->