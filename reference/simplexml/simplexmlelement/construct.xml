<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id='simplexmlelement.construct' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SimpleXMLElement::__construct</refname>
  <refpurpose>
   Crée un nouvel objet SimpleXMLElement
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>SimpleXMLElement</classname></ooclass>
    <constructorsynopsis>
     <methodname>__construct</methodname>
     <methodparam><type>string</type><parameter>data</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>options</parameter></methodparam>
     <methodparam choice="opt"><type>bool</type><parameter>data_is_url</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>ns</parameter></methodparam>
     <methodparam choice="opt"><type>bool</type><parameter>is_prefix</parameter></methodparam>
   </constructorsynopsis> 
  </classsynopsis>
  <para>
   Crée un nouvel objet <classname>SimpleXMLElement</classname>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Une chaîne de caractères XML bien formée ou le chemin d'accès ou un
       URL pointant à un document XML si <parameter>data_is_url</parameter>
       vaut &true;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Optionnellement utilisé pour spécifier des
       <link linkend="libxml.constants">paramètres Libxml additionnels</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data_is_url</parameter></term>
     <listitem>
      <para>
       Par défaut, <parameter>data_is_url</parameter> vaut &false;. Utilisez
       &true; pour spécifier que le paramètres <parameter>data</parameter> est
       un chemin d'accès ou un URL pointant à un document XML au lieu d'une
       chaîne de caractères de données.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ns</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>is_prefix</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un objet <type>SimpleXMLElement</type> représentant les données
   <parameter>data</parameter>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Produit un message d'erreur de type <constant>E_WARNING</constant>
   pour chaque erreur trouvée dans les données XML et lance une exception
   si des erreurs sont détectées.
  </para>
  <tip>
   <para>
    Utilisez la fonction <function>libxml_use_internal_errors</function>
    pour supprimer toutes les erreurs XML et la fonction
    <function>libxml_get_errors</function> pour les parcourir.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Crée un objet SimpleXMLElement</title>
    <programlisting role="php">
<![CDATA[
<?php

include 'example.php';

$sxe = new SimpleXMLElement($xmlstr);
echo $sxe->movie[0]->title;

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Crée un objet SimpleXMLElement à partir d'un URL</title>
    <programlisting role="php">
<![CDATA[
<?php

$sxe = new SimpleXMLElement('http://example.org/document.xml', NULL, TRUE);
echo $sxe->asXML();

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>simplexml_load_string</function></member>
    <member><function>simplexml_load_file</function></member>
    <member><xref linkend="simplexml.examples-errors" /></member>
    <member><function>libxml_use_internal_errors</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
