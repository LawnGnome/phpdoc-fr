<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.7 Maintainer: didou Status: ready -->
<refentry id="function.sqlite-exec">
 <refnamediv>
  <refname>sqlite_exec</refname>
  <refname>SQLiteDatabase->exec</refname>
  <refpurpose>
   Exécute une requête sans résultats sur une base de données
  </refpurpose>
 </refnamediv>
 <refsect1>
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>sqlite_exec</methodname>
   <methodparam><type>resource</type><parameter>dbhandle</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>bool</type><methodname>sqlite_exec</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam><type>resource</type><parameter>dbhandle</parameter></methodparam>
  </methodsynopsis>
  &title.oop;
  <classsynopsis>
   <ooclass><classname>SQLiteDatabase</classname></ooclass>
   <methodsynopsis>
    <type>bool</type><methodname>exec</methodname>
    <methodparam><type>string</type><parameter>query</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   <function>sqlite_exec</function> exécute une requête SQL <parameter>query</parameter>
   sur une base de données spécifiée par la ressource <parameter>dbhandle</parameter>.
  </para>
  <para>
   <function>sqlite_exec</function> retourne un résultat booléen ; &true; en cas de succès,
   &false; en cas d'erreur.
   Si vous avez besoin d'exécuter une requête qui doit retourner des lignes, reportez-vous à
   la fonction <function>sqlite_query</function>.
  </para>
  <warning>
   <simpara>
    SQLite <emphasis>doit</emphasis> exécuter de multiples requêtes
    séparées par des point-virgules ; vous pouvez donc l'utiliser pour exécuter un script SQL
    que vous avez chargé depuis un fichier ou que vous avez intégré dans un script.
   </simpara>
  </warning>
  <para>
   <example>
    <title>Exemple avec <function>sqlite_exec</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$dbhandle = sqlite_open('mysqlitedb');
$query = sqlite_exec($dbhandle, "UPDATE users SET email='jDoe@example.com' WHERE username='jDoe'");
if (!$query) {
    exit('Erreur dans la requête.');
} else {
    echo 'Nombre de lignes modifiées : ', sqlite_changes($dbhandle);
}

/* Exemple OO */
$dbhandle = new SQLiteDatabase('mysqlitedb');
$query = $dbhandle->exec("UPDATE users SET email='jDoe@example.com' WHERE username='jDoe'");
if (!$query) {
    exit('Erreur dans la requête.');
} else {
    echo 'Nombre de lignes modifiées : ', $dbhandle->changes();
}

?>]]>
    </programlisting>
   </example>
  </para>
  &sqlite.param-compat;
  <para>
   Voir aussi
   <function>sqlite_query</function>,
   <function>sqlite_unbuffered_query</function> et
   <function>sqlite_array_query</function>.
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
