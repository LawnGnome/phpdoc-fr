<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<refentry id="function.sqlite-popen">
 <refnamediv>
  <refname>sqlite_popen</refname>
  <refpurpose>Ouvre une connexion SQlite persistante</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>resource</type><methodname>sqlite_popen</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>&amp;error_message</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   <function>sqlite_popen</function> fonctionne exactement comme 
   <function>sqlite_open</function>, hormis le fait qu'elle utilise le m&eacute;canisme
   de ressources persistantes de &php;. Pour des d&eacute;tails sur la signification
   des param&egrave;tres, voyez la fonction <function>sqlite_open</function>.
  </simpara>
  <para>
   <function>sqlite_popen</function> va d'abord v&eacute;rifier qu'il reste une connexion
   persistante, d&eacute;j&agrave; ouverte pour le fichier <parameter>filename</parameter>.
   Si elle peut en trouver une, elle l'utilisera, et sinon, elle ouvrira une nouvelle connexion.
  </para>
  <para>
   L'int&eacute;r&ecirc;t de cette m&eacute;thode est que vous &eacute;vitez de relire la base, les sch&eacute;mas
   de tables et d'index, pour chaque page ex&eacute;cut&eacute;e par un serveur web SAPI
   persistant (tous les SAPI, sauf les CGI et CLI).
  </para>
  <note>
   <simpara>
    Si vous utilisez une connexion persistante et que la base de donn&eacute;es est
    modifi&eacute;e par un autre processus (via une table de cron, par exemple), et
    que le processus recr&eacute;e la base en l'&eacute;crasant, soit par effacement et reconstruction,
    ou par d&eacute;placement d'une nouvelle version &agrave; la place de l'ancienne, 
    vous pourriez obtenir des comportements inattendus lorsque vous utiliserez
    une vielle connexion persistante sur une nouvelle base.
   </simpara>
   <simpara>
    Pour &eacute;viter cette situation, fa&icirc;tes que vos processus parall&egrave;les ouvrent
    les bases et fassent leurs modifications dans une transaction.
   </simpara>
  </note>
  <para>
   Voir aussi
   <function>sqlite_open</function>,
   <function>sqlite_close</function> et
   <function>sqlite_query</function>.
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
