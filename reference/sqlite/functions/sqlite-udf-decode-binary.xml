<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->
<refentry id="function.sqlite-udf-decode-binary">
 <refnamediv>
  <refname>sqlite_udf_decode_binary</refname>
  <refpurpose>Décode des données binaires, passées à une UDF SQLite</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>string</type><methodname>sqlite_udf_decode_binary</methodname>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>sqlite_udf_decode_binary</function> décode des données binaires,
   qui auraient été encodées avec <function>sqlite_udf_encode_binary</function> ou
   <function>sqlite_escape_string</function>.
  </para>
  <para>
   Vous devez appeler cette fonction sur les paramètres passés à votre UDF, si 
   vous devez manipuler des données binaires, car le codage binaire de &php;
   va masquer le contenu original de la donnée.
  </para>
  <para>
   &php; ne fait pas cette opération de codage/décodage automatiquement,
   car cela réduirait considérablement les performances.
  </para>
  <para>
   <example>
    <title>
     Exemple de fonction d'agrégation SQLite, compatible avec les 
     données binaires
    </title>
    <programlisting role="php">
<![CDATA[
<?php
$data = array(
   'one',
   'two',
   'three',
   'four',
   'five',
   'six',
   'seven',
   'eight',
   'nine',
   'ten'
   );
$db = sqlite_open(':memory:');
sqlite_query($db, "CREATE TABLE strings(a)");
foreach ($data as $str) {
  sqlite_query($db, "INSERT INTO strings VALUES('" .
    sqlite_escape_string($str) . "')");
}

function max_len_step(&$context, $string) {
  $string = sqlite_udf_decode_binary($string);
  if (strlen($string) > $context) {
    $context = strlen($string);
  }
}

function max_len_finalize(&$context) {
  return $context;
}

sqlite_create_aggregate($db, 'max_len', 'max_len_step', 'max_len_finalize');

var_dump(sqlite_array_query($db, 'SELECT max_len(a) from strings'));

?>]]>
    </programlisting>
   </example>
  </para>
  <para>
   Voir aussi
   <function>sqlite_udf_encode_binary</function>, 
   <function>sqlite_create_function</function> et
   <function>sqlite_create_aggregate</function>.
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
