<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<refentry id="function.sqlite-escape-string">
 <refnamediv>
  <refname>sqlite_escape_string</refname>
  <refpurpose>Prot&egrave;ge une cha&icirc;ne de caract&egrave;res pour utilisation avec SQLite</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>string</type><methodname>sqlite_escape_string</methodname>
   <methodparam><type>string</type><parameter>item</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>sqlite_escape_string</function> va ajouter des guillemets dans la 
   cha&icirc;ne <parameter>item</parameter>, pour qu'elle puisse &ecirc;tre utilis&eacute;e
   correctement dans une requ&ecirc;te SQL. Cela inclut notamment le doublement 
   des guillemets simples (<literal>'</literal>), et la v&eacute;rification des
   caract&egrave;res binaires non s&eacute;curitaires, de la cha&icirc;ne de requ&ecirc;te.
  </para>
  <para>
   Si <parameter>item</parameter> contient le caract&egrave;re <literal>NUL</literal> 
   et qu'il commence avec un caract&egrave;re dont la valeur ordinale est 
   <literal>0x01</literal>, &php; va appliquer un sch&eacute;ma de codage,
   pour que vous puissiez stocker puis relire correctement ces donn&eacute;es.
  </para>
  <para>
   Bien que ce codage s&eacute;curise l'insertion des donn&eacute;es, il va rendre la recherche
   de texte par simple comparaison, ou en utilisant la clause <literal>LIKE</literal>,
   inutilisable dans vos requ&ecirc;tes pour les colonnes qui contiennent ces donn&eacute;es
   binaires. En pratique, cela ne devrait pas &ecirc;tre un probl&egrave;me, car votre
   utilisation de la base devrait faire que vous n'utiliserez pas ces
   colonnes (en fait, il est mieux de stocker des donn&eacute;es binaires dans d'autres
   syst&egrave;mes, comme des fichiers).
  </para>
  <warning>
   <simpara>
    <function>addslashes</function> <emphasis>NE doit PAS</emphasis> &ecirc;tre
    utilis&eacute;e pour prot&eacute;ger vos requ&ecirc;tes dans SQLite. Cela va conduire 
    &agrave; d'&eacute;tranges r&eacute;sultats lors de la lecture de vos donn&eacute;es.
   </simpara>
  </warning>
  <note>
   <simpara>
    N'utilisez pas cette fonction pour coder les valeurs retourn&eacute;es
    par des fonctions utilisateurs, cr&eacute;&eacute;es avec les fonctions 
    <function>sqlite_create_function</function> ou
    <function>sqlite_create_aggregate</function> : utilisez
    plut&ocirc;t <function>sqlite_udf_encode_binary</function>.
   </simpara>
  </note>
  <para>
   Voir aussi
   <function>sqlite_udf_encode_binary</function>.
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
