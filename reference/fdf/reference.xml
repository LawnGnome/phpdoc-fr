<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<reference id="ref.fdf">
 <title>Forms Data Format</title>
 <titleabbrev>FDF</titleabbrev>
 <partintro>
  <simpara>
   Forms Data Format (FDF) est un format de fomulaire pour les documents
   PDF. Vous pouvez lire la documentation (en anglais) &agrave;
   <ulink url="&spec.pdf.fdf;">&spec.pdf.fdf;</ulink>
   pour plus de d&eacute;tails sur les tenants et les aboutissants.
  </simpara>
  <note>
   <simpara>
    Si vous rencontrez des probl&egrave;mes de configuration de PHP avec le support
    fdftk, v&eacute;rifiez bien que le fichier d'en-t&ecirc;tes <filename>FdfTk.h</filename>
    et la librairie <filename>libFdfTk.so</filename> sont bien situ&eacute;s.
    Elle devrait &ecirc;tre dans les dossiers
    <filename>fdftk-dir/include</filename> et <filename>fdftk-dir/lib</filename>.
    Cela ne sera pas le cas si vous avez simplement d&eacute;compress&eacute;
    la distribution FdfTk.
   </simpara>
  </note>
  <simpara>
   L'esprit de FDF est similaire &agrave; celui des formulaires HTML. Les
   diff&eacute;rences r&eacute;sident dans les moyens de transmission des
   donn&eacute;es au serveur, lorsque le bouton "submit" (soumettre) est
   press&eacute; (ce qui est du ressort de Form Data Format) et le format de
   formulaire lui-m&ecirc;me (qui est plut&ocirc;t du ressort de Portable Document
   Format, PDF). G&eacute;rer des donn&eacute;es FDF est un des objectifs des
   fonctions FDF. Mais il y en a d'autres. Vous pouvez aussi prendre un
   formulaire PDF, et pr&eacute;-remplir les champs, sans modifier le
   formulaire lui-m&ecirc;me. Dans ce cas, on va cr&eacute;er un document FDF
   (<function>fdf_create</function>), remplir les champs
   (<function>fdf_set_value</function>) et l'associer &agrave; un fichier PDF
   (<function>fdf_set_file</function>). Finalement, le tout sera envoy&eacute;
   au client, avec le type MIME "application/vnd.fdf". Le module "Acrobat reader"
   de votre navigateur va reconna&icirc;tre ce type MIME, et lire le fichier
   PDF, puis le remplis avec FDF.
  </simpara>
  <simpara>
   Si vous &eacute;ditez un fichier FDF avec un &eacute;diteur de texte, vous trouverez
   un catalogue d'objet avec le nom de <literal>FDF</literal>. Cet objet
   peut contenir des entr&eacute;es telles que <literal>Fields</literal>,
   <literal>F</literal>, <literal>Status</literal> etc..
   Les entr&eacute;es les plus couramment utilis&eacute;es sont
   <literal>Fields</literal>, qui indique une liste de champs de contr&ocirc;le,
   et <literal>F</literal> qui contient le nom du fichier PDF a qui
   appartiennent ces donn&eacute;es. Ces entr&eacute;es sont d&eacute;sign&eacute;es dans la documentation
   PDF sous le nom de /F-Key ou /Status-Key.
   La modification de ces entr&eacute;es est possible avec les fonctions
   <function>fdf_set_file</function> et <function>fdf_set_status</function>.
   Les champs sont modifiables avec les fonctions
   <function>fdf_set_value</function>, <function>fdf_set_opt</function> etc..
  </simpara>
  <simpara>
   Les exemples suivants montre comme &eacute;valuer les donn&eacute;es
   du formulaire.
  </simpara>
  <simpara></simpara>
  <example>
   <title>Evaluer un document FDF</title>
   <programlisting role="php">
&lt;?php
// Sauver le fichier FDF dans un fichier temporaire.
$fdffp = fopen("test.fdf", "w");
fwrite($fdffp, $HTTP_FDF_DATA, strlen($HTTP_FDF_DATA));
fclose($fdffp);
// Ouvrir le fichier temporaire, et utiliser les donn&eacute;es.
// Le formulaire pdf contenait diff&eacute;rents fichiers texte, avec pour nom :
// volume, date, comment, publisher, preparer, ainsi que deux bo&icirc;tes
// &agrave; cocher show_publisher et show_preparer.
$fdf = fdf_open("test.fdf");
$volume = fdf_get_value($fdf, "volume");
echo "La valeur du champs volume &eacute;tait : '&lt;B>$volume&lt;/B>'&lt;br&gt;";
$date = fdf_get_value($fdf, "date");
echo "La valeur du champs date &eacute;tait '&lt;B>$date&lt;/B>'&lt;br&gt;";
$comment = fdf_get_value($fdf, "comment");
echo "La valeur du champs comment &eacute;tait '&lt;B>$comment&lt;/B>'&lt;br&gt;";
if(fdf_get_value($fdf, "show_publisher") == "On") {
  $publisher = fdf_get_value($fdf, "publisher");
  echo "La valeur du champs publisher &eacute;tait : '&lt;B>$publisher&lt;/B>'&lt;br&gt;";
} else
  echo "La valeur du champs ne doit pas &ecirc;tre affich&eacute;e.&lt;br&gt;";
if(fdf_get_value($fdf, "show_preparer") == "On") {
  $preparer = fdf_get_value($fdf, "preparer");
  echo "La valeur du champs preparer &eacute;tait  '&lt;B>$preparer&lt;/B>'&lt;br&gt;";
} else
  echo "La valeur du champs Preparer ne doit pas &ecirc;tre affich&eacute;.&lt;br&gt;";
fdf_close($fdf);
?&gt;
   </programlisting>
  </example>
 </partintro>

&reference.fdf.functions;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

