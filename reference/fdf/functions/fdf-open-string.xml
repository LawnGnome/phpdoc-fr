<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.1 Maintainer: nobody Status: partial -->
<refentry id="function.fdf-open-string">
 <refnamediv>
  <refname>fdf_open_string</refname>
  <refpurpose>
   Lit un document FDF à partir d'une chaîne de caractères
  </refpurpose>
 </refnamediv>
 <refsect1>
  <title>Description</title>
  <methodsynopsis>
   <type>resource</type><methodname>fdf_open_string</methodname>
   <methodparam><type>string</type><parameter>fdf_data</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>fdf_open_string</function> lit les données du formulaire
   depuis la chaîne <parameter>fdf_data</parameter>. <parameter>fdf_data</parameter> 
   doit contenir les données retournées par le formulaire PDF ou
   créé par les fonctions <function>fdf_create</function> 
   et <function>fdf_save_string</function>. 
  </para>
  <para>
   Vous pouvez utiliser <function>fdf_open_string</function> avec la variable
   <varname>$HTTP_FDF_DATA</varname> pour traiter des données 
   de formulaires issues de clients distants.
  </para>
  <para>
   <example>
    <title>Accès aux données de formulaire FDF</title>
    <programlisting role="php">
<![CDATA[
<?php
$fdf = fdf_open_string($HTTP_FDF_DATA);
// ...
fdf_close($fdf);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Voir aussi
   <function>fdf_open</function>,
   <function>fdf_close</function>,
   <function>fdf_create</function> et
   <function>fdf_save_string</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
