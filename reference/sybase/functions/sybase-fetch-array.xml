<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.4 Maintainer: yannick Status: ready -->

<!-- splitted from ./fr/functions/sybase.xml, last change in rev 1.2 -->
<!-- last change to 'sybase-fetch-array' in en/ tree in rev 1.2 -->
  <refentry id="function.sybase-fetch-array">
   <refnamediv>
    <refname>sybase_fetch_array</refname>
    <refpurpose>Retourne une ligne Sybase sous la forme d'un tableau</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>sybase_fetch_array</methodname>
      <methodparam><type>resource</type><parameter>result</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>sybase_fetch_array</function> retourne un tableau qui
     contient la ligne demandée, ou &false;
     s'il ne reste plus de ligne.
    </para>
    <para>
     <function>sybase_fetch_array</function> est une version
     évoluée de <function>sybase_fetch_row</function>.
     En plus d'enregistrer les données dans un tableau à
     index numérique, cette fonction peut aussi les enregistrer dans un
     tableau associatif, en utilisant les nom des champs comme clés.
    </para>
    <para>
     Il est très important de noter que <function>sybase_fetch_array</function> N'est
     PAS nettement plus lent que <function>sybase_fetch_row</function>, tandis qu'elle
     fourni un confort d'utilisation notable.
    </para>
    <example>
     <title>Cas des colonnes de noms identiques avec Sybase</title>
     <programlisting role="php">
<![CDATA[
<?php
    $dbh= sybase_connect('SYBASE', '', '');
    $q= sybase_query(
        'SELECT * FROM p, a WHERE p.person_id= a.person_id',
        $dbh
    );
    var_dump(sybase_fetch_array($q));
    sybase_close($dbh);
?>
]]>
     </programlisting>
     <para>
      L'exemle ci-dessus va produire l'affichage suivant (en supposant que les
      tables ont toutes les deux des colonnes appelées <literal>person_id</literal>) : 
     </para>
     <screen>
<![CDATA[
array(4) {
  [0]=>
  int(1)
  ["person_id"]=>
  int(1)
  [1]=>
  int(1)
  ["person_id1"]=>
  int(1)
}
]]>
     </screen>
    </example>
    <para>
     Voir aussi
	 <function>sybase_fetch_row</function>,
     <function>sybase_fetch_assoc</function> et
     <function>sybase_fetch_object</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
