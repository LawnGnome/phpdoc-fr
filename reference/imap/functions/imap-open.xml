<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/imap.xml, last change in rev 1.15 -->
<!-- last change to 'imap-open' in en/ tree in rev 1.2 -->
 <refentry id="function.imap-open">
  <refnamediv>
   <refname>imap_open</refname>
   <refpurpose>
    Ouvre un flux <acronym>IMAP</acronym> vers une bo&icirc;te aux lettres
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>imap_open</methodname>
      <methodparam><type>string</type><parameter>mailbox</parameter></methodparam>
      <methodparam><type>string</type><parameter>username</parameter></methodparam>
      <methodparam><type>string</type><parameter>password</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>options</parameter></methodparam>
     </methodsynopsis>
   <para>
    <function>imap_open</function> retourne un flux <acronym>IMAP</acronym>
    en cas de succ&egrave;s, et &false; en cas d'erreur.
    <function>imap_open</function> peut aussi &ecirc;tre utilis&eacute;e pour
    ouvrir des flots sur des serveurs <acronym>POP3</acronym> et <acronym>NNTP</acronym>.
   </para>
   <para>
    Un nom de bo&icirc;te aux lettres est constitu&eacute; d'une adresse de serveur,
    et d'une adresse de bo&icirc;te sur ce serveur. Le mot r&eacute;serv&eacute; 
    <literal>INBOX</literal> repr&eacute;sente la bo&icirc;te aux lettres de 
    l'utilisateur courant.
    L'adresse du serveur, mise entre accolades '{' et '}', est constitu&eacute;
    du nom du serveur ou de son adresse IP, d'une sp&eacute;cification de protocole
    (commen&ccedil;ant par '/') et d'un port optionnel (sp&eacute;cifi&eacute; avec ':').
    Cette partie est obligatoire dans les param&egrave;tres de la bo&icirc;te aux
    lettres. Les noms de bo&icirc;tes aux lettres qui contiennent des caract&egrave;res
    sp&eacute;ciaux (en dehors de l'espace ASCII) doivent &ecirc;tre encod&eacute;s
    avec <function>imap_utf7_encode</function>.
   </para>
   <para>
    Les options sont un masque de bit, qui peut prendre une ou plusieurs des
    valeurs suivantes :
    <itemizedlist>
     <listitem>
      <simpara>
       <constant>OP_READONLY</constant> - Ouvre une bo&icirc;te aux lettres en lecture seule
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>OP_ANONYMOUS</constant> - Ne pas utiliser, ou modifier le fichier .newsrc pour les news.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>OP_HALFOPEN</constant> - Pour les noms <acronym>IMAP</acronym> et <acronym>NNTP</acronym>,
       ouvre une connexion mais n'ouvre pas une bo&icirc;te aux lettres.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>CL_EXPUNGE</constant> - Supprime automatiquement la bo&icirc;te aux lettres de la
       liste, lors de la terminaison du flux.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Pour se connecter &agrave; un serveur <acronym>IMAP</acronym>, on peut utiliser la
    commande suivante :
    <example>
    <title>
     Connexion &agrave; un serveur <acronym>IMAP</acronym> avec 
     <function>imap_open</function>
     </title>
     <programlisting role="php">
<![CDATA[
<?php
$mbox  = imap_open("{localhost:143}INBOX","user_id","password");
?>
]]>
     </programlisting>
    </example>
    Pour se connecter &agrave; un serveur <acronym>POP3</acronym> qui fonctionne sur
    le port 110 de la machine locale on peut utiliser la commande suivante :
    <example>
    <title>
     Connexion &agrave; un serveur <acronym>POP3</acronym> avec 
     <function>imap_open</function>
     </title>
     <programlisting role="php">
<![CDATA[
<?php
$mbox = imap_open("{localhost:110/pop3}INBOX","user_id","password");
?>
]]>
     </programlisting>
    </example>
     Pour se connecter &agrave; un serveur <acronym>IMAP</acronym> SSL ou
     <acronym>POP3</acronym> SSL, ajoutez <literal>/ssl</literal> apr&egrave;s
     le protocole :
     <example>
    <title>
     Connexion &agrave; un serveur <acronym>IMAP</acronym> SSL ou 
     <acronym>POP3</acronym> SSL  avec <function>imap_open</function>
     </title>
      <programlisting role="php">
<![CDATA[
<?php
$mbox = imap_open ("{localhost:993/imap/ssl}INBOX", "user_id", "password");
?>
]]>
      </programlisting>
     </example>
     Pour se connecter &agrave; un serveur SSL IMAP ou POP3 avec un certificat
     ajoutez <literal>/ssl/novalidate-cert</literal> apr&egrave;s le protocole :
     <example>
    <title>
     Connexion &agrave; un serveur <acronym>IMAP</acronym> SSL ou 
     <acronym>POP3</acronym> SSL  avec <function>imap_open</function>
     et un certificat
     </title>
      <programlisting role="php">
<![CDATA[
<?php
$mbox = imap_open ("{localhost:995/pop3/ssl/novalidate-cert}", "user_id", "password");
?>
]]>
      </programlisting>
     </example>
    Pour se connecter &agrave; un serveur <acronym>NNTP</acronym> qui fonctionne sur
    le port 119 de la machine locale on peut utiliser la commande:
    <example>
    <title>
     Connexion &agrave; un serveur <acronym>NNTP</acronym> 
     avec <function>imap_open</function>
     </title>
     <programlisting role="php">
<![CDATA[
<?php
$nntp = imap_open("{localhost:119/nntp}comp.test","","");
?>
]]>
     </programlisting>
    </example>
    Pour se connecter &agrave; un serveur distant, remplacez "localhost" par
    le nom ou l'adresse IP de la machine.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>imap_open</function></title>
     <programlisting role="php">
<![CDATA[
<?php
$mbox = imap_open ("{votre.hote.imap:143}", "nom_utilisateur", "mot de passe");
echo "<p><h1>Mailboxes</h1>\n";
$folders = imap_listmailbox ($mbox, "{votre.hote.imap:143}", "*");
if ($folders == &false;) {
   echo "Appel &eacute;chou&eacute;<BR>\n";
} else {
   while (list ($key, $val) = each ($folders)) {
       echo $val."<BR>\n";
   }
}
echo "<p><h1>en-t&ecirc;tes dans INBOX</h1>\n";
$headers = imap_headers ($mbox);
if ($headers == &false;) {
   echo "Appel &eacute;chou&eacute;<BR>\n";
} else {
   while (list ($key,$val) = each ($headers)) {
       echo $val."<BR>\n";
   }
}
imap_close($mbox);
?>
]]>
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
