<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.3 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->
<refentry id="function.db2-bind-param">
 <refnamediv>
  <refname>db2_bind_param</refname>
  <refpurpose>
   Associe une variable PHP à un paramètre d'une requête SQL
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>db2_bind_param</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
   <methodparam><type>long</type><parameter>parameter-number</parameter></methodparam>
   <methodparam><type>string</type><parameter>variable-name</parameter></methodparam>
   <methodparam choice="opt"><type>long</type><parameter>parameter-type</parameter></methodparam>
   <methodparam choice="opt"><type>long</type><parameter>data-type</parameter></methodparam>
   <methodparam choice="opt"><type>long</type><parameter>precision</parameter></methodparam>
   <methodparam choice="opt"><type>long</type><parameter>scale</parameter></methodparam>
  </methodsynopsis>

  &warn.experimental.func;

  <para>
   Associe une variable &php; à un paramètre dans la requête SQL
   retournée par <function>db2_prepare</function>. Cette fonction vous donne
   plus de contrôle sur les types des paramètres, les types des données, la
   précision, et l'échelle pour le paramètre qu'en lui passant simplement une
   variable à l'intérieur du tableau d'entrée optionnel de la fonction
   <function>db2_execute</function>.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stmt</parameter></term>
     <listitem>
      <para>
       Une requête préparée retournée par <function>db2_prepare</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>parameter-number</parameter></term>
     <listitem>
      <para>
       Spécifie la position du paramètre commençant à l'indice 1 dans la
       requête préparée.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
    <term><parameter>variable-name</parameter></term>
     <listitem>
      <para>
       Une chaîne spécifiant le nom de la variable &php; à associer au
       paramètre spécifié par <parameter>parameter-number</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>parameter-type</parameter></term>
     <listitem>
      <para>
       Une constante spécifiant si la variable &php; devrait être associé au
       paramètre SQL en tant que paramètre entrant
       (<literal>DB2_PARAM_IN</literal>), que paramètre sortant
       (<literal>DB2_PARAM_OUT</literal>) ou en tant que paramètre qui accepte
       les entrées et les sorties (<literal>DB2_PARAM_INOUT</literal>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data-type</parameter></term>
     <listitem>
      <para>
       Une constante spécifiant le type de données SQL que la variable &php;
       devrait être associée. Le paramètre doit prendre une des valeurs
       suivantes : <literal>DB2_BINARY</literal>,
       <literal>DB2_CHAR</literal>, <literal>DB2_DOUBLE</literal> ou
       <literal>DB2_LONG</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>precision</parameter></term>
     <listitem>
      <para>
       Spécifie la précision à laquelle la variable devrait être associée à
       la base de données.
      </para>
     </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>scale</parameter></term>
     <listitem>
      <para>
       Spécifie l'échelle à laquelle la variable devrait être associée à la
       base de données.
      </para>
     </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Association de variables &php; à une requête préparée</title>
    <para>
     La requête SQL dans l'exemple suivant utilise deux paramètres d'entrée
     dans la section WHERE. Nous appelons <function>db2_bind_param</function>
     pour associer deux variables qui n'ont pas été déclarées ou assignées
     avant l'appel de <function>db2_bind_param</function>; dans cet exemple,
     <literal>$lower_limit</literal> est assignée avant d'être appelée à
     <function>db2_bind_param</function>, mais <literal>$upper_limit</literal>
     est assignée après l'appel de <function>db2_bind_param</function>. Les
     variables doivent être associées et, pour les paramètres qui acceptent les
     entrées, nous devons leur assigner une valeur avant d'appeler
     <function>db2_execute</function>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$sql = 'SELECT nom, race, poids FROM animaux
    WHERE poids > ? AND poids < ?';
$conn = db2_connect($database, $user, $password);
$stmt = db2_prepare($conn, $sql);

// Nous pouvons déclarer la variable avant d'appeler db2_bind_param()
$lower_limit = 1;

db2_bind_param($stmt, 1, "lower_limit", DB2_PARAM_IN);
db2_bind_param($stmt, 2, "upper_limit", DB2_PARAM_IN);

// Nous pouvons aussi déclarer la variable après l'appel de db2_bind_param()
$upper_limit = 15.0;

if (db2_execute($stmt)) {
    while ($row = db2_fetch_into($stmt)) {
        print "{$row[0]}, {$row[1]}, {$row[2]}\n";	
    }
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Pook, chat, 3.2
Rickety Ride, chèvre, 9.7
Peaches, chien, 12.3
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>db2_execute</function></member>
    <member><function>db2_prepare</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
