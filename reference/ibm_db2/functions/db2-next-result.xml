<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.4 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->
<refentry id="function.db2-next-result">
 <refnamediv>
  <refname>db2_next_result</refname>
  <refpurpose>
   Demande le prochain jeu de résultats de la ressource indiquée
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>db2_next_result</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
  </methodsynopsis>

  <para>
   Une procédure d'enregistrement peut retourner aucun ou plusieurs jeux de
   résultats. Vous devez gérer le premier jeu de résultats de la même manière
   que vous gèreriez les résultats retournés par une simple requête SELECT,
   pour obtenir le second ou les résultats suivants, vous devez appeler la
   fonction <function>db2_next_result</function> et retourner le résultat dans
   une variable &php;.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
    <term><parameter>stmt</parameter></term>
     <listitem>
      <para>
       Une requête préparée retournée par <function>db2_exec</function> ou
       <function>db2_execute</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne une nouvelle ressource contenant le jeu de résultats suivants si
   la procédure contenait un jeu de résultats suivant. Retourne &false; si la
   procédure n'avait plus de jeu de résultats à retourner.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>db2_next_result</function></title>
    <para>
     Dans l'exemple suivant, nous appelons une procédure qui retourne trois
     jeux de résultats. Le premier jeu de résultats est récupéré directement
     de la même ressource sur laquelle on a invoqué une requête CALL, alors
     que le deuxième et troisième jeux de résultats sont récupérés des
     ressources retournées par l'appel de la fonction
     <function>db2_next_result</function>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$conn = db2_connect($database, $user, $password);

if ($conn) {
  $stmt = db2_exec($conn, 'CALL multiResults()');

  print "Récupération du premier jeu de résultats\n";
  while ($row = db2_fetch_array($stmt)) {
    var_dump($row);
  }

  print "\nRécupération du deuxième jeu de résultats\n";
  $res = db2_next_result($stmt);
  if ($res) {
    while ($row = db2_fetch_array($res)) {
      var_dump($row);
    }
  }

  print "\nRécupération du troisième jeu de résultats\n";
  $res2 = db2_next_result($stmt);
  if ($res2) {
    while ($row = db2_fetch_array($res2)) {
      var_dump($row);
    }
  }

  db2_close($conn);
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Récupération du premier jeu de résultats
array(2) {
  [0]=>
  string(16) "Bubbles         "
  [1]=>
  int(3)
}
array(2) {
  [0]=>
  string(16) "Gizmo           "
  [1]=>
  int(4)
}

Récupération du deuxième jeu de résultats
array(4) {
  [0]=>
  string(16) "Sweater         "
  [1]=>
  int(6)
  [2]=>
  string(5) "lama"
  [3]=>
  string(6) "150.00"
}
array(4) {
  [0]=>
  string(16) "Smarty          "
  [1]=>
  int(2)
  [2]=>
  string(5) "cheval"
  [3]=>
  string(6) "350.00"
}

Récupération du troisième jeu de résultats
array(1) {
  [0]=>
  string(16) "Bubbles         "
}
array(1) {
  [0]=>
  string(16) "Gizmo           "
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <!-- Use when adding See Also links
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function></function></member>
    <member>Or <link linkend="somethingelse">something else</link></member>
   </simplelist>
  </para>
 </refsect1>
 -->


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
