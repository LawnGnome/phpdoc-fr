<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.5 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->
<refentry id="function.db2-execute">
 <refnamediv>
  <refname>db2_execute</refname>
  <refpurpose>
   Exécute une requête SQL préparée
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>db2_execute</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>parameters</parameter></methodparam>
  </methodsynopsis>

  &warn.experimental.func;

  <para>
   <function>db2_execute</function> exécute une requête SQL qui a été
   préparée par <function>db2_prepare</function>.
  </para>
  <para>
   Si la requête SQL retourne un jeu de résultats, par exemple, une requête
   SELECT ou CALL à une procédure d'enregistrement retourne un ou
   plusieurs jeux de résultats, vous pouvez récupérer une ligne en tant que
   tableau à partir de la ressource <literal>stmt</literal> en utilisant
   <function>db2_fetch_assoc</function>,
   <function>db2_fetch_both</function> ou
   <function>db2_fetch_array</function>. Alternativement, vous pouvez utiliser
   <function>db2_fetch_row</function> pour déplacer le pointeur à
   la ligne suivante et récupérer une colonne à la fois de cette ligne avec la
   fonction <function>db2_result</function>.
  </para>
  <para>
   Référez-vous à <function>db2_prepare</function> pour une brève discussion
   sur les avantages de l'utilisation de <function>db2_prepare</function> et
   <function>db2_execute</function> plutôt que <function>db2_exec</function>.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stmt</parameter></term>
     <listitem>
      <para>
       Une requête préparée retournée par <function>db2_prepare</function>.
      </para>
     </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>parameters</parameter></term>
     <listitem>
      <para>
       Un tableau des paramètres d'entrée qui contient les marqueurs de
       variables contenus dans la requête préparée.
      </para>
     </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Préparation et exécution d'une requête SQL avec des marqueurs</title>
    <para>
     L'exemple suivant prépare une requête INSERT qui accepte quatre
     marqueurs, ensuite itère sur le tableau contenant les valeurs d'entrées
     qui sera passé à la fonction <function>db2_execute</function>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$pet = array(0, 'chat', 'Pook', 3.2);

$insert = 'INSERT INTO animaux (id, race, nom, poids)
    VALUES (?, ?, ?, ?)';

$stmt = db2_prepare($conn, $insert);
if ($stmt) {
    $result = db2_execute($stmt, $pet);
    if ($result) {
        print "Ajout d'un nouvel animal réussi.";
    }
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Ajout d'un nouvel animal réussi.
]]>
    </screen>
   </example>
   <example>
    <title>Appel d'une procédure d'enregistrement avec un paramètre de SORTIE</title>
    <para>
     L'exemple suivant prépare une requête CALL qui accepte un marqueur qui
     représente un paramètre de SORTIE, lie la variable PHP <literal>$my_pets</literal>
     au paramètre en utilisant la fonction
     <function>db2_bind_param</function> et appelle la fonction
     <function>db2_execute</function> pour exécuter la requête
     CALL. Une fois que la requête CALL a été exécutée, la valeur de
     <literal>$num_pets</literal> change pour réfléchir la valeur retournée
     par la procédure d'enregistrement pour ce paramètre de SORTIE.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$num_pets = 0;
$res = db2_prepare($conn, "CALL count_my_pets(?)");
$rc = db2_bind_param($res, 1, "num_pets", DB2_PARAM_OUT);
$rc = db2_execute($res);
print "Je possède $num_pets animaux !";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Je possède 7 animaux !
]]>
    </screen>
   </example>


  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>db2_exec</function></member>
    <member><function>db2_fetch_array</function></member>
    <member><function>db2_fetch_assoc</function></member>
    <member><function>db2_fetch_both</function></member>
    <member><function>db2_fetch_row</function></member>
    <member><function>db2_prepare</function></member>
    <member><function>db2_result</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
