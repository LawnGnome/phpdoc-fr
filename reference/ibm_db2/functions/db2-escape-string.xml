<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.db2-escape-string" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>db2_escape_string</refname>
  <refpurpose>
   Utilisé pour échapper certains caractères
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>db2_escape_string</methodname>
   <methodparam><type>string</type><parameter>string_literal</parameter></methodparam>
  </methodsynopsis>
  <para>
   Place des antislashs devant les caractères spéciaux à la chaîne de caractères passée en argument.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string_literal</parameter></term>
     <listitem>
      <para>
       Une &string; qui contient des caractères spéciaux qui doivent être modifiés.
       Les caractères qui sont transformés à l'aide d'un antislash sont <literal>\x00</literal>,
       <literal>\n</literal>, <literal>\r</literal>, <literal>\</literal>,
       <literal>'</literal> <literal>"</literal> et <literal>\x1a</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne <parameter>string_literal</parameter> avec les caractères spéciaux mentionnés
   ci-dessus précédés par des antislashs.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>db2_escape_string</function></title>
    <para>
     Résultat suite à l'utilisation de la fonction <function>db2_escape_string</function>
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$conn = db2_connect($database, $user, $password);

if ($conn) {
    $str[0] = "Tous les caractères : \x00 , \n , \r , \ , ' , \" , \x1a .";
    $str[1] = "Antislash (\). Apostrophe ('). Guillemet (\")";
    $str[2] = "Le caractère NULL \0 doit être transformé aussi";
    $str[3] = "Caractères intéressants : \x1a , \x00 .";
    $str[4] = "Rien à transformer";
    $str[5] = 200676;
    $str[6] = "";

    foreach( $str as $string ) {
        echo "db2_escape_string: " . db2_escape_string($string). "\n";
    }
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
db2_escape_string: Tous les caractères : \0 , \n , \r , \\ , \' , \" , \Z .
db2_escape_string: Antislash (\\). Apostrophe (\'). Guillemet (\")
db2_escape_string: Le caractère NULL \0 doit être transformé aussi
db2_escape_string: Caractères intéressants : \Z , \0 .
db2_escape_string: Rien à transformer
db2_escape_string: 200676
db2_escape_string:
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>db2_prepare</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
