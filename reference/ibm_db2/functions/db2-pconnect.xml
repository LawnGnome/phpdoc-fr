<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.2 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->
<refentry id="function.db2-pconnect">
 <refnamediv>
  <refname>db2_pconnect</refname>
  <refpurpose>
   Retourne une connexion persistante à une base de données
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>db2_pconnect</methodname>
   <methodparam><type>string</type><parameter>database</parameter></methodparam>
   <methodparam><type>string</type><parameter>username</parameter></methodparam>
   <methodparam><type>string</type><parameter>password</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
  </methodsynopsis>

  &warn.experimental.func;

  <para>
   Retourne une connexion persistante à une base de données IBM DB2
   Universal Database, IBM Cloudscape ou Apache Derby. Pour plus
   d'informations sur les connexions persistantes, référez-vous à 
   <xref linkend='features.persistent-connections' />.
  </para>

  <para>
   En appelant <function>db2_close</function> sur une connexion persistante,
   vous recevrez toujours &true;, mais les connexions des clients DB2
   demeureront ouvertes et attendront de servir la prochaine demande de la
   fonction <function>db2_pconnect</function>.
  </para>

  <para>
   Notez qu'il est vivement recommandé d'utiliser des connexions persistantes
   avec la valeur autocommit activée. Si vous essayez de combiner les
   transactions sur des connexion persistante, l'appel de fonctions
   <function>db2_commit</function> ou <function>db2_rollback</function> contre
   une connexion persistante affectera chaque connexion persistante qui
   utilisent les mêmes connexions des clients DB2. Vous devriez aussi
   rapidement éprouver des blocages de verrous si vous n'utilisez pas autocommit pour des
   connexions persistantes.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>database</parameter></term>
     <listitem>
      <para>
       L'alias de la base de données dans le catalogue du client DB2.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       Le nom d'utilisateur avec lequel vous vous connectez à la base de
       données.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       Le mot de passe avec lequel vous vous connectez à la base de données.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Un tableau associatif des options de connexion qui affecteront le
       comportement de la connexion, où les valeurs des clés incluent :
       <variablelist>
        <varlistentry>
         <term><parameter>autocommit</parameter></term>
         <listitem>
          <para>
           La valeur <literal>DB2_AUTOCOMMIT_ON</literal> active le autocommit
           sur cette connexion.
          </para>
          <para>
           La valeur <literal>DB2_AUTOCOMMIT_OFF</literal> désactive le
           autocommit pour cette connexion.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la ressource de connexion si la tentative de connexion réussie.
   <function>db2_pconnect</function> essaie de réutiliser une ressource de
   connexion existante qui correspond parfaitement aux paramètres tels que la base de données
   <parameter>database</parameter>, l'utilisateur <parameter>username</parameter>
   et le mot de passe <parameter>password</parameter>. Si la tentative de
   connexion échoue, <function>db2_pconnect</function> retourne &false;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple d'utilisation de <function>db2_pconnect</function></title>
    <para>
     Dans l'exemple suivant, le premier appel à
     <function>db2_pconnect</function> retourne une nouvelle ressource de
     connexion persistante. Le second appel à la fonction
     <function>db2_pconnect</function> retourne une ressource de connexion
     persistante qui réutilise la première ressource de connexion.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$database = 'EXEMPLE';
$user = 'db2inst1';
$password = 'ibmdb2';

$pconn = db2_pconnect($database, $user, $password);

if ($pconn) {
    echo "Connexion persistante réussie.";
}
else {
    echo "Connexion persistante échouée.";
}

$pconn2 = db2_pconnect($database, $user, $password);
if ($pconn) {
    echo "Deuxième connexion persistante réussie.";
}
else {
    echo "Deuxième connexion persistante échouée.";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Connexion persistante réussie.
Deuxième connexion persistante réussie.
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>db2_connect</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
