<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.4 Maintainer: yannick Status: ready -->
 <reference id="ref.apd">
  <title>Débogueur avancé pour PHP</title>
  <titleabbrev>APD</titleabbrev>
  <partintro>

  <section id="apd.intro">
    &reftitle.intro;
    <para>
     APD est un débogueur avancé pour &php; (<literal>Advanced PHP Debugger</literal>).
     Il a été écrit pour fournir des capacités de profilage et de déboguage
     du code &php; tout comme la possibilité d'afficher un retour de trace de la pile.
     APD supporte le débogage interactif, mais, par défaut, il écrit
     les données dans des fichiers de trace. APD fournit également la notation basée par événement,
     de sorte que les niveaux d'information (incluant les appels de fonctions, le passage d'arguments,
     le délai d'exécution, etc.) peuvent être activer ou non pour chaque script.
    </para>
    <caution>
     <para>
      APD est une extension Zend, qui modifie la façon interne de gestion des appels de
      fonctions &php; et peut ou ne pas être compatible avec d'autres extensions Zend
      (par exemple avec le <literal>Zend Optimizer</literal>).
     </para>
   </caution>
  </section>

  &reference.apd.configure;

  &reference.apd.ini;

  <section id="apd.resources">
   &reftitle.resources;
   &no.resource;
  </section>

  <section id="apd.constants">
   &reftitle.constants;
   &no.constants;
  </section>

  <section id="apd.examples">
   <title>Comment utiliser PHP-APD dans vos scripts ?</title>
   <procedure>
   <step>
   <para>
    A la première ligne de vos scripts &php;, appelez la fonction apd_pprof_trace() 
    pour commencer la trace :
   </para>
   <para>
    <programlisting role="php">
<![CDATA[
apd_set_pprof_trace();
]]>
    </programlisting>
   </para>
   <para>
    Vous pouvez ajouter cette ligne n'importe où dans votre script, mais si vous ne commencez
    pas à tracer au début de votre script, vous désactivez les données de profil
    qui pourraient autrement vous mener à un goulot d'étranglement d'exécution.
   </para>
   </step>
   <step>
   <para>
    Maintenant, éxécutez votre script. Le contenu de la sortie devrait être écrit dans le 
    fichier <filename>apd.dumpdir/pprof_pid.ext</filename>.
    <tip>
     <para>
      Si vous utilisez la version CGI de &php;, vous devez ajouter le flag '-e' pour activer
      les informations étendues pour que apd fonctionne correctement. Par exemple :
      <userinput>php -e -f script.php</userinput>
     </para>
    </tip>
   </para>
   
   </step>
   <step>
    <para>
     Pour afficher les données de profile formattées, exécutez la commande
     <command>pprofp</command> avec les options de trie et d'affichage de votre
     choix. L'affichage formattée pourra ressembler à celà :
     <screen>
<![CDATA[
bash-2.05b$ pprofp -R /tmp/pprof.22141.0

Trace for /home/dan/testapd.php
Total Elapsed Time = 0.00
Total System Time  = 0.00
Total User Time    = 0.00


Real         User        System             secs/    cumm
%Time (excl/cumm)  (excl/cumm)  (excl/cumm) Calls    call    s/call  Memory Usage Name
--------------------------------------------------------------------------------------
100.0 0.00 0.00  0.00 0.00  0.00 0.00     1  0.0000   0.0009            0 main
56.9 0.00 0.00  0.00 0.00  0.00 0.00     1  0.0005   0.0005            0 apd_set_pprof_trace
28.0 0.00 0.00  0.00 0.00  0.00 0.00    10  0.0000   0.0000            0 preg_replace
14.3 0.00 0.00  0.00 0.00  0.00 0.00    10  0.0000   0.0000            0 str_replace
]]>
     </screen>
    </para>
    <para>
     L'option -R utilisée dans cet exemple trie la table de profil par la durée
     réelle qu'une fonction donnée coûte au script. La colonne "cumm call"
     révèle le nombre d'appel de chaque fonction et la colonne
     "s/call", le nombre de secondes chaque appel à la fonction nécessite, en moyenne.
    </para>
    </step>
    <step>
     <para>
      Pour générer un fichier d'appel sous forme d'arbre que vous pourrez importer dans l'application
      KCacheGrind (application d'analyse de profile), exécutez la commande 
      <command>pprof2calltree</command>.
     </para>
    </step>
    </procedure>
   </section>
   
   <section id="apd.contact">
    <title>Informations de contact</title>
    <para>
     Si vous avez des commentaires, des corrections de bogues ou si vous
     voulez développer des améliorations pour cette extension, vous pouvez
     envoyer un email à
     <ulink url="mailto:&email.apd;">&email.apd;</ulink>.
     Toute aide est vraiment la bienvenue.
    </para>
   </section>
 </partintro>

&reference.apd.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
