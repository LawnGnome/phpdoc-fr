<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.9 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.bbcode-create" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>bbcode_create</refname>
  <refpurpose>Crée une ressource BBCode</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>bbcode_create</methodname>
   <methodparam choice="opt"><type>array</type><parameter>bbcode_initial_tags</parameter></methodparam>
  </methodsynopsis>

  <para>
   Cette fonction retourne une nouvelle ressource BBCode, utilisée
   pour analyser les chaînes BBCode.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>bbcode_initial_tags</parameter></term>
     <listitem>
      <para>
       Un tableau associatif contenant les noms des balises en tant que clés,
       et les paramètres requis afin d'analyser correctement le code BBCode
       en tant que valeurs. Les paires clés/valeurs suivantes sont supportées :
        <itemizedlist>
         <listitem>
          <simpara>
           <varname remap="structfield">flags</varname> optionnel - un jeu de
           drapeaux, basé sur les constantes BBCODE_FLAGS_*.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">type</varname> requis - un entier,
           indiquant le type de drapeau. Utilisez les constantes
           BBCODE_TYPE_*.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">open_tag</varname> requis - la chaîne
           HTML de remplacement pour la balise ouvrante.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">close_tag</varname> requis - la chaîne
           HTML de remplacement pour la balise fermante.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">default_arg</varname> optionnel -
           utilise cette valeur en tant qu'argument par défaut si aucun
           n'est fourni et que tag_type est du type OPTARG.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">content_handling</varname> optionnel -
           Fournit le callback utlisée pour modifier le contenu.
           La notation orientée objet est supportée uniquement depuis la version
           0.10.1. Le prototype de callback est une chaîne comme ceci
           (string $content, string $argument)
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">param_handling</varname> optionnel -
           Fournit le callback utilisé pour modifier l'argument. La notation
           orientée objet est supportée uniquement depuis la version 0.10.1.
           Le prototype de callback est une chaîne comme ceci
           (string $content, string $argument)
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">childs</varname> optionnel - Liste des
           enfants acceptés en tant que balise. Le format de la liste est une
           succession de chaînes, séparées par une virgule. Si la liste commence
           par un point d'exclamation, ce sera la liste des enfants rejetées
           comme balises.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">parent</varname> optionnel - Liste des enfants
           acceptés pour la balise. Le format de la liste est une succession de
           chaînes, séparées par une virgule.
          </simpara>
         </listitem>
        </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un BBCode_Container
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>bbcode_create</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$arrayBBCode=array(
    ''=>         array('type'=>BBCODE_TYPE_ROOT,  'childs'=>'!i'),
    'i'=>        array('type'=>BBCODE_TYPE_NOARG, 'open_tag'=>'<i>',
                    'close_tag'=>'</i>', 'childs'=>'b'),
    'url'=>      array('type'=>BBCODE_TYPE_OPTARG,
                    'open_tag'=>'<a href="{PARAM}">', 'close_tag'=>'</a>',
                    'default_arg'=>'{CONTENT}',
                    'childs'=>'b,i'),
    'img'=>      array('type'=>BBCODE_TYPE_NOARG,
                    'open_tag'=>'<img src="', 'close_tag'=>'" />',
                    'childs'=>''),
    'b'=>        array('type'=>BBCODE_TYPE_NOARG, 'open_tag'=>'<b>',
                    'close_tag'=>'</b>'),
);
$text=<<<EOF
[b]Bold Text[/b]
[i]Italic Text[/i]
[url]http://www.php.net/[/url]
[url=http://pecl.php.net/][b]Content Text[/b][/url]
[img]http://static.php.net/www.php.net/images/php.gif[/img]
[url=http://www.php.net/]
[img]http://static.php.net/www.php.net/images/php.gif[/img]
[/url]
EOF;
$BBHandler=bbcode_create($arrayBBCode);
echo bbcode_parse($BBHandler,$text);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
<b>Bold Text</b>
<i>Italic Text</i>
<a href="http://www.php.net/">http://www.php.net/</a>
<a href="http://pecl.php.net/"><b>Content Text</b></a>
<img src="http://static.php.net/www.php.net/images/php.gif" />
<a href="http://www.php.net/">
[img]http://static.php.net/www.php.net/images/php.gif[/img]
</a>
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
