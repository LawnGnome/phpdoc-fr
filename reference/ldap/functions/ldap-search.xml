<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
<!-- EN-Revision: 1.10 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry id="function.ldap-search">
 <refnamediv>
  <refname>ldap_search</refname>
  <refpurpose>Recherche sur le serveur LDAP</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>ldap_search</methodname>
   <methodparam><type>resource</type><parameter>link_identifier</parameter></methodparam>
   <methodparam><type>string</type><parameter>base_dn</parameter></methodparam>
   <methodparam><type>string</type><parameter>filter</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>attributes</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>attrsonly</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>sizelimit</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timelimit</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>deref</parameter></methodparam>
  </methodsynopsis>
  <para>
   Effectue une recherche avec le filtre <parameter>filter</parameter> dans le
   dossier <parameter>base_dn</parameter> avec le paramétrage
   <constant>LDAP_SCOPE_SUBTREE</constant>.  C'est l'équivalent 
   d'une recherche dans le dossier. <parameter>base_dn</parameter> 
   spécifie le DN de base du dossier.
  </para>
  <para>
   Depuis &php; 4.0.5, il est possible de faire des recherches parallèles. Pour cela,
   vous devez utiliser un tableau de ressources de connexion comme premier argument,
   au lieu d'une ressource simple. Si vous ne voulez pas utiliser le même
   dossier de base DN et le même filtre pour toutes les recherches, 
   vous pouvez aussi utiliser un tableau de DN et de filtres. Ces
   tableaux doivent alors être de la même taille que le tableau de
   ressources de connexion : la première entrée du tableau de ressources
   sera utilisée avec le premier DN et le premier filtre, etc.
   Lorsque vous faites une recherche parallèle, un tableau de résultats
   est retourné, sauf en cas d'erreur, auquel cas l'entrée contiendra
   &false;. C'est très proche du comportement habituel, hormis le fait
   qu'un résultat est toujours retourné lorsqu'une recherche est faite.
   Il y a de rares cas où une recherche renvoie &false;, alors qu'une
   autre en parallèle retourne un identifiant.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>link_identifier</parameter></term>
     <listitem>
      <para>
       Un identifiant de lien LDAP, retourné par la fonction
       <function>ldap_connect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>base_dn</parameter></term>
     <listitem>
      <para>
       La base DN pour le dossier.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>filter</parameter></term>
     <listitem>
      <para>
       Le filtre de recherche peut être simple ou avancé, et utiliser ces
       opérateurs booléen au format décrit dans la documentation LDAP
       (reportez-vous à <ulink url="&url.ldap.filters;">Netscape Directory SDK</ulink>
       pour plus d'informations sur les filtres).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>attributes</parameter></term>
     <listitem>
      <para>
       Un tableau d'attributs requis, e.g. array("mail", "sn", "cn").
       Notez que le "dn" est toujours retourné, quelque soit le type de l'attribut
       demandé.
      </para>
      <para>
       L'utilisation de ce paramètre est plus efficace que l'action par défaut
       (qui est de retourner tous les attributs ainsi que leurs valeurs associées).
       L'utilisation de ce paramètre doit toutefois être concidéré comme une bonne
       pratique.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>attrsonly</parameter></term>
     <listitem>
      <para>
       Doit être défini à &one; si seuls les types des attributs sont demandés.
       S'il est défini à &zero;, les types et les valeurs des attributs sont récupérés,
       ce qui correspond au comportement par défaut.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sizelimit</parameter></term>
     <listitem>
      <para>
       Vous permet de limiter le nombre d'entrées à récupérer. Le fait
       de définir ce paramètre à &zero; signifie qu'il n'y aura aucune limite.
      </para>
      <note>
       <para>
        Ce paramètre ne peut pas écraser la configuration côté serveur. Vous
        pouvez cependant positionner une valeur inférieure.
       </para>
       <para>
        Quelques dossiers serveurs peuvent être configurés afin de ne retourner
        qu'un nombre d'entrées données. Si ce comportement survient, le serveur
        indique qu'il n'a retourné qu'un jeu de résultats partiel. Ce comportement
        intervient également si vous utilisez ce paramètre pour limiter le nombre
        d'entrées récupérées.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timelimit</parameter></term>
     <listitem>
      <para>
       Définit le nombre maximal de secondes permis pour la recherche.
       Le fait de définir ce paramètre à &zero; signifie qu'il n'y a pas de limite.
      </para>
      <note>
       <para>
        Ce pareamètre ne peut pas écraser la configuration côté serveur mais vous
        pouvez l'utiliser pour être plus restrictif.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>deref</parameter></term>
     <listitem>
      <para>
       Spécifie le nombre d'alias qui doivent être gérés pendant la recherche.
       Il peut être un parmis les suivants :
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>LDAP_DEREF_NEVER</constant> - (défaut) les alias ne sont jamais déréférencés.
          dereferenced.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>LDAP_DEREF_SEARCHING</constant> - les aliases doivent être déréférencés
          pendant la recherche mais pas lors de la localisation de l'objet de base de la recherche.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>LDAP_DEREF_FINDING</constant> - les aliases doivent être déréférencés
          lors de la localisation de l'objet de base mais pas durant la recherche.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>LDAP_DEREF_ALWAYS</constant> - les aliases doivent toujours être
          déréférencés.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un identifiant de recherche ou &false; si une erreur survient.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.0.5</entry>
       <entry>
        Les recherches parallèles ont été ajoutées. Voir la fonction
        <function>ldap_search</function> pour plus de détails.
       </entry>
      </row>
      <row>
       <entry>4.0.2</entry>
       <entry>
        Les paramètres <parameter>attrsonly</parameter>, <parameter>sizelimit</parameter>,
        <parameter>timelimit</parameter> et <parameter>deref</parameter> on été ajoutés.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   L'exemple ci-dessous lit le nom du service, le nom, le prénom et 
   l'email des employés de la société "Ma Compagnie", dont le nom ou
   le prénom contient la sous-chaîne : $person. Cet exemple illustre
   l'utilisation de filtres pour indiquer au serveur de faire une 
   recherche sur deux attributs.
   <example>
    <title>Recherche LDAP</title>
    <programlisting role="php">
<![CDATA[
<?php
// $ds doit être une ressource de connexion valide

// $person est un nom ou une partie de nom (par exemple, "Jean")

$dn = "o=My Company, c=US";
$filter="(|(sn=$person*)(givenname=$person*))";
$justthese = array("ou", "sn", "givenname", "mail");

$sr=ldap_search($ds, $dn, $filter, $justthese);

$info = ldap_get_entries($ds, $sr);

echo $info["count"]." entries returned\n";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->