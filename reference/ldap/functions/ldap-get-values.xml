<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.10 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
  <refentry id="function.ldap-get-values">
   <refnamediv>
    <refname>ldap_get_values</refname>
    <refpurpose>Lit toutes les valeurs d'une entrée LDAP</refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>array</type><methodname>ldap_get_values</methodname>
      <methodparam><type>resource</type><parameter>link_identifier</parameter></methodparam>
      <methodparam><type>resource</type><parameter>result_entry_identifier</parameter></methodparam>
      <methodparam><type>string</type><parameter>attribute</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>ldap_get_values</function> retourne un tableau de valeurs pour
     l'attribut <parameter>attribute</parameter>, ou &false; en cas d'erreur.
    </para>
    <para>  
     <function>ldap_get_values</function> sert à lire toutes les valeurs
     de l'attibut <parameter>attribute</parameter>, dans l'entrée
     courante du résultat de recherche <parameter>result_entry_identifier</parameter>,
     pour la connexion <parameter>link_identifier</parameter>. Le nombre de valeurs
     retournées est disponible à l'index 'count' du tableau retourné.
     Les valeurs sont accessibles individuellement, avec les
     index numériques du tableau. L'indexation commence à 0.
    </para>  
    <para>
     L'utilisation de la fonction <parameter>result_entry_identifier</parameter>
     requiert un résultat de recherche, et doit donc être précédée d'une
     recherche LDAP, et de l'une des fonctions permettant d'accéder
     à une entrée.
    </para>
    <para>
     Votre application doit contenir des informations permettant
     de lire certains attributs (comme "nom" ou "mail"), ou bien vous
     devrez utiliser la fonction <function>ldap_get_attributes</function>
     pour savoir quels sont les attributs qui existent pour une entrée donnée.
    </para>
    <para>
     LDAP permet plus d'une entrée par attribut, ce qui permet de stocker plusieurs
     addresse emails par personne, tout en n'utilisant qu'une étiquette
     "mail" :
    <example>
     <title>Structure du tableau retourné par <function>ldap_get_values</function></title>
     <programlisting>
return_value["count"] = nombre de valeurs de l'attribut
return_value[0] = première valeur de l'attribut
return_value[i] = n-ième valeur de l'attribut
     </programlisting>
    </example>

     <example>
      <title>Liste toutes les valeurs de l'attribut "mail" d'une entrée</title>
      <programlisting role="php">
<![CDATA[
<?php
// $ds doit être une ressource de connexion valide

// $sr doit être une ressource de résultat valide, obtenue avec une des fonctions de
//     recherche LDAP.

// $entry est une entrée LDAP valide, obtenue avec une des fonctions
//        LDAP qui retourne une entrée

$values = ldap_get_values($ds, $entry,"mail");

echo $values["count"] . " adresses email pour cette entrée.<br />";

for ($i=0; $i < $values["count"]; $i++) {
    echo $values[$i] . "<br />";
}
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
