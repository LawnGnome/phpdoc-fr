<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/ldap.xml, last change in rev 1.10 -->
<!-- last change to 'ldap-get-values' in en/ tree in rev 1.2 -->
 <refentry id="function.ldap-get-values">
  <refnamediv>
   <refname>ldap_get_values</refname>
   <refpurpose>Retourne toutes les entr&eacute;es d'un r&eacute;sultat.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
    <methodsynopsis>
     <type>array</type><methodname>ldap_get_values</methodname>
     <methodparam><type>resource</type><parameter>link_identifier</parameter></methodparam>
     <methodparam><type>resource</type><parameter>result_entry_identifier</parameter></methodparam>
     <methodparam><type>string</type><parameter>attribute</parameter></methodparam>
    </methodsynopsis>
   <para>
    <function>ldap_get_option</function> retourne un tableau de valeurs en
    cas de succ&egrave;s, et &true; sinon.
   </para>
   <para>
    <function>ldap_get_values</function> sert &agrave; lire toutes les valeurs
    d'un attribut dans une entr&eacute;e. L'entr&eacute;e est
    r&eacute;f&eacute;renc&eacute;e par
    <parameter>result_entry_identifier</parameter>. Le nombre de valeurs
    peut &ecirc;tre trouv&eacute; &agrave; l'index "count" dans le r&eacute;sultat.
    Les valeurs sont accessibles par un index entier, qui commence &agrave; 0.
   </para>
   <para>
    <function>ldap_get_values</function> n&eacute;cessite un pointeur de
    r&eacute;sultat <parameter>result_entry_identifier</parameter>, ce qui
    implique qu'il ait &eacute;t&eacute; pr&eacute;c&eacute;d&eacute; d'une
    recherche sur le serveur, et de l'obtention d'une entr&eacute;e.
   </para>
   <para>
    Votre application pourra utiliser des noms d'attributs en dur dans le code, ou
    bien, utiliser la fonction <function>ldap_get_attributes</function> pour y
    acc&eacute;der dynamiquement.
   </para>
   <para>
    LDAP autorise plus d'une entr&eacute;e par attribut, ce qui permet,
    par exemple, d'&eacute;tiqueter tous les adresses email d'un utilisateur
    avec l'attribut "mail"
    <informalexample>
     <literallayout>
return_value["count"] = nombre de valeurs de l'attribut
return_value[0] = premi&egrave;re valeur de l'attribut
return_value[i] = n-i&egrave;me valeur de attribut
     </literallayout>
    </informalexample>
    <example>
     <title>Liste toutes les valeurs avec l'attribut "mail" </title>
     <programlisting role="php">
&lt;?php
// $ds est l'identifiant de lien pour ce dossier
// $sr est un r&eacute;sultat de recherche valide, obtenu lors d'une recherche
// pr&eacute;c&eacute;dente
// $entry est un identifiant valide d'entr&eacute;e
  $values = ldap_get_values($ds, $entry,"mail");
  echo $values["count"]." Adresse email dans ce r&eacute;sultat.&lt;p>";
  for ($i=0; $i &lt; $values["count"]; $i++)
    echo $values[$i]."&lt;br&gt;";
?&gt;
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
