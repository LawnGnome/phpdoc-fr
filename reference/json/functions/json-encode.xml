<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 291313 Maintainer: dams Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.json-encode" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>json_encode</refname>
  <refpurpose>Retourne le représentation JSON d'une valeur</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>json_encode</methodname>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Retourne une chaîne contenant la représentation JSON de la valeur
   <parameter>value</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       La valeur à encoder. Peut être de n'importe quel type, excepté une &resource;.
      </para>
      <para>
       Cette fonction ne fonctionne qu'avec des données encodées UTF-8.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Masque composé des constantes
       <constant>JSON_HEX_QUOT</constant>,
       <constant>JSON_HEX_TAG</constant>,
       <constant>JSON_HEX_AMP</constant>,
       <constant>JSON_HEX_APOS</constant>,
       <constant>JSON_FORCE_OBJECT</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne une chaîne encodé JSON.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Le paramètre <parameter>options</parameter> a été ajouté.
       </entry>
      </row>
      <row>
       <entry>5.2.1</entry>
       <entry>
        Ajout du support des types basiques d'encodage JSON
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>json_encode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$arr = array ('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5);

echo json_encode($arr);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
{"a":1,"b":2,"c":3,"d":4,"e":5}
]]>
    </screen>
   </example>
   <example>
    <title>Exemple avec <function>json_encode</function> montrant toutes les options</title>
    <programlisting role="php">
<![CDATA[
<?php
$a = array('<foo>',"'bar'",'"baz"','&blong&');

echo "Normal : ", json_encode($a), "\n";
echo "Tags : ",   json_encode($a,JSON_HEX_TAG), "\n";
echo "Apos : ",   json_encode($a,JSON_HEX_APOS), "\n";
echo "Quot : ",   json_encode($a,JSON_HEX_QUOT), "\n";
echo "Amp : ",    json_encode($a,JSON_HEX_AMP), "\n";
echo "Toutes : ",    json_encode($a,JSON_HEX_TAG|JSON_HEX_APOS|JSON_HEX_QUOT|JSON_HEX_AMP), "\n\n";

$b = array();

echo "Tableau vide sous forme de tableau : ", json_encode($b), "\n";
echo "Tableau vide sous forme d'objet : ", json_encode($b, JSON_FORCE_OBJECT), "\n\n";

$c = array(array(1,2,3));

echo "Tableau non-associatif sous forme de tableau : ", json_encode($c), "\n";
echo "Tableau non-associatif sous forme d'objet : ", json_encode($c, JSON_FORCE_OBJECT), "\n\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Normal : ["<foo>","'bar'","\"baz\"","&blong&"]
Tags : ["\u003Cfoo\u003E","'bar'","\"baz\"","&blong&"]
Apos : ["<foo>","\u0027bar\u0027","\"baz\"","&blong&"]
Quot : ["<foo>","'bar'","\u0022baz\u0022","&blong&"]
Amp : ["<foo>","'bar'","\"baz\"","\u0026blong\u0026"]
Toutes : ["\u003Cfoo\u003E","\u0027bar\u0027","\u0022baz\u0022","\u0026blong\u0026"]

Tableau vide sous forme de tableau : []
Tableau vide sous forme d'objet : {}

Tableau non-associatif sous forme de tableau : [[1,2,3]]
Tableau non-associatif sous forme d'objet : {"0":{"0":1,"1":2,"2":3}}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>json_decode</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->