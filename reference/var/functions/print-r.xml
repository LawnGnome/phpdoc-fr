<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.9 Maintainer: yannick Status: ready -->
  <refentry id="function.print-r">
   <refnamediv>
    <refname>print_r</refname>
    <refpurpose>Affiche des informations lisibles pour une variable</refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>bool</type><methodname>print_r</methodname>
      <methodparam><type>mixed</type><parameter>expression</parameter></methodparam>
      <methodparam choice="opt"><type>bool</type><parameter>return</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>print_r</function> affiche des informations à propos d'une
     variable, de manière à ce qu'elle soit lisible.
     Pour une chaîne, un entier ou un double, la valeur
     elle même sera affichée. Pour les tableaux,
     les valeurs seront présentées dans un format qui
     montre les clés et les valeurs. Une notation similaire est
     disponible pour les objets.
     <function>print_r</function> et <function>var_export</function> afficheront
     également les propriétés protégées et privées d'un objet en &php; 5,
     contrairement à <function>var_dump</function>.
    </simpara>
    <simpara>
      Gardez en tête que <function>print_r</function> place le pointeur de
      tableau à la fin du tableau. Utilisez <function>reset</function> pour
      le ramener au début.
    </simpara>
     <para>
     <example>
      <title>Exemple avec <function>print_r</function></title>
      <programlisting role="php">
<![CDATA[
<pre>
<?php
$a = array ('a' => 'pomme',
                'b' => 'banane',
                'c' => array ('x',
                              'y',
                              'z'));
print_r ($a);
?>
</pre>
]]>
      </programlisting>
    &example.outputs;
     <screen>
<![CDATA[
<pre>
Array
(
    [a] => pomme
    [b] => banane
    [c] => Array
        (
            [0] => x
            [1] => y
            [2] => z
        )
)
</pre>
]]>
       </screen>
      </example>
     </para>
    <para>
     Si vous voulez obtenir le résultat de <function>print_r</function> dans une chaîne,
     utilisez le paramètre <parameter>return</parameter>. Si ce paramètre vaut
     &true;, <function>print_r</function> retournera ce qu'il aurait affiché
     (ce qu'il fait par défaut).
    </para>
    <para>
     <example>
      <title>Utilisation du paramètre <parameter>return</parameter> de <function>print_r</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$b = array ('m' => 'mangue', 'foo' => 'bar', 'x' => array ('x', 'y', 'z'));
$resultat = print_r ($b, true);
//$resultat contient maintenant le résultat de print_r()
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <simpara>
      Si vous devez récupérer le résultat de <function>print_r</function> avec une
      version de &php; plus ancienne que 4.3.0, utilisez les fonctions de
      <link linkend="ref.outcontrol">bufferisation de sortie</link>.
     </simpara>
    </note>
    <note>
     <simpara>
      Le paramètre <parameter>return</parameter> a été ajouté en &php; 4.3.0.
     </simpara>
    </note>
    <note>
     <simpara>
      Avant &php; 4.0.4, <function>print_r</function> bouclera à l'infini si
      un &array; ou un &object; contient une référence
      sur lui-même. Un exemple classique est notamment la ligne
      <literal>print_r($GLOBALS)</literal> car
      <literal>$GLOBALS</literal> est lui-même une variable globale,
      qui donc, contient une référence sur elle même.
     </simpara>
    </note>
    <simpara>
      Voir aussi
      <function>ob_start</function>,
      <function>var_dump</function> et
      <function>var_export</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
