<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.19 $ -->
<!-- EN-Revision: 1.15 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.serialize" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>serialize</refname>
  <refpurpose>Linéarise une variable</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
    <type>string</type><methodname>serialize</methodname>
    <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   </methodsynopsis>
  <para>
   Linéarise une variable.
  </para>
  <para>
   C'est une technique pratique pour stocker ou passer des valeurs de PHP
   entre scripts, sans perdre ni leur structure, ni leur type.
  </para>
  <para>
   Pour récupérer une variable linéarisée, et retrouver une
   variable, utilisez <function>unserialize</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       La valeur à linéariser. <function>serialize</function> acceptent
       tous les types sauf les ressources. Vous pouvez linéariser un tableau
       qui contient une référence sur lui-même. Les références dans ce
       tableau/objet seront également stockées. Toutes les autres
       références seront perdues.
      </para>
      <para>
       Lors de la linéarisation d'un objet, PHP tentera d'appeler la fonction
       membre <link linkend="language.oop5.magic">__sleep</link> avant de
       linéariser. Cela permet à l'objet de faire un dernier nettoyage, etc.
       avant d'être linéarisé. De même, lorsque l'objet est restauré en
       utilisant <function>unserialize</function>, la fonction membre <link
        linkend="language.oop5.magic">__wakeup</link> est appelée.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne une chaîne contenant une représentation linéaire
   de <parameter>value</parameter>, pour stockage.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>serialize</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// $session_data contient un tableau multidimensionnel , avec les
// informations de session de l'utilisateur courant. On utilise serialize()
// pour les stocker dans une base de données

$conn = odbc_connect("webdb", "php", "chicken");
$stmt = odbc_prepare($conn,
      "UPDATE sessions SET data = ? WHERE id = ?");
$sqldata = array (serialize($session_data), $_SERVER['PHP_AUTH_USER']);
if (!odbc_execute($stmt, &$sqldata)) {
    $stmt = odbc_prepare($conn,
     "INSERT INTO sessions (id, data) VALUES(?, ?)");
    if (!odbc_execute($stmt, &$sqldata)) {
        /* Un problème est survenu ! */
    }
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.0.7</entry>
       <entry>
        Le processus de linéarisation a été corrigé.
       </entry>
      </row>
      <row>
       <entry>4.0.0</entry>
       <entry>
        Lors de la linéarisation d'un objet, les méthodes ne sont plus
        perdues. Reportez-vous à la section sur la
        <link linkend="language.oop.serialization">linéarisation d'objets</link>
        pour plus d'informations.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Il n'est pas possible de linéariser les objets internes de PHP.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>unserialize</function></member>
    <member><link linkend="language.oop.serialization">La linéarisation d'objets</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
