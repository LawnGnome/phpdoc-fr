<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./fr/functions/var.xml, last change in rev 1.2 -->
<!-- last change to 'serialize' in en/ tree in rev 1.28 -->
    <refentry id="function.serialize">
   <refnamediv>
    <refname>serialize</refname>
    <refpurpose>
     Lin&eacute;arise une variable
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>string</type><methodname>serialize</methodname>
      <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>serialize</function> retourne une cha&icirc;ne contenant une
     repr&eacute;sentation lin&eacute;aire de <parameter>value</parameter>, pour
     stockage.
    </simpara>
    <simpara>
     C'est une technique pratique pour stocker ou passer des valeurs de PHP
     entre scripts, sans perdre ni leur structure, ni leur type.
    </simpara>
    <simpara>
     Pour r&eacute;cup&eacute;rer une variable lin&eacute;aris&eacute;e, et retrouver une
     variable, utilisez <function>unserialize</function>.
     <function>serialize</function> acceptent les types
      <type>integer</type>, <type>double</type>,
     <type>string</type>, <type>array</type> (multidimensionnels) et
     <type>object</type> (les propri&eacute;t&eacute;s des objets seront 
     lin&eacute;aris&eacute;es, mais pas les m&eacute;thodes).
    </simpara>
    <para>
     <example>
      <title>Exemple avec <function>serialize</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// $session_data contient un tableau multi-dimensionnel , avec les
// informations de session de l'utilisateur courant. On utilise serialize()
// pour les stocker dans une base de donn&eacute;es
$conn = odbc_connect ("webdb", "php", "chicken");
$stmt = odbc_prepare ($conn,
      "UPDATE sessions SET data = ? WHERE id = ?");
$sqldata = array (serialize($session_data), $PHP_AUTH_USER);
if (!odbc_execute ($stmt, &$sqldata)) {
    $stmt = odbc_prepare($conn,
     "INSERT INTO sessions (id, data) VALUES(?, ?)");
    if (!odbc_execute($stmt, &$sqldata)) {
    /* Grosse bourde! Souffre et potasse! */
    }
}
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
