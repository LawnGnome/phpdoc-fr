<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 326726 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.import-request-variables" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>import_request_variables</refname>
  <refpurpose>Importe les variables de GET/POST/Cookie dans l'environnement global</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>import_request_variables</methodname>
   <methodparam><type>string</type><parameter>types</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>prefix</parameter></methodparam>
  </methodsynopsis>
  <para>
   Importe les variables GET/POST/Cookie dans l'environnement global. C'est
   pratique si vous avez désactivé <link linkend="ini.register-globals">
    <option>register_globals</option></link>, mais que vous voulez enregistrer
   des variables dans l'environnement global.
  </para>
  <para>
   Si vous souhaitez importer d'autres variables dans l'environnement
   global, comme <varname>$_SERVER</varname>, utilisez
   la fonction <function>extract</function>.
  </para>
  &warn.deprecated.function-5-3-0.removed-5-4-0;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>types</parameter></term>
     <listitem>
      <para>
       En utilisant le paramètre <parameter>types</parameter>, vous pouvez
       spécifier les variables que vous voulez importer. Vous pouvez utiliser
       'G', 'P' et 'C' pour désigner respectivement GET, POST et
       Cookie. Ces caractères ne sont pas sensibles à la casse, et vous pouvez
       les combiner entre eux. POST inclut les fichiers téléchargés.
      </para>
      <note>
       <para>
        Notez que l'ordre des lettres est important. En utilisant par exemple
        "<literal>GP</literal>", les variables POST écraseront les variables
        GET ayant le même nom. Toute lettre autre que G, P ou C, est ignorée.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>prefix</parameter></term>
     <listitem>
      <para>
       Le paramètre <parameter>prefix</parameter> est utilisé comme un préfixe
       de nom de variable, qui sera ajouté au début de tous les noms
       de variables importées. Si vous avez par exemple une variable GET du nom
       de "<literal>userid</literal>", et utilisez le préfixe "<literal>pref_</literal>",
       la variable ainsi générée s'appellera <varname>$pref_userid</varname>.
      </para>
      <note>
       <para>
        Bien que le paramètre <parameter>prefix</parameter> soit optionnel,
        il sera généré une alerte <link linkend="errorfunc.constants.errorlevels.e-notice"><constant>E_NOTICE</constant></link>
        si vous ne spécifiez pas de préfixe, ou si vous utilisez une chaîne
        vide comme préfixe. C'est potentiellement un trou de sécurité. Les alertes
        de ce niveau ne sont pas affichées si vous utilisez le 
        <link linkend="ini.error-reporting">niveau d'erreur</link> par défaut.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>import_request_variables</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Ce code va importer les variables GET et POST
// avec un préfixe "rvar_"
import_request_variables("gp", "rvar_");

echo $rvar_foo;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><varname>$_REQUEST</varname></member>
    <member><link linkend="ini.register-globals">register_globals</link></member>
    <member><link linkend="language.variables.predefined">variables prédéfinies</link></member>
    <member><function>extract</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
