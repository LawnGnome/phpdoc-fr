<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 307573 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.cubrid-field-flags" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_field_flags</refname>
  <refpurpose>Retourne une chaîne avec les drapeaux de la position du champ fourni</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>cubrid_field_flags</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam><type>int</type><parameter>field_offset</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction retourne une &string; avec les drapeaux de la position
   du champ fourni, séparés par un espace. Vous pouvez utiliser la fonction
   explode() pour récupérer chaque drapeau. Les drapeaux disponibles sont :
   <constant>not_null</constant>, <constant>primary_key</constant>, <constant>unique_key</constant>,
   <constant>foreign_key</constant>, <constant>auto_increment</constant>, <constant>shared</constant>,
   <constant>reverse_index</constant>, <constant>reverse_unique</constant> et <constant>timestamp</constant>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem><para>Le paramètre <parameter>result</parameter> provient de
      l'appel à la fonction <function>cubrid_execute</function></para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>field_offset</parameter></term>
     <listitem><para>La position numérique du champ.
      <parameter>field_offset</parameter> commence à zéro (0). Si
      <parameter>field_offset</parameter> n'existe pas, une erreur de niveau
      <constant>E_WARNING</constant> sera également émise.</para></listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Une &string; avec les drapeaux, en cas de succès.
  </para>
  <para>
   &false; si la valeur de field_offset est invalide.
  </para>
  <para>
   -1 si la requête SQL n'est pas de type SELECT.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>cubrid_field_flags</function></title>
   <programlisting role="php">
<![CDATA[
<?php
    $link = cubrid_connect("localhost", 30000, "demodb2", "dba", "");
    if (!$link)
    {
        die('Connexion impossible.');
    }
    $query = 'SELECT id, name, address, salary FROM employees';
    $result = cubrid_execute($link, $query);
    if ($result) 
    {
        $flags = cubrid_field_flags($result, 0);
        print_r(explode(' ', $flags));
        cubrid_close_request($result); 
    }
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Array ( [0] => not_null [1] => unique_key [2] => auto_increment )
]]>
   </screen>
  </example>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
