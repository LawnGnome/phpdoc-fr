<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 307573 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.cubrid-fetch-object" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_fetch_object</refname>
  <refpurpose>Retourne un objet contenant les noms de la colonne</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>cubrid_fetch_object</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>class_name</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction retourne un objet avec les noms de la colonne
   du jeu de résultats comme propriétés. Les valeurs de ces propriétés
   sont extraites depuis la ligne courante du jeu de résultats.
  </para>
 </refsect1>

 <refsect1 role="parameters">
 &reftitle.parameters;
 <para>
  <variablelist>
  <varlistentry>
   <term><parameter>result</parameter></term>
   <listitem><para>Le paramètre <parameter>result</parameter> provient d'un
    appel à la fonction <function>cubrid_execute</function></para></listitem>
  </varlistentry>
  <varlistentry>
    <term><parameter>class_name</parameter></term>
      <listitem>
       <para>
        Le nom de la classe à instancier, à définir les propriétés et à retourner.
        Si non spécifié, un objet <classname>stdClass</classname> est retourné.
       </para>
     </listitem>
   </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
      <listitem>
       <para>
        Un tableau de paramètres optionnels à passer au constructeur
        de la classe <parameter>class_name</parameter>.
       </para>
     </listitem>
   </varlistentry>
  </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un objet en cas de succès.
  </para>
   <para>
    &false; si une erreur survient.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>cubrid_fetch_object</function></title>
   <programlisting role="php">
<![CDATA[
<?php
    $link = cubrid_connect("localhost", 30000, "demodb2", "dba", "");
    if (!$link)
    {
        die('Connexion impossible.');
    }
    $query = 'SELECT name, address, salary FROM employees';
    $result = cubrid_execute($link, $query);
    if ($result) 
    {
        $row = cubrid_fetch_object($result);
        echo $row->name."<BR>";
        echo $row->address."<BR>";
        echo $row->salary;
        
        cubrid_close_request($result); 
    }
?>
]]>
   </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Peter
1st Avenue, New York
1000.0000000000000000
]]>
    </screen>
  </example>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
