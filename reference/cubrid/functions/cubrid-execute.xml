<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 307530 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.cubrid-execute" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_execute</refname>
  <refpurpose>Exécute une requête SQL</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>cubrid_execute</methodname>
   <methodparam><type>resource</type><parameter>conn_identifier</parameter></methodparam>  
   <methodparam><type>string</type><parameter>SQL</parameter></methodparam>  
   <methodparam choice="opt"><type>int</type><parameter>option</parameter></methodparam>  
  </methodsynopsis>
  <methodsynopsis>
   <type>bool</type><methodname>cubrid_execute</methodname>
   <methodparam><type>resource</type><parameter>request_identifier</parameter></methodparam>  
   <methodparam choice="opt"><type>int</type><parameter>option</parameter></methodparam>  
  </methodsynopsis>
  <para>
   La fonction <function>cubrid_execute</function> est utilisée pour exécuter
   une requête SQL. Elle exécute la requête en utilisant le paramètre
   <parameter>conn_identifier</parameter> et SQL, puis, retourne l'identifiant
   de requête créé. Elle est utilisée pour une exécution simple de requête,
   où le liage de paramètre n'est pas nécessaire. De plus, la fonction
   <function>cubrid_execute</function> est utilisée pour exécuter la requête
   préparée en utilisant <function>cubrid_prepare</function> et <function>cubrid_bind</function>.
   À ce point, vous devez spécifier les arguments
   <parameter>request_identifier</parameter> et <parameter>option</parameter>.
  </para>
  <para>
   Vous pouvez utiliser l'argument <parameter>option</parameter> pour indiquer
   si vous souhaitez recevoir l'OID de la ligne après l'exécution, et, si
   vous souhaitez exécuter la requête en mode asynchrone, ceci en définissant
   CUBRID_INCLUDE_OID et CUBRID_ASYNC à l'aide de l'opérateur OR.
   Si les 2 variables ne sont pas explicitement fournies, elles ne seront
   pas sélectionnées par défaut.
  </para>
  <para>
   Si le premier paramètre est <parameter>request_identifier</parameter> pour
   exécuter la fonction <function>cubrid_prepare</function>, vous pouvez spécifier
   une option, CUBRID_ASYNC uniquement.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>conn_identifier</parameter></term>
     <listitem><para>Identifiant de connexion.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>SQL</parameter></term>
     <listitem><para>SQL à exécuter.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>option</parameter></term>
     <listitem><para>Option d'exécution de la requête : CUBRID_INCLUDE_OID, CUBRID_ASYNC.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>request_identifier</parameter></term>
     <listitem><para>Identifiant de requête pour la fonction <function>cubrid_prepare</function>.</para></listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un identifiant de requête, lorsque l'opération a été réalisée avec succès et
   que le premier paramètre est l'identifiant de connexion ; &true;, lorsque
   l'opération a été réalisée avec succès et que le premier paramètre est
   l'identifiant de requête.
  </para>
  <para>
   &false;, si une erreur survient.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>cubrid_execute</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$con = cubrid_connect ("dbsvr.cubrid.com", 33000, "demodb"); 
if ($con) {
 
    echo "connected successfully"; 
    $req = cubrid_execute ($con, "select * from members", CUBRID_INCLUDE_OID | CUBRID_ASYNC);
 
    if ($req) {
        while (list ($id, $name) = cubrid_fetch ($req)) {
            echo $id;
            echo $name;
        }
        cubrid_close_request ($req);
    }

    cubrid_disconnect ($con);
}

   
$con = cubrid_connect ("dbsvr.cubrid.com", 33000, "demodb"); 
if ($con) {
 
    echo "Connexion réussie"; 
    $sql = "insert into tbl values (?, ?, ?)";
 
    $req = cubrid_prepare($con, $sql, CUBRID_INCLUDE_OID); 

    $i = 0;
    while ( $i < 2 ) {
        $res = cubrid_bind($req, 1, "1", "NUMBER");
        $res = cubrid_bind($req, 2, "2");
        $res = cubrid_bind($req, 3, "04:22:34 PM 08/07/2007");
        $res = cubrid_execute($req);
        $i = $i + 1;
    }
}
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>cubrid_close_request</function></member>
    <member><function>cubrid_commit</function></member>
    <member><function>cubrid_rollback</function></member>
    <member><function>cubrid_prepare</function></member>
    <member><function>cubrid_bind</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
