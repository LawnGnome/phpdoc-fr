<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 308222 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.cubrid-fetch-field" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_fetch_field</refname>
  <refpurpose>Retourne un objet avec certaines propriétés</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>cubrid_fetch_field</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>field_offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction retourne un objet avec certaines propriétés
   d'une colonne spécifique. Les propriétés de l'objet sont :
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem><para>Nom de la colonne</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>table</parameter></term>
     <listitem><para>Nom de la tableau contenant cette colonne</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>def</parameter></term>
     <listitem><para>Valeur par défaut de la colonne</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>max_length</parameter></term>
     <listitem><para>Longueur maximale de la colonne</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>not_null</parameter></term>
     <listitem><para>1 si la colonne ne peut être NULL</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>unique_key</parameter></term>
     <listitem><para>1 si la colonne est une clé unique</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>multiple_key</parameter></term>
     <listitem><para>1 si la colonne est une clé non-unique</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>numeri</parameter></term>
     <listitem><para>1 si la colonne est de type numérique</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem><para>Le type de la colonne</para></listitem>
    </varlistentry>
   </variablelist>
   
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem><para>Le paramètre <parameter>result</parameter>
      provient d'un appel à la fonction <function>cubrid_execute</function></para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>field_offset</parameter></term>
     <listitem><para>La position numérique du champ. Si la position
      du champ n'est pas spécifiée, le prochain champ (qui n'a pas encore
      été récupéré par cette fonction) est récupéré. Le paramètre
      <parameter>field_offset</parameter> commence à zéro.</para></listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un objet avec certaines propriétés d'une colonne spécifique,
   en cas de succès.
  </para>
  <para>
   &false; si une erreur survient.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>cubrid_fetch_field</function></title>
   <programlisting role="php">
<![CDATA[
<?php
    $link = cubrid_connect("localhost", 30000, "demodb2", "dba", "");
    if (!$link)
    {
        die('Connexion impossible.');
    }
    $query = 'SELECT name, address, salary FROM employees';
    $result = cubrid_execute($link, $query);
    if ($result) 
    {
        echo "Récupération des champs de la colonne 0 : ";
        $meta = cubrid_fetch_field($result, 0);
        if (!$meta) 
        {
            echo "Aucune information disponible<br />\n";
        }
        echo "<pre>
        Longueur maximale :        $meta->max_length
        Clés multiples :        $meta->multiple_key
        Nom :            $meta->name
        Est non NULL ?        $meta->not_null
        Numérique :        $meta->numeric
        Table :            $meta->table
        Type :            $meta->type
        Défaut :        $meta->def
        Clé unique :        $meta->unique_key
        </pre>";
        cubrid_close_request($result); 
    }
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Récupération des champs de la colonne 0 : 
        Longueur maximale :        13
        Clés multiples :    1
        Nom :            name
        Est non NULL ?        1
        Numérique :        0
        Table :        employees
        Type :            STRING
        Défaut :        [noname]
        Clé unique :        0
]]>
   </screen>
  </example>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
