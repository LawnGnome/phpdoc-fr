<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.2 Maintainer: dams Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.idn-to-ascii" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>idn_to_ascii</refname>
  <refpurpose>Convertit un nom de domaine UTF-8 en ASCII</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>idn_to_ascii</methodname>
   <methodparam><type>string</type><parameter>utf8_domain</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">errorcode</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction convertit un nom de domaine UTF-8 en ASCII, en fonction des
   spécifications IDNA toUnicode(). S'il y a des caractères non ASCII, le résultat
   sera de la forme <literal>"xn--"</literal>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>utf8_domain</parameter></term>
     <listitem>
      <para>
      Le nom de domaine en UTF-8.
        <warning>
         <para>
         Si, par exemple, un domaine ISO-8859-1 (c'est à dire, Western Europe latin1) 
         est passé en argument, il sera convertit au format ACE, avec une chaîne "xn--". 
         Cela ne sera peut-être pas celui que vous attendiez! 
         </para>
        </warning>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>errorcode</parameter></term>
     <listitem>
      <para>
       Recevra le code d'erreur IDNA. 
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <!-- See also &return.success; -->
  <para>
    La version encodée ACE du nom de domaine, ou &false; autrement.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si une erreur survient, &false; est retourné, et un code d'erreur optionnel est retourné.
   De plus, une erreur E_WARNING est émise.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>idn_to_ascii</function></title>
    <para>
     Un exemple simple, et un exemple à erreur.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

// Une chaîne ISO-8859-1
echo idn_to_ascii(utf8_encode('täst.de'))); 

// Impossible de convertir un nom de domaine en ASCII s'il contient des caractères
// non ASCII, mais qu'il commence déja par "xn--"
$ascii = idn_to_ascii("xn--".chr(0xC3).chr(0xA4), $errorcode);
if ($ascii === false) {
    printf("Erreur détectée %d: %s\n", $errorcode, idn_strerror($errorcode));
}

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
xn--tst-qla.de

Erreur détectée 8: Input already contain ACE prefix (`xn--')
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>utf8_encode</function></member>
    <member><function>idn_strerror</function></member>
    <member><function>itn_to_utf8</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
