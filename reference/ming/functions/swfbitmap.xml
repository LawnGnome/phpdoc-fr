<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
  <refentry id="function.swfbitmap">
   <refnamediv>
    <refname>SWFBitmap</refname>
    <refpurpose>Crée un objet bitmap</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>object</type><methodname>swfbitmap</methodname>
      <methodparam><type>mixed</type><parameter>file</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>alphafile</parameter></methodparam>
     </methodsynopsis>
    &warn.experimental.func;
    <para>
     <function>SWFBitmap</function> crée un objet bitmap à partir d'un
     fichier JPEG ou DBL dans le fichier <parameter>file</parameter>.
     <parameter>alphafile</parameter> indique un fichier de masque à
     utiliser comme canal alpha sur une image JPEG.
     Les deux paramètres peuvent être une ressource ouverte avec <function>fopen</function>
     ou une chaîne binaire.
    </para>
    <note>
     <para>
      Seuls les JPEG baseline (frame 0) sont supportés. Les baseline optimisées
      ou les JPEG progressives ne sont pas supportées.
     </para>
    </note>
    <simpara>
     SWFBitmap a les méthodes suivantes :
     <function>SWFBitmap->getWidth</function>
     et <function>SWFBitmap->getHeight</function>.
    </simpara>
    <para>
     Il n'est pas possible d'importer directement des images
     PNG, il faut utiliser l'utilitaire de conversion
     <filename>png2dbl</filename> pour en faire un fichier
     .dbl ("define bits lossless"). La raison est que l'auteur ne
     souhaite pas de dépendance avec la bibliothèque PNG. Le fichier
     d'autoconfiguration devrait régler ce problème, mais il n'est pas
     encore fait.
     <example>
      <title>Importation de fichiers PNG sous Ming</title>
      <programlisting role="php">
<![CDATA[
<?php
$s = new SWFShape();
$f = $s->addFill(new SWFBitmap(file_get_contents("png.dbl")));
$s->setRightFill($f);

$s->drawLine(32, 0);
$s->drawLine(0, 32);
$s->drawLine(-32, 0);
$s->drawLine(0, -32);

$m = new SWFMovie();
$m->setDimension(32, 32);
$m->add($s);

header('Content-type: application/x-shockwave-flash');
$m->output();
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Et vous pouvez ajouter un masque alpha sur une image JPEG.
     <example>
      <title>Exemple avec <function>SWFBitmap</function></title>
      <programlisting role="php">
<![CDATA[
<?php

$s = new SWFShape();

//les fichiers .msk sont générés par l'utilitaire "gif2mask"
$f = $s->addFill(new SWFBitmap(file_get_contents("alphafill.jpg"), file_get_contents("alphafill.msk")));
$s->setRightFill($f);

$s->drawLine(640, 0);
$s->drawLine(0, 480);
$s->drawLine(-640, 0);
$s->drawLine(0, -480);

$c = new SWFShape();
$c->setRightFill($c->addFill(0x99, 0x99, 0x99));
$c->drawLine(40, 0);
$c->drawLine(0, 40);
$c->drawLine(-40, 0);
$c->drawLine(0, -40);

$m = new SWFMovie();
$m->setDimension(640, 480);
$m->setBackground(0xcc, 0xcc, 0xcc);

// décide un fond à damier
for ($y=0; $y<480; $y+=40) {
  for ($x=0; $x<640; $x+=80) {
    $i = $m->add($c);
    $i->moveTo($x, $y);
  }

  $y+=40;

  for ($x=40; $x<640; $x+=80) {
    $i = $m->add($c);
    $i->moveTo($x, $y);
  }
}

$m->add($s);

header('Content-type: application/x-shockwave-flash');
$m->output();
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
