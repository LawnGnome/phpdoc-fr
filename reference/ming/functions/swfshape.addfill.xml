<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
  <refentry id="function.swfshape.addfill">
   <refnamediv>
    <refname>SWFShape->addFill</refname>
    <refpurpose>Ajoute un remplissage plein à la forme Flash</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>void</type><methodname>swfshape->addfill</methodname>
      <methodparam><type>int</type><parameter>red</parameter></methodparam>
      <methodparam><type>int</type><parameter>green</parameter></methodparam>
      <methodparam><type>int</type><parameter>blue</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>a</parameter></methodparam>
     </methodsynopsis>
    &warn.experimental.func;
     <methodsynopsis>
      <type>void</type><methodname>swfshape->addfill</methodname>
      <methodparam><type>SWFbitmap</type><parameter>bitmap</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
    &warn.experimental.func;
     <methodsynopsis>
      <type>void</type><methodname>swfshape->addfill</methodname>
      <methodparam><type>SWFGradient</type><parameter>gradient</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
    &warn.experimental.func;
    <para>
     <function>SWFShape->addFill</function> ajoute un remplissage plein à
     la forme. <function>swfshape->addfill</function> accepte trois différents types
     d'arguments.
    </para>
    <para>
     <parameter>red</parameter>, <parameter>green</parameter>, <parameter>blue</parameter>
     est une couleur (format RGB). Le dernier paramètre <parameter>a</parameter>
     est optionnel.
    </para>
    <para>
     L'argument <parameter>bitmap</parameter> est un objet
     <function>swfbitmap</function>. Le paramètre <parameter>flags</parameter>
     peut être l'un des suivants : SWFFILL_CLIPPED_BITMAP ou SWFFILL_TILED_BITMAP.
     Par défaut, c'est SWFFILL_TILED_BITMAP. Je crois.
    </para>
    <para>
     L'argument <parameter>gradient</parameter> est un objet
     <function>swfgradient</function>.
     L'argument <parameter>flags</parameter> peut alors prendre
     l'une des valeurs suivantes :
     SWFFILL_RADIAL_GRADIENT ou SWFFILL_LINEAR_GRADIENT. Par défaut,
     c'est SWFFILL_LINEAR_GRADIENT. Cette fois-ci, j'en suis sûr.
    </para>
    <para>
     <function>swfshape->addfill</function> retourne un objet <function>swffill</function>
     à utiliser avec <function>swfshape->setleftfill</function>,
     et <function>swfshape->setrightfill</function> décrite un peu plus loin.
    </para>
    <simpara>
     Voir aussi
     <function>swfshape->setleftfill</function> et
     <function>swfshape->setrightfill</function>.
    </simpara>
    <para>
     Ceci est un exemple simple qui affiche un cadre sur une bitmap. Ah, il y a
     un petit bogue dans le lecteur Flash : il ne semble pas faire grand cas
     de la transformation de la seconde forme en morphing. Suivant les specs,
     la bitmap devrait s'étirer avec la forme dans cet exemple...
     <example>
      <title>Exemple avec <function>SWFShape->addFill</function></title>
      <programlisting role="php">
<![CDATA[
<?php

$p = new SWFMorph();

$b = new SWFBitmap(file_get_contents("alphafill.jpg"));
// utilisez vos propres bitmaps!
$width = $b->getWidth();
$height = $b->getHeight();

$s = $p->getShape1();
$f = $s->addFill($b, SWFFILL_TILED_BITMAP);
$f->moveTo(-$width/2, -$height/4);
$f->scaleTo(1.0, 0.5);
$s->setLeftFill($f);
$s->movePenTo(-$width/2, -$height/4);
$s->drawLine($width, 0);
$s->drawLine(0, $height/2);
$s->drawLine(-$width, 0);
$s->drawLine(0, -$height/2);

$s = $p->getShape2();
$f = $s->addFill($b, SWFFILL_TILED_BITMAP);

// ces déplacements n'ont aucun effet
$f->moveTo(-$width/4, -$height/2);
$f->scaleTo(0.5, 1.0);

$s->setLeftFill($f);
$s->movePenTo(-$width/4, -$height/2);
$s->drawLine($width/2, 0);
$s->drawLine(0, $height);
$s->drawLine(-$width/2, 0);
$s->drawLine(0, -$height);

$m = new SWFMovie();
$m->setDimension($width, $height);
$i = $m->add($p);
$i->moveTo($width/2, $height/2);

for($n=0; $n<1.001; $n+=0.03) {
  $i->setRatio($n);
  $m->nextFrame();
}

header('Content-type: application/x-shockwave-flash');
$m->output();
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
