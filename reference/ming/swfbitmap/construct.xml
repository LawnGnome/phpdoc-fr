<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.swfbitmap.construct" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SWFBitmap->__construct</refname>
  <refpurpose>Charge un objet Bitmap</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>SWFBitmap</classname></ooclass>
   <methodsynopsis>
    <type>SWFBitmap</type><methodname>__construct</methodname>
    <methodparam><type>mixed</type><parameter>file</parameter></methodparam>
    <methodparam choice="opt"><type>mixed</type><parameter>alphafile</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  &warn.experimental.func;
  <para>
   Crée un nouvel objet <classname>SWFBitmap</classname> depuis le fichier
   <parameter>file</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   Pour les deux paramètres, vous pouvez fournir un pointeur de fichier
   retourné par la fonction <function>fopen</function> ou les données de l'image,
   sous la forme d'une &string; binaire.
   <variablelist>
    <varlistentry>
     <term><parameter>file</parameter></term>
     <listitem>
      <para>
      </para>
      <note>
       <para>
        Nous ne pouvons utiliser que des Jpeg "baseline" (image 0), et
        non des optimisés "baseline" ou des Jpeg progressifs !
       </para>
      </note>
      <para>
       Vous ne pouvez pas importer directement des Png, mais vous devez utiliser
       l'utilitaire png2dbl pour créer un fichier dbl ("define bits lossless")
       depuis le Png. La raison de cela est que nous ne voulons pas de dépendance
       sur la libraire Png dans Ming. Autoconf doit prendre en charge cela mais
       ne le fait actuellement pas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>alphafile</parameter></term>
     <listitem>
      <para>
       Un fichier MSK à utiliser en tant que masque Alpha pour les images Jpeg.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Importation d'un fichier DBL</title>
    <programlisting role="php">
<![CDATA[
<?php
$s = new SWFShape();
$f = $s->addFill(new SWFBitmap(file_get_contents("image.dbl")));
$s->setRightFill($f);

$s->drawLine(32, 0);
$s->drawLine(0, 32);
$s->drawLine(-32, 0);
$s->drawLine(0, -32);

$m = new SWFMovie();
$m->setDimension(32, 32);
$m->add($s);

header('Content-type: application/x-shockwave-flash');
$m->output();
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Utilisation d'un masque Alpha</title>
    <programlisting role="php">
<![CDATA[
<?php

$s = new SWFShape();

// fichier .msk généré avec l'utilitaire "gif2mask"
$f = $s->addFill(new SWFBitmap(file_get_contents("alphafill.jpg"), file_get_contents("alphafill.msk")));
$s->setRightFill($f);

$s->drawLine(640, 0);
$s->drawLine(0, 480);
$s->drawLine(-640, 0);
$s->drawLine(0, -480);

$c = new SWFShape();
$c->setRightFill($c->addFill(0x99, 0x99, 0x99));
$c->drawLine(40, 0);
$c->drawLine(0, 40);
$c->drawLine(-40, 0);
$c->drawLine(0, -40);

$m = new SWFMovie();
$m->setDimension(640, 480);
$m->setBackground(0xcc, 0xcc, 0xcc);

// dessine l'arrière plan
for ($y=0; $y<480; $y+=40) {
  for ($x=0; $x<640; $x+=80) {
    $i = $m->add($c);
    $i->moveTo($x, $y);
  }

  $y+=40;

  for ($x=40; $x<640; $x+=80) {
    $i = $m->add($c);
    $i->moveTo($x, $y);
  }
}

$m->add($s);

header('Content-type: application/x-shockwave-flash');
$m->output();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->