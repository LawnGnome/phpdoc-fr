<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 292734 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xmlns:phpdoc="http://php.net/ns/phpdoc" xml:id="class.swfmorph" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
<title>La classe SWFMorph</title>
<titleabbrev>SWFMorph</titleabbrev>

<partintro>

<!-- {{{ SWFMorph intro -->
 <section xml:id="swfmorph.intro">
  &reftitle.intro;
  <para>
   Ces méthodes ici sont triées étrangement. Il semblerait plus logique
   d'avoir juste l'objet newSWFMorph (shape1, shape2) ; mais actuellement,
   shape2 doivent savoir que c'est la deuxième partie d'un morphing.
   (Ainsi, parce qu'il commence à afficher dès qu'il obtiendra des
   commandes de dessin - s'il gardait sa propre description de ses formes
   et écrivait au fur et à mesure, ce serait beaucoup plus facile.).
  </para>
 </section>
<!-- }}} -->

 <section xml:id="swfmorph.synopsis">
  &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
  <classsynopsis>
   <ooclass><classname>SWFMorph</classname></ooclass>

<!-- {{{ Class synopsis -->
   <classsynopsisinfo>
    <ooclass>
     <classname>SWFMorph</classname>
    </ooclass>
   </classsynopsisinfo>
<!-- }}} -->

   <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
   <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.swfmorph')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />

  </classsynopsis>
<!-- }}} -->

 </section>
</partintro>
&reference.ming.entities.swfmorph;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
