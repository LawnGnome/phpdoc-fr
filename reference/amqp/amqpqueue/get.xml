<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 331135 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="amqpqueue.get" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>AMQPQueue::get</refname>
  <refpurpose>Récupère le prochain message depuis la file d'attente</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>AMQPQueue::get</methodname>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>
   Récupère le prochain message disponible depuis la file d'attente.
   Si aucun message n'est présent dans la file d'attente,
   cette fonction retournera &false; immédiatement.
   C'est une alternative non bloquante à la méthode
   <methodname>AMQPQueue::consume</methodname>.
  </para>
  <para>
   Actuellement, le seul drapeau supporté pour le paramètre
   <parameter>flags</parameter> est <constant>AMQP_AUTOACK</constant>.
   Si ce drapeau est passé, alors le message retourné sera automatiquement
   marqué comme connus du broker aussitôt que les frames
   sont envoyées au client.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Un masque de drapeaux supportés par l'appel de la méthode.
       Actuellement, le seul drapeau supporté est <constant>AMQP_AUTOACK</constant>.
       Si la valeur n'est pas fournie, il utilisera la valeur de
       l'option de configuration <literal>amqp.auto_ack</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Une instance de la classe <classname>AMQPEnvelope</classname>
   représentant le message récupéré depuis la file d'attente,
   ou &false;.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><methodname>AMQPQueue::get</methodname> example</title>
    <programlisting role="php">
<![CDATA[
<?php

/* Crée une connexion en utilisant les identifiants de connexion par défaut : */
$connection = new AMQPConnection();
$connection->connect();

$channel = new AMQPChannel($connection);

/* Création d'un nouvel objet de file d'attente */
$queue = new AMQPQueue($channel);

// déclaration de la file d'attente
$queue->declare('myqueue');

// récupère le message suivant
$message = $queue->get(AMQP_AUTOACK);

echo $message->getBody();

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
