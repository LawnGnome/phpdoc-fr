<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 315621 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="amqpqueue.consume" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>AMQPQueue::consume</refname>
  <refpurpose>Le but de consume</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>AMQPQueue::consume</methodname>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
   C'est une fonction non bloquante ; aussi, la fonction ne retournera
   rien tant que le nombre minimum de messages spécifiés par le
   paramètre <parameter>min</parameter> n'a pas été lus depuis la file
   d'attente. Pour utiliser une fonction non bloquante, reportez-vous
   à la méthode <methodname>AMQPQueue::get</methodname>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Le paramètre <parameter>options</parameter> est un
       tableau d'options d'analyse. Les clés utilisées dans
       le tableau <parameter>options</parameter> sont :
       min, max, et ack. Toute autre clé sera ignoée.
      </para>
      <para>
       Pour chaque option manquante, l'extension vérifiera la configuration
       équivalente dans le fichier &php.ini; ou bien utilisera
       la valeur par défaut.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un tableau contenant le message à analyser. Le nombre de messages
   retourné sera d'au moins le nombre fourni par le paramètre
   <parameter>min</parameter> du tableau <parameter>options</parameter>,
   mais pas plus que le nombre fourni par le paramètre
   <parameter>max</parameter>.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <methodname>AMQPQueue::consume</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php

/* Création d'une connexion utilisant toutes les informations d'authentification par défaut : */
$connection = new AMQPConnection();
$connection->connect();

/* création d'un objet de file d'attente */
$queue = new AMQPQueue($connection);

// Déclaration de la file d'attente
$queue->declare('myqueue');

$options = array(
    'min' => 1,
    'max' => 10,
    'ack' => true
);

// Récupère les messages
$messages = $queue->consume($options);

foreach ($messages as $message) {
    echo $message['message_body'];
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
