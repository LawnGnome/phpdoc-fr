<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.1 Maintainer: gui Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="phardata.compress">
 <refnamediv>
  <refname>PharData::compress</refname>
  <refpurpose>Compresse l'archive tar/zip complète en utilisant la compression Gzip ou Bzip2</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>PharData::compress</methodname>
   <methodparam><type>int</type><parameter>compression</parameter></methodparam>
   <methodparam><type>string</type><parameter>extension</parameter></methodparam>
  </methodsynopsis>

  <para>
   Pour les archives tar, cette méthode compresse l'archive entière en utilisant la compressions
   gzip ou bzip2. Le fichier qui en résulte peut être manipulé avec la commande gunzip/bunzip, ou
   être accédé directement et de façon transparente avec l'extension Phar.
  </para>
  <para>
   Pour les archives zip, cette méthode échoue en levant une exception.
   L'extension <link linkend="ref.zlib">zlib</link> doit être activée pour compresser avec gzip,
   l'extension <link linkend="ref.bzip2">bzip2</link> doit être activée pour compresser avec bzip2.
  </para>
  <para>
   De plus, cette méthode renomme automatiquement l'archive, en la suffixant par <literal>.gz</literal>,
   <literal>.bz2</literal> ou en enlevant l'extension si <literal>Phar::NONE</literal> est spécifié pour enlever
   la compression. Sinon, une extension de fichier peut être spécifiée avec le second paramètre.
  </para>
  <para>
   Un objet <classname>PharData</classname> est retourné.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>compression</parameter></term>
     <listitem>
      <para>
       La compression doit être <literal>Phar::GZ</literal> ou
       <literal>Phar::BZ2</literal> pour appliquer une compression, ou <literal>Phar::NONE</literal>
       pour l'enlever.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>extension</parameter></term>
     <listitem>
      <para>
	   Par défaut, l'extension est <literal>.tar.gz</literal> ou <literal>.tar.bz2</literal>
       pour compresser un tar, et <literal>.tar</literal> pour décompresser.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Soulève une exception <classname>BadMethodCallException</classname> si l'extension
   <link linkend="ref.zlib">zlib</link> n'est pas disponible, ou si l'extension
   <link linkend="ref.bzip2">bzip2</link> n'est pas activée.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un exemple avec <function>PharData::compress</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$p = new PharData('/chemin/vers/mon.tar');
$p['monfichier.txt'] = 'salut';
$p['monfichier2.txt'] = 'salut';
$p1 = $p->compress(Phar::GZ); // copie vers /chemin/vers/mon.phar.gz
$p2 = $p->compress(Phar::BZ2); // copie vers /chemin/vers/mon.phar.bz2
$p3 = $p2->compress(Phar::NONE); // exception: /chemin/vers/mon.phar existe déjà
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::compress</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
