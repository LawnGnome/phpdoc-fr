<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.2 Maintainer: gui Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phar.extractto" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Phar::extractTo</refname>
  <refpurpose>Extrait le contenu d'une archive phar vers un répertoire</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Phar::extractTo</methodname>
   <methodparam><type>string</type><parameter>pathto</parameter></methodparam>
   <methodparam choice="opt"><type>string|array</type><parameter>files</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>overwrite</parameter></methodparam>
  </methodsynopsis>
  &phar.write;

  <para>
   Extrait tous les fichiers d'une archive phar vers le disque. Les fichiers et les dossiers extraits
   conservent les permissions à l'identique de l'intérieur de l'archive. Les paramètres optionnels permettent
   un éventuel contrôle sur quel fichier est extrait et si des fichiers déjà existants sur le disque
   peuvent être écrasés. Le second paramètre <literal>files</literal> peut être soit le nom d'un fichier ou d'un
   répertoire, soit un tableau de noms de fichiers et de répertoires à extraire. Par défaut, cette méthode n'écrasant
   pas les fichiers existants, le troisième paramètre peut être passé à &true; pour activer l'écrasement de fichiers.
   Cette méthode est identique à <function>ZipArchive::extractTo</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pathto</parameter></term>
     <listitem>
      <para>
       Chemin du fichier à effacer au sein de l'archive.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>files</parameter></term>
     <listitem>
      <para>
       Le nom d'un fichier ou d'un répertoire ou un tableau de fichiers/répertoires à extraire
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>overwrite</parameter></term>
     <listitem>
      <para>
       &false; par défaut, la passer à &true; pour activer l'écrasement des fichiers existants
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   retourne &true; en cas de succès, mais il est plus sûr de vérifier si des exceptions sont levées,
   et de considérer que tout s'est bien passé si aucune n'est levée.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lève une exception <classname>PharException</classname> si des erreurs apparaissent pendant
   l'écriture sur le disque.
  </para>
 </refsect1>


 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un exemple avec <function>Phar::extractTo</function></title>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $phar = new Phar('monphar.phar');
    $phar->extractTo('/chemin/complet'); // extrait tous les fichiers
    $phar->extractTo('/autre/chemin', 'fichier.txt'); // extrait seulement fichier.txt
    $phar->extractTo('/ce/chemin',
        array('fichier1.txt', 'fichier2.txt')); // extrait seulement 2 fichiers
    $phar->extractTo('/troisieme/chemin', null, true); // extrait tous les fichiers, en écrasant
} catch (Exception $e) {
    // traite les erreurs
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PharData::extractTo</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
