<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision$ -->
<!-- EN-Revision: 283832 Maintainer: gui Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phar.mungserver" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Phar::mungServer</refname>
  <refpurpose>Définit une liste de maximum 4 variables $_SERVER qui doivent être modifiées lors de l'exécution</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>Phar::mungServer</methodname>
   <methodparam><type>array</type><parameter>munglist</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>Phar::mungServer</function> doit être appelée seulement dans le conteneur de chargement
   d'une archive phar.
  </para>
  <para>
   Définit une liste de maximum 4 variables <varname>$_SERVER</varname> qui doiventt être modifiées 
   lors de l'exécution.
   Les variables qui peuvent être modifiées pour effacer les traces de l'exécution phar sont
   <literal>REQUEST_URI</literal>, <literal>PHP_SELF</literal>,
   <literal>SCRIPT_NAME</literal> et <literal>SCRIPT_FILENAME</literal>.
  </para>
  <para>
   Seule, cette méthode ne fait rien. Elle prend effet seulement quand elle est combinée à
   <function>Phar::webPhar</function> et seulement si le fichier demandé est un fichier PHP 
   à parser. Notez que les variables <literal>PATH_INFO</literal> et 
   <literal>PATH_TRANSLATED</literal> sont toujours modifiées.
  </para>
  <para>
   Les valeurs de départ des variables qui sont modifiées sont stockées dans le tableau SERVER
   avec le préfixe <literal>PHAR_</literal> et donc par exemple
   <literal>SCRIPT_NAME</literal> sera stockée en tant que <literal>PHAR_SCRIPT_NAME</literal>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>munglist</parameter></term>
     <listitem>
      <para>
       un tableau contenant n'importe laquelle des variables
       <literal>REQUEST_URI</literal>, <literal>PHP_SELF</literal>,
       <literal>SCRIPT_NAME</literal> et <literal>SCRIPT_FILENAME</literal> en
       tant qu'indices de chaînes de caractères. Les autres valeurs déclenchent une exception
       et <function>Phar::mungServer</function> est sensible à la casse.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Aucun retour.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lève une exception <classname>UnexpectedValueException</classname> si un quelconque
   problème est trouvé dans les données passées.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un exemple avec <function>Phar::mungServer</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// exemple de conteneur
Phar::mungServer(array('REQUEST_URI'));
Phar::webPhar();
__HALT_COMPILER();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::webPhar</function></member>
    <member><function>Phar::setStub</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
