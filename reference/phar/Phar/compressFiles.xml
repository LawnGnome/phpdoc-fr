<?xml version='1.0' encoding='iso-8859-1'?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.3 Maintainer: gui Status: ready -->
<!-- Reviewed: no -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="phar.compressfiles">
 <refnamediv>
  <refname>Phar::compressFiles</refname>
  <refpurpose>Compresse tous les fichiers de l'archive Phar courante'</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>Phar::compressFiles</methodname>
   <methodparam><type>int</type><parameter>compression</parameter></methodparam>
  </methodsynopsis>
  &phar.write;
  <para>
   Pour les archives phar basées sur tar, cette méthode lève une exception
   <classname>BadMethodCallException</classname> car la compression de fichier individuelle au sein
   d'une archive tar n'est pas supportée par le format de fichier. Utilisez
   <function>Phar::compress</function> pour compresser une archive phar basée sur tar en entier.
  </para>
  <para>
   Pour les extensions phar basées sur Zip, cette méthode compresse tous les fichiers de l'archive
   Phar en utilisant la compression spécifiée.
   Les extensions <link linkend="ref.zlib">zlib</link> ou <link linkend="ref.bzip2">bzip2</link>
   doivent être activée pour tirer parti de cette fonctionnalité. De plus, si un ou des fichiers
   ont déjà été compressé en utilisant la compression bzip2/zlib, l'extension adéquate doit être activée
   pour décompresser les fichiers avant de les recompresser.
   extensions must be enabled to take advantage of this feature.  In addition, if any files
   are already compressed using bzip2/zlib compression, the respective extension must be
   enabled in order to decompress the files prior to re-compressing.
   Comme avec toutes les fonctionnalités qui modifient le contenu d'un phar, la variable INI
   <link linkend="ini.phar.readonly">phar.readonly</link> doit être à off pour fonctionner.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>compression</parameter></term>
     <listitem>
      <para>
    La compression doit être soit <literal>Phar::GZ</literal>,
    soit <literal>Phar::BZ2</literal> pour bénéficier de la compression, ou bien <literal>Phar::NONE</literal>
    pour éliminer la compression.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lève une exception <classname>BadMethodCallException</classname> si
   la variable INI <link linkend="ini.phar.readonly">phar.readonly</link> est à on,
   si l'extension <link linkend="ref.zlib">zlib</link>
   n'est pas disponible, ou si un ou des fichiers ont été compressés avec l'algorithme bzip2
   et que l'extension <link linkend="ref.bzip2">bzip2</link> n'est pas activée.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un exemple avec <function>Phar::compressFiles</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$p = new Phar('/chemin/vers/mon.phar', 0, 'mon.phar');
$p['monfichier.txt'] = 'salut';
$p['monfichier2.txt'] = 'salut';
foreach ($p as $file) {
    var_dump($file->getFileName());
    var_dump($file->isCompressed());
    var_dump($file->isCompressed(Phar::BZ2));
    var_dump($file->isCompressed(Phar::GZ));
}
$p->compressFiles(Phar::GZ);
foreach ($p as $file) {
    var_dump($file->getFileName());
    var_dump($file->isCompressed());
    var_dump($file->isCompressed(Phar::BZ2));
    var_dump($file->isCompressed(Phar::GZ));
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(10) "monfichier.txt"
bool(false)
bool(false)
bool(false)
string(11) "monfichier2.txt"
bool(false)
bool(false)
bool(false)
string(10) "monfichier.txt"
int(4096)
bool(false)
bool(true)
string(11) "monfichier2.txt"
int(4096)
bool(false)
bool(true)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PharFileInfo::getCompressedSize</function></member>
    <member><function>PharFileInfo::isCompressed</function></member>
    <member><function>PharFileInfo::compress</function></member>
    <member><function>PharFileInfo::decompress</function></member>
    <member><function>Phar::canCompress</function></member>
    <member><function>Phar::isCompressed</function></member>
    <member><function>Phar::decompressFiles</function></member>
    <member><function>Phar::getSupportedCompression</function></member>
    <member><function>Phar::compress</function></member>
    <member><function>Phar::decompress</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
