 <reference id="ref.mnogo">
  <title>mnoGoSearch</title>
  <titleabbrev>mnoGoSearch</titleabbrev>
  <partintro>
   <simpara>
    Ces fonctions donnent l'acc&egrave;s &agrave; mnoGoSearch (anciennement
    UdmSearch), moteur de recherche du monde libre. Pour pouvoir les
    utiliser, vous devez inclure le support en ajoutant l'option
    <option role="configure">--with-mnogosearch</option>. 
    Si vous utilisez cette option sans indiquer le chemin jusqu'&agrave;
    mnogosearch, PHP essaiera de le trouver dans le dossier
    <filename>/usr/local/mnogosearch</filename>. Si vous avez install&eacute;
    mnogosearch dans un autre endroit, vous devez l'indiquer comme
    ceci : <option role="configure">--with-mnogosearch=DIR</option>.
   </simpara>
   <para>
   mnoGoSearch est une moteur de recherche complet, destin&eacute;s aux intranet et 
   serveurs web, distribu&eacute; sous licence GNU. mnoGoSearch offre des fonctionnalit&eacute;s
   unique, qui en font un excellent outil pour un grand nombre d'applications
   de recherche dans votre site : recherche de recettes de cuisines ou dans les
   journaux, recherche dans un site FTP, dans les groupes de news, etc...
   Il offre un syst&egrave;me d'indexation de textes pour les fichiers HTML, PDF et documents
   textes. mnoGoSearch est constitu&eacute; de deux parties : l'indexeur, qui effectue les recherches
   et le moteur de recherche. L'indexeur passe en revue r&eacute;cursivement les sites HTTP,
   FTP, NEWS ou encore les fichiers locaux, et enregistre des m&eacute;ta-donn&eacute;es dans
   les bases MySQL, pour optimiser les recherches ult&eacute;rieures. 
   Une fois que tous les documents ont &eacute;t&eacute; r&eacute;f&eacute;r&eacute;nc&eacute;s, ils sont accessibles au moteur
   de recherche. Celui-ci est utilisable par interface web. Les langages 
   C CGI, Perl et PHP sont support&eacute;s pour effectuer les recherches.
   </para>
   <note>
    <para>
     PHP supporte naturellement MySQL. Il faut savoir que mnoGoSearch
     n'est pas compatible avec la librairie interne de PHP, et ne
     peut fonctionner qu'avec les librairies g&eacute;n&eacute;riques 
     MySQL. Par cons&eacute;quent, si vous utilisez mnoGoSearch avec 
     MySQL, indiquez le dossier d'installation de MySQL durant
     la configuration avec l'option : 
     <option role="configure">--with-mnogosearch --with-mysql=/usr</option>.
    </para>
   </note>
   <simpara>
    Pour utiliser ces fonctions, vous devez installer les versions
    3.1.10 ou plus r&eacute;cente de mnoGoSearch.
   </simpara>
   <simpara>
    Plus de d&eacute;tails sur le site officiel de mnoGoSearch : 
    <ulink url="&url.mnogo">&url.mnogo;</ulink>.
   </simpara>
  </partintro>
  <refentry id="function.udm-add-search-limit">
   <refnamediv>
    <refname>udm_add_search_limit</refname>
    <refpurpose>Ajoute diff&eacute;rentes limitations de recherche</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_add_search_limit</function></funcdef>
      <paramdef>int <parameter>agent</parameter></paramdef>
      <paramdef>int <parameter>var</parameter></paramdef>
      <paramdef>string <parameter>val</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_add_search_limit</function> retourne &true;
     en cas de succ&egrave;s, &false; en cas d'erreur. 
     <function>udm_add_search_limit</function> ajoute diff&eacute;rentes limitations 
     de recherche.
    </para>
    <para>
     <parameter>agent</parameter> - un identifiant d'Agent,
     obtenu apr&egrave;s un appel &agrave; <function>udm_alloc_agent</function>.
    </para>
    <para>
     <parameter>var</parameter> - nom du param&egrave;tre de limitation.
    </para>
    <para>
     <parameter>val</parameter> - Valeur du param&egrave;tre sus-cit&eacute;.
    </para>
    <para>
      <parameter>var</parameter> peut prendre les valeurs suivantes : 
    </para>
    <itemizedlist>
     <listitem>
      <simpara>
       UDM_LIMIT_URL - D&eacute;finit les limitations sur les URL, pour limiter les
       recherches &agrave; une partie de la base. Ce param&egrave;tre supporte les 
       jokers SQL '%' et '_' : '%' remplace n'importe quel nombre de caract&egrave;res,
       m&ecirc;me z&eacute;ro caract&egrave;res, et '_' remplace exactement un caract&egrave;re.
       Par exemple, <literal>'http://my.domain.__/catalog'</literal> peut remplacer
       <literal>http://my.domain.ru/catalog</literal> ou <literal>http://my.domain.ua/catalog</literal>.
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       UDM_LIMIT_TAG - D&eacute;finit les limitations par &eacute;tiquettes. Lors de l'indexation,
       vous pouvez assigner des &eacute;tiquettes sur diff&eacute;rentes parties d'un site. 
       Les &eacute;tiquettes de mnoGoSearch 3.1.x sont des lignes, qui peuvent contenir les
       jokers  '%' et '_' : '%' remplace n'importe quel nombre de caract&egrave;res,
       m&ecirc;me z&eacute;ro caract&egrave;res, et '_' remplace exactement un caract&egrave;re.
       Par exemple, si vous avez les &eacute;tiquettes ABCD et ABCE, la limitation de recherche
       <literal>ABC_</literal> limitera la recherche &agrave; ces deux &eacute;tiquettes;
      </simpara>
     </listitem>
     <listitem>
      <simpara>
      UDM_LIMIT_LANG - D&eacute;finit les limitations par langue.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
      UDM_LIMIT_CAT - D&eacute;finit les limitations par cat&eacute;gorie. Les cat&eacute;gories sont
      similaires aux &eacute;tiquettes, mais elles peuvent &ecirc;tre imbriqu&eacute;es. Vous pouvez
      donc placer des cat&eacute;gories dans d'autres catt&eacute;gories. Vous devez utiliser deux
      caract&egrave;res pour chaque niveau. Vous pouvez utiliser des nombres h&eacute;xad&eacute;cimaux
      allant de 0 &agrave; F ou bien sur une base de 36, allant de 0 &agrave; Z. Par exemple
      la cat&eacute;gorie sup&eacute;rieure 'Auto' vaut 01. Si elle a une sous cat&eacute;gorie
      'Renault', cette derni&egrave;re sera rep&eacute;r&eacute;e par 01 (cat&eacute;gorie m&egrave;re) suivie
      de 01 (dans sa cat&eacute;gorie), ce qui donne "0101". Si 'Auto' a une autre
      sous-cat&eacute;gorie 'Peugeot', cette derni&egrave;re aura le num&eacute;ro 02, et sera identifi&eacute;e
      par <literal>0102</literal>. Si 'Peugeot' a elle-m&ecirc;me une autre sous-cat&eacute;gorie,
      'Moteur', elle sera num&eacute;rot&eacute; 01, et identifi&eacute;e uniquement par <literal>010201</literal>.
      Si vous voulez restreindre les recherches &agrave; cette cat&eacute;gorie uniquement, 
      passez <literal>cat=010201</literal>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_LIMIT_DATE - D&eacute;finit les limitations par date de modification du document. 
      </simpara>
      <simpara>
       Format de la valeur : une cha&icirc;ne de caract&egrave;res, dont le premier caract&egrave;re est
       &lt; ou &gt;, puis une date au format unixtimestamp. Par exemple : 
      </simpara>
      <simpara>
       Udm_Add_Search_Limit($udm,UDM_LIMIT_DATE,"&lt;908012006");
      </simpara>
      <simpara>
       Si &gt; est utilis&eacute;, la recherche sera limit&eacute;e aux documents dont la 
       date de modification est plus grande que celle qui a &eacute;t&eacute; entr&eacute;e.
       Avec &lt;, c'est le contraire.
      </simpara>
     </listitem>
    </itemizedlist>
   </refsect1>
  </refentry>
  <refentry id="function.udm_alloc_agent">
   <refnamediv>
    <refname>Udm_Alloc_Agent</refname>
    <refpurpose>Alloue une session mnoGoSearch</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_alloc_agent</function></funcdef>
      <paramdef>string <parameter>dbaddr</parameter></paramdef>
      <paramdef>string
       <parameter>
        <optional>dbmode</optional>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_alloc_agent</function> retourne un agent mnogosearch
     en cas de succ&egrave;s, &false; en cas d'erreur. 
     <function>udm_alloc_agent</function> cr&eacute;e une session avec les
     param&egrave;tres de base de donn&eacute;es.
    </para>
    <para>
     <parameter>dbaddr</parameter> est une description de base de donn&eacute;es 
     format&eacute; comme une URL. Les options (type, h&ocirc;te, nom de base de donn&eacute;es , port, utilisateur
     ou mot de passe) servent &agrave; se connecter &agrave; la base de donn&eacute;es SQL.
     Ne passez aucune valeur si vous souhaitez utiliser le support des fichiers
     texte int&eacute;gr&eacute;. Sinon, utilisez le format : 
     <literal>DBAddr DBType:[//[DBUser[:DBPass]@]DBHost[:DBPort]]/DBName/</literal>.
     Actuellement, les valeurs de DBType possibles sont : 
     mysql, pgsql, msql, solid, mssql, oracle, ibase. En fait, si vous avez ajout&eacute;
     un support natif, cette option est inutile. Mais les utilisateurs ODBC doivent
     sp&eacute;cifier une des valeurs support&eacute;es. Si votre type de base de donn&eacute;es n'est pas 
     support&eacute;, utilisez le terme "unknown".
    </para>
    <para>
     <parameter>dbmode</parameter> - Vous pouvez selectionner le mode de stockage
     des mots dans la base de donn&eacute;es. Si vous indiquez "single", tous les mots seront 
     sotck&eacute;s dans la m&ecirc;me table. Si vous indiquez "multi", les mots seront situ&eacute;s
     dans diff&eacute;rentes tables, suivant leur taille. Le mode "multi" est g&eacute;n&eacute;ralement plus
     rapide, mais requiert plus de tables. Si le mode "crc" est selectionn&eacute;, mnoGoSearch 
     enregistrera un entier de 32 bits, calcul&eacute; avec l'algorithme CRC32, plutot que des
     des mots. Ce mode requiert moins d'espace disque, et il est beaucoup plus rapide
     que les modes "single" et "multi". "crc-multi" utilise la m&ecirc;me technique de stockage que
     le mode "crc", mais il stocke aussi les mots dans diff&eacute;rentes tables suivant leur
     taille. Format: DBMode single/multi/crc/crc-multi.
    </para>
    <note>
     <para>
     <parameter>dbaddr</parameter> et <parameter>dbmode</parameter> doit correspondre
     &agrave; ceux qui sont utilis&eacute;s lors de l'indexation.
     </para>
    </note>
    <note>
     <para>
      En r&eacute;alit&eacute;, <function>udm_alloc_agent</function> n'ouvre
      pas de connexion, et donc, ne v&eacute;rifie ni le nom d'utilisateur,
      ni le mot de passe.
     </para>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.udm-api-version">
   <refnamediv>
    <refname>udm_api_version</refname>
    <refpurpose>Lit la version des API mnoGoSearch.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_api_version</function></funcdef>
      <paramdef><parameter></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_api_version</function> retourne le num&eacute;ro de version
     des API mnoGoSearch. Par exemple, si mnoGosearch 3.1.10 est utilis&eacute;, 
     <function>udm_api_version</function> retournera <literal>30110</literal>.
    </para>
    <para>
     <function>udm_api_version</function> permet aux utilisateurs d'identifier
     quelles sont les API disponibles. Par exemple, <function>udm_get_doc_count</function> 
     n'est disponible qu'&agrave; partir de mnoGoSearch 3.1.11. 
    </para>
    <simpara>Exemple avec <function>udm_api_version</function></simpara>
    <informalexample>
    <programlisting role="C">
   	   if (Udm_Api_Version() &gt;= 30111) {
	   print  "Total number of urls in database: ".Udm_Get_Doc_Count($udm)."&lt;br&gt;\n";
	}
	</programlisting>
	</informalexample>
   </refsect1>
  </refentry>
  <refentry id="function.udm-clear-search-limits">
   <refnamediv>
    <refname>udm_clear_search_limits</refname>
    <refpurpose>Annule toutes les limitations de recherche</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_clear_search_limits</function></funcdef>
      <paramdef>int <parameter>agent</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_clear_search_limits</function> annule toutes les limitations
     de recherche impos&eacute;es, et retourne &true;.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.udm_errno">
   <refnamediv>
    <refname>Udm_Errno</refname>
    <refpurpose>Num&eacute;ro d'erreur mnoGoSearch</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_errno</function></funcdef>
      <paramdef>int <parameter>agent</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_errno</function> retourne le num&eacute;ro d'erreur mnoGoSearch,
     ou bien <literal>0</literal> sinon.
    </para>
    <para>
     Le param&egrave;tre <parameter>agent</parameter> est un identifiant 
     de r&eacute;sultat, obtenu apr&egrave;s un appel &agrave; <parameter>Udm_Alloc_Agent</parameter>.
    </para>
    <para>
     <function>udm_errno</function> retourne le num&eacute;ro de l'erreur
     g&eacute;n&eacute;r&eacute; par l'agent <parameter>agent</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.udm_error">
   <refnamediv>
    <refname>Udm_Error</refname>
    <refpurpose>Message d'erreur mnoGoSearch</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>udm_error</function></funcdef>
      <paramdef>int <parameter>agent</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_errno</function> retourne le message d'erreur mnoGoSearch,
     ou bien une cha&icirc;ne vide sinon.
    </para>
    <para>
     Le param&egrave;tre <parameter>agent</parameter> est un identifiant 
     de r&eacute;sultat, obtenu apr&egrave;s un appel &agrave; <parameter>Udm_Alloc_Agent</parameter>.
    </para>
    <para>
     <function>udm_error</function> retourne le num&eacute;ro de l'erreur
     g&eacute;n&eacute;r&eacute; par l'agent <parameter>agent</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.udm_find">
   <refnamediv>
    <refname>Udm_Find</refname>
    <refpurpose>Effectue une recherche</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_find</function></funcdef>
      <paramdef>int <parameter>agent</parameter></paramdef>
      <paramdef>string <parameter>query</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_add_search_limit</function> retourne 
     &true; en cas de succ&egrave;s, et 
     &false; en cas d'erreur.
    </para>
    <para>
     La recherche en elle-m&ecirc;me. Le premier argument <parameter>agent</parameter>
     est la session, le second est la <parameter>query</parameter>.
     Pour rechercher, entrez les mots avec lesquels que vous voulez
     faire une recherche, puis cliquez sur le bouton d'envoi. 
     Par exemple, "<literal>mysql odbc</literal>". Vous ne devez
     pas utiliser de guillemets doubles <literal>"</literal>, car 
     ils sont utilis&eacute;s par mnoGoSearch pour s&eacute;parer une requ&ecirc;te en 
     mots. Avec l'exemple ci-dessus, mnoGoSearch va rechercher les
     pages contenant "mysql" et/ou "odbc". Les meilleures r&eacute;ponses
     seront class&eacute;es en premier, et affich&eacute;es en t&ecirc;te de liste.
     Si vous selectionez le mode de recherche "tous" ("ALL"), la recherche
     va retourner les documents qui contiennent l'un ou l'autre
     des mots que vous avez entr&eacute;. Dans le cas o&ugrave; vous utilisez le
     mode "ANY", la recheche retourne la lsite des documents qui contiennent
     l'un ou l'autre des mots. Si vous voulez acc&eacute;der aux fonctions
     avanc&eacute;es de recherche, vous pouvez utiliser le mode "BOOL", qui
     vous permet d'entrer directement des requ&ecirc;tes. 
    </para>
    <para>
     mnoGoSearch utilise les op&eacute;rateurs bool&eacute;ean suivants : 
    </para>
    <para>
     &amp; - AND, ET logique. Par exemple, &quot;mysql &amp;
     odbc&quot;. mnoGoSearch recherche toutes les URL qui contiennent
     &agrave; la fois les mots &quot;mysql&quot; et &quot;odbc&quot;.
    </para>
    <para>
     | -  OR, OU logique. Par exemple, &quot;mysql |
     odbc&quot;. mnoGoSearch recherche toutes les URL qui contiennent
     soit &quot;mysql&quot;, soit &quot;odbc&quot;.
    </para>
    <para>
     ~ - NOT, NON logique. Par exemple, &quot;mysql &amp; ~odbc&quot;.
     mnoGoSearch recherche toutes les URL qui contiennent le
     mot &quot;mysql&quot; mais ne contiennent pas le mot &quot;odbc&quot;.
     Attention : la requ&ecirc;te &quot;~odbc&quot; ne trouvera rien!
    </para>
    <para>
     () - Groupage de commandes pour les requ&ecirc;tes complexes : par exemple,
     &quot;(mysql | msql) &amp; ~postgres&quot;.  Le mode par requ&ecirc;te est
     simple et puissant &agrave; la fois. Vous pouvez utiliser les commandes
     bool&eacute;ennes habituelles avec ce mode.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.udm_free_agent">
   <refnamediv>
    <refname>Udm_Free_Agent</refname>
    <refpurpose>D&eacute;truit une session mnoGoSearch</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_free_agent</function></funcdef>
      <paramdef>int <parameter>agent</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_free_res</function> retourne &true; en
     cas de succ&egrave;s, &false; sinon.
    </para>
    <para>
     Le param&egrave;tre <parameter>res</parameter> est un identifiant 
     de r&eacute;sultat, obtenu apr&egrave;s un appel &agrave; <parameter>Udm-Find</parameter>.
    </para>
    <para>
     <function>udm_free_agent</function> d&eacute;truit l'agent de recherche
     cr&eacute;&eacute; par <function>udm_alloc_agent</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.udm-free-ispell-data">
   <refnamediv>
    <refname>udm_free_ispell_data</refname>
    <refpurpose>Lib&egrave;re la m&eacute;moire allou&eacute;e pour ispell</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_free_ispell_data</function></funcdef>
      <paramdef>int <parameter>agent</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_free_ispell_data</function> retourne toujours &true;.
    </para>
    <para>
     <parameter>agent</parameter> - Agent mnoGoSearch obtenu apr&egrave;s un appel &agrave; 
     <function>udm_alloc_agent</function>.
    </para>
    <note>
    <para>
     <function>udm_free_ispell_data</function> est support&eacute;e &agrave; partir de
     la version 3.1.12 de mnoGoSearch et elle ne fait strictement rien avec les
     versions pr&eacute;c&eacute;dentes.
    </para>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.udm_free_res">
   <refnamediv>
    <refname>Udm_Free_Res</refname>
    <refpurpose>Lib&egrave;re un r&eacute;sultat mnoGoSearch</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_free_res</function></funcdef>
      <paramdef>int <parameter>res</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_free_res</function> retourne &true; en
     cas de succ&egrave;s, &false; sinon.
    </para>
    <para>
     Le param&egrave;tre <parameter>res</parameter> est un identifiant 
     de r&eacute;sultat, obtenu apr&egrave;s un appel &agrave; <parameter>Udm-Find</parameter>.
    </para>
    <para>
     <function>udm_free_res</function> lib&egrave;re la m&eacute;moire de tous
     les r&eacute;sultats g&eacute;n&eacute;r&eacute;s.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.udm-get-doc-count">
   <refnamediv>
    <refname>udm_get_doc_count</refname>
    <refpurpose>Lit le nombre total de documents dans les bases.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_get_doc_count</function></funcdef>
      <paramdef>int <parameter>agent</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_get_doc_count</function> retourne le nombre de document
     dans les bases de donn&eacute;es.
    </para>
    <para>
     <parameter>agent</parameter> - Agent mnoGoSearch obtenu apr&egrave;s un appel &agrave; 
     <function>udm_alloc_agent</function>.
    </para>
    <note>
    <simpara>
     <function>udm_get_doc_count</function> est support&eacute; &agrave; partir de la version
     mnoGoSearch 3.1.11 ou plus r&eacute;cent.
    </simpara>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.udm_get_res_field">
   <refnamediv>
    <refname>Udm_Get_Res_Field</refname>
    <refpurpose>Lit un champs de r&eacute;sultat mnoGoSearch</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_get_res_field</function></funcdef>
      <paramdef>int <parameter>res</parameter></paramdef>
      <paramdef>int <parameter>row</parameter></paramdef>
      <paramdef>int <parameter>field</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_alloc_agent</function> retourne la valeur du 
     champs <parameter>field</parameter> dans la ligne <parameter>row</parameter>,
     du r&eacute;sultat <parameter>res</parameter>, et 
     &false; sinon.
    </para>
    <para>
     Le param&egrave;tre <parameter>res</parameter> est un identifiant 
     de r&eacute;sultat, obtenu apr&egrave;s un appel &agrave; <parameter>Udm-Find</parameter>.
    </para>
    <para>
     Le param&egrave;tre <parameter>row</parameter> est le num&eacute;ro du lien dans
     la page courante. Il peut valoir de 0 jusqu'&agrave; 
     <parameter>UDM_PARAM_NUM_ROWS</parameter>.
    </para>
    <para>
     Le param&egrave;tre <parameter>field</parameter> est l'identifiant de
     champs, et peut prendre l'une des valeurs suivantes : 
    </para>
    <itemizedlist>
     <listitem>
      <simpara>
       UDM_FIELD_URL - Champs URL
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       UDM_FIELD_CONTENT - Champs "Content-type" (par exemple, "text/html").
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_FIELD_TITLE - Titre du document.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_FIELD_KEYWORDS - Mots cl&eacute;s du document (balise META KEYWORDS).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_FIELD_DESC - Description du document (balise META DESCRIPTION).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_FIELD_TEXT - Corps du document (balise body, les premi&egrave;res lignes
       pour donner une id&eacute;e du document).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_FIELD_SIZE - Taille du document.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_FIELD_URLID - Identifiant unique de l'URL.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_FIELD_RATING  - Score de la page (calcul&eacute; par mnoGoSearch).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_FIELD_MODIFIED - Date de modification au format unixtimestamp.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_FIELD_ORDER - Le nombre de documents trouv&eacute;s.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_FIELD_CRC - La valeur CRC du document.
      </simpara>
     </listitem>
    </itemizedlist>
   </refsect1>
  </refentry>
  <refentry id="function.udm_get_res_param">
   <refnamediv>
    <refname>Udm_Get_Res_Param</refname>
    <refpurpose>Lit les param&egrave;tres de r&eacute;sultats mnoGoSearch</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_get_res_param</function></funcdef>
      <paramdef>int <parameter>res</parameter></paramdef>
      <paramdef>int <parameter>param</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_get_res_param</function> retourne les param&egrave;tres
     de r&eacute;sultat en cas de succ&egrave;s, &false; en cas d'erreur.
    </para>
    <para>
     Le param&egrave;tre <parameter>res</parameter> est un identifiant 
     de r&eacute;sultat, obtenu apr&egrave;s un appel &agrave; <parameter>Udm-Find</parameter>.
    </para>
    <para>
     Le param&egrave;tre <parameter>param</parameter> peut prendre les valeurs
     suivantes : 
    </para>
    <itemizedlist>
      <listitem>
      <simpara>
       UDM_PARAM_NUM_ROWS - nombre de liens trouv&eacute;s dans le groupe de r&eacute;sultat courant.
       C'est la valeur de UDM_PARAM_PAGE_SIZE pour tous les groupes, sauf le dernier.
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       UDM_PARAM_FOUND - Nombre total de r&eacute;sultats trouv&eacute;s.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_WORDINFO - Informations sur les mots trouv&eacute;s, c'est &agrave; dire que 
       la recherche "un bon libre" retournera "un: stopword, bon:5637, livre: 120"
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_SEARCHTIME - Temps de recherche en secondes
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_FIRST_DOC - le num&eacute;ro du premier document affich&eacute; dans le groupe.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       UDM_PARAM_LAST_DOC - le num&eacute;ro du dernier document affich&eacute; dans le groupe.
      </simpara>
     </listitem>
    </itemizedlist>
   </refsect1>
  </refentry>
  <refentry id="function.udm-load-ispell-data">
   <refnamediv>
    <refname>udm_load_ispell_data</refname>
    <refpurpose>Charge les donn&eacute;es ispell</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_load_ispell_data</function></funcdef>
      <paramdef>int <parameter>agent</parameter></paramdef>
      <paramdef>int <parameter>var</parameter></paramdef>
      <paramdef>string <parameter>val1</parameter></paramdef>
      <paramdef>string <parameter>val2</parameter></paramdef>
      <paramdef>int <parameter>flag</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_load_ispell_data</function>  charge des donn&eacute;es ispell.
     <function>udm_load_ispell_data</function> retourne &true; 
     en cas de succ&egrave;s, et &false; en cas d'erreur.
    </para>
    <para>
     <parameter>agent</parameter> - Agent mnoGoSearch obtenu apr&egrave;s un appel &agrave; 
     <function>udm_alloc_agent</function>.
    </para>
    <para>
     <parameter>var</parameter> - param&egrave;tre indiquant la source des donn&eacute;es ispell.
    </para>
    <para>
     Apr&egrave;s avoir utilis&eacute; cette fonction, pensez &agrave; lib&eacute;rer les donn&eacute;es de la
     m&eacute;moire avec <function>udm_free_ispell_data</function>, m&ecirc;me si vous
     utilisez le mode UDM_ISPELL_TYPE_SERVER.
    </para>
    <para>
     Le mode de plus rapide est UDM_ISPELL_TYPE_SERVER. UDM_ISPELL_TYPE_TEXT est
     plus lent, et UDM_ISPELL_TYPE_DB est le plus lent. Ce classement est vrai
     pour mnoGoSearch 3.1.10 - 3.1.11. Il est pr&eacute;vu d'acc&eacute;l&eacute;rer le mode DB dans les
     versions futures, et cela sera plus rapide que le mode TEXT.
    </para>
    <itemizedlist>
     <listitem>
      <simpara>
       UDM_ISPELL_TYPE_DB indique que les donn&eacute;es ispell doivent &ecirc;tre charg&eacute;e depuis la
       base SQL. Dans ce cas, les param&egrave;tres <parameter>val1</parameter> et 
       <parameter>val2</parameter> sont ignor&eacute;s et doivent &ecirc;tre laiss&eacute;s vides.
       <parameter>flag</parameter> doit valoir <literal>1</literal>.
      </simpara>
      <note>
      <para>
       <parameter>flag</parameter> indique qu'apr&egrave;s le chargement des donn&eacute;es ispell
       &agrave; partir de la source, elles doivent &ecirc;tre tri&eacute;es (c'est n&eacute;cessaire au bon 
       fonctionnement d'ispell). Dans le cas o&ugrave; vous chargez les donn&eacute;es depuis un fichier,
       il peut y avoir plusieurs appels &agrave; <function>udm_load_ispell_data</function>, 
       et il ne vaut pas la peine de trier les valeurs apr&egrave;s chaque appel, mais uniquement
       &agrave; la fin. Etant donn&eacute; qu'en mode DB, toutes les donn&eacute;es sont charg&eacute;es en une seule
       fois, ce param&egrave;tre doit avoir la valeur de <literal>1</literal>. Dans ce mode, en
       cas d'erreur, par exemple si la table ispell est absente, la fonction retournera
       &false; et le code d'erreur, avec son message, seront accessibles avec
       <function>udm_error</function> et <function>udm_errno</function>.
      </para>
      </note>
     <simpara>Exemple avec <function>udm_load_ispell_data</function></simpara>
    <informalexample>
    <programlisting role="C">
    	   if (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_DB,'','',1)) {
              printf("Error #%d: '%s'\n",Udm_Errno($udm),Udm_Error($udm));
              exit;
           }
	</programlisting>
	</informalexample>
     </listitem>
     <listitem>
     <para>
     UDM_ISPELL_TYPE_AFFIX indique que les donn&eacute;es ispell doivent &ecirc;tre charg&eacute;e
     depuis un fichier et initie le chargement. Dans ce cas, <parameter>val1</parameter>
     d&eacute;finit le code de langue en deux lettre, et <parameter>val2</parameter> est le chemin
     jusqu'aux fichiers. Notez que si vous utilisez un chemin relatif, le module recherche
     les fichiers non pas dans UDM_CONF_DIR, mais directement avec le chemin courant,
     o&ugrave; le script est ex&eacute;cut&eacute;. En cas d'erreur avec ce mode, si le fichier est absent,
     la fonction retourne &false;, et un message d'erreur sera affich&eacute;.
     Les messages d'erreur ne sont pas accessibles avec <function>udm_error</function> et
     <function>udm_errno</function>, puisque ces fonctions ne traitent que les messages
     SQL. Reportez vous &agrave; la description du param&egrave;tre <parameter>flag</parameter>.
    </para>
    <simpara>Exemple avec <function>udm_load_ispell_data</function></simpara>
    <informalexample>
    <programlisting role="C">
           if ((! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_AFFIX,'en','/opt/ispell/en.aff',0)) ||
               (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_AFFIX,'ru','/opt/ispell/ru.aff',0)) ||
               (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_SPELL,'en','/opt/ispell/en.dict',0)) ||
               (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_SPELL,'ru','/opt/ispell/ru.dict',1))) {
              exit;
           }
	</programlisting>
	</informalexample>
	<note>
	<para>
	<parameter>flag</parameter> prend la valeur <literal>1</literal> si c'est le dernier appel
	&agrave; cette fonction.
	</para>
	</note>
	 </listitem>
	 <listitem>
	 <para>
	 UDM_ISPELL_TYPE_SPELL indique que les donn&eacute;es ispell doivent &ecirc;tre charg&eacute;es
	 depuis un fichier, et initie le chargement du dictionnaire. Dans ce cas, 
	 <parameter>val1</parameter> d&eacute;finit le code langue sur deux lettres, et 
	 <parameter>val2</parameter> le chemin du fichier.  Notez que si vous utilisez
	 un chemin relatif, le module recherche les fichiers non pas dans UDM_CONF_DIR,
	 mais directement avec le chemin courant, o&ugrave; le script est ex&eacute;cut&eacute;. En cas d'erreur 
	 avec ce mode, si le fichier est absent, la fonction retourne &false;,
	 et un message d'erreur sera affich&eacute;. Les messages d'erreur ne sont pas accessibles avec
	 <function>udm_error</function> et <function>udm_errno</function>, puisque ces fonctions
	 ne traitent que les messages SQL. Reportez vous &agrave; la description du param&egrave;tre 
	 <parameter>flag</parameter>.
     </para> 
     <simpara>Exemple avec <function>udm_load_ispell_data</function></simpara>
    <informalexample>
    <programlisting role="C">
           if ((! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_AFFIX,'en','/opt/ispell/en.aff',0)) ||
               (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_AFFIX,'ru','/opt/ispell/ru.aff',0)) ||
               (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_SPELL,'en','/opt/ispell/en.dict',0)) ||
               (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_SPELL,'ru','/opt/ispell/ru.dict',1))) {
              exit;
           }
	</programlisting>
	</informalexample>
	<note>
	 <para>
	  <parameter>flag</parameter> prend la valeur <literal>1</literal> si c'est le dernier appel
	  &agrave; cette fonction.
	 </para>
	</note>
	 </listitem>
	 <listitem>
	 <para>
	 UDM_ISPELL_TYPE_SERVER active le support des serveurs ispell. <parameter>val1</parameter>
	 indique alors l'adresse de l'h&ocirc;te qui supporte le serveur ispall. <parameter>val2</parameter>
	 n'est pas encore utilis&eacute;, mais dans les cas futurs, il indiquera le num&eacute;ro de port
	 utilis&eacute; par le serveur ispell. <parameter>flag</parameter> n'est pas utile, car les
	 donn&eacute;es sont d&eacute;j&agrave; tri&eacute;es.
	 </para>
	 <para>
  	  Les serveurs Spelld lisent les donn&eacute;es d'orthographe dans une
  	  configuration s&eacute;par&eacute;e (par d&eacute;faut <filename>/usr/local/mnogosearch/etc/spelld.conf</filename>),
  	  les trie et les stockes en m&eacute;moire. Avec les clients, le serveur communique
  	  de deux fa&ccedil;ons : vers les indexeurs, tout le contenu de la m&eacute;moire
  	  est transf&eacute;r&eacute; pour que l'indexeur travaille plus vite; vers le
  	  moteur de recherche, il recoit les mots &agrave; normaliser, et les rend
  	  au client corrig&eacute;s. Cela permet une plus grande rapidit&eacute; d'&eacute;x&eacute;cution,
  	  en comparaison des modes db et text (notamment, les tris et les
  	  chargements sont beaucoup plus rapides).
	 </para>
	 <para>
	 <function>udm_load_ispell_data</function> en mode UDM_ISPELL_TYPE_SERVER
	 ne charge pas vraiment les donn&eacute;es ispell, mais d&eacute;finit simplement l'adresse
	 du serveur. En fait, le serveur sera automatiquement utilis&eacute; par 
	 <function>udm_find</function> lors des recherches. En cas d'erreur,
	 (par exemple si le serveur ispell ne fonctionne pas ou que l'h&ocirc;te indiqu&eacute;
	 est invalide), la conversion sera annul&eacute;e, mais aucun message d'erreur ne 
	 sera affich&eacute;.
	 </para>
	 <note>
	 <para>
	 Cette fonction est disponible &agrave; partir de mnoGoSearch 3.1.12.
	 </para>
	 </note>
	 <simpara>Exemple avec <function>udm_load_ispell_data</function></simpara>
    <informalexample>
    <programlisting role="C">
    if (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_SERVER,'','',1)) {
    	printf("Error loading ispell data from server&lt;br&gt;\n");
    	exit;
	}
   	</programlisting>
	</informalexample>
	 </listitem>
	</itemizedlist> 
   </refsect1>
  </refentry>
  <refentry id="function.udm-set-agent-param">
   <refnamediv>
    <refname>udm_set_agent_param</refname>
    <refpurpose>Modifie les param&egrave;tres de l'agent mnoGoSearch</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_set_agent_param</function></funcdef>
      <paramdef>int <parameter>agent</parameter></paramdef>
      <paramdef>int <parameter>var</parameter></paramdef>
      <paramdef>string <parameter>val</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>udm_set_agent_param</function> retourne &true; en 
     cas de succ&egrave;s et &false; sinon. <function>udm_set_agent_param</function> 
     d&eacute;finit les param&egrave;tres de l'agent mnoGoSearch.
    </para>
    <simpara>
     Les param&egrave;tres suivants et leurs valeurs sont disponibles : 
    </simpara>
    <itemizedlist>
     <listitem>
       <simpara>
	    UDM_PARAM_PAGE_NUM - Utilis&eacute; pour choisir le num&eacute;ro de groupe de r&eacute;sultat (les
	    r&eacute;sultats sont retourn&eacute;s par groupe, commencant &agrave; 0, avec UDM_PARAM_PAGE_SIZE 
	    r&eacute;sultats par page).
       </simpara>
     </listitem> 
     <listitem>
       <simpara>
	    UDM_PARAM_PAGE_SIZE - Nombre de r&eacute;sultats affich&eacute;s par page.
       </simpara>
     </listitem> 
     <listitem>
       <simpara>
   	    UDM_PARAM_SEARCH_MODE - Mode de recherche. Les valeurs suivantes sont disponibles : 
   	    UDM_MODE_ALL - recherche tous les mots; 
   	    UDM_MODE_ANY - recherche l'un des mots;
   	    UDM_MODE_PHRASE - recherche une phrase;
   	    UDM_MODE_BOOL - recherche bool&eacute;enne.
   	    Voir <function>udm_find</function> pour plus de d&eacute;tails sur les recherches bool&eacute;ennes.
       </simpara>
      </listitem> 
      <listitem>
       <simpara>
	    UDM_PARAM_CACHE_MODE - Active/d&eacute;sactive le cache. Lorsque le cache est activ&eacute;, le 
	    moteur de recherche va stocker les r&eacute;sultats sur le disque. Lorque deux
	    requ&ecirc;te seront similaires, il pourra retourner les r&eacute;sultats plus rapidement,
	    sans recherche. Valeurs disponibles : UDM_CACHE_ENABLED, UDM_CACHE_DISABLED.
       </simpara>
      </listitem> 
      <listitem>
       <simpara>
	    UDM_PARAM_TRACK_MODE - Active le mode de suivi de requ&ecirc;te. Depuis la version
	    3.1.2, mnoGoSearch dispose d'un suivi de requ&ecirc;te. Notez que ce suivi n'est impl&eacute;ment&eacute;
	    qu'avec les versions SQL et n'est pas disponible avec les bases de donn&eacute;es
	    int&eacute;gr&eacute;es. Pour utiliser ce suivi, vous devez cr&eacute;er des tables de suivi. Pour mysql,
	    utilisez le script <filename>create/mysql/track.txt</filename>. Lorsque vous 
	    effectuez une recherche avec l'interface, ces tables stockeront les mots recherch&eacute;s
	    ainsi que le nombre de mots trouv&eacute;s, et la date. Valeurs disponibles : 
	    UDM_TRACK_ENABLED, UDM_TRACK_DISABLED.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	    UDM_PARAM_PHRASE_MODE - indique si les index des bases de donn&eacute;es utilise des
	    phrases( param&egrave;tre "phrase" dans indexer.conf). Valeurs disponibles : 
	    UDM_PHRASE_ENABLED and UDM_PHRASE_DISABLED.
	    Notez bien que si la recherche par phrase est activ&eacute; (UDM_PHRASE_ENABLED), 
	    il est toujours possible de faire des recherches dans d'autres modes,
	    (ANY, ALL, BOOL ou PHRASE). En version 3.1.10 de mnoGoSearch, la recherche 
	    par phrase n'est support&eacute;e que pour les modes SQL et int&eacute;gr&eacute;, tandis qu'en
	    3.1.11, la recherche par phrase est support&eacute; par le mode cache.
	   </simpara>
	   <simpara>
	   Exemple de recherche par phrase : 
       </simpara>
       <simpara>
       "Arizona desert" - Cette requete retourne tous les documents qui contiennent
       les mots "Arizona desert" comme une phrase. Notez que vous devez mettre des
       guillemets doubles autour des phrases.
       </simpara>
      </listitem>  
      <listitem>
       <simpara>
	    UDM_PARAM_CHARSET - D&eacute;finit le jeu de caract&egrave;res local. Valeurs disponibles : 
	    Tous les jeux support&eacute;s par mnoGoSearch. koi8-r, cp1251, ...
       </simpara>
      </listitem> 
      <listitem>
       <simpara>
	    UDM_PARAM_STOPFILE - D&eacute;finit le nom et le chemin du fichier de
	    mots ignor&eacute;s. Il y a une petite diff&eacute;rence avec mnoGoSearch :
        Avec mnoGoSearch, si le chemin est &null; ou relatif, il est
        utilis&eacute; &agrave; partir de UDM_CONF_DIR, alors qu'en PHP, le module
        va rechercher &agrave; partir du chemin courant, c'est &agrave; dire celui du
        script courant.
	   </simpara>
	  </listitem>
	  <listitem>
       <simpara>
	    UDM_PARAM_STOPTABLE - Charge la liste des mots ignor&eacute;s depuis une table 
	    SQL. Vous pouvez utiliser plusieurs tables SQL. Cette commande n'a aucun
	    effet si mnoGoSearch n'a pas &eacute;t&eacute; compil&eacute; avec le support de base
	    de donn&eacute;es.
	   </simpara>
	  </listitem>
	 <listitem>
     <simpara>
 	  UDM_PARAM_WEIGHT_FACTOR - Repr&eacute;sente le poids relatif des diff&eacute;rentes
 	  parties d'un document. Actuellement, le corps, titre, mots cl&eacute;s, descriptions
 	  et url sont support&eacute;s. Pour activer cette fonctionnalit&eacute;, utilisez
 	  le degr&eacute; 2 de *Weight commands, dans le fichier <filename>indexer.conf</filename>.
 	  Imaginons que vous avez choisi les poids suivants : 
	</simpara>
	<simpara>URLWeight     1</simpara>
	<simpara>BodyWeight    2</simpara>
	<simpara>TitleWeight   4</simpara>
    <simpara>KeywordWeight 8</simpara> 
    <simpara>DescWeight    16</simpara>
	<simpara>
	Comme l'indexeur utiliser l'op&eacute;rateur de bits OR pour 
	mesurer le poids des mots, il est possible que le m&ecirc;me mot
	soit trouv&eacute; plusieurs fois dans le m&ecirc;me document lors des
	recherches. Un mot qui n'apparait qu'une fois dans le corps 
	sera d&eacute;fini par 00000010 (notation binaire). Un mot qui apparaitra
	dans plusieurs parties pourra avoir la notation 00011111.
	</simpara>
	<simpara>
	 La valeur de ce param&egrave;tre est une cha&icirc;ne de chiffres h&eacute;xad&eacute;cimaux, sous la
 	 forme ABCDE. Chaque chiffre est un facteur correspondant &agrave; un poids
	 affect&eacute; &agrave; une partie du document. Por la situation d&eacute;crite ci-dessus,
	</simpara>
     <simpara>E est le facteur de poids 1  (URL)</simpara>
     <simpara>D est le facteur de poids 2  (Corps)</simpara>
     <simpara>C est le facteur de poids 4  (Titre)</simpara>
     <simpara>B est le facteur de poids 8  (Mots cl&eacute;s)</simpara>
     <simpara>A est le facteur de poids 16 (Description)</simpara>
     <simpara>
     Exemples:
	 </simpara>
	 <simpara>
	 UDM_PARAM_WEIGHT_FACTOR=00001 ne recherche que dans les URL.
  	 </simpara>	
  	 <simpara>
     UDM_PARAM_WEIGHT_FACTOR=00100  ne recherche que dans les Titres.
	 </simpara>	
	 <simpara>
     UDM_PARAM_WEIGHT_FACTOR=11100 recherche dans les Titres,Mots-cl&eacute;s,Description mais pas dans
     le corps ou les URL.
	 </simpara>
	 <simpara>
     UDM_PARAM_WEIGHT_FACTOR=F9421 recherche dans :
      </simpara>
      <simpara>Description avec un poids de 15  (F hex)</simpara>
      <simpara>Keywords avec un poids de 9</simpara>
      <simpara>Title avec un poids de 4</simpara>
      <simpara>Body avec un poids de 2</simpara>
      <simpara>URL avec un poids de 1</simpara>
      <simpara>
	   Si UDM_PARAM_WEIGHT_FACTOR est omis, la valeur par d&eacute;faut est
	   utilis&eacute;e. 
      </simpara>
	  </listitem>
  	  <listitem>
       <simpara>
	    UDM_PARAM_WORD_MATCH - Recherche des mots. Vous pouvez utiliser ce
	    param&egrave;tre pour choisir le type de recherche de mots. Cette fonctionnalit&eacute;
	    n'est valable qu'en mode "single" et "multi", avec les bases SQL ou int&eacute;gr&eacute;e.
	    Elle ne fonctionne pas en mode int&eacute;gr&eacute;, ni avec d'autres modes, car les CRC ne 
	    supportent pas les recherches de sous-cha&icirc;nes. Les valeurs disponibles sont :
	   </simpara>
	 <simpara>UDM_MATCH_BEGIN - d&eacute;but de mot;</simpara>
     <simpara>UDM_MATCH_END - fin de mot;</simpara>
     <simpara>UDM_MATCH_WORD - tout le mot;</simpara>
     <simpara>UDM_MATCH_SUBSTR - une sous-partie de mots.</simpara>
      </listitem>
      <listitem>
       <simpara>
	    UDM_PARAM_MIN_WORD_LEN - d&eacute;finit les tailles extr&ecirc;mes de mots.
	    Tout mot plus court que la limite inf&eacute;rieur est ignor&eacute;. Notez 
	    que ce param&egrave;tre est inclusif, c'est &agrave; dire que si 
	    UDM_PARAM_MIN_WORD_LEN=3, un mot de 3 caract&egrave;res ne sera pas ignor&eacute;,
	    alors qu'un mot de 2 caract&egrave;res sera ignor&eacute;. Par d&eacute;faut, la valeur
	    est de 1.
	   </simpara>
      </listitem>    
      <listitem>
       <simpara>
       UDM_PARAM_ISPELL_PREFIXES - Valeurs possibles : UDM_PREFIXES_ENABLED et UDM_PREFIXES_DISABLED.
       Ces valeurs activent et d&eacute;sactivent le support des pr&eacute;fixes. Par exemple, si le mot
       "test&eacute;" est plac&eacute; dans la requ&ecirc;te de recherche, les mots tels que "test", "tester", etc.
       seront aussi recherch&eacute;s. Les suffixes sont support&eacute;s par d&eacute;faut. Les pr&eacute;fixes modifie
       g&eacute;n&eacute;ralement le sens des mots. Par exemple, si vous cherchez "test&eacute;", vous ne souhaitez
       pas trouver "protest&eacute;" ou "contest&eacute;". Le support des pr&eacute;fixes peut cependant &ecirc;tre 
       utilis&eacute; pour des raisons d'orthographe. Pour activer ispell, vous devez charger les
       donn&eacute;es ispell avec la fonction <function>udm_load_ispell_data</function>.
	   </simpara>
	  </listitem>
	  <listitem>
       <simpara>
	   UDM_PARAM_CROSS_WORDS - Active ou d&eacute;sactive le support "CROSS_WORDS".
	   Valeurs possibles : UDM_CROSS_WORDS_ENABLED et UDM_CROSS_WORDS_DISABLED.
	  </simpara>
	  <simpara>
	   La fonctionnalit&eacute;  "CROSS_WORDS" vous permet d'effectuer des recherches
	   dans les balises (entre &lt;a href="xxx"&gt;  &lt;/a&gt;), pour 
	   utiliser le nom du lien. Ce mode fonctionne avec les bases de donn&eacute;es
	   SQL et n'est pas support&eacute; par les modes int&eacute;gr&eacute;s ou le cache.
	   </simpara>
	   <note>
 	    <simpara>
	     CROSS_WORDS est support&eacute; &agrave; partir de mnoGoSearch 3.1.11.
	    </simpara>
	   </note>
      </listitem>
     </itemizedlist>
    </refsect1>
  </refentry>
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
