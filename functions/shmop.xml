<reference id="ref.shmop">
  <title>M&eacute;moire partag&eacute;e</title>
  <titleabbrev>shmop</titleabbrev>
  
  <partintro>
   <para>
    Shmop est un ensemble de fonctions simples pour g&eacute;rer 
    la m&eacute;moire partag&eacute;e avec PHP (lecture, 
    &eacute;criture, cr&eacute;ation et suppressions de segments de 
    m&eacute;moire parag&eacute;e UNIX). Ces fonctions ne fonctionnent pas
    sous Windows, car ce syst&egrave;me d'exploitation ne supporte pas 
    la m&eacute;moire partag&eacute;e. Pour utiliser les fonctions 
    shmop, compilez PHP avec l'option --enable-shmop parameter.
   </para>
   <para>
    <example>
     <title>Introduction &agrave; la m&eacute;moire partag&eacute;e</title> 
     <programlisting role="php">
&lt;?php
   
// Cr&eacute;e 100 octets de m&eacute;moire partag&eacute;e avec 
// un identifiant syst&egrave;me "0xff3"
$shm_id = shm_open(0xff3, "c", 0644, 100);
if(!$shm_id) {
	echo "Impossible de cr&eacute;er la m&eacute;moire partag&eacute;e\n";
}

// Lire la taille de la m&eacute;moire partag&eacute;e
$shm_size = shm_size($shm_id);
echo "Un bloc de SHM de taille ".$shm_size. " a &eacute;t&eacute; cr&eacute;&eacute;.\n";

// Ecriture d'une cha&icirc;ne de test dans ce segment
$shm_bytes_written = shm_write($shm_id, "mon bloc de m&eacute;moire partag&eacute;e", 0);
if($shm_bytes_written != strlen("mon bloc de m&eacute;moire partag&eacute;e")) {
	echo "Impossible d'&eacute;crire toutes les donn&eacute;es en m&eacute;moire\n";
}

// Lecture du segment
$my_string = shm_read($shm_id, 0, $shm_size);
if(!$my_string) {
	echo "Impossible de lire toutes les donn&eacute;es en m&eacute;moire\n";
}
echo "Les donn&eacute;es mis en m&eacute;moire partag&eacute;es sont : ".$my_string."\n";

//Maintenant, effacons le bloc, et fermons le segment de m&eacute;moire
if(!shm_delete($shm_id)) {
	echo "Impossible d'effacer le segment de m&eacute;moire";
}
shm_close($shm_id);
   
?&gt;
     </programlisting>
    </example>
   </para>
  </partintro>  

  <refentry id="function.shm-open">
   <refnamediv>
    <refname>shm_open</refname>
    <refpurpose>
      Cr&eacute;e ou ouvre un bloc de m&eacute;moire partag&eacute;e
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>shm_open</function></funcdef>
      <paramdef>int <parameter>key</parameter></paramdef>
      <paramdef>string <parameter>flags</parameter></paramdef>
      <paramdef>int <parameter>mode</parameter></paramdef>
      <paramdef>int <parameter>size</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>shm_open</function> peut cr&eacute;er ou ouvrir un bloc 
     de m&eacute;moire partag&eacute;e.
    </para>
    <para>
     <function>shm_open</function> prend 4 param&egrave;tres: la 
     cl&eacute;, qui sera l'identifiant syst&egrave;me pour le bloc. 
     Ce parma&egrave;tre peut &ecirc;tre pass&eacute; comme
     un d&eacute;cimal ou un h&eacute;xad&eacute;cimal. Le 
     deuxi&egrave;me param&egrave;tre est un groupe d'options : 
     <itemizedlist>
      <listitem>
       <simpara>
        "a" pour acc&egrave;s (utilise IPC_EXCL)
        utilisez cette option pour ouvrir un bloc d&eacute;j&agrave; &eacute;xistant.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "c" pour cr&eacute;ation (utilise IPC_CREATE)
        utilisez cette option pour cr&eacute;er un nouveau bloc.
       </simpara>
      </listitem>
     </itemizedlist>
     Le troisi&egrave;me param&egrave;tre est le mode, c'est &agrave; 
     dire les permissions que vous donnez &agrave; ce bloc. Ce sont 
     les m&ecirc;mes que pour les fichiers. Ces permissions doivent 
     &ecirc;tre pass&eacute;es sous forme d'octal (i.e.  0644).
     Le dernier parm&egrave;tre est la taille du bloc de m&eacute;moire, 
     en ocets.
     <note>
      <simpara>
      Note: Les troisi&egrave;me et quatri&egrave;me parma&egrave;tres 
      doivent &ecirc;tre pass&eacute;s &agrave; 0 si vous voulez ouvrir 
      un bloc de m&eacute;moire partag&eacute;e d&eacute;j&agrave; existant.
      En cas de succ&egrave;s <function>shm_open</function> retourne un 
      identifiant que vous pouvez utiliser pour acc&eacute;der &agrave; 
      la m&eacute;moire que vous venez de cr&eacute;er.
     </simpara></note>
    </para> 
    <para>
     <example>
      <title>Cr&eacute;er un nouveau bloc</title>
      <programlisting role="php">
&lt;?php
$shm_id = shm_open(0x0fff, "c", 0644, 100);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     Cet exemple ouvre un nouveau bloc de m&eacute;moire partag&eacute;e,
     dont l'identifiant est 0x0fff.
    </para>
   </refsect1>
  </refentry>  
  
  <refentry id="function.shm-read">
   <refnamediv>
    <refname>shm_read</refname>
    <refpurpose>Lit un bloc</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>shm_read</function></funcdef>
      <paramdef>int <parameter>shmid</parameter></paramdef>
      <paramdef>int <parameter>start</parameter></paramdef>
      <paramdef>int <parameter>count</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>shm_read</function> lit une cha&icirc;ne dans une bloc de
     m&eacute;moire partag&eacute;e.
    </para>
    <para>
     <function>shm_read</function> prend 3 param&egrave;tres: 
     <parameter>shmid</parameter>, qui est un identifiant de 
     m&eacute;moire partag&eacute;e, cr&eacute;&eacute; par 
     <function>shm_open</function>, <parameter>start</parameter> 
     qui est la position &agrave; partir de laquelle on commence 
     &agrave; lire dans la m&eacute;moire et <parameter>count</parameter>,
     le nombre d'octets &agrave; lire.
    </para> 
    <para>
     <example>
      <title>Lire un bloc de m&eacute;moire partag&eacute;e</title>
      <programlisting role="php">
&lt;?php
$shm_data = shm_read($shm_id, 0, 50);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     Cet exemple lit 50 octets dans le bloc de m&eacute;moire partag&eacute;e 
     <literal>$shm_data</literal>.
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.shm-write">
   <refnamediv>
    <refname>shm_write</refname>
     <refpurpose>Ecrire dans un bloc de m&eacute;moire partag&eacute;e</refpurpose>
    </refnamediv>
    <refsect1>
     <title>Description</title>
     <funcsynopsis>
      <funcprototype>
       <funcdef>int <function>shm_write</function></funcdef>
       <paramdef>int <parameter>shmid</parameter></paramdef>
       <paramdef>string <parameter>data</parameter></paramdef>
       <paramdef>int <parameter>offset</parameter></paramdef>
      </funcprototype>
     </funcsynopsis>
     <para>
      <function>shm_write</function> &eacute;crit une cha&icirc;ne dans 
      un bloc de  m&eacute;moire partag&eacute;e.
     </para>
     <para>
      <function>shm_write</function> prend 3 param&egrave;tres: 
      <parameter>shmid</parameter>, qui est un identifiant de 
      m&eacute;moire partag&eacute;e, cr&eacute;&eacute; par 
      <function>shm_open</function>, <parameter>data</parameter> 
      qui est la cha&icirc;ne &agrave; &eacute;crire dans la
      m&eacute;moire et <parameter>offset</parameter>, la 
      position &agrave; partir de laquelle il faut commencer
      &agrave; &eacute;crire.
     </para> 
     <para>
      <example>
      <title>Ecrire un bloc de m&eacute;moire partag&eacute;e</title>
      <programlisting role="php">
&lt;?php
$shm_bytes_written = shm_write($shm_id, $my_string, 0);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     Cet exemple &eacute;crit les donn&eacute;es de la cha&icirc;ne 
     <literal>$my_string</literal> dans un bloc de m&eacute;moire 
     partag&eacute;e. <literal>$shm_bytes_written</literal> 
     repr&eacute;sentera le nombre d'octets &eacute;crits.
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.shm-size">
  <refnamediv>
   <refname>shm_size</refname>
   <refpurpose>Lire la taille du bloc de m&eacute;moire partag&eacute;e</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>shm_size</function></funcdef>
     <paramdef>int <parameter>shmid</parameter></paramdef>
    </funcprototype>
    </funcsynopsis>
    <para>
     <function>shm_size</function> sert &agrave; conna&icirc;tre 
     la taille, en octets, d'un bloc de m&eacute;moire partag&eacute;e.
    </para>
    <para>
     <function>shm_size</function> prend comme argument <parameter>shmid</parameter>,
     un identifiant de bloc de m&eacute;moire partag&eacute;e 
     cr&eacute;&eacute; par <function>shm_open</function>, et retourne 
     un entier, qui repr&eacute;sente le taille de ce bloc.
    </para> 
    <para>
     <example>
      <title>Lire la taille d'un bloc de m&eacute;moire partag&eacute;e</title>
      <programlisting role="php">
&lt;?php
$shm_size = shm_size($shm_id);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     Cet exemple lit la taille du bloc identifi&eacute; par <literal>$shm_id</literal>,
     et le place dans <literal>$shm_size</literal>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.shm-delete">
   <refnamediv>
    <refname>shm_delete</refname>
    <refpurpose>
      D&eacute;truit un bloc de m&eacute;moire partag&eacute;e
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>shm_delete</function></funcdef>
      <paramdef>int <parameter>shmid</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>shm_delete</function> sert &agrave; d&eacute;truire un 
     bloc de m&eacute;moire partag&eacute;e.
    </para>
    <para>
     <function>shm_delete</function> prend un identifiant de 
     m&eacute;moire partag&eacute;e <parameter>shmid</parameter>, 
     cr&eacute;&eacute; par <function>shm_open</function>.
     En cas de succ&egrave;s, la fonction retourne 1, et sinon, 0.
    </para> 
    <para>
     <example>
      <title>Effacement d'un bloc de m&eacute;moire partag&eacute;e</title>
      <programlisting role="php">
&lt;?php
shm_delete($shm_id);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     Ce exemple efface le bloc de m&eacute;moire partag&eacute;e
     identifi&eacute; par <literal>$shm_id</literal>.
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.shm-close">
   <refnamediv>
    <refname>shm_close</refname>
    <refpurpose>Ferme un bloc de m&eacute;moire partag&eacute;e</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>shm_close</function></funcdef>
      <paramdef>int <parameter>shmid</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>shm_close</function> sert &agrave; fermer un bloc de 
     m&eacute;moire partag&eacute;e.
    </para>
    <para>
     <function>shm_close</function> prend un identifiant de m&eacute;moire
     partag&eacute;e, <parameter>shmid</parameter>, cr&eacute;&eacute; par 
     <function>shm_open</function>.
    </para> 
    <para>
     <example>
      <title>Fermeture d'un bloc de m&eacute;moire partag&eacute;e</title>
      <programlisting role="php">
&lt;?php
shm_close($shm_id);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     Cet exemple ferme le bloc de m&eacute;moire partag&eacute;e 
     identifi&eacute; par <literal>$shm_id</literal>.
    </para>
   </refsect1>
  </refentry>
 </reference> 

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
