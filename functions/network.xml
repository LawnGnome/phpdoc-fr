 <reference id="ref.network">
  <title>R&eacute;seau</title>
  <titleabbrev>R&eacute;seau</titleabbrev>
  <refentry id="function.checkdnsrr">
   <refnamediv>
    <refname>checkdnsrr</refname>
    <refpurpose>R&eacute;solution DNS d'une adresse IP.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>checkdnsrr</function></funcdef>
      <paramdef>string <parameter>host</parameter></paramdef>
      <paramdef>string
       <parameter><optional>type</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
      <function>checkdnsrr</function> recherche l'enregistrement DNS de type
      <parameter>type</parameter> correspondant &agrave; l'h&ocirc;te
      <parameter>host</parameter>. Retourne TRUE si un record a &eacute;t&eacute;
      trouv&eacute;, et FALSE en cas d'erreur ou d'&eacute;chec.
    </simpara>
    <simpara>
      <parameter>type</parameter> peut prendre les valeurs suivantes :
      A, MX, NS, SOA, PTR, CNAME, ou ANY. Par d&eacute;faut,
      la valeur est : MX.
    </simpara>
    <simpara>
      <parameter>host</parameter> peut &ecirc;tre soit une adresse IP de la forme
      x.x.x.x avec x entre 0 et 256, soit un nom d'h&ocirc;te.
    </simpara>
    <simpara>
     Voir aussi <function>getmxrr</function>,
     <function>gethostbyaddr</function>,
     <function>gethostbyname</function>,
     <function>gethostbynamel</function> et
     la page de manuel named(8).
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.closelog">
   <refnamediv>
    <refname>closelog</refname>
    <refpurpose>Ferme la connexion &agrave; l'historique syst&egrave;me.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>closelog</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>closelog</function> ferme le pointeur qui sert &agrave;
      &eacute;crire dans l'historique syst&egrave;me. L'utilisation de
      <function>closelog</function> est optionnelle.
    </para>
    <para>
     Voir aussi <function>define_syslog_variables</function>,
     <function>syslog</function> et
     <function>openlog</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.debugger-off">
   <refnamediv>
    <refname>debugger_off</refname>
    <refpurpose>Inactive le debugger interne de PHP.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>debugger_off</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>debugger_off</function> inactive le debuggeur interne de PHP.
      Le debuggeur est toujours en cours de d&eacute;veloppement.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.debugger-on">
   <refnamediv>
    <refname>debugger_on</refname>
    <refpurpose>Active le debugger interne de PHP.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>debugger_on</function></funcdef>
     <paramdef>string <parameter>address</parameter></paramdef>
    </funcsynopsis>
    <para>
      <function>debugger_on</function> active le debugger interne de PHP, et
      le connecte &agrave; l'adresse <parameter>address</parameter>. Le debuggeur
      est toujours en cours de d&eacute;veloppement.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.define-syslog-variables">
   <refnamediv>
    <refname>define_syslog_variables</refname>
    <refpurpose>Initialise toutes les constantes li&eacute;es au syslog</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>define_syslog_varaibles</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>define_syslog_varaibles</function> initialise toutes les
     constantes utilis&eacute;es par les fonctions de syslog.
    </para>
    <para>
     Voir aussi <function>openlog</function>,
     <function>syslog</function> et
     <function>closelog</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.fsockopen">
   <refnamediv>
    <refname>fsockopen</refname>
    <refpurpose>Ouvre une socket de connexion Internet ou Unix.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>fsockopen</function></funcdef>
      <paramdef>
        string <parameter><optional>udp://</optional>hostname</parameter>
      </paramdef>
      <paramdef>int <parameter>port</parameter></paramdef>
      <paramdef>int
       <parameter><optional>errno</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>errstr</optional></parameter>
      </paramdef>
      <paramdef>double
       <parameter><optional>timeout</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>fsockopen</function> cr&eacute;er un flot de connexion &agrave;
      l'Internet (AF_INET) ou &agrave; un domaine Unix (AF_UNIX). Via Internet,
      cette fonction va ouvrir une socket de connexion TCP avec l'h&ocirc;te
      <parameter>hostname</parameter> sur le port <parameter>port</parameter>.
      Pour les connexions UDP, vous devez explicitement sp&eacute;cifier le protocole :
      <parameter>udp://hostname</parameter>.
      Via un domaine Unix, <parameter>hostname</parameter> repr&eacute;sente le
      chemin jusqu'&agrave; la socket, et <parameter>port</parameter> doit
      &ecirc;tre mis &agrave; 0. L'option <parameter>timeout</parameter> sert
      &agrave; donner une dur&eacute;e maximale &agrave; cet appel.
    </para>
    <para>
     <function>fsockopen</function> retourne un pointeur de fichier qui peut
     &ecirc;tre utilis&eacute; avec d'autres fonctions fichiers, telles que
     <function>fgets</function>, <function>fgetss</function>,
     <function>fputs</function>, <function>fclose</function> et
     <function>feof</function>.
    </para>
    <para>
      Si l'appel &eacute;choue, <function>fsockopen</function> retourne FALSE,
      et si les options <parameter>errno</parameter> et <parameter>errstr</parameter>
      ont &eacute;t&eacute; fournies, elles contiennent d&eacute;sormais les
      raisons de l'&eacute;chec. Si l'erreur retourn&eacute;e est 0 et que la
      fonction retourne FALSE, c'est une indication d'erreur. C'est probablement
      du &agrave; une erreur d'initialisation de la socket. Notez que
      <parameter>errno</parameter> et <parameter>errstr</parameter> sont
      pass&eacute;es par r&eacute;f&eacute;rence.
    </para>
    <para>
      Suivant les environnements, le type 'domaine Unix' ou l'option
      <parameter>timeout</parameter> ne sont pas toujours disponibles.
    </para>
	<para>
      La socket sera ouverte par d&eacute;faut en mode bloquant. Vous pouvez
      changer de mode en utilisant : <function>socket_set_blocking</function>.
      <example>
	  <title>Exemple avec <function>fsockopen</function></title>
	  <programlisting>
$fp = fsockopen("www.php.net", 80, &$errno, &$errstr, 30);
if(!$fp) {
	echo "$errstr ($errno)&lt;br&gt;\n";
} else {
	fputs($fp,"GET / HTTP/1.0\n\n");
	while(!feof($fp)) {
		echo fgets($fp,128);
	}
	fclose($fp);
}
	  </programlisting>
	 </example>
     L'exemple ci-dessous d&eacute;crit comment lire la date et l'heure gr&acirc;ce &agrave;
     un service UDP "daytime" (port 13), sur votre propre machine.
     <example>
     <title>Utilisation d'une connexion UDP</title>
     <programlisting role="php">
&lt;?php
$fp = fsockopen("udp://127.0.0.1", 13, &amp;$errno, &amp;$errstr);
if (!$fp) {
    echo "ERREUR: $errno - $errstr&lt;br&gt;\n";
} else {
    fwrite($fp,"\n");
    echo fread($fp, 26);
    fclose($fp);
}
?&gt;
     </programlisting>
     </example>
     Voir aussi: <function>pfsockopen</function>,
     <function>socket_set_blocking</function>,
     <function>socket_set_timeout</function>, <function>fgets</function>,
     <function>fgetss</function>, <function>fputs</function>,
     <function>fclose</function>, et <function>feof</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.gethostbyaddr">
   <refnamediv>
    <refname>gethostbyaddr</refname>
    <refpurpose>
      Retourne le nom d'h&ocirc;te correspondant &agrave; une IP.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>gethostbyaddr</function></funcdef>
      <paramdef>string <parameter>ip_address</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>gethostbyaddr</function> retourne le nom d'h&ocirc;te
      correspondant &agrave; l'IP <parameter>ip_address</parameter>.
      Si une erreur survient, retourne <parameter>ip_address</parameter>.
    </para>
     <para>
      Voir aussi <function>gethostbyname</function>.
     </para>
   </refsect1>
  </refentry>
  <refentry id="function.gethostbyname">
   <refnamediv>
    <refname>gethostbyname</refname>
    <refpurpose>
      Retourne l'adresse IP correspondant &agrave; un h&ocirc;te.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>gethostbyname</function></funcdef>
      <paramdef>string <parameter>hostname</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>gethostbyname</function> retourne l'adresse IP
      correspondant &agrave; l'h&ocirc;te <parameter>hostname</parameter>.
    </para>
     <para>
       Voir aussi <function>gethostbyaddr</function>.
     </para>
   </refsect1>
  </refentry>
  <refentry id="function.gethostbynamel">
   <refnamediv>
    <refname>gethostbynamel</refname>
    <refpurpose>
      Retourne la liste d'IP correspondants &agrave; un h&ocirc;te.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>gethostbynamel</function></funcdef>
      <paramdef>string <parameter>hostname</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>gethostbynamel</function> retourne la liste d'IP
      correspondant &agrave; l'h&ocirc;te <parameter>hostname</parameter>.
    </para>
    <para>
     Voir aussi <function>gethostbyname</function>,
     <function>gethostbyaddr</function>,
     <function>checkdnsrr</function>, <function>getmxrr</function>
     et la page 8 du manuel.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.getmxrr">
   <refnamediv>
    <refname>getmxrr</refname>
    <refpurpose>Retourne les enregistrements MX d'un h&ocirc;te.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>getmxrr</function></funcdef>
      <paramdef>string <parameter>hostname</parameter></paramdef>
      <paramdef>array <parameter>mxhosts</parameter></paramdef>
      <paramdef>array
       <parameter><optional>weight</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
      <function>getmxrr</function> effectue une recherche DNS pour
      obtenir les enregistrements MX de l'h&ocirc;te <parameter>hostname</parameter>.
      Retourne TRUE si des enregistrements sont trouv&eacute;s, et
      FALSE si une erreur est rencontr&eacute;e, ou si la recherche
      &eacute;choue.
    </simpara>
    <simpara>
     La liste des enregistrements MX est plac&eacute;e dans le tableau
     <parameter>mxhosts</parameter>. Si le tableau <parameter>weight</parameter>
     est fourni, il sera rempli par les informations de poids.
    </simpara>
    <simpara>
     Voir aussi
     <function>checkdnsrr</function>, <function>gethostbyname</function>,
     <function>gethostbynamel</function>, <function>gethostbyaddr</function>,
     et la page 8 du manuel.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.getprotobyname">
   <refnamediv>
    <refname>getprotobyname</refname>
    <refpurpose>
      Retourne le num&eacute;ro de protocole associ&eacute; au nom de protocole
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>getprotobyname</function></funcdef>
      <paramdef>string <parameter>name</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>getprotobyname</function> retourne le num&eacute;ro de
     protocole associ&eacute; avec le nom de protocole
     <parameter>name</parameter>, comme dans <filename>/etc/protocols</filename>.
     </para>
     <para>
     Voir aussi <function>getprotobynumber</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.getprotobynumber">
   <refnamediv>
    <refname>getprotobynumber</refname>
    <refpurpose>
      Retourne le nom de protocole associ&eacute; au num&eacute;ro de protocole
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>getprotobynumber</function></funcdef>
      <paramdef>int <parameter>number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>getprotobynumber</function> retourne le num&eacute;ro
     de protocole associ&eacute; avec le nom de protocole
     <parameter>name</parameter>, comme dans <filename>/etc/protocols</filename>.
     </para>
     <para>
       Voir aussi <function>getprotobyname</function>.
     </para>
   </refsect1>
  </refentry>
  <refentry id="function.getservbyname">
   <refnamediv>
    <refname>getservbyname</refname>
    <refpurpose>
      Retourne le num&eacute;ro de port associ&eacute; &agrave; un service
      Internet, et un protocole.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>getservbyname</function></funcdef>
      <paramdef>string <parameter>service</parameter></paramdef>
      <paramdef>string <parameter>protocol</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>getservbyname</function> retourne le num&eacute;ro de
      port associ&eacute; &agrave; au service <parameter>service</parameter>
      et protocole <parameter>protocol</parameter>, comme dans
      <filename>/etc/services</filename>. <parameter>protocol</parameter>
      vaut soit <literal>tcp</literal> ou <literal>udp</literal>.
    </para>
    <para>
      Voir aussi <function>getservbyport</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.getservbyport">
   <refnamediv>
    <refname>getservbyport</refname>
    <refpurpose>
       Retourne le service Internet qui correspond au port et protocole.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>getservbyport</function></funcdef>
      <paramdef>int <parameter>port</parameter></paramdef>
      <paramdef>string <parameter>protocol</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>getservbyport</function> le service internet associ&eacute; au port
      <parameter>port</parameter> pour le protocole <parameter>protocol</parameter>
      comme dans <filename>/etc/services</filename>.
      <parameter>protocol</parameter> vaut soit <literal>tcp</literal> ou
      <literal>udp</literal>.
    </para>
    <para>
      Voir aussi <function>getservbyname</function>.
    </para>
   </refsect1>
  </refentry>
<refentry id="function.ip2long">
   <refnamediv>
    <refname>ip2long</refname>
    <refpurpose>
      Converti une cha&icirc;ne contenant une adresse (IPv4)
      IP num&eacute;rique en adresse lit&eacute;rale.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ip2long</function></funcdef>
      <paramdef>string <parameter>ip_address</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ip2long</function> g&eacute;n&eacute;re une adresse
     IPv4 &agrave; partir de son &eacute;quivalent num&eacute;rique.
     <example>
     <title>Exemple <function>ip2long</function></title>
     <programlisting role="php">
&lt;?
$ip = gethostbyname("www.php.net");
$out = "Les URLS suivantes sont &eacute;quivalentes :&lt;br&gt;\n";
$out .= "http://www.php.net/, http://".$ip."/, and http://".ip2long($ip)."/&lt;br&gt;\n";
echo $out;
?&gt;
     </programlisting>
     </example>
    </para>
    <para>
     Voir aussi: <function>long2ip</function>
    </para>
   </refsect1>
  </refentry>
<refentry id="function.long2ip">
   <refnamediv>
    <refname>long2ip</refname>
    <refpurpose>
      Converti une adresse IP (IPv4) en adresse IP num&eacute;rique
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>long2ip</function></funcdef>
      <paramdef>int <parameter>proper_address</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>long2ip</function> g&eacute;n&eacute;re une adresse IP
     (format aaa.bbb.ccc.ddd) &agrave; partir de sa repr&eacute;sentation
     lit&eacute;rale.
    </para>
    <para>
     Voir aussi: <function>ip2long</function>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.openlog">
   <refnamediv>
    <refname>openlog</refname>
    <refpurpose>Ouvre la connexion &agrave; l'historique syst&egrave;me.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>openlog</function></funcdef>
      <paramdef>string <parameter>ident</parameter></paramdef>
      <paramdef>int <parameter>option</parameter></paramdef>
      <paramdef>int <parameter>facility</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>openlog</function> ouvre la connexion &agrave; l'historique
      syst&egrave;me. La cha&icirc;ne <parameter>ident</parameter> sera
      ajout&eacute; &agrave; chaque message. Les valeurs de
      <parameter>option</parameter> et <parameter>facility</parameter> sont
      donn&eacute;es ci-dessous. L'utilisation de  <function>openlog</function>
      est optionnelle; cette fonction sera automatiquement appel&eacute;e par
      <function>syslog</function> si n&eacute;cessaire, et dans ce cas,
      l'identification sera mise par d&eacute;faut &agrave; <literal>FALSE</literal>.
	  <parameter>facility</parameter> sert &agrave; indiquer quel programme
	  enregistre ce message. Cela vous permet de sp&eacute;cifier
	  (sur la machine d'historique) comment traiter les messages venant
	  de plusieurs serveurs.
     </para>
    <para>
     <table>
      <title>Options <function>openlog</function></title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>Constante</entry>
         <entry>Description</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>LOG_CONS</entry>
         <entry>
          Si une erreur survient lors de l'envoi des donn&eacute;es au gestionnaire
          d'historique, &eacute;crire directement l'erreur sur la console.
         </entry>
        </row>
        <row>
         <entry>LOG_NDELAY</entry>
         <entry>
          Ouvre imm&eacute;diatement une connexion au gestionnaire d'historique
         </entry>
        </row>
        <row>
         <entry>LOG_ODELAY</entry>
         <entry>
          (par d&eacute;faut) retarde l'ouverture de la connexion jusqu'&agrave; ce que le
          premier message soit enregistr&eacute;
         </entry>
        </row>
        <row>
         <entry>LOG_PERROR</entry>
         <entry>Envoie le message au gestionnaire standard</entry>
        </row>
        <row>
         <entry>LOG_PID</entry>
         <entry>Inclus le PID &agrave; chaque message</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     Vous pouvez utiliser une ou plusieurs de ces options. Pour les
     combiner, utiliser l'op&eacute;rateur <literal>OR</literal>. Par exemple,
     pour ouvrir imm&eacute;diatement la connexion, &eacute;crire sur la console et
     inclure le PID de chaque message, utilisez :
     <literal>LOG_CONS | LOG_NDELAY | LOG_PID</literal>.
    </para>
    <para>
     <table>
      <title>
        Param&egrave;tre <parameter>facility</parameter> de <function>openlog</function>
      </title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>Constante</entry>
         <entry>Description</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>LOG_AUTH</entry>
         <entry>
          securit&eacute;/messages d'autorisation (utilisez LOG_AUTHPRIV, pour
          remplacer cette constante sur les syst&egrave;mes o&ugrave; elle est d&eacute;finie).
         </entry>
        </row>
        <row>
         <entry>LOG_AUTHPRIV</entry>
         <entry>securit&eacute;/messages d'autorisation (priv&eacute;)</entry>
        </row>
        <row>
         <entry>LOG_CRON</entry>
         <entry>d&eacute;mon horologe (cron et at)</entry>
        </row>
        <row>
         <entry>LOG_DAEMON</entry>
         <entry>autres d&eacute;mons syst&egrave;me</entry>
        </row>
        <row>
         <entry>LOG_KERN</entry>
         <entry>noyau (kernel)</entry>
        </row>
        <row>
         <entry>LOG_LOCAL0 ... LOG_LOCAL7</entry>
         <entry>reserv&eacute; pour utilisation ult&eacute;rieure</entry>
        </row>
        <row>
         <entry>LOG_LPR</entry>
         <entry>imprimante (line printer subsystem)</entry>
        </row>
        <row>
         <entry>LOG_MAIL</entry>
         <entry>messagerie mail</entry>
        </row>
        <row>
         <entry>LOG_NEWS</entry>
         <entry>USENET newsgroup</entry>
        </row>
        <row>
         <entry>LOG_SYSLOG</entry>
         <entry>messages gener&eacute; en interne par syslogd</entry>
        </row>
        <row>
         <entry>LOG_USER</entry>
         <entry>messages utilisateurs g&eacute;n&eacute;rique</entry>
        </row>
        <row>
         <entry>LOG_UUCP</entry>
         <entry>UUCP subsystem</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     Voir aussi <function>define_syslog_variables</function>,
     <function>syslog</function> et <function>closelog</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.pfsockopen">
   <refnamediv>
    <refname>pfsockopen</refname>
    <refpurpose>
      Ouvre une socket de connexion Internet ou Unix persistante.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>pfsockopen</function></funcdef>
      <paramdef>string <parameter>hostname</parameter></paramdef>
      <paramdef>int <parameter>port</parameter></paramdef>
      <paramdef>int
       <parameter><optional>errno</optional></parameter>
       </paramdef>
      <paramdef>string
       <parameter><optional>errstr</optional></parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>timeout</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>pfsockopen</function> se comporte exactement comme
      <function>fsockopen</function> mais la connexion ouverte le reste,
      m&ecirc;me apr&egrave;s la fin du script. C'est la version
      persistante de <function>fsockopen</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.socket-get-status">
   <refnamediv>
    <refname>socket_get_status</refname>
    <refpurpose>
     Retourne les informations sur une socket
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>socket_get_status</function></funcdef>
      <paramdef>resource
       <parameter>socket_get_status</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>socket_get_status</function> retourne les informations
     sur la socket <parameter>socket_get_status</parameter>, et fournit
     la r&eacute;ponse sous la forme d'un tableau &agrave; quatre
     entr&eacute;es:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <parameter>timed_out</parameter> (bool) - La socket a expir&eacute;e en
       attendant des donn&eacute;es
      </para>
     </listitem>
     <listitem>
      <para>
       <parameter>blocked</parameter> (bool) - La socket a
       &eacute;t&eacute; bloqu&eacute;e
      </para>
     </listitem>
     <listitem>
      <para>
       <parameter>eof</parameter> (bool) - Indique un &eacute;v&eacute;nement
       fin de fichier (EOF)
      </para>
     </listitem>
     <listitem>
      <para>
       <parameter>unread_bytes</parameter> (int) - Nombre d'octets restant dans
       les buffers de la socket.
      </para>
     </listitem>
    </itemizedlist>
    <para>
     Voir aussi
     <function>accept_connect</function>,
     <function>bind</function>,
     <function>connect</function>,
     <function>listen</function>, et
     <function>strerror</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.socket-set-blocking">
   <refnamediv>
    <refname>socket_set_blocking</refname>
    <refpurpose>Active/desactive le mode bloquant d'une socket.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>socket_set_blocking</function></funcdef>
      <paramdef>int <parameter>socket descriptor</parameter></paramdef>
      <paramdef>int <parameter>mode</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      Si <parameter>mode</parameter> est FALSE, la socket est mise en
      mode non bloquant, et si il est TRUE, la socket est mise en mode
      bloquant. Cela affecte des appels tels que <function>fgets</function>
      qui lisent depuis une socket. En mode non bloquant, un appel
      <function>fgets</function> retournera immediatement toujours
      TRUE tandis qu'en mode bloquant, elle va attendre que des
      donn&eacute;es arrivent pour r&eacute;pondre TRUE.
    </para>
   </refsect1>
  </refentry>
<refentry id="function.socket-set-timeout">
   <refnamediv>
    <refname>socket_set_timeout</refname>
    <refpurpose>Fixe la dur&eacute;e de vie de la socket</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>socket_set_timeout</function></funcdef>
      <paramdef>int <parameter>socket descriptor</parameter></paramdef>
      <paramdef>int <parameter>seconds</parameter></paramdef>
      <paramdef>int <parameter>microseconds</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>socket_set_timeout</function> fixe la dur&eacute;e de vie de la
     socket <parameter>socket descriptor</parameter>, exprim&eacute;e comme la somme
     de <parameter>seconds</parameter> secondes et <parameter>microseconds</parameter>
     micro-secondes.
     <example>
     <title>Exemple <function>socket_set_timeout</function></title>
       <programlisting role="php">
&lt;?php
$fp = fsockopen("http://www.php.net", 80);
if(!$fp) {
    echo "Unable to open\n";
} else {
    fputs($fp,"GET / HTTP/1.0\n\n");
    $start = time();
    socket_set_timeout($fp, 2);
    $res = fread($fp, 2000);
    var_dump(socket_get_status($fp));
    fclose($fp);
    print $res;
}
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     Cette fonction s'appelait set_socket_timeout()
     mais elle est d&eacute;sormais obsol&egrave;te.
    </para>
    <para>
     Voir aussi: <function>fsockopen</function> et <function>fopen</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.syslog">
   <refnamediv>
    <refname>syslog</refname>
    <refpurpose>
      G&eacute;n&eacute;re un message dans l'historique syst&egrave;me.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>syslog</function></funcdef>
      <paramdef>int <parameter>priority</parameter></paramdef>
      <paramdef>string <parameter>message</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>syslog</function> g&eacute;n&eacute;re un message qui
      sera inscrit dans l'historique par le syst&egrave;me.
      <parameter>priority</parameter> est une combinaison des valeurs
      d'acc&egrave;s et de niveau, qui seront d&eacute;crites dans la
      procha&icirc;ne section. Les derniers arguments sont le message
      &agrave; envoyer. Attention : les caract&egrave;res <literal>%m</literal>
      seront remplac&eacute;s par l'erreur (sous forme de cha&icirc;ne),
      pr&eacute;sente dans <errortype>errno</errortype>.
    </para>
    <para>
     <table>
      <title>Priorit&eacute;s <function>syslog</function>(en ordre d&eacute;croissant)</title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>Constante</entry>
         <entry>Description</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>LOG_EMERG</entry>
         <entry>syst&egrave;me inutilisable</entry>
        </row>
        <row>
         <entry>LOG_ALERT</entry>
         <entry>une d&eacute;cision doit &ecirc;tre prise imm&eacute;diatement</entry>
        </row>
        <row>
         <entry>LOG_CRIT</entry>
         <entry>conditions critiques</entry>
        </row>
        <row>
         <entry>LOG_ERR</entry>
         <entry>conditions d'erreur</entry>
        </row>
        <row>
         <entry>LOG_WARNING</entry>
         <entry>conditions d'alerte</entry>
        </row>
        <row>
         <entry>LOG_NOTICE</entry>
         <entry>condition normale, mais significative</entry>
        </row>
        <row>
         <entry>LOG_INFO</entry>
         <entry>message d'information</entry>
        </row>
        <row>
         <entry>LOG_DEBUG</entry>
         <entry>message de d&eacute;buggage</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <example>
      <title>Utilisation de <function>syslog</function></title>
      <programlisting role="php">
&lt;?php
define_syslog_variables();
// ouverture de syslog, ajout du PID et envoie simultan&eacute; du
// message &agrave; la sortie standard et &agrave; un mecanisme
// sp&eacute;cifique
openlog(&quot;myScripLog&quot;, LOG_PID | LOG_PERROR, LOG_LOCAL0);
// quelques lignes de code
if (authorized_client()) {
    // faire quelquechose
} else {
    // client non autoris&eacute;!
    // notation de la tentative
    $access = date(&quot;Y/m/d H:i:s&quot;);
    syslog(LOG_WARNING,&quot;Client non autoris&eacute;: $access $REMOTE_ADDR ($HTTP_USER_AGENT)&quot;);
}
closelog();
?&gt;
      </programlisting>
     </example>
     Pour plus d'informations sur comment mettre en place un gestionnaire
     d'historique, reportez vous au manuel Unix, page 5
     <citerefentry><refentrytitle>syslog.conf</refentrytitle>
     <manvolnum>5</manvolnum></citerefentry>.  D'autres informations
     sur les syst&egrave;mes d'historique et leurs options sont aussi
     disponibles dans le manuel <citerefentry><refentrytitle>syslog</refentrytitle>
     <manvolnum>3</manvolnum></citerefentry> des machines Unix.
    </para>
    <para>
      Avec Windows NT, l'historique est pris en charge par Event Log.
    </para>
   </refsect1>
  </refentry>
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
