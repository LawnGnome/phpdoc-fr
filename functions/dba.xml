 <reference id="ref.dba">
  <title>Fonctions dba</title>
  <titleabbrev>dba</titleabbrev>
  <partintro>
   <para>
    Ces fonctions sont l'interface avec les bases de type Berkeley.
   </para>
   <para>
     C'est une couche g&eacute;n&eacute;rale pour plusieurs bases de
     donn&eacute;es sur fichiers. En tant que tel, les fonctionnalit&eacute;s
     sont limit&eacute;es &agrave; une partie des fonctionnalit&eacute;s des
     bases de donn&eacute;es modernes, comme
     <ulink url="">Sleepycat Software's DB2</ulink>. (A ne pas confondre avec
     IBM's DB2 software, qui fonctionne avec <link linkend="ref.odbc">ODBC</link>.).
   </para>
   <para>
     Le comportement de certaines fonctions d&eacute;pends de la base de
     donn&eacute;es utilis&eacute;e. Par exemple
     <function>dba_optimize</function> et <function>dba_sync</function>
     n'auront pas le m&ecirc;me effet d'une base &agrave; l'autre.
   </para>
   <para>
   	Pour ajouter le support d'une base dba, il suffit d'ajouter l'option
   	de configuration --with ad&eacute;quate. Les bases suivantes sont support&eacute;es :
    <itemizedlist>
     <listitem>
      <simpara>
       Dbm est la plus ancienne des base de donn&eacute;es de type Berkeley.
       Il vaut mieux l'&eacute;viter si possible. Les fonctions de
       compatibilit&eacute;s cod&eacute;es dans DB2 et gdbm
       ne sont pas support&eacute;es, car elles ne sont compatibles qu'au
       niveau du code source, et ne peuvent pas g&eacute;rer le format dbm originel.
        (--with-dbm)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
       ndbm est un nouveau type de dbm plus flexible. Il a cependant
       la majorit&eacute; des limitations du genre.
       (--with-ndbm)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
       gdbm est <ulink url="">la base dbm GNU</ulink>.
       (--with-gdbm)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
       db2 est <ulink url="">DB2 de Sleepycat Software</ulink>. Elle se
       d&eacute;crit comme un "ensemble d'outils qui fournissent une base
       de donn&eacute;es performante, tant pour les applications
       ind&eacute;pendantes que pour le client/serveur".
       (--with-db2)
     </simpara>
    </listitem>
     <listitem>
      <simpara>
       DB3 est le <ulink url="&url.sleepycat;">DB3 de Sleepycat Software</ulink>.
       (--with-db3)
      </simpara>
     </listitem>
     <listitem>
     <simpara>
       cdb est "un package rapide, robuste, l&eacute;ger, pour cr&eacute;er et
       lire des bases de donn&eacute;es constantes". C'est l'auteur de qmail qui
       l'a &eacute;crit, et elle est disponible <ulink url="">ici</ulink>. Puisque
       c'est une base constante, elle ne supporte que la lecture.
       (--with-cdb)
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   <example>
    <title>Exemple DBA</title>
     <programlisting>
&lt;?php
$id = dba_open("/tmp/test.db", "n", "db2");
if(!$id) {
    echo "dba_open a &eacute;chou&eacute;\n";
    exit;
}
dba_replace("key", "Ceci est un exemple!", $id);
if(dba_exists("key", $id)) {
    echo dba_fetch("key", $id);
    dba_delete("key", $id);
}
dba_close($id);
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
     DBA g&egrave;re les donn&eacute;es binaires, et n'a pas de limites arbitraires.
     Elle h&eacute;rite de toutes les limites de la base sous jacentes.
   </para>
   <para>
     Toutes les bases de donn&eacute;es sur fichiers doivent fournir un moyen
     de changer le mode d'acc&egrave;s au fichier d'une base, et si possible,
     de toutes les bases. Le mode d'acc&egrave;s est g&eacute;n&eacute;ralement
     pass&eacute; en 4&egrave;me argument &agrave; <function>dba_open</function>
     ou <function>dba_popen</function>.
   </para>
   <para>
     Vous pouvez acc&eacute;der &agrave; toutes les entr&eacute;es d'une
     base d'une mani&egrave;re lin&eacute;aire, avec les fonctions
     <function>dba_firstkey</function> et <function>dba_nextkey</function>.
     Vous ne devez pas modifier une base lorsque vous la traversez ainsi.
   </para>
   <para>
    <example>
     <title>Passer en revue une base</title>
     <programlisting>
&lt;?php
# ...ouverture de la base...
$key = dba_firstkey($id);
while($key != false) {
    if(...) { # conserver la cl&eacute; pour faire d'autres op&eacute;rations plus tard
        $handle_later[] = $key;
    }
    $key = dba_nextkey($id);
}
for($i = 0; $i &lt; count($handle_later); $i++)
    dba_delete($handle_later[$i], $id);
?&gt;
	 </programlisting>
	</example>
   </para>
  </partintro>
  <refentry id="function.dba-close">
   <refnamediv>
    <refname>dba_close</refname>
    <refpurpose>Ferme une base.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>dba_close</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>dba_close</function> ferme le lien &eacute;tablit avec
      la base et lib&egrave;re toutes les ressources de <parameter>handle</parameter>.
    </para>
    <para>
      <parameter>handle</parameter> est un identifiant de base, retourn&eacute; par
      <function>dba_open</function>.
    </para>
    <para>
      <function>dba_close</function> ne retourne aucune valeur.
    </para>
    <para>
      Voir aussi: <function>dba_open</function> et <function>dba_popen</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.dba-delete">
   <refnamediv>
    <refname>dba_delete</refname>
    <refpurpose>Efface une entr&eacute;e.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dba_delete</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>dba_delete</function> efface l'entr&eacute;e
      sp&eacute;cifi&eacute;e par la cl&eacute; <parameter>key</parameter>,
      dans la base identifi&eacute;e par <parameter>handle</parameter>.
    </para>
    <para>
      <parameter>key</parameter> est la cl&eacute; de l'entr&eacute;e &agrave; effacer.
    </para>
    <para>
      <parameter>handle</parameter> est un identifiant de lien, retourn&eacute; par
      <function>dba_open</function>.
    </para>
    <para>
      <function>dba_delete</function> retourne TRUE ou FALSE, si l'entr&eacute;e est
      effac&eacute;e, ou pas effac&eacute;e, respectivement.
    </para>
    <para>
     Voir aussi: <function>dba_exists</function>, <function>dba_fetch</function>,
     <function>dba_insert</function> et <function>dba_replace</function>
	</para>
   </refsect1>
  </refentry>
  <refentry id="function.dba-exists">
   <refnamediv>
    <refname>dba_exists</refname>
    <refpurpose>V&eacute;rifie qu'une cl&eacute; existe.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_exists</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>dba_exists</function> v&eacute;rifie si la cl&eacute;
      <parameter>key</parameter> existe dans la base identifi&eacute;e
      par <parameter>handle</parameter>.
    </para>
    <para>
      <parameter>key</parameter> est la cl&eacute; qui doit &ecirc;tre
      v&eacute;rfi&eacute;e.
    </para>
    <para>
      <parameter>handle</parameter> est un identifiant de base, retourn&eacute; par
      <function>dba_open</function>.
    </para>
    <para>
      <function>dba_exists</function> retourne TRUE ou FALSE, si la cl&eacute; est
      trouv&eacute;e, ou pas, respectivement.
    </para>
    <para>
      Voir aussi : <function>dba_fetch</function>, <function>dba_delete</function>,
      <function>dba_insert</function> et <function>dba_replace</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.dba-fetch">
   <refnamediv>
    <refname>dba_fetch</refname>
    <refpurpose>Lit les donn&eacute;es li&eacute;es &agrave; une cl&eacute;.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dba_fetch</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>dba_fetch</function> lit les donn&eacute;es sp&eacute;cifi&eacute;e
      par la cl&eacute; <parameter>key</parameter> dans la base identifi&eacute;e
      par <parameter>handle</parameter>.
   </para>
   <para>
     <parameter>key</parameter> est la cl&eacute; dont on veut lire les
     donn&eacute;es.
   </para>
    <para>
      <parameter>handle</parameter> est un identifiant de base, retourn&eacute; par
      <function>dba_open</function>.
    </para>
    <para>
      <function>dba_fetch</function> retourne la cha&icirc;ne associ&eacute;e ou false,
      si la paire cl&eacute;/valeur n'a pas &eacute;t&eacute; trouv&eacute;e.
    </para>
    <para>
     Voir aussi : <function>dba_exists</function>, <function>dba_delete</function>,
     <function>dba_insert</function> et <function>dba_replace</function>.
	</para>
   </refsect1>
  </refentry>
  <refentry id="function.dba-firstkey">
   <refnamediv>
    <refname>dba_firstkey</refname>
    <refpurpose>Lit la premi&egrave;re cl&eacute;.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dba_firstkey</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>dba_firstkey</function> retourne la premi&egrave;re cl&eacute;
      de la base de donn&eacute;es sp&eacute;cifi&eacute;e par
      <parameter>handle</parameter> et y place le pointeur interne de
      cl&eacute;. Cela permettra de traverser la base.
    </para>
    <para>
     <parameter>handle</parameter> est un identifiant de base, retourn&eacute; par
     <function>dba_open</function>.
    </para>
    <para>
      <function>dba_firstkey</function> retourne la cl&eacute;, ou FALSE, suivant
      que la premi&egrave;re cl&eacute; existe ou pas.
     </para>
    <para>
      Voir aussi : <function>dba_nextkey</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.dba-insert">
   <refnamediv>
    <refname>dba_insert</refname>
    <refpurpose>Ins&egrave;re une entr&eacute;e.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_insert</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>string <parameter>value</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>dba_insert</function> ins&egrave;re l'entr&eacute;e d&eacute;crite
      par la cl&eacute; <parameter>key</parameter> et la valeur
      <parameter>value</parameter> dans la base sp&eacute;cifi&eacute;e
      par <parameter>handle</parameter>. Si une entr&eacute;e aveec la m&ecirc;me
      cl&eacute; <parameter>key</parameter> existe d&eacute;j&agrave;, l'insertion
      &eacute;chouera.
    </para>
    <para>
      <parameter>key</parameter> est la cl&eacute; de la valeur &agrave;
      ins&eacute;rer.
    </para>
    <para>
      <parameter>value</parameter> est la valeur &agrave; ins&eacute;rer.
    </para>
    <para>
      <parameter>handle</parameter> est un identifiant de base, retourn&eacute; par
      <function>dba_open</function>.
    </para>
    <para>
      <function>dba_insert</function> retourne TRUE ou false, suivant que l'insertion
      a r&eacute;ussi ou &eacute;chou&eacute;.
    </para>
    <para>
      Voir aussi : <function>dba_exists</function>, <function>dba_delete</function>,
      <function>dba_fetch</function> et <function>dba_replace</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.dba-nextkey">
   <refnamediv>
    <refname>dba_nextkey</refname>
    <refpurpose>Lit la cl&eacute; suivante.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dba_nextkey</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>dba_nextkey</function> retourne la cl&eacute; suivante,
      dans la base identifi&eacute;e par <parameter>handle</parameter> et
      incr&eacute;mente le pointeur de cl&eacute;.
    </para>
    <para>
     <parameter>handle</parameter> est un identifiant de base, retourn&eacute; par
     <function>dba_open</function>.
    </para>
    <para>
      <function>dba_nextkey</function> retourne la cl&eacute;, ou FALSE en cas d'&eacute;chec.
    </para>
    <para>
      Voir aussi:  <function>dba_firstkey</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.dba-popen">
   <refnamediv>
    <refname>dba_popen</refname>
    <refpurpose>Ouvre une connexion persistante &agrave; une base de donn&eacute;es.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dba_popen</function></funcdef>
      <paramdef>string <parameter>path</parameter></paramdef>
      <paramdef>string <parameter>mode</parameter></paramdef>
      <paramdef>string <parameter>handler</parameter></paramdef>
      <paramdef><parameter><optional>...</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>dba_popen</function> &eacute;tablit une connexion persistante
      &agrave; la base rep&eacute;r&eacute;e par <parameter>path</parameter>
      avec le mode <parameter>mode</parameter>, en utilisant l'identifiant
      <parameter>handler</parameter>.
    </para>
    <para>
      <parameter>path</parameter> est le chemin sur votre machine.
    </para>
    <para>
      <parameter>mode</parameter> vaut "r" pour lecture seule, "w" pour
      lecture/&eacute;criture, "c" pour lecture/&eacute;criture, et
      cr&eacute;ation si la base n'existe pas, et "n" pour
      cr&eacute;ation, &eacute;crasement, et acc&egrave;s en
      lecture/&eacute;criture.
    </para>
    <para>
      <parameter>handler</parameter> est le nom de l'identifiant qui sera
      utilis&eacute; pour acc&eacute;der &agrave; <parameter>path</parameter>.
      Il est pass&eacute; &agrave; <function>dba_popen</function>.
    </para>
    <para>
      <function>dba_popen</function> retourne un identifiant positif,
      ou FALSE, suivant que la base a &eacute;t&eacute; ouverte, ou que
      l'acc&egrave;s a &eacute;chou&eacute;.
    </para>
    <para>
      Voir aussi : <function>dba_open</function> et <function>dba_close</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.dba-open">
   <refnamediv>
    <refname>dba_open</refname>
    <refpurpose>Ouvre une base de donn&eacute;es.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>dba_open</function></funcdef>
      <paramdef>string <parameter>path</parameter></paramdef>
      <paramdef>string <parameter>mode</parameter></paramdef>
      <paramdef>string <parameter>handler</parameter></paramdef>
      <paramdef><parameter><optional>...</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>dba_open</function> &eacute;tablit une connexion &agrave;
      la base rep&eacute;r&eacute;e par <parameter>path</parameter> avec le
      mode <parameter>mode</parameter> et  l'identifiant <parameter>handler</parameter>.
     </para>
    <para>
      <parameter>path</parameter>est le chemin sur votre machine.
    </para>
    <para>
      <parameter>mode</parameter> vaut "r" pour lecture seule, "w" pour
      lecture/&eacute;criture, "c" pour lecture/&eacute;criture, et
      cr&eacute;ation si la base n'existe pas, et "n" pour
      cr&eacute;ation, &eacute;crasement, et acc&egrave;s en
      lecture/&eacute;criture.
    </para>
    <para>
      <parameter>handler</parameter> est le nom de l'identifiant qui
      sera utilis&eacute; pour acc&eacute;der &agrave; <parameter>path</parameter>.
      Il est pass&eacute; &agrave; <function>dba_popen</function>.
    </para>
    <para>
      Voir aussi : <function>dba_popen</function> et <function>dba_close</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.dba-optimize">
   <refnamediv>
    <refname>dba_optimize</refname>
    <refpurpose>Optimise une base.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_optimize</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>dba_optimize</function> optimise la base de donn&eacute;es
      identifi&eacute;e par <parameter>handle</parameter>.
    </para>
    <para>
      <parameter>handle</parameter> est un identifiant de base retourn&eacute; par
      <function>dba_open</function>.
    </para>
    <para>
      <function>dba_optimize</function> retourne TRUE ou FALSE, suivant que
      l'optimisation a r&eacute;ussi ou &eacute;chou&eacute;.
    </para>
    <para>
      Voir aussi : <function>dba_sync</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.dba-replace">
   <refnamediv>
    <refname>dba_replace</refname>
    <refpurpose>Remplace ou ins&egrave;re une entr&eacute;e.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_replace</function></funcdef>
      <paramdef>string <parameter>key</parameter></paramdef>
      <paramdef>string <parameter>value</parameter></paramdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>dba_replace</function> remplaces ou ins&egrave;re une entr&eacute;e,
      pour la cl&eacute; <parameter>key</parameter> et avec la valeur
      <parameter>value</parameter> dans la base identifi&eacute;e par
      <parameter>handle</parameter>.
    </para>
    <para>
      <parameter>key</parameter> est la cl&eacute; qui va &ecirc;tre
      ins&eacute;r&eacute;e.
    </para>
    <para>
      <parameter>value</parameter> est la valeur qui va &ecirc;tre
      ins&eacute;r&eacute;e.
    </para>
    <para>
     <parameter>handle</parameter> est un identifiant de base retourn&eacute; par
     <function>dba_open</function>.
    </para>
    <para>
      <function>dba_replace</function> retourne TRUE ou false, suivant que
      l'op&eacute;ration r&eacute;ussit ou &eacute;choue.
    </para>
    <para>
     Voir aussi : <function>dba_exists</function>, <function>dba_delete</function>,
     <function>dba_fetch</function> et <function>dba_insert</function>.
	</para>
   </refsect1>
  </refentry>
  <refentry id="function.dba-sync">
   <refnamediv>
    <refname>dba_sync</refname>
    <refpurpose>Synchronise une base de donn&eacute;es.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>dba_sync</function></funcdef>
      <paramdef>int <parameter>handle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>dba_sync</function> synchronise la base de donn&eacute;es
     sp&eacute;cifi&eacute;e par <parameter>handle</parameter>. Si
     accept&eacute;, cela va probablement lancer une op&eacute;ration
     de r&eacute;&eacute;criture physique du fichier.
    </para>
    <para>
     <parameter>handle</parameter> est un identifiant de base retourn&eacute; par
     <function>dba_open</function>.
    </para>
    <para>
     <function>dba_sync</function> retourne TRUE ou false, si la
     synchronisation r&eacute;ussi, ou &eacute;choue, respectivement.
    </para>
    <para>
      Voir aussi : <function>dba_optimize</function>.
    </para>
   </refsect1>
  </refentry>
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
