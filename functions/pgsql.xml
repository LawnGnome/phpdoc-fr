 <reference id="ref.pgsql">
  <title>Fonctions PostgreSQL</title>
  <titleabbrev>PostgreSQL</titleabbrev>

  <partintro>
   <para>
     Postgres, initialement d&eacute;velopp&eacute; au d&eacute;partement de Science informatique, &agrave; 
     UC Berkeley, mis en place la majorit&eacute; des concepts des bases relationnelles, 
     actuellement disponibles sur le march&eacute;. PostgreSQL accepte le langage SQL92/SQL3, 
     assure l'int&eacute;grit&eacute; transactionnelle, et l'extension de type. 
     PostgreSQL est une &eacute;volution du code originale de Berkeley : il est Open Source et 
     dans le domaine public.
   </para>
   <para>
     PostgreSQL est disponible sans frais. La version actuelle est disponible &agrave; 
     (en anglais) : <ulink url="&url.pgsql;">www.PostgreSQL.org</ulink>.
   </para>
   <para>
     Depuis la version 6.3 (03/02/1998) PostgreSQL utilise les sockets UNIX, et 
     une table est d&eacute;di&eacute;e &agrave; ces nouvelles capacit&eacute;s. La socket est situ&eacute;e dans le 
     dossier <filename>/tmp/.s.PGSQL.5432</filename>.
     Cette option peut &ecirc;tre activ&eacute;e avec '-i' pass&eacute; au  <command>postmaster</command> 
     et cela s'interpr&egrave;te: "&eacute;coute sur les sockets TCP/IP et sur les sockets Unix ". 
    <table>
     <title>Postmaster and PHP</title>
     <tgroup cols="3">
      <thead>
       <row>
	<entry>Postmaster</entry>
	<entry>PHP</entry>
	<entry>Statut</entry>
       </row>
      </thead>
      <tbody>
       <row>
	<entry>postmaster &</entry>
	<entry>pg_connect("", "", "", "", "dbname");</entry>
	<entry>OK</entry>
       </row>
       <row>
	<entry>postmaster -i &</entry>
	<entry>pg_connect("", "", "", "", "dbname");</entry>
	<entry>OK</entry>
       </row>
       <row>
	<entry>postmaster &</entry>
	<entry>pg_connect("localhost", "", "", "", "dbname");</entry>
	<entry>
          Unable to connect to PostgreSQL server: connectDB() failed: Is the postmaster running and accepting TCP/IP (with -i) connection at 'localhost' on port '5432'? in /path/to/file.php3 on line 20.
          : Impossible de se connecter au serveur PostgreSQL: connectDB() a &eacute;chou&eacute;. Est 
           ce que le postmaster fonctionne, et accepte les TCP/IP (option -i) sur le port '5432'? 
           dans /path/to/file.php3, ligne 20 ?

	</entry>
       </row>
       <row>
	<entry>postmaster -i &</entry>
	<entry>pg_connect("localhost", "", "", "", "dbname");</entry>
	<entry>OK</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
     Il est possible de se connecter avec la commande suivante : 
     <command>$conn = pg_Connect("host=localhost port=5432 dbname=chris");</command>
   </para>
   <para>
     Pour utiliser l'interface des grands objets (large object (lo) interface), il 
     est n&eacute;cessaire de les placer dans un bloc de transaction. Un bloc de transaction 
     commence avec <command>begin</command> et si la transaction se termine avec un 
     <command>commit</command> et <command>end</command>. Si la transaction &eacute;choue, elle 
     doit &ecirc;tre conclue par un <command>abort</command> et <command>rollback</command>.

    <example>
     <title>Utilisation des objets de grande taille (Large Objects)</title>
     <programlisting role="php">
&lt;?php
$database = pg_Connect ("", "", "", "", "jacarta");
pg_exec ($database, "begin");
    $oid = pg_locreate ($database);
    echo ("$oid\n");
    $handle = pg_loopen ($database, $oid, "w");
    echo ("$handle\n");
    pg_lowrite ($handle, "gaga");
    pg_loclose ($handle);
pg_exec ($database, "commit")
pg_exec ($database, "end")
?>
     </programlisting>
    </example>
   </para>
  </partintro>

  <refentry id="function.pg-close">
   <refnamediv>
    <refname>pg_Close</refname>
    <refpurpose>Termine une connexion PostgreSQL.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>bool <function>pg_close</function></funcdef>
     <paramdef>int <parameter>connection</parameter></paramdef>
    </funcsynopsis>
    <para>
      Retourne FALSE si l'index de connexion n'est pas valable, et TRUE sinon. 
    </para>
    <para>
      Ferme la connexion avec le serveur PostgreSQL associ&eacute; &agrave; l'index de connection. 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-cmdtuples">
   <refnamediv>
    <refname>pg_cmdTuples</refname>
    <refpurpose>Retourne le nombre de tuples affect&eacute;s.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_cmdtuples</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_cmdTuples</function> retourne le nombre de tuples (instances) affect&eacute;s 
     par les requ&ecirc;tes INSERT, UPDATE, et DELETE. Si aucun tuple n'a &eacute;t&eacute; affect&eacute;, la 
     fonction retournera 0.
     <example>
      <title>pg_cmdtuples</title>
      <programlisting role="php">
&lt;?php
$result = pg_exec($conn, "INSERT INTO verlag VALUES ('Autor')");
$cmdtuples = pg_cmdtuples($result);
echo $cmdtuples . " <- tuples modifi&eacute;s.";
?>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-connect">
   <refnamediv>
    <refname>pg_Connect</refname>
    <refpurpose>Ouvre une connexion.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_connect</function></funcdef>
     <paramdef>string <parameter>host</parameter></paramdef>
     <paramdef>string <parameter>port</parameter></paramdef>
     <paramdef>string <parameter>options</parameter></paramdef>
     <paramdef>string <parameter>tty</parameter></paramdef>
     <paramdef>string <parameter>dbname</parameter></paramdef>
    </funcsynopsis>
    <para>
      Retourne un index de connexion en cas de succ&egrave;s, et FALSE si une connexion 
      n'a pas pu &ecirc;tre &eacute;tablie. Ouvre une connexion avec un serveur PostgreSQL. 
      Chaque argument doit &ecirc;tre plac&eacute; entre guillemets, y compris le num&eacute;ro de port. 
      Les arguments <parameter>options</parameter> et <parameter>tty</parameter> sont 
      optionnels et peuvent &ecirc;tre ignor&eacute;s. Cette fonction retourne un index de connexion 
      qui sera utilis&eacute; par d'autres fonctions PostgreSQL. Vous pouvez ouvrir plusieurs 
      connexions simultan&eacute;ment.
    </para>
    <para>
      Une connexion peut &ecirc;tre aussi &eacute;tablie avec la commande suivante : 
      <command>$conn = pg_connect("dbname=marliese port=5432");</command>
      en dehors des param&egrave;tres <parameter>dbname</parameter> et <parameter>port</parameter>, 
      <parameter>host</parameter>, <parameter>tty</parameter>, <parameter>options</parameter>,
      <parameter>user</parameter> et <parameter>password</parameter> sont des options.
    </para>
    <para>
       Voir aussi <function>pg_pConnect</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-dbname">
   <refnamediv>
    <refname>pg_DBname</refname>
    <refpurpose>Nom de la base de donn&eacute;es.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>pg_dbname</function></funcdef>
     <paramdef>int <parameter>connection</parameter></paramdef>
    </funcsynopsis>
    <para>
       Retourne le nom de la base de donn&eacute;e PostgreSQL associ&eacute;e &agrave; l'index de connexion 
       connection, ou FALSE si connection n'est pas valide.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-errormessage">
   <refnamediv>
    <refname>pg_ErrorMessage</refname>
    <refpurpose>Message d'erreur.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>pg_errormessage</function></funcdef>
     <paramdef>int <parameter>connection</parameter></paramdef>
    </funcsynopsis>
    <para>
      Retourne une cha&icirc;ne contenant le dernier message d'erreur, ou FALSE en cas 
      d'&eacute;chec. Il sera impossible d'obtenir des d&eacute;tails sur l'erreur g&eacute;n&eacute;r&eacute;e, en 
      utilisant la fonction <function>pg_errormessage</function> si une erreur est 
      survenue dans la derni&egrave;re action pour laquelle une connexion valide existe. 
      Cette fonction retournera une cha&icirc;ne contenant le message d'erreur g&eacute;n&eacute;r&eacute; par 
      le serveur final.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-exec">
   <refnamediv>
    <refname>pg_Exec</refname>
    <refpurpose>Ex&eacute;cute une requ&ecirc;te.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_exec</function></funcdef>
     <paramdef>int <parameter>connection</parameter></paramdef>
     <paramdef>string <parameter>query</parameter></paramdef>
    </funcsynopsis>
    <para>
      Retourne un index de r&eacute;sultat, si la requ&ecirc;te a &eacute;t&eacute; correctement ex&eacute;cut&eacute;e, 
      et FALSE en cas d'&eacute;chec, ou si la connexion connection n'&eacute;tait pas un index 
      de connexion valide. En cas d'erreur, le message d'erreur peut &ecirc;tre obtenu 
      grâce &agrave; la fonction <function>pg_ErrorMessage</function>, si l'index de connexion 
      &eacute;tait valide. Envoie une requ&ecirc;te &agrave; un serveur PostgreSQL identifi&eacute; grâce &agrave; 
      l'index de connexion. La r&eacute;ponse retourn&eacute;e par cette fonction est un index de 
      r&eacute;sultat qui devra &ecirc;tre utilis&eacute; pour acc&eacute;der aux lignes de r&eacute;sultat, grâce &agrave; 
      d'autres fonctions PostgreSQL. 
     <note>
      <simpara>
          PHP/FI retournait 1 lorsque la requ&ecirc;te n'attendait pas de donn&eacute;es en r&eacute;ponse 
          (insertion, modifcations, par exemple), et retournait un nombre plus grand 
          que 1, m&ecirc;me sur un select qui donnait un ensemble vide. Ce n'est plus le cas.
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-fetch-array">
   <refnamediv>
    <refname>pg_Fetch_Array</refname>
    <refpurpose>Lit une ligne dans un tableau.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>pg_fetch_array</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int 
      <parameter><optional>result_type</optional></parameter>
     </paramdef>
    </funcsynopsis>
    <para> 
      Retourne un tableau qui contient &agrave; la ligne demand&eacute;e, dans le r&eacute;sultat identifi&eacute;e 
      par result, et FALSE, si il ne reste plus de lignes.
    </para>
    <para>
      <function>pg_fetch_array</function> est une version &eacute;volu&eacute;e de 
      <function>pg_fetch_row</function>. En plus de proposer un tableau &agrave; indice 
      num&eacute;rique, elle peut aussi enregistrer les donn&eacute;es dans un tableau associatif, 
      en utilisant les noms des champs comme cl&eacute;s.
    </para>
    <para>
      L'argument optionnel  <parameter>result_type</parameter> de 
      <function>pg_fetch_array</function> est une constante, qui peut prendre les 
      valeurs suivantes : PGSQL_ASSOC, PGSQL_NUM, et PGSQL_BOTH. 
     <note>
      <para>
       <parameter>Result_type</parameter> a &eacute;t&eacute; ajout&eacute;e en PHP 4.0.
      </para>
     </note>
    </para>
    <para>
      Il est important de noter que <function>pg_fetch_array</function> n'est pas 
      significativement plus lent que <function>pg_fetch_row</function>, tandis qu'elle 
      fournit un confort d'utilisation notable.
    </para>
    <para>
      Pour plus de d&eacute;tails, reportez vous &agrave; <function>pg_fetch_row</function>.
   </para>
    <example>
     <title>PostgreSQL fetch array</title>
     <programlisting role="php">
&lt;?php 
$conn = pg_pconnect("","","","","publisher");
if (!$conn) {
    echo "Erreur de connexion.\n";
    exit;
}

$result = pg_Exec ($conn, "SELECT * FROM authors");
if (!$result) {
    echo "Erreur durant la requete.\n";
    exit;
}

$arr = pg_fetch_array ($result, 0);
echo $arr[0] . " <- array\n";

$arr = pg_fetch_array ($result, 1);
echo $arr["author"] . " <- array\n";
?>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.pg-fetch-object">
   <refnamediv>
    <refname>pg_Fetch_Object</refname>
    <refpurpose>Lit une ligne dans un objet.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>object <function>pg_fetch_object</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int 
      <parameter><optional>result_type</optional></parameter>
     </paramdef>
    </funcsynopsis>
    <para> 
      Retourne un objet dont les membres sont les champs de la ligne demand&eacute;e, 
      ou FALSE, si il n'y a plus de lignes.
    </para>
    <para> 
     <function>pg_fetch_object</function> est similaire &agrave; 
      <function>pg_fetch_array</function>, avec une diff&eacute;rence majeure : c'est un objet 
      qui est retourn&eacute;, au lieu d'un tableau. Par cons&eacute;quent, cela signifie que vous ne 
      pouvez acc&eacute;der aux membres qu'avec leur nom, et non plus leur offset 
      (les nombres ne sont pas autoris&eacute;s comme nom de membre).
    </para>
    <para>
      L'argument optionnel <parameter><optional>result_type</optional></parameter> de 
      <parameter>result_type</parameter> est une constante qui peut prendre les valeurs 
      suivantes : PGSQL_ASSOC, PGSQL_NUM, et PGSQL_BOTH. 
     <note>
      <para>
       <parameter>Result_type</parameter> a &eacute;t&eacute; ajout&eacute; dans PHP 4.0.
      </para>
     </note>
    </para>
    <para>
      Au niveau vitesse, cette fonction est aussi rapide que 
      <function>pg_fetch_row</function> et presque aussi rapide que 
      <function>pg_fetch_row</function> (la diff&eacute;rence est non significative).
    </para>
    <para> 
     Voir aussi: <function>pg_fetch_array</function> et <function>pg_fetch_row</function>.
     <example>
      <title>Postgres fetch object</title>
      <programlisting role="php">


Exemple 1. Postgres retourne un objet

&lt;?php 
$database = "verlag";
$db_conn = pg_connect ("localhost", "5432", "", "", $database);
if (!$db_conn): ?>
    &lt;H1>connexion impossible &agrave; la base postgres &lt;? echo $database ?>&lt;/H1> &lt;?
    Exit;
endif;

$qu = pg_exec ($db_conn, "SELECT * FROM verlag ORDER BY autor");
$row = 0; // postgres r&eacute;clame un compteur de ligne, d'autres bases ne le font pas.

while ($data = pg_fetch_object ($qu, $row)):
    echo $data->autor." (";
    echo $data->jahr ."): ";
    echo $data->titel."&lt;BR&gt;";
    $row++;
endwhile; ?>

&lt;PRE>&lt;?php
$fields[] = Array ("autor", "Author");
$fields[] = Array ("jahr",  "  Year");
$fields[] = Array ("titel", " Title");

$row= 0; // postgres r&eacute;clame un compteur de ligne, d'autres bases ne le font pas.

while ($data = pg_fetch_object ($qu, $row)):
    echo "----------\n";
    reset ($fields);
    while (list (,$item) = each ($fields)):
        echo $item[1].": ".$data->$item[0]."\n";
    endwhile;
    $row++;
endwhile;
echo "----------\n"; ?>
&lt;/PRE> &lt;?php
pg_freeResult ($qu);
pg_close ($db_conn);
?>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-fetch-row">
   <refnamediv>
    <refname>pg_Fetch_Row</refname>
    <refpurpose>Lit une ligne dans un tableau.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>array <function>pg_fetch_row</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
     <paramdef>int <parameter>row</parameter></paramdef>
    </funcsynopsis>
    <para> 
      Retourne un tableau qui contient les donn&eacute;es de la ligne demand&eacute;e, 
      ou FALSE, si il ne reste plus de lignes.
    </para>
    <para>
     <function>pg_fetch_row</function> lit une ligne dans le r&eacute;sultat associ&eacute; &agrave; l'index 
      result. La ligne est retourn&eacute;e sous la forme d'un tableau. La ligne est retourn&eacute;e 
      sous la forme d'un tableau, qui commence &agrave; l'index 0.
    </para>
    <para>
      Les appels ult&eacute;rieurs &agrave; <function>pg_fetch_row</function> retourneront la ligne 
      d'apr&egrave;s, ou bien FALSE, lorsqu'il n'y aura plus de lignes.
    </para>
    <para>
     Voir aussi: <function>pg_fetch_array</function>, <function>pg_fetch_object</function>,
     <function>pg_result</function>.

     <example>
      <title>Postgres retouren une ligne</title>
      <programlisting role="php">
&lt;?php 
$conn = pg_pconnect("","","","","publisher");
if (!$conn) {
    echo "Erreur.\n";
    exit;
}

$result = pg_Exec ($conn, "SELECT * FROM authors");
if (!$result) {
    echo "Erreur.\n";
    exit;
}

$row = pg_fetch_row ($result, 0);
echo $row[0] . " <- row\n";

$row = pg_fetch_row ($result, 1);
echo $row[0] . " <- row\n";

$row = pg_fetch_row ($result, 2);
echo $row[1] . " <- row\n";
?>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-fieldisnull">
   <refnamediv>
    <refname>pg_FieldIsNull</refname>
    <refpurpose>Teste si un champs est &agrave; NULL.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_fieldisnull</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>mixed <parameter>field</parameter></paramdef>
    </funcsynopsis>
    <para>
      Teste si un champs est &agrave; NULL. Retourne 0 si le champs n'est pas NULL. 
      Retourne 1 si le champs est &agrave; NULL. Le champs peut &ecirc;tre identifi&eacute; avec son 
      nom ou son index num&eacute;rique (commencant &agrave; 0).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-fieldname">
   <refnamediv>
    <refname>pg_FieldName</refname>
    <refpurpose>Retourne le nom d'un champs.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>pg_fieldname</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>int <parameter>field_number</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_FieldName</function> va retourne le nom du champs qui occupe la 
      colonne num&eacute;ro <parameter>field_number</parameter> dans le r&eacute;sultat 
      <parameter>result_id</parameter>. La num&eacute;rotation des champs commence &agrave; 0.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-fieldnum">
   <refnamediv>
    <refname>pg_FieldNum</refname>
    <refpurpose>Retourne le num&eacute;ro d'une colonne.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_fieldnum</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>string <parameter>field_name</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_FieldNum</function> retourne le num&eacute;ro de la colonne, dont le nom est 
     <parameter>field_name</parameter>, dans le r&eacute;sultat <parameter>result_id</parameter>. 
     La num&eacute;rotation des champs commence &agrave; 0. Cette fonction retournera -1 en cas 
     d'erreur.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-fieldprtlen">
   <refnamediv>
    <refname>pg_FieldPrtLen</refname>
    <refpurpose>Retourne la taille imprim&eacute;e.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_fieldprtlen</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>int <parameter>row_number</parameter></paramdef>
     <paramdef>string <parameter>field_name</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_FieldPrtLen</function> retourne la taille imprim&eacute;e (nombre de 
     caract&egrave;res) d'une valeur donn&eacute;e dans un r&eacute;sultat PostgreSQL. La num&eacute;rotation des 
     lignes commence &agrave; 0. Cette fonction retourne -1 en cas d'erreur.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-fieldsize">
   <refnamediv>
    <refname>pg_FieldSize</refname> 
    <refpurpose>
     Retourne la taille interne de stockage d'un champs donn&eacute;.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_fieldsize</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>int <parameter>field_number</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_FieldSize</function> retourne la taille interne de stockage 
     d'un champs donn&eacute;, en octets. Retourne -1 si la taille est variable. Retourne 
     FALSE en cas d'erreur.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-fieldtype">
   <refnamediv>
    <refname>pg_FieldType</refname> 
    <refpurpose>
     Retourne le type d'un champs donn&eacute; par index.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>pg_fieldtype</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>int <parameter>field_number</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_FieldType</function> retourne une cha&icirc;ne contenant le type du champs 
     donn&eacute; par son index field_number . La num&eacute;rotation des champs commence &agrave; 0. 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-freeresult">
   <refnamediv>
    <refname>pg_FreeResult</refname> 
    <refpurpose>Lib&egrave;re la m&eacute;moire </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_freeresult</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_FreeResult</function> n'est vraiment utile que si vous risquez 
     d'utiliser trop de m&eacute;moire durant votre script. La m&eacute;moire occup&eacute;e par les 
     r&eacute;sultats est automatiquement lib&eacute;r&eacute;e &agrave; la fin du script. Mais, si vous &ecirc;tes 
     s&ucirc;r de ne pas avoir besoin du r&eacute;sultat ult&eacute;rieurement, vous pouvez appeler 
     <function>pg_FreeResult</function> avec l'index de r&eacute;sultat comme argument, et 
     la m&eacute;moire sera lib&eacute;r&eacute;e.
     </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-getlastoid">
   <refnamediv>
    <refname>pg_GetLastOid</refname> 
    <refpurpose>Retourne le dernier identifiant d'objet.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_getlastoid</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_GetLastOid</function> sert &agrave; lire l' Oid assign&eacute; &agrave; un tuple ins&eacute;r&eacute;, 
     si l'index de r&eacute;sultat a &eacute;t&eacute; obtenu avec la fonction <function>pg_Exec</function>,
     dont la requ&ecirc;te &eacute;tait exclusivement SQL INSERT. Cette fonction retourne un entier
     positif si un Oid valide a &eacute;t&eacute; trouv&eacute;. Elle retournera -1 si une erreur est 
     survenue, ou si la derni&egrave;re commande n'&eacute;tait pas un INSERT.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-host">
   <refnamediv>
    <refname>pg_Host</refname> 
    <refpurpose>Retourne le nom d'h&ocirc;te.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>pg_host</function></funcdef>
     <paramdef>int <parameter>connection_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_Host</function> retourne le nom d'h&ocirc;te associ&eacute; &agrave; l'index de 
     connexion PostgreSQL.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-loclose">
   <refnamediv>
    <refname>pg_loclose</refname>
    <refpurpose>Ferme un objet de grande taille.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>void <function>pg_loclose</function></funcdef>
     <paramdef>int <parameter>fd</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_loclose</function> ferme un objet de type Inversion Large Object. 
     <parameter>fd</parameter> est un descripteur de fichier, obtenu avec 
     <function>pg_loopen</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-locreate">
   <refnamediv>
    <refname>pg_locreate</refname>
    <refpurpose>Cr&eacute;e un objet de grande taille.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_locreate</function></funcdef>
     <paramdef>int <parameter>conn</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_locreate</function> cr&eacute;e un objet de type Inversion Large Object 
     et retourne son Oid.  <parameter>conn</parameter> doit &ecirc;tre une connexion valide 
     avec une base de donn&eacute;es PostgreSQL. Les modes d'acc&egrave;s PostgreSQL INV_READ, 
     INV_WRITE, et INV_ARCHIVE ne sont pas support&eacute;s : l'objet peut toujours &ecirc;tre 
     cr&eacute;&eacute;, avec des droits d'acc&egrave;s en lecture et &eacute;criture. Le mode INV_ARCHIVE a &eacute;t&eacute; 
     supprim&eacute; des bases PostgreSQL (version 6.3 et ult&eacute;rieur).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-loopen">
   <refnamediv>
    <refname>pg_loopen</refname>
    <refpurpose>Ouvre un objet de grande taille.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_loopen</function></funcdef>
     <paramdef>int <parameter>conn</parameter></paramdef>
     <paramdef>int <parameter>objoid</parameter></paramdef>
     <paramdef>string <parameter>mode</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_loopen</function> ouvre un objet de type Inversion Large Object 
     et retourne un descripteur de fichier pour cet objet. Le descripteur de fichier 
     contient les informations de connexion. Ne refermez pas la connexion avant 
     d'avoir ferm&eacute; l'objet. <parameter>objoid</parameter> est un Oid valide de 
     Large Object, et <parameter>mode</parameter> peut prendre es valeurs suivantes 
     : "r", "w", ou "rw".
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-loread">
   <refnamediv>
    <refname>pg_loread</refname>
    <refpurpose>Lit un objet de grande taille.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>pg_loread</function></funcdef>
     <paramdef>int <parameter>fd</parameter></paramdef>
     <paramdef>int <parameter>len</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_loread</function> lit au plus <parameter>len</parameter> octets 
     d'un objet de grande taille, et retourne les donn&eacute;es sous la forme d'une cha&icirc;ne. 
     <parameter>fd</parameter> est un identifiant valide d'objet de grande taille, et 
     <parameter>len</parameter> indique la taille maximale de m&eacute;moire allou&eacute; &agrave; l'objet
     de grande taille.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-loreadall">
   <refnamediv>
    <refname>pg_loreadall</refname>
    <refpurpose>Lit un objet de grande taille en totalit&eacute;.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>void <function>pg_loreadall</function></funcdef>
     <paramdef>int <parameter>fd</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_loreadall</function> lit un objet de grande taille en totalit&eacute; et le 
     passe directement au client, apr&egrave;s les ent&ecirc;tes ad&eacute;quats. Cette fonction est pr&eacute;vue 
     pour transmettre des sons ou des images.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-lounlink">
   <refnamediv>
    <refname>pg_lounlink</refname>
    <refpurpose>Efface un objet de grande taille </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>void <function>pg_lounlink</function></funcdef>
     <paramdef>int <parameter>conn</parameter></paramdef>
     <paramdef>int <parameter>lobjid</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_lounlink</function> efface l' objet de grande taille dont 
     l'identifiant est <parameter>lobjid</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-lowrite">
   <refnamediv>
    <refname>pg_lowrite</refname>
    <refpurpose>Ecrit un objet de grande taille </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_lowrite</function></funcdef>
     <paramdef>int <parameter>fd</parameter></paramdef>
     <paramdef>string <parameter>buf</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_lowrite</function> &eacute;crit dans l'objet de grande taille autant de 
     donn&eacute;es possible, issues de la variable <parameter>buf</parameter> et 
     retourne le nombre d'octets r&eacute;ellement &eacute;crits, ou FALSE en cas d'erreur. 
     <parameter>fd</parameter> est un descripteut d'objet de grande taille, obtenu avec 
     <function>pg_loopen</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-numfields">
   <refnamediv>
    <refname>pg_NumFields</refname> 
    <refpurpose>Retourne le nombre de champs</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_numfields</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_NumFields</function> retourne le nombre de champs ou (colonnes) d'un 
     r&eacute;sultat PostgreSQL. L'argument doit &ecirc;tre un identifiant de r&eacute;sultat valide 
     retourn&eacute; par <function>pg_Exec</function>. Cette fonction retournera -1 en cas 
     d'erreur.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-numrows">
   <refnamediv>
    <refname>pg_NumRows</refname> 
    <refpurpose>Retourne le nombre de lignes.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_numrows</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_NumRows</function> retourne le nombre de lignes d'un r&eacute;sultat 
     PostgreSQL. L'argument doit &ecirc;tre un identifiant de r&eacute;sultat valide retourn&eacute; par 
     <function>pg_Exec</function>. Cette fonction retournera -1 en cas d'erreur.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-options">
   <refnamediv>
    <refname>pg_Options</refname> 
    <refpurpose>Retourne les options.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>pg_options</function></funcdef>
     <paramdef>int <parameter>connection_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_Options</function> retourne une cha&icirc;ne contenant les options de la 
     connexion PostgreSQL.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-pconnect">
   <refnamediv>
    <refname>pg_pConnect</refname>
    <refpurpose>
     Etablit une connexion persistante.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_pconnect</function></funcdef>
     <paramdef>string <parameter>host</parameter></paramdef>
     <paramdef>string <parameter>port</parameter></paramdef>
     <paramdef>string <parameter>options</parameter></paramdef>
     <paramdef>string <parameter>tty</parameter></paramdef>
     <paramdef>string <parameter>dbname</parameter></paramdef>
    </funcsynopsis>
    <para>
     Retourne un index de connexion en cas de succ&egrave;s, ou FALSE en cas d'erreur. 
     Ouvre une connexion permanente &agrave; une base PostgreSQL. Chacun des arguments doit 
     &ecirc;tre entre guillemets, y compris le num&eacute;ro de port. Les arguments 
     <parameter>options</parameter> et <parameter>tty</parameter> sont optionnels, et 
     peuvent &ecirc;tre ignor&eacute;s. Cette fonction retourne un index de connexion, n&eacute;cessaire aux 
     autres fonctions PostgreSQL. Vous pouvez &eacute;tablir plusieurs connexion persistantes 
     en m&ecirc;me temps. Voir aussi <function>pg_Connect</function>.
    </para>
    <para>
     Une connexion peut aussi &ecirc;tre &eacute;tablie avec la commande suivante : 
     <command>$conn = pg_pconnect("dbname=marliese port=5432");</command>
     les autres param&egrave;tres en dehors de <parameter>dbname</parameter> et 
     <parameter>port</parameter> sont <parameter>host</parameter>, 
     <parameter>tty</parameter>, <parameter>options</parameter>,
     <parameter>user</parameter> et <parameter>password</parameter> sont optionnels.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-port">
   <refnamediv>
    <refname>pg_Port</refname>
    <refpurpose>Retourne le num&eacute;ro de port.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>pg_port</function></funcdef>
     <paramdef>int <parameter>connection_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_Port</function> retourne le num&eacute;ro de port de la connexion identifi&eacute;e 
     <parameter>connection_id</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pg-result">
   <refnamediv>
    <refname>pg_Result</refname>
    <refpurpose>Retourne les valeurs d'un identifiant de r&eacute;sultat.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>mixed <function>pg_result</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>int <parameter>row_number</parameter></paramdef>
     <paramdef>mixed <parameter>fieldname</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_Result</function> retourne les valeurs d'un identifiant de r&eacute;sultat, 
     produit par <function>pg_Exec</function>. Les arguments 
     <parameter>row_number</parameter> et <parameter>fieldname</parameter> pr&eacute;cisent 
     la cellule qui sera retourn&eacute;e. La num&eacute;rotation des lignes commence &agrave; 0. Au lieu 
     d'utiliser le nom du champs, vous pouvez utiliser son index, sous la forme d'un 
     nombre sans guillemets. La num&eacute;rotation des champs commence &agrave; 0.
    </para>
    <para>
     PostgreSQL dispose de nombreux types, et seuls, les types basiques sont support&eacute;s 
     ici. Toutes les formes d'entier, bool&eacute;en et Oid sont retourn&eacute;s sous la forme 
     d'entiers. Toutes les formes de nombre &agrave; virgule flottante et types r&eacute;els sont 
     retourn&eacute;s sous la forme d'une valeur de type double. Tous les autres types, y 
     compris les tableaux, sont retourn&eacute;s sous la forme de cha&icirc;nes format&eacute;es, au format 
     par d&eacute;faut de PostgreSQL.
    </para>  
   </refsect1>
  </refentry>

  <refentry id="function.pg-tty">
   <refnamediv>
    <refname>pg_tty</refname>
    <refpurpose>Retourne le nom de tty.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>pg_tty</function></funcdef>
     <paramdef>int <parameter>connection_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>pg_tty</function>retourne le nom de tty de la connexion associ&eacute;e &agrave; 
     <parameter>connection_id</parameter>.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
