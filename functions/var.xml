 <reference id="ref.var">
  <title>Fonctions sur les variables</title>
  <titleabbrev>Fonctions sur les variables</titleabbrev>

  <refentry id="function.doubleval">
   <refnamediv>
    <refname>doubleval</refname>
    <refpurpose>
       Retourne la valeur num&eacute;rique (double) de la variable.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>double <function>doubleval</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <simpara>
       Retourne la valeur num&eacute;rique (double) de la variable <parameter>var</parameter>.
    </simpara>
    <para>
     <parameter>var</parameter> peut &ecirc;tre de type scalaire. Vous ne pouvez pas utiliser 
     la fonction <function>doubleval</function> avec un tableau ou un objet.
    <informalexample>
      <programlisting role="php">
$var = '122.34343The';
$double_value_of_var = doubleval($var);
print $double_value_of_var; // affiche 122.34343
      </programlisting>
    </informalexample>
    </para>
    <simpara>
     Voir aussi <function>intval</function>, <function>strval</function>, 
     <function>settype</function> et 
     <link linkend="language.types.type-juggling">Transtypage</link>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.empty">
   <refnamediv>
    <refname>empty</refname>
    <refpurpose>D&eacute;termine si une variable est affect&eacute;e.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>empty</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <para>
     Retourne la valeur FALSE si la variable <parameter>var</parameter> est affect&eacute;e
     ou bien a une valeur diff&eacute;rente de 0; la valeur TRUE dans les autres cas.
     <informalexample>
      <programlisting role="php">
$var = 0;
if (empty($var)) { #retourne TRUE
    print 'soit $var vaut 0, soit il n'est pas d&eacute;fini';
}
if (!isset($var)) { // retourne FALSE
    print '$var n'est pas d&eacute;finie';
}
      </programlisting>
     </informalexample>
    </para>
    <simpara>
     Notez que cette fonction n'a pas de sens si elle est utilis&eacute;e sur autre chose
     qu'une variable. i.e. <literal>empty (addslashes ($name))</literal> n'a pas de
     sens, car cela revient &agrave; v&eacute;rifier une entit&eacute; qui n'est pas une variable.
    </simpara>
    <simpara>
     Voir aussi <function>isset</function> et <function>unset</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.gettype">
   <refnamediv>
    <refname>gettype</refname>
    <refpurpose>Retourne le type de la variable.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>gettype</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <para>
     Retourne le type de la variable PHP <parameter>var</parameter>.
    </para>
    <para>
     Les cha&icirc;nes de caract&egrave;res que peut retourner la fonction sont les suivantes :
     <itemizedlist>
      <listitem>
       <simpara>"integer"</simpara>
      </listitem>
      <listitem>
       <simpara>"double"</simpara>
      </listitem>
      <listitem>
       <simpara>"string"</simpara>
      </listitem>
      <listitem>
       <simpara>"array"</simpara>
      </listitem>
      <listitem>
       <simpara>"object"</simpara>
      </listitem>
      <listitem>
       <simpara>"unknown type"</simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     Voir aussi <function>settype</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.intval">
   <refnamediv>
    <refname>intval</refname>
    <refpurpose>
      Retourne la valeur num&eacute;rique (integer) de la variable.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>intval</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
     <paramdef>int
      <parameter><optional>base</optional></parameter>
     </paramdef>
    </funcsynopsis>
    <simpara>
     Retourne la valeur num&eacute;rique (integer) de la variable <parameter>var</parameter>,
     en convertisant la valeur dans la base sp&eacute;cifi&eacute;e (par d&eacute;faut en base 10).
    </simpara>
    <simpara>
     <parameter>var</parameter> peut &ecirc;tre de type scalaire. Vous ne pouvez pas utiliser 
     la fonction <function>intval</function> avec un tableau ou un objet.
    </simpara>
    <simpara>
     Voir aussi <function>doubleval</function>, <function>strval</function>, 
     <function>settype</function> et 
     <link linkend="language.types.type-juggling">Transtypage</link>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.is-array">
   <refnamediv>
    <refname>is_array</refname>
    <refpurpose>D&eacute;termine si une variable est un tableau.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>is_array</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <para>
     Renvoie la valeur TRUE si la variable <parameter>var</parameter> est un tableau, 
     FALSE sinon.
    </para>
    <para>
     Voir aussi <function>is_double</function>, <function>is_float</function>,
     <function>is_int</function>, <function>is_integer</function>,
     <function>is_real</function>, <function>is_string</function>,
     <function>is_long</function>, et <function>is_object</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.is-double">
   <refnamediv>
    <refname>is_double</refname>
    <refpurpose>D&eacute;termine si une variable est de type double.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>is_double</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <para>
       Renvoie TRUE si la variable <parameter>var</parameter> est du type "double", 
       FALSE sinon.
    </para>
    <para>
     Voir aussi <function>is_array</function>,
     <function>is_float</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_real</function>,
     <function>is_string</function>,
     <function>is_long</function>, et
     <function>is_object</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.is-float">
   <refnamediv>
    <refname>is_float</refname>
    <refpurpose>D&eacute;termine si une variable est de type float.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>is_float</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     Cette fonction est un alias de la fonction <function>is_double</function>.
    </simpara>
    <simpara>
     Voir aussi <function>is_double</function>,
     <function>is_real</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_string</function>,
     <function>is_object</function>,
     <function>is_array</function>, et <function>is_long</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.is-int">
   <refnamediv>
    <refname>is_int</refname>
    <refpurpose>D&eacute;termine si une variable est de type integer.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>is_int</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     Cette fonction est un alias de la fonction  <function>is_long</function>.
    </simpara>
    <simpara>
     Voir aussi <function>is_double</function>,
     <function>is_float</function>,
     <function>is_integer</function>,
     <function>is_string</function>,
     <function>is_real</function>,
     <function>is_object</function>,
     <function>is_array</function>, et
     <function>is_long</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.is-integer">
   <refnamediv>
    <refname>is_integer</refname>
    <refpurpose>D&eacute;termine si une variable est de type int.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>is_integer</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     Cette fonction est un alias de la fonction <function>is_long</function>.
    </simpara>
    <simpara>
     Voir aussi <function>is_double</function>,
     <function>is_float</function>,
     <function>is_int</function>,
     <function>is_string</function>,
     <function>is_real</function>,
     <function>is_object</function>,
     <function>is_array</function>, et <function>is_long</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.is-long">
   <refnamediv>
    <refname>is_long</refname>
    <refpurpose>D&eacute;termine si une variable est de type integer.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>is_long</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <para>
      Renvoie TRUE si la variable <parameter>var</parameter> est du type integer (long), 
      FALSE sinon.
    </para>
    <para>
     Voir aussi <function>is_double</function>,
     <function>is_float</function>,
     <function>is_int</function>,
     <function>is_real</function>,
     <function>is_string</function>,
     <function>is_object</function>,
     <function>is_array</function>, et <function>is_integer</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.is-object">
   <refnamediv>
    <refname>is_object</refname>
    <refpurpose>D&eacute;termine si une variable est de type object.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>is_object</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <para>
     Renvoie TRUE si la variable <parameter>var</parameter> est un objet, 
     FALSE sinon.
    </para>
    <para>
     Voir aussi <function>is_long</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_float</function>,
     <function>is_double</function>,
     <function>is_real</function>,
     <function>is_string</function>, et <function>is_array</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.is-real">
   <refnamediv>
    <refname>is_real</refname>
    <refpurpose>D&eacute;termine si une variable est de type real.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>is_real</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     Cette fonction est un alias de la fonction <function>is_double</function>.
    </simpara>
    <simpara>
     Voir aussi <function>is_long</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_float</function>,
     <function>is_double</function>,
     <function>is_object</function>,
     <function>is_string</function>, et <function>is_array</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.is-string">
   <refnamediv>
    <refname>is_string</refname>
    <refpurpose>D&eacute;termine si une variable est de type string.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>is_string</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <para>
      Renvoie TRUE si la variable <parameter>var</parameter> est du type "string", 
      FALSE sinon.
    </para>
    <para>
     Voir aussi <function>is_long</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_float</function>,
     <function>is_double</function>,
     <function>is_real</function>,
     <function>is_object</function>, et <function>is_array</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.isset">
   <refnamediv>
    <refname>isset</refname>
    <refpurpose>D&eacute;termine si une variable est affect&eacute;e.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>isset</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <simpara>
       Renvoie TRUE si la variable <parameter>var</parameter> est d&eacute;finie, 
       FALSE sinon.
    </simpara>
    <para>
     Si une variable a &eacute;t&eacute; d&eacute;saffect&eacute;e avec la fonction <function>unset</function>,
     la fonction <function>isset</function> renverra FALSE.
     <informalexample>
      <programlisting role="php">
$a = "test";
echo isset ($a); // TRUE
unset ($a);
echo isset ($a); // FALSE
      </programlisting>
     </informalexample>
    </para>
    <simpara>
     Voir aussi <function>empty</function> et <function>unset</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.print-r">
   <refnamediv>
    <refname>print_r</refname>
    <refpurpose>
      Affiche des informations lisibles pour une variable.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>void <function>print_r</function></funcdef>
     <paramdef>mixed <parameter>expression</parameter></paramdef>
    </funcsynopsis>
    <simpara>
        Cette fonction affiche des informations &agrave; propos d'une variable, de mani&egrave;re &agrave; 
        ce qu'elle soit lisible. Pour une cha&icirc;ne, un entier ou un double, la valeur 
        sera elle m&ecirc;me sera affich&eacute;e. Pour les tableaux, les valeurs seront pr&eacute;sent&eacute;es 
        dans un format qui montre les cl&eacute;s et les valeurs. Une notation similaire est 
        disponible pour les objets.
    </simpara>
    <simpara>
     Comparer <function>print_r</function> et <function>var_dump</function>.
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
&lt;?php
$a = array (1, 2, array ("a", "b", "c"));
print_r ($a);
?>
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.settype">
   <refnamediv>
    <refname>settype</refname>
    <refpurpose>Affecte un type &agrave; une variable.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>settype</function></funcdef>
     <paramdef>string <parameter>var</parameter></paramdef>
     <paramdef>string <parameter>type</parameter></paramdef>
    </funcsynopsis>
    <para>
      Affecte le type <parameter>type</parameter> &agrave; la variable <parameter>var</parameter>.
    </para>
    <para>
      Les valeurs possibles pour le param&egrave;tre <parameter>type</parameter> sont :
     <itemizedlist>
      <listitem><simpara>"integer"</simpara></listitem>
      <listitem><simpara>"double"</simpara></listitem>
      <listitem><simpara>"string"</simpara></listitem>
      <listitem><simpara>"array"</simpara></listitem>
      <listitem><simpara>"object"</simpara></listitem>
     </itemizedlist>
    </para>
    <para>
     Renvoie TRUE en cas de succ&egrave;s, FALSE sinon.
    </para>
    <para>
     Voir aussi <function>gettype</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.strval">
   <refnamediv>
    <refname>strval</refname>
    <refpurpose>Retourne la valeur de la variable, au format cha&icirc;ne.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>strval</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <simpara>
        Retourne la valeur de la variable <parameter>var</parameter>, 
        au format cha&icirc;ne de caract&egrave;res.
    </simpara>
    <simpara>
        <parameter>var</parameter> peut &ecirc;tre un scalaire. Vous ne pouvez pas utiliser 
        la fonction <function>strval</function> avec des tableaux ou des objets.
    </simpara>
    <simpara>
     Voir aussi <function>doubleval</function>, <function>intval</function>, 
     <function>settype</function> et 
     <link linkend="language.types.type-juggling">Transtypage</link>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.unset">
   <refnamediv>
    <refname>unset</refname>
    <refpurpose>D&eacute;saffecte une variable.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>unset</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>unset</function> d&eacute;saffecte la variable <parameter>var</parameter> et 
     renvoie TRUE.
    </para>
    <para>
     <example>
      <title>exemple d'utilisation de la fonction <function>unset</function></title>
      <programlisting role="php">
unset ($foo);
unset ($bar['quux']);
      </programlisting>
     </example>
    </para>
    <para>
     Voir aussi <function>isset</function> et <function>empty</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.var-dump">
   <refnamediv>
    <refname>var_dump</refname>
    <refpurpose>
     Dumpe les informations d'une variable.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>void <function>var_dump</function></funcdef>
     <paramdef>mixed <parameter>expression</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     Cette fonction retourne les informations structur&eacute;es d'une variable, y compris son
     type et sa valeur. Les tableaux sont explor&eacute;s recursivement, avec des indentations, 
     pour mettre en valeur leur structure.
    </simpara>
    <simpara>
     Comparez <function>var_dump</function> et <function>print_r</function>.
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
&lt;pre>
&lt;?php
    $a = array (1, 2, array ("a", "b", "c"));
    var_dump ($a);
?>
&lt;/pre>
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
