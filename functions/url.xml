 <reference id="ref.url">
  <title>URL</title>
  <titleabbrev>Fonctions URL</titleabbrev>
  <refentry id="function.base64-decode">
   <refnamediv>
    <refname>base64_decode</refname>
    <refpurpose>D&eacute;code une cha&icirc;ne en MIME base64</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>base64_decode</function></funcdef>
      <paramdef>string <parameter>encoded_data</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>base64_decode</function> d&eacute;code
      <parameter>encoded_data</parameter> et retourne les donn&eacute;es
      d&eacute;cod&eacute;es. Les informations initiales peuvent &ecirc;tre
      binaires.
    </para>
    <para>
      Voir aussi : <function>base64_encode</function> et la RFC-2045 section 6.8.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.base64-encode">
   <refnamediv>
    <refname>base64_encode</refname>
    <refpurpose>Encode une cha&icirc;ne en MIME base64.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>base64_encode</function></funcdef>
      <paramdef>string <parameter>data</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>base64_encode</function> retourne <parameter>data</parameter>
     encod&eacute; en base64. Cet encodage est fait pour permettre aux
     informations binaires d'&ecirc;tre manipul&eacute;es par les
     syst&egrave;mes qui ne g&egrave;rent pas correctement les 8 bits, comme par
     exemple, les corps de mail.
    </para>
    <para>
      Une cha&icirc;ne encod&eacute;e Base64 prend, grosso modo, 33% de plus
      que les donn&eacute;es initiales.
    </para>
    <para>
     Voir aussi: <function>base64_decode</function>, <function>chunk_split</function>,
     et la RFC-2045 section 6.8.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.parse-url">
   <refnamediv>
    <refname>parse_url</refname>
    <refpurpose>Analyse une URL et retourne ses composants.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>parse_url</function></funcdef>
      <paramdef>string <parameter>url</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>parse_url</function> retourne un tableau associatif
      contenant les composants de l'URL. Les composants recherch&eacute;s
      sont : "scheme", "host", "port", "user", "pass", "path", "query",
      et "fragment".
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.rawurldecode">
   <refnamediv>
    <refname>rawurldecode</refname>
    <refpurpose>D&eacute;code une cha&icirc;ne URL.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>rawurldecode</function></funcdef>
      <paramdef>string <parameter>str</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>rawurldecode</function> retourne une cha&icirc;ne dont les
     s&eacute;quences de caract&egrave;res %xy, avec xy deux valeurs
     hexad&eacute;cimales, auront &eacute;t&eacute; remplac&eacute;es
     par le caract&egrave;re ASCII correspondant. Par exemple, la cha&icirc;ne
     <screen>foo%20bar%40baz</screen> devient <screen>foo bar@baz</screen>.
    </para>
    <simpara>
     Voir aussi <function>rawurlencode</function>,
     <function>urldecode</function> et
	 <function>urlencode</function>.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.rawurlencode">
   <refnamediv>
    <refname>rawurlencode</refname>
    <refpurpose>Encode une cha&icirc;ne en URL, selon la RFC1738.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>rawurlencode</function></funcdef>
      <paramdef>string <parameter>str</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>rawurlencode</function> retourne une cha&icirc;ne dont tous
     les caract&egrave;res non-alpha-num&eacute;riques
     (hormis <screen>-_.</screen>) auront &eacute;t&eacute; remplac&eacute;s
     par des s&eacute;quences <literal>%xy</literal>
     (<literal>%</literal>), avec xy deux valeurs hexad&eacute;cimales.
     Ce codage est conforme &agrave; la RFC1738 qui &eacute;vite que les
     caract&egrave;res sp&eacute;ciaux soient interpr&eacute;t&eacute;s
     comme des d&eacute;limiteurs, et pour prot&eacute;ger les URL lors
     du transfert (contrairement &agrave; certains syst&egrave;mes email).
     Par exemple, si vous voulez mettre un mot de passe dans une URL de ftp :
     <example>
      <title>Exemple avec <function>rawurlencode</function></title>
      <programlisting role="php">
&lt;?php
echo '&lt;A HREF="ftp://user:', rawurlencode ('foo @+%/'), '@ftp.my.com/x.txt">';
?&gt;
      </programlisting>
     </example>
     Ou, si vous transmettez un chemin dans une URL
     <example>
      <title>Exemple avec <function>rawurlencode</function></title>
      <programlisting role="php">
&lt;?php
echo '&lt;A HREF="http://x.com/department_list_script/', rawurlencode ('sales et marketing/Miami'), '">';
?&gt;
      </programlisting>
     </example>
    </para>
    <simpara>
     Voir aussi <function>rawurldecode</function>,
     <function>urldecode</function> et <function>urlencode</function>.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.urldecode">
   <refnamediv>
    <refname>urldecode</refname>
    <refpurpose>D&eacute;code une cha&icirc;ne encod&eacute;e URL.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>urldecode</function></funcdef>
      <paramdef>string <parameter>str</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>urldecode</function> d&eacute;code toutes les s&eacute;quences
     <literal>%<replaceable>##</replaceable></literal> et les remplace par
     leur valeur. La cha&icirc;ne ainsi d&eacute;cod&eacute;e est retourn&eacute;e.
     <example>
      <title>Exemple avec <function>urldecode</function></title>
      <programlisting role="php">
&lt;?php
$a = split ('&', $querystring);
$i = 0;
while ($i &lt; count ($a)) {
    $b = split ('=', $a [$i]);
    echo 'Value for parameter ', htmlspecialchars (urldecode ($b [0])),
         ' is ', htmlspecialchars (urldecode ($b [1])), "&lt;BR>";
    $i++;
}
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     Voir aussi <function>urlencode</function>, <function>rawurlencode</function>
     et <function>rawurldecode</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.urlencode">
   <refnamediv>
    <refname>urlencode</refname>
    <refpurpose>Encode une cha&icirc;ne en URL.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>urlencode</function></funcdef>
      <paramdef>string <parameter>str</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>urlencode</function> retourne une cha&icirc;ne dont les
     caract&egrave;res non alpha-num&eacute;riques (hormis <literal>-_.</literal>)
     sont remplac&eacute;s par des s&eacute;quences commencant
     par un caract&egrave;re pourcentage (<literal>%</literal>),
     suivi de deux chiffres hexad&eacute;cimaux. Les espaces sont
     remplac&eacute;s par des signes plus (<literal>+</literal>).
     Ce codage est celui qui est utilis&eacute; pour poster des
     informations dans les formulaires HTML. Le type MIME est
     <literal>application/x-www-form-urlencoded</literal>.
     Ce codage est diff&eacute;rent de celui sp&eacute;cifi&eacute;
     dans la RFC1738 (voir <function>rawurlencode</function>) : pour
     des raisons historiques, les espaces sont remplac&eacute;s par
     des signes plus (<literal>+</literal>). <function>urlencode</function>
     est pratique pour transmettre des informations via une URL.
     C'est aussi un moyen de passer des informations d'une
     page &agrave; l'autre.
     <example>
      <title>Exemple avec <function>urlencode</function></title>
      <programlisting role="php">
&lt;?php
echo '&lt;A HREF="moncgi?foo=', urlencode ($userinput), '">';
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     Voir aussi <function>urldecode</function>.
    </para>
	<para>
	Note: Fa&icirc;tes bien attention aux variables qui ressemblent &agrave;
	des entit&eacute;es HTML, comme par exemple &amp;amp, &amp;copy et &amp;pound,
	qui sont analys&eacute;es par le client web et remplac&eacute;e par leur
	valeur, au lieu de passer le nom de variable d&eacute;sir&eacute;. C'est
	un vrai probl&egrave;me qui a &eacute;t&eacute; montr&eacute; par le W3C
	depuis longtemps. La r&eacute;f&eacute;rence est ici :
	<ulink url="&url.argsep;">&url.argsep;</ulink>.
	PHP supporte le remplacement de s&eacute;parateur d'arguments par un
	point-virgule, comme recommand&eacute; par le W3C, gr&acirc;ce &agrave;
	la directive arg_separator .ini. Malheureusement, la plus part des clients web
	n'envoie pas leur donn&eacute;es de formulaire avec des point-virgule. Une
	solution plus portable est d'utiliser <literal>&amp;amp;</literal>
	 &agrave; la place de <literal>&amp;</literal> comme
	s&eacute;parateur. Vous n'avez alors pas &agrave; changer la directive
	arg_separator. Laissez la &agrave; &amp;, mais encodez vos URL avec
	<function>htmlentities</function>.
     <example>
      <title>
        Exemple avec <function>urlencode</function> et
        <function>htmlentities</function>
      </title>
      <programlisting role="php">
&lt;?php
echo '&lt;A HREF="moncgi?foo=', htmlentities (urlencode ($userinput) ), '"&gt;';
?&gt;
      </programlisting>
     </example>
	</para>
    <para>
     Voir aussi <function>urldecode</function>, <function>htmlentities</function>,
     <function>rawurldecode</function> et <function>rawurlencode</function>.
    </para>
   </refsect1>
  </refentry>
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
