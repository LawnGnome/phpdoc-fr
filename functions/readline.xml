 <reference id="ref.readline">
  <title>Readline (GNU)</title>
  <titleabbrev>Readline</titleabbrev>
  <partintro>
   <simpara>
    Les fonctions <function>readline</function> impl&eacute;mente une interface
    avec la librairie GNU Readline. Ces fonctions fournissent une ligne
    de commande &eacute;ditable, un peu comme lorsque Bash vous permet d'utiliser
    les fl&egrave;ches de d&eacute;placement pour ins&eacute;rer un caract&egrave;re ou
    passer en revue l'historique. A cause de l'interactivit&eacute; de
    ces commande, elles ne seront que rarement utiles pour les
    applications Web, mais peuvent se r&eacute;v&eacute;ler utiles lorsqu'un
    script est ex&eacute;cut&eacute; depuis une commande shell.
   </simpara>
   <simpara>
    Le site du projet GNU Readline est
    <ulink url="&url.readline;">&url.readline;</ulink>. Elle est entretenue
    par Chet Ramey, qui est aussi l'auteur de Bash.
   </simpara>
  </partintro>
  <refentry id="function.readline">
   <refnamediv>
    <refname>readline</refname>
    <refpurpose>Lit une ligne</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>readline</function></funcdef>
      <paramdef>string
       <parameter><optional>prompt</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>readline</function> retourne une ligne entr&eacute;e par
     l'utilisateur. Vous pouvez sp&eacute;cifier une cha&icirc;ne de prompt.
     La ligne retourn&eacute;e est d&eacute;barass&eacute;e du caract&egrave;re nouvelle ligne
     final. Vous devez ajouter cette ligne &agrave; l'historique vous-m&ecirc;me,
     avec la fonction <function>readline_add_history</function>.
    </para>
    <example>
     <title>Exemple avec <function>readline</function></title>
     <programlisting role="php">
&lt;?php
//Lit 3 commandes de l'utilisateur
for ($i=0; $i &lt; 3; $i++) {
        $line = readline("Commande: ");
        readline_add_history($line);
}
//liste l'historique
print_r(readline_list_history());
//liste les variables
print_r(readline_info());
?&gt;
     </programlisting>
    </example>
   </refsect1>
  </refentry>
  <refentry id="function.readline-add-history">
   <refnamediv>
    <refname>readline_add_history</refname>
    <refpurpose>Ajoute une ligne &agrave; l'historique</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>readline_add_history</function></funcdef>
      <paramdef>string <parameter>line</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>readline_add_history</function> ajoute une ligne &agrave; l'historique.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.readline-clear-history">
   <refnamediv>
    <refname>readline_clear_history</refname>
    <refpurpose>Efface l'historique</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>boolean <function>readline_clear_history</function></funcdef>
      <paramdef>void <parameter></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>readline_clear_history</function> efface tout l'historique.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.readline-completion-function">
   <refnamediv>
    <refname>readline_completion_function</refname>
    <refpurpose>Enregistre une fonction de compl&eacute;tion</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>boolean
       <function>readline_completion_function</function>
      </funcdef>
      <paramdef>string <parameter>line</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>readline_completion_function</function> enregistre une nouvelle
     fonction de compl&eacute;tion. Vous devez fournir le nom d'une fonction
     qui accepte un nom partiel de commande, et retourne une liste de
     fonctions compl&egrave;te possibles. C'est la m&ecirc;me fonctionnalit&eacute; que
     lorsque vous utilisez la touche de tabulation sous Bash.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.readline-info">
   <refnamediv>
    <refname>readline_info</refname>
    <refpurpose>Lit/modifie diverses variables internes</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>readline_info</function></funcdef>
      <paramdef>string
       <parameter><optional>varname</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>newvalue</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Appel&eacute;e sans param&egrave;tre, <function>readline_info</function>
     retourne une tableau contenant les valeurs des param&egrave;tres de
     Readline. Les &eacute;l&eacute;ments seront index&eacute;s par les cl&eacute;s suivantes :
     done, end, erase_empty_line, library_version, line_buffer, mark,
     pending_input, point, prompt, readline_name, et terminal_name.
    </para>
    <para>
     Appel&eacute;e avec le param&egrave;tre <parameter>varname</parameter>,
     la valeur de cette variable sera retourn&eacute;e. Appel&eacute;e avec deux param&egrave;tres, et la
     valeur de la variable <parameter>varname</parameter>, sera remplac&eacute;e par
     <parameter>newvalue</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.readline-list-history">
   <refnamediv>
    <refname>readline_list_history</refname>
    <refpurpose>Liste l'historique</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>readline_list_history</function></funcdef>
      <paramdef>void <parameter></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>readline_list_history</function> retourne un tableau avec
     la liste de toutes les lignes de commandes de l'historique.
     Les &eacute;l&eacute;ments sont ind&eacute;x&eacute;s num&eacute;riquement, &agrave; partir de 0.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.readline-read-history">
   <refnamediv>
    <refname>readline_read_history</refname>
    <refpurpose>Lit l'historique</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>boolean
       <function>readline_read_history</function>
      </funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>readline_read_history</function> lit une ligne de l'historique.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.readline-write-history">
   <refnamediv>
    <refname>readline_write_history</refname>
    <refpurpose>Ecrit dans l'historique</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>boolean
       <function>readline_write_history</function>
      </funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>readline_write_history</function> &eacute;crit <parameter>filename</parameter>
     dans l'historique.
    </para>
   </refsect1>
  </refentry>
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
