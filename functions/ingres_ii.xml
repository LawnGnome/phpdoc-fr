 <reference id="ref.ingres">
  <title>Fonctions Ingres II</title>
  <titleabbrev>Ingres II</titleabbrev>
  <partintro>
   <simpara>
    Ces fonctions permettent l'acc&egrave;s &agrave; un serveur de
    base de donn&egrave;es Ingres II.
   </simpara>
   <simpara>
    Pour pouvoir utiliser ces fonctions, vous devez compiler PHP avec
    le support Ingres, en utilisant l'option
    <option role="configure">--with-ingres</option>.
    Ceci n&eacute;cessite les fichiers de biblioth&egrave;que de l'en-t&ecirc;te d'Open API
    qui sont inclus dans Ingres II. Si la variable d'environnement
    II_SYSTEM n'est pas correctement initialis&eacute;e vous devrez utiliser
    <option role="configure">--with-ingres=REP</option> pour sp&eacute;cifier
    le r&egrave;pertoire o&ugrave; a &eacute;t&eacute; install&eacute; Ingres.
   </simpara>
   <simpara>
    Lorsque cette extension est utilis&eacute;e avec Apache, si Apache ne
    d&eacute;marre pas et &eacute;met l'erreur "PHP Fatal error:  Unable to start
    ingres_ii module in Unknown on line 0", assurez-vous que la variable
    d'environnement II_SYSTEM est correctement initialis&eacute;e. Il suffit
    souvent d'ajouter "export II_SYSTEM="/home/ingres/II" dans le script
    qui d&eacute;marre Apache, juste avant le lancement de httpd.
   </simpara>
   <note>
    <para>
     Si vous avez d&eacute;j&agrave; utilis&eacute; des extensions PHP permettant l'acc&eacute;s &agrave;
     d'autres serveurs de bases de donn&eacute;es, notez qu'Ingres n'accepte pas
     de requ&ecirc;tes et/ou de transactions concurrentes sur la m&ecirc;me
     connexion, et donc vous ne trouverez aucun identifiant de r&eacute;sultat
     ou de transaction dans cette extension. Le r&eacute;sultat d'une requ&ecirc;te doit
     &ecirc;tre trait&eacute; avant d'envoyer une autre requ&ecirc;te, et une transaction doit
     &ecirc;tre valid&eacute;e ("commit") ou annul&eacute;e ("roll back") avant de pouvoir en
     ouvrir une nouvelle (l'ouverture de transaction est fait automatiquement
     &agrave; l'envoi de la premi&eacute;re requ&ecirc;te).
    </para>
   </note>
  </partintro>

  <refentry id="function.ingres-connect">
   <refnamediv>
    <refname>ingres_connect</refname>
    <refpurpose>Ouvre une connexion &agrave; un serveur Ingres.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>ingres_connect</function></funcdef>
      <paramdef>string
       <parameter><optional>database</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>username</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>password</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Retourne une ressource repr&eacute;sentant un lien Ingres II en
     cas de succ&eacute;s, et FALSE sinon.
    </para>
    <para>
     <function>ingres_connect</function> &eacute;tablit une connexion avec la
     base de donn&eacute;es Ingres d&eacute;sign&eacute;e par <parameter>database</parameter>,
     qui suit la syntaxe <parameter>[node_id::]dbname[/svr_class]</parameter>.
    </para>
    <para>
     Si certains param&eacute;tres sont manquants,
     <function>ingres_connect</function> utilise les valeurs de
     <parameter>ingres.default_database</parameter>,
     <parameter>ingres.default_user</parameter> et
     <parameter>ingres.default_password</parameter> indiqu&eacute;es dans
     <filename>php.ini</filename>.
    </para>
    <para>
     La connexion est ferm&eacute;e lorsque le script se termine ou en cas d'appel
     &agrave; <function>ingres_close</function>.
    </para>
    <para>
     Toutes les autres fonctions Ingres utilisent le dernier lien ouvert
     comme lien par d&eacute;faut, il n'est donc n&eacute;cessaire de conserver la
     valeur de retour qu'en cas d'utilisation de plus d'un lien en m&ecirc;me
     temps.
    </para>
    <example>
     <title>Exemple pour <function>ingres_connect</function></title>
     <programlisting>
&lt;?php
    $link = ingres_connect ("mydb", "user", "pass")
        or die ("Erreur de connexion");
    print ("Connexion r&eacute;ussie");
    ingres_close ($link);
?>
     </programlisting>
    </example>
    <example>
     <title>
       Exemple pour <function>ingres_connect</function> utilisant le lien par d&eacute;faut
     </title>
     <programlisting>
&lt;?php
    ingres_connect ("madb", "user", "pass")
        or die ("Erreur de connexion");
    print ("Connexion r&eacute;ussie");
    ingres_close ();
?>
     </programlisting>
    </example>
    <para> 
     Voir aussi <function>ingres_pconnect</function>, et
     <function>ingres_close</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-pconnect">
   <refnamediv>
    <refname>ingres_pconnect</refname>
    <refpurpose>
     Ouvre une connexion persistante &agrave; un serveur Ingres.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>ingres_pconnect</function></funcdef>
      <paramdef>string
       <parameter><optional>database</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>username</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>password</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Retourne une ressource repr&eacute;sentant un lien (link) Ingres II en
     cas de succ&egrave;s, et FALSE sinon.
    </para>
    <para>
     Voir <function>ingres_connect</function> pour le d&eacute;tail des param&egrave;tres
     et des exemples. Il n'y a que 2 diff&eacute;rences entre
     <function>ingres_pconnect</function> et <function>ingres_connect</function> :
     Tout d'abord, &agrave; la connexion, la fonction cherche un lien persistant
     d&eacute;j&agrave; ouvert avec les m&ecirc;mes param&egrave;tres. Si un tel lien est trouv&eacute;,
     un identificateur pour ce lien est retourn&eacute; au lieu d'&eacute;tablir une nouvelle
     connexion. Ensuite, la connexion vers le serveur Ingres n'est pas ferm&eacute;e
     lorsque le script se termine. En fait, le lien reste ouvert pour
     pouvoir &ecirc;tre r&eacute;utilis&eacute; (<function>ingres_close</function> ne ferme pas
     les liens &eacute;tablis avec <function>ingres_pconnect</function>). C'est
     pourquoi ce type de lien est dit 'persistant'.
    </para>
    <para> 
     Voir aussi <function>ingres_connect</function> et
     <function>ingres_close</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-close">
   <refnamediv>
    <refname>ingres_close</refname>
    <refpurpose>Ferme une connexion &agrave; un serveur Ingres.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool<function>ingres_close</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Retourne TRUE en cas de succ&egrave;s, et FALSE sinon.
    </para>
    <para>
     <function>ingres_close</function> ferme la connexion au serveur Ingres
     associ&eacute;e au lien sp&eacute;cifi&eacute;. Si le param&egrave;tre <parameter>link</parameter>
     n'est pas sp&eacute;cifi&eacute;, le dernier lien ouvert est utilis&eacute;.
    </para>
    <para>
     Habituellement l'appel &agrave; <function>ingres_close</function> n'est pas
     n&eacute;cessaire, car il ne ferme pas les connexions persistantes, et toutes
     les connexions non-persistantes sont automatiquement ferm&eacute;es &agrave; la fin du
     script.
    </para>
    <para> 
      Voir aussi <function>ingres_connect</function> et
     <function>ingres_pconnect</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-query">
   <refnamediv>
    <refname>ingres_query</refname>
    <refpurpose>Envoie une requ&ecirc;te SQL &agrave; un serveur Ingres II.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool<function>ingres_query</function></funcdef>
      <paramdef>string
       <parameter>query</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Retourne TRUE en cas de succ&egrave;s, et FALSE sinon.
    </para>
    <para>
     <function>ingres_query</function> envoie la requ&ecirc;te
     <parameter>query</parameter> au serveur Ingres. La requpete doit
     etre valide (voir le guide de r&eacute;f&eacute;rence SQL pour Ingres).
    </para>
    <para>
     La requ&ecirc;te s'ajoute &agrave; la transaction en cours. S'il n'y a pas de
     transaction ouverte, <function>ingres_query</function> en ouvre une
     nouvelle. Pour fermer une transaction, vous pouvez soit appeler
     <function>ingres_commit</function> pour valider les changements
     effectu&eacute;s sur la base de donn&eacute;es ou <function>ingres_rollback</function>
     pour les annuler. Lorsque le script se termine, toute transaction ouverte
     est annul&eacute;e (par appel &agrave; <function>ingres_rollback</function>). Vous
     pouvez aussi utiliser <function>ingres_autocommit</function> avant
     d'ouvrir une transaction pour que chaque requ&ecirc;te SQL soit valid&eacute;e
     imm&eacute;diatement et automatiquement.
    </para>
    <para>
     Certains types de requ&ecirc;tes SQL ne peuvent pas &ecirc;tre envoy&eacute;es par cette
     fonction :
     <itemizedlist>
      <listitem>
       <simpara>
        CLOSE (voir <function>ingres_close</function>).
       </simpara>
      </listitem>
     <listitem>
       <simpara>
        COMMIT (voir <function>ingres_commit</function>).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        CONNECT (voir <function>ingres_connect</function>).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        DISCONNECT (voir <function>ingres_close</function>).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        get dbevent
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        PREPARE TO COMMIT
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        ROLLBACK (voir <function>ingres_rollback</function>).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        savepoint
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SET AUTOCOMMIT (voir <function>ingres_autocommit</function>).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Les requ&ecirc;tes relatives aux curseurs ne sont pas support&eacute;es.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title>Exemple pour <function>ingres_query</function></title>
      <programlisting role="php">
&lt;?php 
ingres_connect ($database, $user, $password);

ingres_query ("select * from table");
while ($row = ingres_fetch_row()) {
    echo $row[1];
    echo $row[2];
}
?>
      </programlisting>
     </example>
    </para>
    <para>
     Voir aussi
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function>,
     <function>ingres_fetch_row</function>,
     <function>ingres_commit</function>,
     <function>ingres_rollback</function> et
     <function>ingres_autocommit</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-num-rows">
   <refnamediv>
    <refname>ingres_num_rows</refname>
    <refpurpose>
     Retourne le nombre de lignes affect&eacute;es ou retourn&eacute;es par la derni&egrave;re
     requ&ecirc;te.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int<function>ingres_num_rows</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Pour les requ&ecirc;tes DELETE, INSERT, UPDATE
     <function>ingres_num_rows</function> retourne le nombre de lignes (tuples)
     affect&eacute;es par la requ&ecirc;te. Pour les autres requ&ecirc;tes,
     <function>ingres_num_rows</function> retourne le nombre de lignes
     du r&eacute;sultat de la requ&ecirc;te.
    </para>
    <para>
     <note>
      <simpara>
       Cette fonction est con&ccedil;ue principalement pour obtenir le nombre
       de tuples modifi&eacute;s dans la base de donn&eacute;es. Si cette fonction est
       appel&eacute;e avant d'utiliser <function>ingres_fetch_array</function>,
       <function>ingres_fetch_object</function> ou
       <function>ingres_fetch_row</function>, le serveur efface les donn&eacute;es
       du r&eacute;sultat et le script ne pourra plus les obtenir.
      </simpara>
      <simpara>
       Il faut dans ce cas r&eacute;cup&eacute;rer les donn&eacute;es du r&eacute;sultat en utilisant
       une de ces 3 fonctions dans une boucle jusqu'&agrave; ce qu'elle renvoie
       FALSE, ce qui indique qu'il n'y a plus de r&eacute;sultats &agrave; r&eacute;cup&eacute;rer.
      </simpara>
     </note>
    </para>
    <para>
     Voir aussi
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> et
     <function>ingres_fetch_row</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-num-fields">
   <refnamediv>
    <refname>ingres_num_fields</refname>
    <refpurpose>
     Retourne le nombre de champs renvoy&eacute;s par la derni&egrave;re requ&ecirc;te.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int<function>ingres_num_fields</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_num_fields</function> retourne le nombre de champs
     du r&eacute;sultat renvoy&eacute; par le serveur Ingres apr&egrave;s un appel &agrave;
     <function>ingres_query</function>.
    </para>
    <para>
     Voir aussi
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> et
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-field-name">
   <refnamediv>
    <refname>ingres_field_name</refname>
    <refpurpose>Retourne le nom d'un champ dans le r&eacute;sultat d'une requ&ecirc;te.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string<function>ingres_field_name</function></funcdef>
      <paramdef>int
       <parameter>index</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_field_name</function> retourne le nom d'un champ dans
     le r&eacute;sultat d'une requ&ecirc;te, ou FALSE en cas d'&eacute;chec.
    </para>
    <para>
     <parameter>index</parameter> est le num&eacute;ro du champ et doit &ecirc;tre compris
     entre 1 et la valeur donn&eacute;e par <function>ingres_num_fields</function>.
    </para>
    <para>
     Voir aussi
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> et
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-field-type">
   <refnamediv>
    <refname>ingres_field_type</refname>
    <refpurpose>Retourne le type d'un champ dans le r&eacute;sultat d'une requ&ecirc;te.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string<function>ingres_field_type</function></funcdef>
      <paramdef>int
       <parameter>index</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_field_type</function> retourne le type d'un champ dans
     le r&eacute;sultat d'une requ&ecirc;te, ou FALSE en cas d'&eacute;chec.
     Exemples de types renvoy&eacute;s par cette fonction : "IIAPI_BYTE_TYPE",
     "IIAPI_CHA_TYPE", "IIAPI_DTE_TYPE", "IIAPI_FLT_TYPE",
     "IIAPI_INT_TYPE", "IIAPI_VCH_TYPE". Certains de ces types
     correspondent &agrave; plus d'un type SQL, selon la taille du champ
     (voir <function>ingres_field_length</function>). Par exemple
     "IIAPI_FLT_TYPE" peut &ecirc;tre un float4 ou un float8. Pour plus
     d'informations, voir le Guide de l'utilisateur d'Ingres/OpenAPI
     - Annexe C.
    </para>
    <para>
     <parameter>index</parameter> est le num&eacute;ro du champ et doit &ecirc;tre compris
     entre 1 et la valeur donn&eacute;e par <function>ingres_num_fields</function>.
    </para>
    <para>
     Voir aussi
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> et
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-field-nullable">
   <refnamediv>
    <refname>ingres_field_nullable</refname>
    <refpurpose>Teste si un champ est annulable.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool<function>ingres_field_nullable</function></funcdef>
      <paramdef>int
       <parameter>index</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_field_nullable</function> retourne TRUE si le champ
     peut recevoir la valeur NULL et FALSE dans le cas contraire.
    </para>
    <para>
     <parameter>index</parameter> est le num&eacute;ro du champ et doit &ecirc;tre compris
     entre 1 et la valeur donn&eacute;e par <function>ingres_num_fields</function>.
    </para>
    <para>
     Voir aussi
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> et
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-field-length">
   <refnamediv>
    <refname>ingres_field_length</refname>
    <refpurpose>Retourne la taille d'un champ.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int<function>ingres_field_length</function></funcdef>
      <paramdef>int
       <parameter>index</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_field_length</function> retourne la taille d'un champ.
     Il s'agit du nombre d'octets utilis&eacute;s par le serveur pour stocker ce
     champ. Pour plus d'informations, voir le Guide de l'utilisateur
     d'Ingres/OpenAPI - Annexe C.
    </para>
    <para>
     <parameter>index</parameter> est le num&eacute;ro du champ et doit &ecirc;tre compris
     entre 1 et la valeur donn&eacute;e par <function>ingres_num_fields</function>.
    </para>
    <para>
     Voir aussi
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> et
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-field-precision">
   <refnamediv>
    <refname>ingres_field_precision</refname>
    <refpurpose>Retourne la pr&eacute;cision d'un champ.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int<function>ingres_field_precision</function></funcdef>
      <paramdef>int
       <parameter>index</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_field_precision</function> retourne la pr&eacute;cision d'un
     champ. Cette valeur est utilis&eacute;e uniquement pour les types de donn&eacute;es
     SQL d&eacute;cimal, float et money. Pour plus d'informations, voir le Guide de
     l'utilisateur d'Ingres/OpenAPI - Annexe C.
    </para>
    <para>
     <parameter>index</parameter> est le num&eacute;ro du champ et doit &ecirc;tre compris
     entre 1 et la valeur donn&eacute;e par <function>ingres_num_fields</function>.
    </para>
    <para>
     Voir aussi
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> et
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-field-scale">
   <refnamediv>
    <refname>ingres_field_scale</refname>
    <refpurpose>Retourne l'&eacute;chelle d'un champ.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int<function>ingres_field_scale</function></funcdef>
      <paramdef>int
       <parameter>index</parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_field_scale</function> retourne l'&eacute;chelle (scale) d'un
     champ. Cette valeur n'est utilis&eacute;e que pour le type de donn&eacute;es SQL
     decimal. Pour plus d'informations, voir le Guide de l'utilisateur
     d'Ingres/OpenAPI - Annexe C.
    </para>
    <para>
     <parameter>index</parameter> est le num&eacute;ro du champ et doit &ecirc;tre compris
     entre 1 et la valeur donn&eacute;e par <function>ingres_num_fields</function>.
    </para>
    <para>
     Voir aussi
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function>,
     <function>ingres_fetch_object</function> et
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-fetch-array">
   <refnamediv>
    <refname>ingres_fetch_array</refname>
    <refpurpose>R&eacute;cup&eacute;re une ligne de r&eacute;sultat dans un tableau.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array<function>ingres_fetch_array</function></funcdef>
      <paramdef>int
       <parameter><optional>result_type</optional></parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_fetch_array</function> renvoie un tableau correspondant
     &agrave; la ligne r&eacute;cup&eacute;r&eacute;e, ou FALSE s'il n'y a plus de ligne &agrave; r&eacute;cup&eacute;rer.
    </para>
    <para>
     Cette fonction est une version am&eacute;lior&eacute;e de
     <function>ingres_fetch_row</function>. En plus de stocker les donn&eacute;es
     dans un tableau &agrave; indices num&eacute;riques, elle peut aussi les enregistrer
     dans un tableau associatif, en utilisant les noms des champs comme
     indices.
    </para>
    <para>
     Si plusieurs colonnes ont le m&ecirc;me nom, la derni&egrave;re colonne aura la
     priorit&eacute;. Pour acc&eacute;der aux autres colonnes du m&ecirc;me nom, vous devez
     utiliser l'index num&eacute;rique, ou faire un alias pour chaque colonne. 
     <informalexample>
      <programlisting>
ingres_query(select t1.f1 as foo t2.f1 as bar from t1, t2);
$result = ingres_fetch_array();
$foo = $result["foo"];
$bar = $result["bar"];
      </programlisting>
     </informalexample>
    </para>
    <para>
     <parameter>result_type</parameter> peut valoir II_NUM pour un
     tableau &agrave; indices num&eacute;riques, II_ASSOC pour un tableau associatif,
     ou II_BOTH (d&eacute;faut) pour un tableau mixte (accessible selon les 2
     m&eacute;thodes).
    </para>
    <para>
     Du point de vue de la rapidit&eacute;, cette fonction est identique &agrave;
     <function>ingres_fetch_object</function>, et presque aussi rapide
     que <function>ingres_fetch_row</function> (la diff&eacute;rence est
     insignifiante).
    </para>
    <para>
     <example>
      <title>Exemple pour <function>ingres_fetch_array</function></title>
      <programlisting role="php">
&lt;?php 
ingres_connect ($database, $user, $password);

ingres_query ("select * from table");
while ($row = ingres_fetch_array()) {
    echo $row["user_id"];  # utilisation du tableau associatif
    echo $row["fullname"];
    echo $row[1];          # utilisation du tableau &agrave; indices num&eacute;riques
    echo $row[2];
}
?>
      </programlisting>
     </example>
    </para>
    <para>
     Voir aussi
     <function>ingres_query</function>,
     <function>ingres_num_fields</function>,
     <function>ingres_field_name</function>,
     <function>ingres_fetch_object</function> et
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-fetch-row">
   <refnamediv>
    <refname>ingres_fetch_row</refname>
    <refpurpose>R&eacute;cup&eacute;re une ligne de r&eacute;sultat dans un tableau &eacute;num&eacute;r&eacute;.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array<function>ingres_fetch_row</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_fetch_row</function> renvoie un tableau correspondant
     &agrave; la ligne r&eacute;cup&eacute;r&eacute;e, ou FALSE s'il n'y a plus de ligne &agrave;
     r&eacute;cup&eacute;rer. la ligne est stock&eacute;e dans un tableau &agrave; indices num&eacute;riques,
     le premier champ &eacute;tant &agrave; l'indice 1.
    </para>
    <para>
     Les appels successifs &agrave; <function>ingres_fetch_row</function> retournent
     les lignes suivantes du r&eacute;sultat, ou FALSE s'il n'y a plus de lignes.
    </para>
    <para>
     <example>
      <title>Exemple pour <function>ingres_fetch_row</function></title>
      <programlisting role="php">
&lt;?php 
ingres_connect ($database, $user, $password);

ingres_query ("select * from table");
while ($row = ingres_fetch_row()) {
    echo $row[1];
    echo $row[2];
}
?>
      </programlisting>
     </example>
    </para>
    <para>
     Voir aussi
     <function>ingres_num_fields</function>,
     <function>ingres_query</function>,
     <function>ingres_fetch_array</function> et
     <function>ingres_fetch_object</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-fetch-object">
   <refnamediv>
    <refname>ingres_fetch_object</refname>
    <refpurpose>R&eacute;cup&egrave;re une ligne de r&eacute;sultat dans un objet.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object<function>ingres_fetch_object</function></funcdef>
      <paramdef>int
       <parameter><optional>result_type</optional></parameter>
      </paramdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_fetch_object</function> renvoie un objet correspondant
     &agrave; la ligne (tuple) r&eacute;cup&eacute;r&eacute;e, ou FALSE s'il n'y a plus de ligne &agrave;
     r&eacute;cup&eacute;rer.
    </para>
    <para> 
     <function>ingres_fetch_object</function> est similaire &agrave; 
     <function>ingres_fetch_array</function>, avec une diff&eacute;rence : la 
     valeur de retour est un objet et non un tableau.
     Indirectement, cela signifie qu'il n'est possible d'acc&eacute;der aux donn&eacute;es
     qu'avec les noms des champs, et pas avec leur num&eacute;ro (les nombres
     ne sont pas des noms de propri&eacute;t&eacute; valide).
    </para>
    <para>
     Le param&egrave;tre optionnel <parameter>result_type</parameter> est une
     constante qui peut prendre les valeurs II_ASSOC, II_NUM, et II_BOTH 
     (par d&eacute;faut).
    </para>
    <para>
     Du point de vue de la rapidit&eacute;, cette fonction est identique &agrave;
     <function>ingres_fetch_array</function>, et presque aussi rapide
     que <function>ingres_fetch_row</function> (la diff&eacute;rence est
     insignifiante).
    </para>
    <para>
     <example>
      <title>Exemple pour <function>ingres_fetch_object</function></title>
      <programlisting role="php">
&lt;?php 
ingres_connect ($database, $user, $password);
ingres_query ("select * from table");
while ($row = ingres_fetch_object()) {
    echo $row->user_id;
    echo $row->fullname;
}
?>
      </programlisting>
     </example>
    </para>
    <para>
     Voir aussi
     <function>ingres_query</function>,
     <function>ingres_num_fields</function>,
     <function>ingres_field_name</function>,
     <function>ingres_fetch_array</function> et
     <function>ingres_fetch_row</function>.     
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-rollback">
   <refnamediv>
    <refname>ingres_rollback</refname>
    <refpurpose>Annule une transaction.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool<function>ingres_rollback</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_rollback</function> annule (roll back) la transaction
     ouverte, ce qui annule les modifications faites sur la base de donn&eacute;es
     au cours de cette transaction.
    </para>
    <para>
     Ceci ferme la transaction. une nouvelle transaction peut &ecirc;tre ouverte
     en envoyant une requ&ecirc;te &agrave; l'aide de <function>ingres_query</function>.
    </para>
    <para>
     Voir aussi
     <function>ingres_query</function>,
     <function>ingres_commit</function> et
     <function>ingres_autocommit</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-commit">
   <refnamediv>
    <refname>ingres_commit</refname>
    <refpurpose>Valide une transaction.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool<function>ingres_commit</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_commit</function> valide la transaction ouverte,
     ce qui rend permanentes toutes les modifications faites sur la
     base de donn&eacute;es au cours de cette transaction
    </para>
    <para>
     Ceci ferme la transaction. une nouvelle transaction peut &ecirc;tre ouverte
     en envoyant une requ&ecirc;te &agrave; l'aide de <function>ingres_query</function>.
    </para>
    <para>
     Vous pouvez aussi faire en sorte que le serveur valide automatiquement
     les changements apr&egrave;s chaque requ&ecirc;te en appelant
     <function>ingres_autocommit</function> avant l'ouverture d'une
     transaction.
    </para>
    <para>
     Voir aussi
     <function>ingres_query</function>,
     <function>ingres_rollback</function> et
     <function>ingres_autocommit</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ingres-autocommit">
   <refnamediv>
    <refname>ingres_autocommit</refname>
    <refpurpose>Active ou d&eacute;sactive le mode autocommit.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool<function>ingres_autocommit</function></funcdef>
      <paramdef>resource
       <parameter><optional>link</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ingres_autocommit</function> est appel&eacute;e juste avant
     l'ouverture d'une transaction (avant le premier appel &agrave;
     <function>ingres_query</function> ou juste apr&eacute;s un appel &agrave;
     <function>ingres_rollback</function> ou
     <function>ingres_autocommit</function>) pour changer l'&eacute;tat du
     mode "autocommit" (ce mode fonctionne comme une bascule). Lorsque
     le script d&eacute;bute le mode autocommit est toujours d&eacute;sactiv&eacute;.
    </para>
    <para>
     Lorsque le mode autocommit est activ&eacute;, chaque requ&ecirc;te est automatiquement
     commise (valid&eacute;e) par le serveur, comme si
     <function>ingres_commit</function> &eacute;tait appel&eacute;e apr&eacute;s chaque appel &agrave;
     <function>ingres_query</function>.
    </para>
    <para>
     Voir aussi
     <function>ingres_query</function>,
     <function>ingres_rollback</function> et
     <function>ingres_commit</function>.
    </para>
   </refsect1>
  </refentry>

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

