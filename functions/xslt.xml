 <reference id="ref.xslt">
  <title>XSLT</title>
  <titleabbrev>XSLT</titleabbrev>
  <partintro>
   <sect1 id="xslt.partintro">
    <title>Introduction</title>
    <sect2 id="xslt.intro">
     <title>A propos de XSLT et Sablotron</title>
     <para>
      XSLT (Extensible Stylesheet Language (XSL)
      Transformations) est un langage de transformation des documents
      XML en d'autres documents XML. C'est un standard d&eacute;fini par le
      consortium World Wide Web (W3C). Les informations sur le
      XLST et ses technologies sont disponibles &agrave;
      <ulink url="&url.xslt;">&url.xslt;</ulink>.
     </para>
    </sect2>
    <sect2 id="xslt.install">
     <title>Installation</title>
     <para>
      Cette extension utilise <productname>Sabloton</productname>
      et <productname>expat</productname>, qui sont toutes les deux
      disponibles &agrave; <ulink url="&url.sablotron;">&url.sablotron;</ulink>.
      Les sources comme les ex&eacute;cutables sont propos&eacute;s.
     </para>
     <para>
      Sous UNIX, lancez <command>configure</command> avec l'option <option
      role="configure">--with-sablot</option>.
      La librairie <productname>Sablotron</productname> doit &ecirc;tre install&eacute;e
      l&agrave; o&ugrave; le compilateur peut la trouver.
     </para>
    </sect2>
    <sect2 id="xslt.about">
     <title>A propos de Sablotron</title>
     <para>
      Cette extension PHP impl&eacute;mente le support de
      <productname>Sablotron</productname>, par Ginger Alliance.
      Cette librairie vous permet de transformer des documents
      XML en d'autres documents XML, mais aussi en HTML ou encore
      n'importe quel format &agrave; balise. Elle fournit un m&eacute;canisme
      basique et portable de templates, s&eacute;parant le contenu
      de l'interface d'un site web.
     </para>
    </sect2>
   </sect1>
  </partintro>
  <refentry id="function.xslt-closelog">
   <refnamediv>
    <refname>xslt_closelog</refname>
    <refpurpose>Efface le fichier d'historique</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xslt_closelog</function></funcdef>
      <paramdef>resource <parameter>xh</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <variablelist>
      <varlistentry>
       <term><parameter>xh</parameter></term>
       <listitem>
        <simpara>
         Une r&eacute;f&eacute;rence valide sur un analyseur XSLT.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <function>xslt_closelog</function> retourne <literal>FALSE</literal> si
     <parameter>xh</parameter> n'est pas un analyse XSLT valide, ou bien
     si la fermeture du fichier d'historique a &eacute;chou&eacute;. Sinon, retourne
     <literal>TRUE</literal>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.xslt-create">
   <refnamediv>
    <refname>xslt_create</refname>
    <refpurpose>Cr&eacute; un nouveau analyseur XSLT.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>xslt_create</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>xslt_create</function> retourne un identifiant d'analyseur
     XSLT. Il sera n&eacute;cessaire pour les appels ult&eacute;rieurs aux fonctions.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.xslt-errno">
   <refnamediv>
    <refname>xslt_errno</refname>
    <refpurpose>Retourne le num&eacute;ro d'erreur courant</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>xslt_errno</function></funcdef>
       <paramdef>
        int <parameter><optional>xh</optional></parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>xslt_errno</function> le num&eacute;ro courant d'erreur, pour l'analyseur
      <parameter>xh</parameter>. Si <parameter>xh</parameter> n'est pas
      fourni, le dernier num&eacute;ro d'erreur est retourn&eacute;.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.xslt-error">
   <refnamediv>
    <refname>xslt_error</refname>
    <refpurpose>Retourne le message d'erreur courant</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>xslt_error</function></funcdef>
       <paramdef>
        int <parameter><optional>xh</optional></parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>xslt_errno</function> le message d'erreur courant, pour l'analyseur
      <parameter>xh</parameter>. Si <parameter>xh</parameter> n'est pas
      fourni, le dernier num&eacute;ro d'erreur est retourn&eacute;.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.xslt-fetch-result">
   <refnamediv>
    <refname>xslt_fetch_result</refname>
    <refpurpose>Lit un r&eacute;sultat</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>xslt_fetch_result</function></funcdef>
       <paramdef>
        int <parameter>xh</parameter>
        string <parameter><optional>result_name</optional></parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>xslt_fetch_result</function> lit le r&eacute;sultat disponible
     dans le buffer de l'analyseur <parameter>xh</parameter>. Si
     <parameter>result_name</parameter> n'est pas fourni, le r&eacute;sultat
     &quot;/_result&quot; sera lu.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.xslt-free">
   <refnamediv>
    <refname>xslt_free</refname>
    <refpurpose>D&eacute;truit un analyseur XSLT</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>xslt_free</function></funcdef>
       <paramdef>
        resource <parameter>xh</parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>xslt_free</function> d&eacute;truit l'analyseur XSLT
     <parameter>xh</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.xslt-openlog">
   <refnamediv>
    <refname>xslt_openlog</refname>
    <refpurpose>Modifie le fichier d'historique</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xslt_openlog</function></funcdef>
       <paramdef>
        resource <parameter>xh</parameter>
        string <parameter>logfile</parameter>
        int <parameter><optional>loglevel</optional></parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>xslt_openlog</function> remplace le fichier d'historique
     courant par <parameter>logfile</parameter>, pour l'analyseur
     XSLT <parameter>xh</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.xslt-output-begintransform">
   <refnamediv>
    <refname>xslt_output_begintransform</refname>
    <refpurpose>Commence la transformation XSLT</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>xslt_output_begintransform</function>
      </funcdef>
       <paramdef>
        string <parameter>xslt_filename</parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>xslt_output_begintransform</function> commence &agrave;
     retourner la transform&eacute;e de vos donn&eacute;es. En l'appel de
     <function>xslt_output_begintransform</function> et celui de
     <function>xslt_output_endtransform</function>, toutes les donn&eacute;es
     seront transform&eacute;es par la feuille de style XSLT
     <parameter>xslt_filename</parameter>.
    </para>
    <para>
     <example>
      <title>Transformation avec une feuille de style XSLT (avec DOM-XML)</title>
      <programlisting role="php">
&lt;?php
$xsl_file = "article.xsl";
xslt_output_begintransform($xsl_file);
$doc = new_xmldoc('1.0');
$article = $doc->new_root('article');
$article->new_child('title', 'Histoire du Tyrol m&eacute;ridional');
$article->new_child('author', 'Sterling Hughes');
$article->new_child('body', 'Juste apr&egrave;s la premi&egrave;re guerre mondiale, l'Italie
                             obtiend le Tyrol m&eacute;ridional aux d&eacute;pends de l'Autriche.
                             Et depuis cette &eacute;poque, rien d'interessant n'est arriv&eacute;.');
echo $doc->dumpmem();
xslt_output_endtransform();
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.xslt-output-endtransform">
   <refnamediv>
    <refname>xslt_output_endtransform</refname>
    <refpurpose>Termine une transformation XSLT</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>xslt_output_endtransform</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>xslt_output_endtransform</function> termine la transformation
     commenc&eacute;e avec <function>xslt_output_begintransform</function>.
     Vous devez appeler <function>xslt_output_endtransform</function> pour
     pouvoir acc&eacute;der aux r&eacute;sultats.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.xslt-process">
   <refnamediv>
    <refname>xslt_process</refname>
    <refpurpose>Transforme des donn&eacute;es XML</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool
       <function>xslt_process</function>
      </funcdef>
       <paramdef>
        string <parameter>xsl_data</parameter>
        string <parameter>xml_data</parameter>
        string <parameter>result</parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>xslt_process</function> prend la cha&icirc;ne
     <parameter>string <parameter>xsl_data</parameter> comme feuille de style XSLT, et
     des donn&eacute;es XML dans <parameter>xml_data</parameter>. Le r&eacute;sultat
     de la transformation sera plac&eacute; dans <parameter>result</parameter>.
     <function>xslt_process</function> retourne <literal>TRUE</literal>
     en cas de succ&egrave;s, et <literal>FALSE</literal> sinon. Vous
     pourrez lire les erreurs survenues gr&acirc;ce aux fonctions
     <function>xslt_errno</function> et <function>xslt_error</function>.
    </para>
    <para>
     <example>
     <title>Utilisation de <function>xslt_process</function> pour transformer trois</title>
     <programlisting role="php">
&lt;?php
$xslData = '
&lt;xsl:stylesheet
  version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;
&lt;xsl:template match="article"&gt;
    &lt;table border="1" cellpadding="2" cellspacing="1"&gt;
        &lt;tr&gt;
            &lt;td width="20%"&gt;
             &nbsp;
            &lt;/title&gt;
            &lt;td width="80%"&gt;
                &lt;h2&gt;&lt;xsl:value-of select="title"&gt;&lt;/h2&gt;
                &lt;h3&gt;&lt;xsl:value-of select="author"&gt;&lt;/h3&gt;
                &lt;br&gt;
                &lt;xsl:value-of select="body"&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/table&gt;
&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;';
$xmlData = '
&lt;?xml version="1.0"&gt;
&lt;article&gt;
    &lt;title&gt;Learning German&lt;/title&gt;
    &lt;author&gt;Sterling Hughes&lt;/author&gt;
    &lt;body&gt;
      Essential phrases:
      &lt;br&gt;
      &lt;br&gt;
      K&ouml;nnen Sie mir sagen, wo die Toilette ist?&lt;br&gt;
      Ein grosses Bier, bitte!&lt;br&gt;
      Noch eins, bitte.&lt;br&gt;
    &lt;/body&gt;
&lt;/article&gt;';
if (xslt_process($xslData, $xmlData, $result))
{
    echo "Voici un brillant article sur l'apprentissage du ";
    echo " fran&ccedil;ais: ";
    echo "&lt;br&gt;\n&lt;br&gt;";
    echo $result;
}
else
{
    echo "Une erreur est survenue durant le traitement XSL...\n";
    echo "\tErreur num&eacute;ro : " . xslt_errno() . "\n";
    echo "\tMessage d'erreur : " . xslt_error() . "\n";
    exit;
}
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.xslt-run">
   <refnamediv>
    <refname>xslt_run</refname>
    <refpurpose>Applique une feuille de style &agrave; un fichier</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xslt_run</function></funcdef>
       <paramdef>
        resource <parameter>xh</parameter>
        string <parameter>xslt_file</parameter>
        string <parameter>xml_data_file</parameter>
        string <parameter><optional>result</optional></parameter>
        array <parameter><optional>xslt_params</optional></parameter>
        array <parameter><optional>xslt_args</optional></parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>xslt_run</function> applique au fichier
     <parameter>xml_data_file</parameter> la feuille de style
     <parameter>xslt_file</parameter>. La feuille de style
     peut utiliser les param&egrave;tres optionnels
     <parameter>xslt_params</parameter> et l'analyseur XSLT est
     d&eacute;marr&eacute; avec <parameter>xslt_args</parameter>. Le
     r&eacute;sultat est plac&eacute; dans le buffer nomm&eacute;
     <parameter>result</parameter> (par d&eacute;faut, dans
     &quot;/_result&quot;).
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.xslt-set-sax-handler">
   <refnamediv>
    <refname>xslt_set_sax_handler</refname>
    <refpurpose>Modifie les gestionnaires SAX de l'analyseur XSLT</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>xslt_set_sax_handler</function></funcdef>
       <paramdef>
        resource <parameter>xh</parameter>
        array <parameter>handlers</parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>xslt_set_sax_handler</function> remplace les gestionnaires SAX
     de l'analyseur XSLT <parameter>xh</parameter> par
     <parameter>handlers</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.xslt-transform">
   <refnamediv>
    <refname>xslt_transform</refname>
    <refpurpose>Ex&eacute;cute une transformation XSLT</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool
       <function>xslt_transform</function>
      </funcdef>
      <paramdef>
        string <parameter>xsl</parameter>
        string <parameter>xml</parameter>
        string <parameter>result</parameter>
        string <parameter>params</parameter>
        string <parameter>args</parameter>
        string <parameter>resultBuffer</parameter>
       </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>xslt_transform</function> fournit une interface avec les
     API avanc&eacute;es de sablotron, sans vous obliger &agrave; utiliser les
     ressources.
    </para>
   </refsect1>
  </refentry>
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
