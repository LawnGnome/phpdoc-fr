 <reference id="ref.odbc">
  <title>ODBC</title>
  <titleabbrev>ODBC</titleabbrev>

  <refentry id="function.odbc-autocommit">
   <refnamediv>
    <refname>odbc_autocommit</refname>
    <refpurpose>Mode auto-validation</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_autocommit</function></funcdef>
     <paramdef>int <parameter>connection_id</parameter></paramdef>
     <paramdef>int <parameter><optional>OnOff</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
      Sans param&egrave;tre <parameter>OnOff</parameter>, cette fonction retourne le statut 
      d'auto-validation de la connexion <parameter>connection_id</parameter>. 
      TRUE si le mode est activ&eacute;, FALSE si il ne l'est pas, ou si une erreur survient.
    </para>
    <para>
      Si <parameter>OnOff</parameter> vaut TRUE, l'auto-validation est activ&eacute;e. Si 
      il est FALSE, l'auto-validation est desactiv&eacute;e. Retourne TRUE en cas de succ&egrave;s, 
      FALSE en cas d'&eacute;chec.
    </para>
    <para>
      Par d&eacute;faut, l'auto-validation est activ&eacute;e. D&eacute;sactiver l'auto-validation est 
      &eacute;quivalent &agrave; d&eacute;marrer une transaction.
    </para>
    <simpara>
     Voir aussi 
     <function>odbc_commit</function> et <function>odbc_rollback</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-binmode">
   <refnamediv>
    <refname>odbc_binmode</refname>
   <refpurpose>Gestion des colonnes de donn&eacute;es binaires.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcdef>int <function>odbc_binmode</function></funcdef>
    <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>int <parameter>mode</parameter></paramdef>
    </funcsynopsis>
    <para>
      Types ODBC SQL affect&eacute;s: BINARY, VARBINARY, LONGVARBINARY.
    </para>
    <itemizedlist>
      <listitem><simpara>
      ODBC_BINMODE_PASSTHRU: Mode Passthru 
      </simpara></listitem> 
      <listitem><simpara>
      ODBC_BINMODE_RETURN: Retourne tel quel. 
      </simpara></listitem>
      <listitem><simpara>
      ODBC_BINMODE_CONVERT: Converti en char et retourne la valeur.
      </simpara></listitem>
    </itemizedlist>
    <para>
      Lorsqu'une donn&eacute;e SQL est convertie en caract&egrave;re C, les 8 bits du caract&egrave;re source 
      sont repr&eacute;sent&eacute;s par deux caract&egrave;res ASCII. Ces caract&egrave;res sont des repr&eacute;sentations
      ASCII des nombres au format hexad&eacute;cimal. Par exemple, le binaire 00000001 est 
      converti en <literal>"01"</literal> et le binaire 11111111 est converti en 
      <literal>"FF"</literal>. 
     <table>
      <title>Conversion des LONGVARBINARY </title>
      <tgroup cols="3">
       <thead>
	<row>
	 <entry>mode</entry>
	 <entry>longueur</entry>
	 <entry>r&eacute;sultat</entry>
	</row>
       </thead>
       <tbody>
	<row>
	 <entry>ODBC_BINMODE_PASSTHRU</entry>
	 <entry>0</entry>
	 <entry>passthru</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_RETURN</entry>
	 <entry>0</entry>
	 <entry>passthru</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_CONVERT</entry>
	 <entry>0</entry>
	 <entry>passthru</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_PASSTHRU</entry>
	 <entry>0</entry>
	 <entry>passthru</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_PASSTHRU</entry>
	 <entry>>0</entry>
	 <entry>passthru</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_RETURN</entry>
	 <entry>>0</entry>
	 <entry>Tel quel</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_CONVERT</entry>
	 <entry>>0</entry>
	 <entry>Caract&egrave;re</entry>
	</row>
       </tbody>
      </tgroup>
     </table></para>

    <para>
      Si <function>odbc_fetch_into</function> est utilis&eacute;, passthru signifie qu'une 
      cha&icirc;ne vide sera retourn&eacute;e pour ces colonnes.
    </para>

    <para>
      Si <parameter>result_id</parameter> vaut <literal>0</literal>, ces param&egrave;tres 
      seront appliqu&eacute;s aux nouveaux r&eacute;sultats. 

      <note>
       <simpara>
           La valeur par d&eacute;faut de <literal>4096</literal> est 4096 et les valeurs par 
           d&eacute;faut de odbc_binmode est <literal>ODBC_BINMODE_RETURN</literal>.
           La gestion des colonnes binaires est aussi modifi&eacute; par 
           <function>odbc_longreadlen</function>.
       </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-close">
   <refnamediv>
    <refname>odbc_close</refname>
    <refpurpose>Ferme une connexion ODBC.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>void <function>odbc_close</function></funcdef>
     <paramdef>int <parameter>connection_id</parameter></paramdef>
    </funcsynopsis>

    <para>
     <function>odbc_close</function> ferme la connexion avec une source de donn&eacute;es, 
     repr&eacute;sent&eacute;e par l'identifiant de connexion. 

     <note><simpara>
       Cette fonction &eacute;chouera si il y a des transactions en cours sur cette connexion. 
       Dans ce cas, la connexion restera ouverte.
      </simpara></note></para>

   </refsect1>
  </refentry>

  <refentry id="function.odbc-close-all">
   <refnamediv>
    <refname>odbc_close_all</refname>
    <refpurpose>Ferme toutes les connexions ODBC</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>void <function>odbc_close_all</function></funcdef>
     <void/>
    </funcsynopsis>

    <para>
     <function>odbc_close_all</function> ferme toutes les connexions ODBC &agrave; des 
     sources de donn&eacute;es. 

     <note><simpara>
       Cette fonction &eacute;chouera si il y a des transactions en cours sur cette connexion. 
       Dans ce cas, la connexion restera ouverte.
     </simpara></note></para>

   </refsect1>
  </refentry>

  <refentry id="function.odbc-commit">
   <refnamediv>
    <refname>odbc_commit</refname>
    <refpurpose>Valide une transaction ODBC </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_commit</function></funcdef>
     <paramdef>int <parameter>connection_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     Retourne: TRUE en case de succ&egrave;s, FALSE en cas d'erreur. Toutes les connexions en 
     cours sur <parameter>connection_id</parameter> sont valid&eacute;es.
 
     Toutes les connexions en cours sur <parameter>connection_id</parameter> sont 
     valid&eacute;es.
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.odbc-connect">
   <refnamediv>
    <refname>odbc_connect</refname>
    <refpurpose>Connexion &agrave; une source</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_connect</function></funcdef>
     <paramdef>string <parameter>dsn</parameter></paramdef>
     <paramdef>string <parameter>user</parameter></paramdef>
     <paramdef>string <parameter>password</parameter></paramdef>
     <paramdef>int <parameter><optional>cursor_type</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
       Retourne un identifiant de connexion ODBC ou 0 (FALSE) en cas d'erreur.
    </para>
    <simpara>
       L'identifiant de connexion retourn&eacute;e par cette fonction est n&eacute;cessaire pour 
       toutes les autres fonctions ODBC. Vous pouvez avoir de multiples connexions 
       en m&ecirc;me temps. Le quatri&egrave;me param&egrave;tre fixe le type de pointeur de r&eacute;sultat 
       utilis&eacute; pour cette connexion. Ce param&egrave;tre n'est g&eacute;n&eacute;ralement pas n&eacute;cessaire, 
       mais il peut &ecirc;tre utile pour contourner certains probl&egrave;mes ODBC. 
    </simpara>
    <simpara>
     Avec certains pilotes ODBC, l'ex&eacute;cution de proc&eacute;dures enregistr&eacute;es complexes 
     peut produire l'erreur suivante : "Cannot open a cursor on a stored procedure 
     that has anything other than a single select statement in it", ce qui signifie : 
     "Impossible de cr&eacute;er un pointeur de r&eacute;sultat dans une proc&eacute;dure enregistr&eacute;e qui 
     est r&eacute;duite &agrave; une simple selection (SELECT)). Utiliser l'option SQL_CUR_USE_ODBC 
     permet d'&eacute;viter cette erreur. De plus, certains pilotes ne supportent le param&egrave;tre
     optionnel de num&eacute;ro de ligne dans <function>odbc_fetch_row</function>. 
     SQL_CUR_USE_ODBC peut aussi permettre de r&eacute;soudre ces probl&egrave;mes.
    </simpara>
    <simpara>
      Les constantes suivantes sont d&eacute;finies comme type de pointeur : 
    </simpara>
    <para>
     <itemizedlist>
      <listitem><simpara>
      SQL_CUR_USE_IF_NEEDED
      </simpara></listitem> 
      <listitem><simpara>
      SQL_CUR_USE_ODBC
      </simpara></listitem> 
      <listitem><simpara>
      SQL_CUR_USE_DRIVER
      </simpara></listitem> 
      <listitem><simpara>
      SQL_CUR_DEFAULT
      </simpara></listitem> 
    </itemizedlist></para>
    <simpara>
         Pour les connexions persistantes, reportez vous &agrave; 
         <function>odbc_pconnect</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-cursor">
   <refnamediv>
    <refname>odbc_cursor</refname>
    <refpurpose>Lecture du pointeur de fiche courante (cursorname).</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>odbc_cursor</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
    </funcsynopsis>
    <para>
      <function>odbc_cursor</function> lit le pointeur de fiche courante 
      (cursorname) pour le r&eacute;sultat <parameter>result_id</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-do">
   <refnamediv>
    <refname>odbc_do</refname>
    <refpurpose>Synonyme de <function>odbc_exec</function></refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>odbc_do</function></funcdef>
     <paramdef>int <parameter>conn_id</parameter></paramdef>
     <paramdef>string <parameter>query</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>odbc_do</function> exc&eacute;cute la requ&ecirc;te <parameter>query</parameter> 
     avec la connexion <parameter>conn_id</parameter>.
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.odbc-exec">
   <refnamediv>
    <refname>odbc_exec</refname>
    <refpurpose>Pr&eacute;pare et ex&eacute;cute une requ&ecirc;te SQL.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_exec</function></funcdef>
     <paramdef>int <parameter>connection_id</parameter></paramdef>
     <paramdef>string <parameter>query_string</parameter></paramdef>
    </funcsynopsis>
    <para>
     Retourne FALSE en cas d'erreur. Retourne un identifiant de r&eacute;sultat ODBC en cas 
     d'ex&eacute;cution r&eacute;ussie.
    </para>
    <para>
     <function>odbc_exec</function> envoie une commande SQL &agrave; la source de donn&eacute;es 
     repr&eacute;sent&eacute;e par <parameter>connection_id</parameter>. Ce param&egrave;tre doit &ecirc;tre un 
     identifiant valide de connexion, retourn&eacute; par <function>odbc_connect</function> ou
     <function>odbc_pconnect</function>.
    </para>
    <simpara> 
     Voir aussi : <function>odbc_prepare</function> et <function>odbc_execute</function> 
     pour les &eacute;xecutions multiples de requ&ecirc;tes SQL.
    </simpara>
   </refsect1>
  </refentry>

<refentry id="function.odbc-execute">
 <refnamediv>
  <refname>odbc_execute</refname>
   <refpurpose>Ex&eacute;cute une requ&ecirc;te SQL pr&eacute;par&eacute;e.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcdef>int <function>odbc_execute</function></funcdef>
    <paramdef>int <parameter>result_id</parameter></paramdef>
    <paramdef>array
      <parameter><optional>parameters_array</optional></parameter></paramdef>
   </funcsynopsis>
   <para>
     Ex&eacute;cute une requ&ecirc;te SQL pr&eacute;par&eacute;e par <function>odbc_prepare</function>.
     Retourne TRUE en cas d'ex&eacute;cution r&eacute;ussie, et FALSE sinon. Le tableau de param&egrave;tres 
     <parameter>parameters_array</parameter> ne sert que si vous avez besoin de
     param&egrave;tres votre requ&ecirc;te.
   </para>
  </refsect1>
</refentry>


  <refentry id="function.odbc-fetch-into">
   <refnamediv>
    <refname>odbc_fetch_into</refname>
    <refpurpose>Lit une ligne de r&eacute;sultat, et la place dans un tableau.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_fetch_into</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>int <parameter><optional>rownumber</optional></parameter></paramdef>
     <paramdef>array <parameter>result_array</parameter></paramdef>
    </funcsynopsis>
    <para>
     Retourne le nombre de colonnes dans le r&eacute;sultat, ou FALSE en cas d'erreur. 
     <parameter>result_array</parameter> doit avoir &eacute;t&eacute; pass&eacute; par r&eacute;f&eacute;rence, mais il 
     peut &ecirc;tre de n'importe quel type, &eacute;tant donn&eacute; qu'il sera converti en tableau. 
     Le tableau contiendra les valeurs des colonnes, ces derni&egrave;res &eacute;tant num&eacute;rot&eacute;es &agrave; 
     partir de 0.
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.odbc-fetch-row">
   <refnamediv>
    <refname>odbc_fetch_row</refname>
    <refpurpose>Lit une ligne de r&eacute;sultat.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_fetch_row</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>int <parameter><optional>row_number</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     Si <function>odbc_fetch_row</function> a r&eacute;ussi, TRUE est retourn&eacute;. 
     Si il n'y avait plus de ligne, ou en cas d'erreur, FALSE est retourn&eacute;.
    </para>
 
    <para>
     <function>odbc_fetch_row</function> lit une ligne dans le r&eacute;sultat identifi&eacute; par 
     <parameter>result_id</parameter> et retourn&eacute; par <function>odbc_do</function> ou 
     <function>odbc_exec</function>.
     Apr&egrave;s <function>odbc_fetch_row</function>, les champs seront accessibles avec la 
     fonction <function>odbc_result</function>.
    </para>

    <para>
      Si <parameter><optional>row_number</optional></parameter> est omis, 
      <parameter>row_number</parameter> va tenter de lire la procha&icirc;ne ligne dans le 
      r&eacute;sultat. Des appels r&eacute;p&eacute;t&eacute;s &agrave; <function>odbc_fetch_row</function> avec et sans 
      param&egrave;tre <parameter>row_number</parameter> peuvent &ecirc;tre combin&eacute;s librement.
    </para> 

    <para>
      Pour passer en revue toutes les lignes d'un r&eacute;sultat plusieurs fois, 
      vous pouvez appeler <function>odbc_fetch_row</function> avec row_number = 1, 
      puis continue &agrave; appeler <function>odbc_fetch_row</function> sans le param&egrave;tre 
      <parameter>row_number</parameter> pour passer en revue tout le r&eacute;sultat. Si un 
      pilote ne supporte pas la lecture des lignes par num&eacute;ro, le param&egrave;tre sera ignor&eacute;.
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.odbc-field-name">
   <refnamediv>
    <refname>odbc_field_name</refname>
    <refpurpose>Lit le nom de la colonne.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>odbc_field_name</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>int <parameter>field_number</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>odbc_field_name</function> lit le nom de la colonne dont l'index est 
      <parameter>field_number</parameter>. La num&eacute;rotation des champs commence &agrave; 1. 
      FALSE est retourn&eacute; en cas d'erreur.
     </para>
   </refsect1>
  </refentry>

<!--
  <refentry id="function.odbc-field-num">
   <refnamediv>
    <refname>odbc_field_num</refname>
    <refpurpose>return column number</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_field_num</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>string <parameter>field_name</parameter></paramdef>
    </funcsynopsis>
   <para>
     <function>odbc_field_num</function> will return the number of the
     column slot that corresponds to the named field in the given ODBC
     result identifier.  Field numbering starts at 1.
     <literal>FALSE</literal> is returned on error.
 
   </refsect1>
  </refentry>
-->

  <refentry id="function.odbc-field-type">
   <refnamediv>
    <refname>odbc_field_type</refname>
    <refpurpose>Type de donn&eacute;es d'un champs.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>odbc_field_type</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>int <parameter>field_number</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>odbc_field_type</function> retourne le type de donn&eacute;es SQL d'un champs, 
      identifi&eacute; par son index. La num&eacute;rotation des champs commence &agrave; 1. 
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-field-len">
   <refnamediv>
    <refname>odbc_field_len</refname>
    <refpurpose>Lit la longueur d'un champs.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_field_len</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>int <parameter>field_number</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>odbc_field_len</function> retourne la longueur du champs r&eacute;f&eacute;rence par 
      le nombre <parameter>field_number</parameter>, dans la connexion ODBC 
      <parameter>result_id</parameter>. Les num&eacute;ros de champs commencent &agrave; 1. 
     </para>
   </refsect1>
  </refentry>


  <refentry id="function.odbc-free-result">
   <refnamediv>
    <refname>odbc_free_result</refname>
    <refpurpose>Lib&egrave;re les ressources associ&eacute;es &agrave; un r&eacute;sultat</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_free_result</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     Retourne toujours TRUE.</para>
    <para>
     <function>odbc_free_result</function> n'est n&eacute;cessaire que si vous craignez 
      d'utiliser trop de m&eacute;moire lors de l'ex&eacute;cution de votre script. Tous les 
      r&eacute;sultats en m&eacute;moire seront lib&eacute;r&eacute;s d&egrave;s la fin du script. Mais, si vous &ecirc;tes s&ucirc;r 
      que vous n'aurez plus besoin d'un r&eacute;sultat jusqu'&agrave; la fin de votre script, vous 
      pouvez appeler <function>odbc_free_result</function>, et la m&eacute;moire associ&eacute;e &agrave; 
      <parameter>result_id</parameter> sera lib&eacute;r&eacute;e.
    </para>
    <para>
     <note><simpara>
      Si auto-validation est d&eacute;sactiv&eacute;e (voir <function>odbc_autocommit</function>) 
      et que vous appelez <function>odbc_free_result</function> avant de valider vos 
      requ&ecirc;tes, toutes les transactions pr&eacute;par&eacute;es seront annul&eacute;es.
      </simpara></note></para>
   </refsect1>
  </refentry>


  <refentry id="function.odbc-longreadlen">
   <refnamediv>
    <refname>odbc_longreadlen</refname>
   <refpurpose>Gestion des colonnes de type LONG.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcdef>int <function>odbc_longreadlen</function></funcdef>
    <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>int <parameter>length</parameter></paramdef>
    </funcsynopsis>
    <para>
      Types ODBC SQL affect&eacute;s: LONG, LONGVARBINARY.
    </para>
    <para>
      Le nombre d'octets retourn&eacute;s &agrave; PHP est contr&ocirc;l&eacute; par le param&egrave;tre 
      <parameter>length</parameter>. Si sa valeur est 0, les colonnes de type Long 
      seront transform&eacute;es en cha&icirc;ne vide.
    </para>
    <note><simpara>
      La gestion des types LONGVARBINARY est aussi affect&eacute;e par 
      <function>odbc_binmode</function>.
    </simpara>
    </note>
   </refsect1>
  </refentry>


  <refentry id="function.odbc-num-fields">
   <refnamediv>
    <refname>odbc_num_fields</refname>
    <refpurpose>Nombre de colonnes dans un r&eacute;sultat</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_num_fields</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>odbc_num_fields</function> retourne le nombre de colonnes dans un 
      r&eacute;sultat ODBC. Cette fonction retournera -1 en cas d'erreur. L'argument est un 
      identifiant de r&eacute;sultat valide, retourn&eacute; par <function>odbc_exec</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-pconnect">
   <refnamediv>
    <refname>odbc_pconnect</refname>
    <refpurpose>Ouvre une connexion persistante &agrave; une source de donn&eacute;es.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_pconnect</function></funcdef>
     <paramdef>string <parameter>dsn</parameter></paramdef>
     <paramdef>string <parameter>user</parameter></paramdef>
     <paramdef>string <parameter>password</parameter></paramdef>
     <paramdef>int <parameter><optional>cursor_type</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
      Retourne un identifiant de connexion ODBC ou 0 (FALSE) en cas d'erreur. 
      Cette fonction se comporte de mani&egrave;re similaire &agrave; <function>odbc_connect</function>,
      mais la connexion ouverte n'est pas vraiment termin&eacute;e lorsque le script est 
      termin&eacute;. Les procha&icirc;nes requ&ecirc;tes qui se feront sur une connexion dont 
      les <parameter>dsn</parameter>, <parameter>user</parameter>, 
      <parameter>password</parameter> sont les m&ecirc;mes que celle-ci (avec 
      <function>odbc_connect</function> et <function>odbc_pconnect</function>) 
      r&eacute;utiliseront la connexion ouverte.
     </para>
    <para>
     <note><simpara>
       Les connexions persistantes n'ont aucun effet si PHP est utilis&eacute; comme CGI.
      </simpara></note></para>
    <para>
      Pour plus de d&eacute;tails sur le param&egrave;tre optionnel <parameter>cursor_type</parameter>,
      voyez  <function>odbc_connect</function>. Pour plus de d&eacute;tails sur les connexions 
      persistantes, reportez vous &agrave; la FAQ PHP.
     </para>
   </refsect1>
  </refentry>

<refentry id="function.odbc-prepare">
 <refnamediv>
  <refname>odbc_prepare</refname>
   <refpurpose>Pr&eacute;pare une commande pour l'ex&eacute;cution </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcdef>int <function>odbc_prepare</function></funcdef>
    <paramdef>int <parameter>connection_id</parameter></paramdef>
     <paramdef>string <parameter>query_string</parameter></paramdef>
    </funcsynopsis>
    <para>
      Pr&eacute;pare une commande pour l'ex&eacute;cution.</para>
    <para>
      Retourne un identifiant de r&eacute;sultat ODBC si la commande SQL a &eacute;t&eacute; pr&eacute;par&eacute;e 
      avec succ&egrave;s. L'identifiant peut &ecirc;tre utilis&eacute; plus tard pour ex&eacute;cuter la commande 
      avec <function>odbc_execute</function>.
   </para>
  </refsect1>
 </refentry>

  <refentry id="function.odbc-num-rows">
   <refnamediv>
    <refname>odbc_num_rows</refname>
    <refpurpose>Nombre de ligne dans un r&eacute;sultat.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_num_rows</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>odbc_num_rows</function> retourne le nombre de lignes dans un r&eacute;sultat 
      ODBC. Cette fonction retournera -1 en cas d'erreur. Pour les commandes INSERT, 
      UPDATE et DELETE, <function>odbc_num_rows</function> retourne le nombre de ligne 
      affect&eacute;es. Pour les commandes SELECT, ce <literal>PEUT</literal> le nombre de 
      lignes disponibles, mais ce n'est pas certains.
    </para>
    <para>
     Note: <function>odbc_num_rows</function> apr&egrave;s un SELECT retournera -1 
      avec de nombreux pilotes.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-result">
   <refnamediv>
    <refname>odbc_result</refname>
    <refpurpose>Lit les donn&eacute;es de r&eacute;sultat.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>odbc_result</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>mixed <parameter>field</parameter></paramdef>
    </funcsynopsis>
    <para>
      Retourne le contenu d'un champs.
    </para>
    <para>
      <parameter>field</parameter> peut &ecirc;tre aussi bien un entier, contenant le num&eacute;ro 
      de colonne du champs, dans le r&eacute;sultat, ou bien une cha&icirc;ne de caract&egrave;re, qui 
      repr&eacute;sente le nom du champs. Par exemple: 
     <informalexample><programlisting>
     $item_3 = odbc_result($Query_ID, 3 );
     $item_val = odbc_result($Query_ID, "val");
      </programlisting></informalexample></para>
    <para>
      Le premier appel &agrave; <function>odbc_result</function> retourne la valeur du troisi&egrave;me 
      champs de la ligne courante, du r&eacute;sultat <parameter>result_id</parameter>. 
      Le deuxi&egrave;me appel &agrave; <function>odbc_result</function> retourne la valeur du 
      troisi&egrave;me champs dont le nom est "val" de la ligne courante, du r&eacute;sultat 
      <parameter>result_id</parameter>. Une erreur survient si le param&egrave;tre de colonne 
      est inf&eacute;rieur &agrave; 1, ou d&eacute;passe le nombre de colonnes du r&eacute;sultat. De la m&ecirc;me 
      mani&egrave;re, une erreur survient si le nom du champs pass&eacute; ne correspond &agrave; aucun 
      champs dans le r&eacute;sultat.
    </para>

    <para>
      Les index de champs commencent &agrave; 1. Pour plus d'informations sur la fa&ccedil;on de lire
      des colonnes de type binaire ou long, reportez vous &agrave; 
      <function>odbc_binmode</function> et <function>odbc_longreadlen</function>.

<!--

If the requested field contains
     binary data or is of datatype LONG, 
longer than 4096 bytes, the contents is not
     returned, instead it is sent directly to the client. Hint: If you
     need to have binary data returned, use the SQL function HEX() to
     retrieve the field in hexadecimal notation.  E.g. "SELECT
     HEX(binary_col) FROM mytable"
--></para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-result-all">
   <refnamediv>
    <refname>odbc_result_all</refname>
    <refpurpose>Affiche le r&eacute;sultat sous la forme d'une table HTML.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_result_all</function></funcdef>
     <paramdef>int <parameter>result_id</parameter></paramdef>
     <paramdef>string <parameter><optional>format</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     Retourne le nombre de lignes dans le r&eacute;sultat, ou FALSE en cas d'erreur.
    </para>

    <para>
      <function>odbc_result_all</function> affiche toutes les lignes d'un r&eacute;sultat. 
      L'affichage se fait au format HTML. Avec l'option <parameter>format</parameter>, 
      il est possible de modifier l'aspect global de la table.
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.odbc-rollback">
   <refnamediv>
    <refname>odbc_rollback</refname>
    <refpurpose>Annule une transaction</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>odbc_rollback</function></funcdef>
     <paramdef>int <parameter>connection_id</parameter></paramdef>
    </funcsynopsis>
    <para>
      Annule toutes les transactions sur la connexion 
      <parameter>connection_id</parameter>. Retourne TRUE en cas de succ&egrave;s, et 
      FALSE en cas d'echec.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.odbc-setoption">
   <refnamediv>
    <refname>odbc_setoption</refname> 
    <refpurpose>
       Modifie les param&egrave;tres ODBC.
    </refpurpose>
   </refnamediv>
    <refsect1>
     <title>Description</title>
     <funcsynopsis>
      <funcdef>int <function>odbc_setoption</function></funcdef>
      <paramdef>int <parameter>id</parameter></paramdef>
      <paramdef>int <parameter>function</parameter></paramdef>
      <paramdef>int <parameter>option</parameter></paramdef>
      <paramdef>int <parameter>param</parameter></paramdef>
     </funcsynopsis>
     <para>
      Cette fonction donne acc&egrave;s aux options ODBC pour une connexion particuli&egrave;re 
      ou un r&eacute;sultat de requ&ecirc;te. Elle a &eacute;t&eacute; &eacute;crite pour aider &agrave; la r&eacute;solution de 
      probl&egrave;me li&eacute;s aux pilotes ODBC r&eacute;calcitrants. Vous aurez s&ucirc;rement &agrave; utiliser 
      cette fonction si vous &ecirc;tes un programmeur ODBC et que vous comprenez les divers 
      effets des options disponibles. Vous aurez aussi besoin d'un bon manuel de 
      r&eacute;f&eacute;rence pour comprendre les options et leur usage. Diff&eacute;rentes versions de 
      pilotes supportent diff&eacute;rentes versions d'options.
     </para>
     <para>
      Etant donn&eacute; que les effets peuvent varier d'un pilote &agrave; l'autre, l'utilisation de 
      cette fonction dans des scripts vou&eacute;s &agrave; &ecirc;tre livr&eacute;s au public est tr&egrave;s fortement 
      d&eacute;conseill&eacute;e. De plus, certaines options ODBC ne sont pas disponibles car elles 
      doivent &ecirc;tre fix&eacute;es avant l'&eacute;tablissement de la connexion. Cependant, si dans 
      un cas bien sp&eacute;cifique, cette fonction vous permet d'utiliser PHP sans que votre 
      patron vous pousse &agrave; utiliser un produit commecial, alors cela n'a pas 
      d'importance.
     </para>
     <para>
      <parameter>Id</parameter> est un identifiant de connexion, ou un identifiant de 
      r&eacute;sultat, pour lequel vous souhaitez modifier des options. 
      Pour SQLSetConnectOption(), c'est un identifiant de connexion. 
      Pour SQLSetStmtOption(), c'est un identifiant de r&eacute;sultat.
     </para>
     <para>
      <parameter>function</parameter> est la fonction ODBC &agrave; utiliser. La valeur doit 
      &ecirc;tre de 1 pour utiliser SQLSetConnectOption() et 2 pour SQLSetStmtOption().
     </para>
     <para>
      Le param&egrave;tre <parameter>option</parameter> est l'option &agrave; modifier.
     </para>
     <para>
      Le param&egrave;tre <parameter>param</parameter> est la valeur de l'option 
      <parameter>option</parameter>.

     <example>
      <title>ODBC Setoption Examples</title>
      <programlisting role="php">
// 1. L'option 102 de SQLSetConnectOption() est SQL_AUTOCOMMIT.
// 1 de SQL_AUTOCOMMIT est SQL_AUTOCOMMIT_ON.
//    Cet exemple a le meme effet que 
//    odbc_autocommit($conn, TRUE);

odbc_setoption ($conn, 1, 102, 1);

// 2. Option 0 de SQLSetStmtOption() est SQL_QUERY_TIMEOUT.
//    Cet exemple fixe le d&eacute;lai d'expiration &agrave; 30 secondes.

$result = odbc_prepare ($conn, $sql);
odbc_setoption ($result, 2, 0, 30);
odbc_execute ($result);
       </programlisting>
     </example></para>
    </refsect1>
   </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
