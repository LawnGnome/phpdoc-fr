<?xml version="1.0" encoding="iso-8859-1"?>
 <reference id="ref.sesam">
  <title>SESAM</title>
  <titleabbrev>SESAM</titleabbrev>
  <partintro>
   <para>
    SESAM/SQL-Server est une base de donn&eacute;es mainframe, d&eacute;velopp&eacute;e
    par Fujitsu Siemens Computers, Allemagne. Elle fonctionne sur les
    serveur mainframe, sous BS2000/OSD.
   </para>
   <para>
    Sur de nombreuses installation BS2000 en production, SESAM/SQL-Server
    a prouv&eacute; ...
    <itemizedlist>
     <listitem>
      <simpara>
       La facilit&eacute; de connectivit&eacute; Java, Web et client/serveur
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       La disponibilit&eacute; de plus de 99.99%,
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       La capacit&eacute; de g&eacute;rer des dizaines et m&ecirc;mes des centaines de milliers
       d'utilisateurs.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    D&eacute;sormais, il existe une interface PHP pour SESAM, qui donne
    l'acc&egrave;s &agrave; cette base aux scripts PHP.
   </para>
   <note>
    <title>Notes de configuration</title>
    <para>
     Il n'y a pas de support pour l'interface SESAM si PHP est un CGI :
     elle ne fonctionne que comme module Apache. En module Apache,
     l'interface <link linkend="ini.sect.sesam">SESAM</link> peut &ecirc;tre
     configur&eacute;e avec les directives Apache.
     <table>
      <title>Directives de configuration SESAM</title>
      <tgroup cols="2">
       <thead>
        <row>
	  	 <entry>Directive</entry>
 		 <entry>Signification</entry>
        </row>
       </thead>
       <tbody>
        <row>
	  	 <entry>
	  	  <literal>php3_sesam_oml</literal>
	  	 </entry>
 		 <entry>
 		  Nom de la librairie BS2000 PLAM contenant le module du pilote
 		  SESAM. Ceci est obligatoire pour utiliser les fonctions SESAM.
	      <para>
	        Exemple:
	        <informalexample>
             <programlisting role="apache">
php3_sesam_oml $.SYSLNK.SESAM-SQL.030
			</programlisting>
           </informalexample>
	      </para>
         </entry>
        </row>
        <row>
 		 <entry>
 		  <literal>php3_sesam_configfile</literal>
 		 </entry>
 		 <entry>
 		  Nom du fichier de configuration de l'application SESAM.
 		  Ceci est obligatoire pour utiliser les fonctions SESAM.
	      <para>
	       Exemple:
	       <informalexample>
            <programlisting role="apache">
php3_sesam_configfile $SESAM.SESAM.CONF.AW
             </programlisting>
            </informalexample>
           Ce fichier contient g&eacute;n&eacute;ralement une configuration comme celle
           ci (voir dans le manuel de r&eacute;f&eacute;rence SESAM):
	       <informalexample>
            <programlisting role="bs2000">
CNF=B
NAM=K
NOTYPE
             </programlisting>
            </informalexample>
           </para>
         </entry>
        </row>
        <row>
 	     <entry>
 	      <literal>php3_sesam_messagecatalog</literal>
 	     </entry>
 	     <entry>
 	      Nom du fichier de messages SESAM. Dans la plus part des cas,
 	      cette directive n'est pas n&eacute;cessaire. Uniquement si le fichier
 	      de messages SESAM n'es pas install&eacute; dans la table de messages
 	      BS2000. Il peut alors &ecirc;tre choisi avec cette directive.
          <para>
	       Exemple:
           <informalexample>
            <programlisting role="apache">
php3_sesam_messagecatalog $.SYSMES.SESAM-SQL.030
            </programlisting>
           </informalexample>
          </para>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     En plus de la configuration de l'interface PHP/SESAM, vous devez
     aussi configurer le serveur SESAM-Database sur votre mainframe,
     comme d'habitude. Cela signifie notamment qu'il faut :
     <itemizedlist>
      <listitem>
       <simpara>
        d&eacute;marrer le gestionnaire de base SESAM (DBH)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        connecter les bases avec le gestionnaire de bases SESAM
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     Pour connecter un script PHP au serveur de bases SESAM, les param&egrave;tres
     <literal>CNF</literal> et <literal>NAM</literal> de la configuration
     SESAM selectionn&eacute;e doivent correspondre &agrave; l'id du gestionnaire de
     base d&eacute;marr&eacute;.
    </para>
    <para>
     Dans le cas des bases de donn&eacute;es distribu&eacute;es, vous devez d&eacute;marrer
     un agent SESAM/SQL-DCN, avec la table de distribution incluant
     le nom de l'h&ocirc;te et de la base de donn&eacute;es.
    </para>
    <para>
     La communication entre PHP (fonctionnant sur le sous-syst&egrave;me POSIX)
     et le gestionnaire de base (fonctionnant hors du sous-syst&egrave;me POSIX)
     est r&eacute;alis&eacute;e par un pilote sp&eacute;cial appel&eacute; SQLSCI et le module de
     connexion SESAM, qui utilise la m&eacute;moire partag&eacute;e. A cause de la m&eacute;moire
     partag&eacute;e, et parce que PHP est une partie statique du serveur web, les
     acc&egrave;s &agrave; la base de donn&eacute;es sont extr&ecirc;mement rapide, car il ne requi&egrave;rent
     pas de connexion distante via ODBC, JDBC ou UTM.
    </para>
    <para>
     Seul un chargeur de stub (stub loader, SESMOD) est compil&eacute; dans PHP.
     Les modules de connexion SESAM proviennent de la librairie OML PLAM.
     Dans la <link linkend="ini.sect.sesam">configuration</link>, vous devez
     indiquer &agrave; PHP le nom de la librairie PALM, et le fichier de lien &agrave;
     utiliser pour la configuration de SESAM (En SESAM V3.0, SQLSCI est
     disponible dans la librairie d'outils SESAM (SESAM Tool Library), qui
     fait partie de la distribution standard).
    </para>
    <para>
     Les commandes SQL imposent que les guillemets simples soient doubl&eacute;s
     pour &ecirc;tre interpr&eacute;t&eacute; lit&eacute;ralement (contrairement &agrave; d'autres bases
     de donn&eacute;es qui utilisent un guillemet simple, pr&eacute;c&eacute;d&eacute; d'un antislash),
     il est recommand&eacute; d'activer les directives PHP
     <link linkend="ini.magic-quotes-gpc"><literal>php3_magic_quotes_gpc</literal></link>
     et
     <link linkend="ini.magic-quotes-sybase"><literal>php3_magic_quotes_sybase</literal></link>.
    </para>
   </note>
   <note>
    <title>Ex&eacute;cutions</title>
    <para>
     A cause des limitations du mod&egrave;le de processus BS2000, le pilote
     peut &ecirc;tre charg&eacute; uniquement apr&egrave;s que le serveur Apache ait g&eacute;n&eacute;r&eacute;
     le processus fils. Cela ralentit l&eacute;g&egrave;rement le traitement de la premi&egrave;re
     requ&ecirc;te, mais toutes les requ&ecirc;tes suivantes seront effecut&eacute;e
     &agrave; pleine vitesse.
    </para>
    <para>
     Lorsque vous d&eacute;finissez explicitement le catalogue de messages
     SESAM, ce catalogue ser charg&eacute; &agrave; chaque fois que le pilote est
     charg&eacute; (i.e., au moment de la requ&ecirc;te initiale). Le syst&egrave;me
     d'exploitation BS2000 affiche un message apr&egrave;s avoir correctement
     charg&eacute; le catalogue de messages, qui sera envoy&eacute; au fichier
     d'erreurs Apache. BS2000 ne permet pas la suppression de ce
     message, qui va remplir progressivement ce fichier.
    </para>
    <para>
     Assurez vous que la librairie SESAM OML PLAM et le fichier de
     configuration SESAM sont accessibles par l'utilisateur qui
     fait tourner le serveur web. Sinon, le serveur ne sera pas
     capable de charger le pilote, ou d'appeler les fonctions
     SESAM. L'acc&egrave;s &agrave; la base doit &ecirc;tre donn&eacute; &agrave; cet utilisateur.
     Sinon, les connexions SESAM &eacute;choueront.
    </para>
   </note>
   <note>
    <title>Types de curseurs</title>
    <para>
     Les curseurs de r&eacute;sultat sont allou&eacute;s pour les requ&ecirc;tes
     SQL de selection, peuvent &ecirc;tre soit "s&eacute;quentiels", soit
     "&agrave; d&eacute;filement" ("scrollable"). Les curseurs &agrave; d&eacute;filement
     sont beaucoup plus gourmands en m&eacute;moire, et le mode
     par d&eacute;faut est s&eacute;quentiel.
    </para>
    <para>
     Lorsque vous utilisez les curseurs &agrave; d&eacute;filement, le curseur
     peut &ecirc;tre positionn&eacute; librement dans le r&eacute;sultat. Pour chaque
     requ&ecirc;te &agrave; d&eacute;filement, il existe des valeurs globales de
     types de d&eacute;filement (initialis&eacute;e &agrave; :<literal>SESAM_SEEK_NEXT</literal>)
     et la position peut &ecirc;tre fix&eacute;e une seule fois par
     <function>sesam_seek_row</function> ou bien &agrave; chaque appel,
     avec la fonction <function>sesam_fetch_row</function>. Lorsque
     vous lisez une ligne avec un curseur &agrave; d&eacute;filement, le traitement
     suivant est effectu&eacute; &agrave; partir des valeurs globales de type
     de d&eacute;filement et de position :
     <table>
      <title>Scrolled Cursor Post-Processing</title>
      <tgroup cols="2">
       <thead>
        <row>
	  	 <entry>Type de d&eacute;filement</entry>
 		 <entry>Action</entry>
        </row>
       </thead>
       <tbody>
        <row>
	 	 <entry>
	 	  <literal>SESAM_SEEK_NEXT</literal>
	 	 </entry>
 	     <entry>aucun</entry>
        </row>
        <row>
 	     <entry>
 	      <literal>SESAM_SEEK_PRIOR</literal>
 	     </entry>
 	     <entry>aucun</entry>
        </row>
        <row>
 	     <entry>
 	      <literal>SESAM_SEEK_FIRST</literal>
 	     </entry>
 	     <entry>
 	      le type de d&eacute;filement devient <literal>SESAM_SEEK_NEXT</literal>
 	     </entry>
        </row>
        <row>
 	     <entry>
 	      <literal>SESAM_SEEK_LAST</literal>
 	     </entry>
 	     <entry>
 	      le type de d&eacute;filement devient <literal>SESAM_SEEK_PRIOR</literal>
 	     </entry>
        </row>
        <row>
    	 <entry>
    	  <literal>SESAM_SEEK_ABSOLUTE</literal>
    	 </entry>
 	     <entry>
 	      incr&eacute;mente automatiquement la valeur interne de position
 	     </entry>
        </row>
        <row>
 	     <entry>
 	      <literal>SESAM_SEEK_RELATIVE</literal>
 	     </entry>
 	     <entry>
 	      aucune. conserve les valeurs globales par d&eacute;faut de
 	      position, ce qui permet, par exemple de lire toutes
 	      les 10 lignes, en arri&egrave;re.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
   </note>
   <note>
    <title>
     Porting note
    </title>
    <para>
     En PHP, il est naturel de commencer les index &agrave; z&eacute;ro (plut&ocirc;t
     que 1), et quelques adaptations ont &eacute;t&eacute; faite pour l'interface
     SESAM : &agrave; chaque fois qu'un tableau index&eacute; commence &agrave; l'index 1
     en SESAM natif, l'interface PHP utilisera l'index 0 comme point de
     d&eacute;part. Par exemple, lorsque vous lisez des donn&eacute;es avec
     <function>sesam_fetch_row</function>, la premi&egrave;re colonne
     sera &agrave; l'index 0, et les suivantes suivront juqu'au nombre
     de colonne (exclus) du r&eacute;sultat ($array["count"]).
     Lors du portage d'applications depuis d'autres langage &eacute;volu&eacute;s vers
     le PHP, soyez attentifs &agrave; ce changement. A chaque fois que
     c'est n&eacute;cessaire, la description d'une fonction PHP SESAM indique
     que l'index du tableau commence &agrave; 0.
    </para>
   </note>
   <note>
    <title>S&eacute;curit&eacute;</title>
    <para>
     Lorsque vous autorisez l'acc&egrave;s &agrave; une base de donn&eacute;es SESAM, le
     serveur web doit avoir le minimum de privil&egrave;ges possible. Pour la
     plus part des bases de donn&eacute;es, seul le droit de lecture doit &ecirc;tre
     fourni. Suivant votre utilisation, ajoutez d'autres droits d'acc&egrave;s
     au fur et &agrave; mesure de vos besoins. Ne donnez jamais le contr&ocirc;le
     total de vos bases &agrave; un utilisateur du web! Limitez l'acc&egrave;s aux
     scripts PHP qui doivent administrer la base en utilisant un
     mot de passe et/ou une s&eacute;curisation SSL.
    </para>
   </note>
   <note>
    <title>Migration d'une autre base SQL</title>
    <para>
     Deux langage SQL ne sont jamais 100% compatibles. Lorsque vous portez
     une application SQL depuis une autre interface vers SESAM,
     certaines adaptation doivent &ecirc;tre fa&icirc;tes. Les diff&eacute;rences suivantes
     sont les plus courantes :
     <itemizedlist>
      <listitem>
       <simpara>
        Types de donn&eacute;es sp&eacute;cifiques
       </simpara>
       <simpara>
        Certains types de donn&eacute;es sp&eacute;cifiques &agrave; une base doivent &ecirc;tre
        remplac&eacute;s par les types de donn&eacute;es standard SQL.
        (i.e., <literal>TEXT</literal> doit &ecirc;tre remplac&eacute; par
        <literal>VARCHAR(taille max)</literal>).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Mots reserv&eacute;s comme identifiants SQL.
       </simpara>
       <simpara>
        En SESAM (comme dans le standard SQL), les mots
        reserv&eacute;s utilis&eacute;s comme identifiants doivent &ecirc;tre entour&eacute;s
        de guillemets doubles (ou renomm&eacute;s).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Taille d'affichage des donn&eacute;es.
       </simpara>
       <simpara>
        Les types de donn&eacute;es SESAM ont une taille de stockage, mais
        par de taille d'affichage. A la place de <literal>int(4)</literal>
        (c'est &agrave; dire : les entiers jusqu'&agrave; '9999'), SESAM requiert simplement
        <literal>int</literal>, pour une taille implicite de 31 bits. De m&ecirc;me,
        les seuls types de date disponible dans SESAM sont :
        <literal>DATE</literal>, <literal>TIME(3)</literal> et
        <literal>TIMESTAMP(3)</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Les types de donn&eacute;es <literal>unsigned</literal> (non sign&eacute;),
        <literal>zerofill</literal> (compl&eacute;t&eacute; avec des z&eacute;ros), ou
        <literal>auto_increment</literal>
       </simpara>
       <simpara>
        <literal>Unsigned</literal> et <literal>zerofill</literal> ne sont pas
        support&eacute;s. <literal>Auto_increment</literal> est automatique
        (utilisez <literal>"INSERT ... VALUES(*, ...)"</literal> au lieu de
        <literal>"... VALUES(0,...)"</literal> pour profiter des auto-increment
        implicites de SESAM.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <command>int ... DEFAULT '0000'</command>
       </simpara>
       <simpara>
        Les variables num&eacute;riques ne doivent pas &ecirc;tre initialis&eacute;es
        avec des constantes de type cha&icirc;ne de caract&egrave;res. Utilisez
        <command>DEFAULT 0</command> &agrave; la place. Pour initialiser une
        date, la cha&icirc;ne doit &ecirc;tre pr&eacute;fix&eacute;e avec le type de date
        adapt&eacute;, tel que :
        <literal> CREATE TABLE exmpl (xtime timestamp(3) DEFAULT TIMESTAMP '1970-01-01 00:00:00.000' NOT &null;); </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <command>$count = xxxx_num_rows();</command>
       </simpara>
       <simpara>
        Certaines bases de donn&eacute;es essaient d'estimer le nombre
        de lignes d'un r&eacute;sultat, m&ecirc;me grossi&egrave;rement approximativement.
        SESAM ne connait pas le nombre de lignes avant de les
        avoir lues lui-m&ecirc;me. Si vous avez vraiment besoin de
        les compter, utilisez la commande
        <command>SELECT COUNT(...) WHERE ...</command>, qui vous dira
        combien de lignes sont disponibles. Une deuxi&egrave;me requ&ecirc;te
        devrait vous retourner tous ces r&eacute;sultats.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <command>DROP TABLE lenom;</command>
       </simpara>
       <simpara>
        Avec SESAM, dans la commande <command>DROP TABLE</command>,
		le nom de la table doit &ecirc;tre suivi du mot cl&eacute;
		<literal>RESTRICT</literal> ou <literal>CASCADE</literal>. Avec
		<literal>RESTRICT</literal>, une erreur est retounr&eacute;e si il y a des
		objets d&eacute;pendant (par exemple, des vues), tandis qu'avec
		<literal>CASCADE</literal>, les objets d&eacute;pendants seront
		supprim&eacute;s en m&ecirc;me temps que la table.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </note>
   <note>
    <title>
     Notes sur l'utilisation de types SQL divers
    </title>
    <para>
     SESAM ne supporte pas le type BLOB. Une future version de
     SESAM devra le faire.
    </para>
    <para>
     L'interface PHP effectue automatiquement les conversions suivantes lors
     de la lecture de lignes de r&eacute;sultats SQL :
     <table>
      <title>Conversion de type SQL vers PHP</title>
      <tgroup cols="2">
       <thead>
        <row>
 	     <entry>Type SQL</entry>
 	     <entry>Type PHP</entry>
        </row>
       </thead>
       <tbody>
        <row>
 	     <entry>SMALLINT, INTEGER</entry>
 	     <entry>"integer" (entier)</entry>
        </row>
        <row>
 	     <entry>NUMERIC, DECIMAL, FLOAT, REAL, DOUBLE</entry>
 	     <entry>"double" (nombre &agrave; virgule flottante)</entry>
        </row>
        <row>
 	     <entry>DATE, TIME, TIMESTAMP</entry>
 	     <entry>"string"(cha&icirc;ne de caract&egrave;res)</entry>
        </row>
        <row>
 	     <entry>VARCHAR, CHARACTER</entry>
 	     <entry>"string"(cha&icirc;ne de caract&egrave;res)</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     Lorsque vous lisez une ligne enti&egrave;re, le r&eacute;sultat est retourn&eacute;
     sous la forme d'un tableau. Les champs vides ne sont pas remplis,
     et vous aurez &agrave; v&eacute;rifier vous m&ecirc;me l'existence des champs (
     (utilisez <function>isset</function> ou <function>empty</function>
     pour tester les champs vides). Cela donne plus de contr&ocirc;le &agrave;
     l'utilisateur sur l'apparence des champs que si les champs
     vides &eacute;taient repr&eacute;sent&eacute; par des cha&icirc;nes vides).
    </para>
   </note>
   <note>
    <title>Support des "champs multiples" de SESAM</title>
    <para>
     La fonctionnalit&eacute; sp&eacute;ciale des "champs multiples" de SESAM permet
     &agrave; une colonne de contenir un tableau de champs. Un tel "champs multiple"
     peut &ecirc;tre cr&eacute;&eacute; comme ceci :
     <example>
      <title>Cr&eacute;ation d'une colonne de champs multiples</title>
      <programlisting role="sesam">
CREATE TABLE multi_field_test
(
     pkey  CHAR(20) PRIMARY KEY,
     multi(3)   CHAR(12)
)
      </programlisting>
     </example>
     et peut &ecirc;tre remplie avec :
     <example>
      <title>Affectation d'une colonne de type "champs multiple"</title>
      <programlisting role="sesam">
INSERT INTO multi_field_test ( pkey, multi(2..3) )
  VALUES ( 'Second', &lt;'first_val','second_val&gt;)
      </programlisting>
     </example>
     Notez que (comme c'est le cas ci-dessus), les sous-champs vides
     initiaux sont ignor&eacute;s, et que le tableau est alors compact&eacute;, ce qui
     fait que l'exemple ci-dessus conduit &agrave; un tableau multi(1..2) au
     lieu de multi(2..3).
    </para>
    <para>
     Lors de la lecture d'une ligne, les "champs multiples" sont mis en colonne.
     Dans l'exemple ci-dessu, "pkey" prend l'index 0, et les trois colonnes
     "multi(1..3)" sont accessibles depuis les index 1 &agrave; 3.
    </para>
   </note>
   <para>
    Pour de plus amples d&eacute;tails sur SESAM, reportez vous &agrave; la
    documentation <ulink url="&url.sesam.en;">SESAM/SQL-Server</ulink> en anglais
    ou <ulink url="&url.sesam.de;">SESAM/SQL-Server</ulink> en allemand,
    disponibles toutes deux en ligne, ou en manuels.
   </para>
  </partintro>
  <refentry id="function.sesam-connect">
   <refnamediv>
    <refname>sesam_connect</refname>
    <refpurpose>Ouvre une connexion SESAM</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>boolean <function>sesam_connect</function></funcdef>
      <paramdef>string <parameter>catalog</parameter></paramdef>
      <paramdef>string <parameter>schema</parameter></paramdef>
      <paramdef>string <parameter>user</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_connect</function> retourne &true; si une connexion
     &agrave; la base SESAM a &eacute;t&eacute; faite, ou &false; en cas d'erreur.
    </para>
    <para>
     <function>sesam_connect</function> &eacute;tablit une connexion au serveur
     SESAM. La connexion est toujours "persistante", en ce sens que
     le pilote sera charg&eacute; par la premi&egrave;re requ&ecirc;te avec la librairie
     SESAM OML PLAM. Les appels suivants r&eacute;utiliseront le pilote charg&eacute;,
     son catalogue <parameter>catalog</parameter>, son sch&eacute;ma
     <parameter>schema</parameter> et son utilisateur <parameter>user</parameter>.
    </para>
    <para>
     Lors de la cr&eacute;ation d'une base de donn&eacute;es, le nom <parameter>catalog</parameter>
     est sp&eacute;cifi&eacute; dans les directives de configuration SESAM avec
     la commande <command>//ADD-SQL-DATABASE-CATALOG-LIST ENTRY-1 = *CATALOG(CATALOG-NAME = catalogname,...)</command>
    </para>
    <para>
     <parameter>schema</parameter> r&eacute;f&eacute;rence le sch&eacute;ma de base voulu
     (voir dans le manuel SESAM).
    </para>
    <para>
     <parameter>user</parameter> sp&eacute;ficie l'un des utilisateurs qui est
     autoris&eacute; &agrave; acc&eacute;der &agrave; la comibinaison <parameter>catalog</parameter> et/ou
     <parameter>schema</parameter>. Notez que <parameter>user</parameter> est
     compl&eacute;tement ind&eacute;pendant de l'utilisateur syst&egrave;me et des protections
     HTTP par mot de passe. Il n'apparait que dans la configuration SESAM.
    </para>
    <para>
     Voir aussi <function>sesam_disconnect</function>.
     <example>
      <title>Connexion &agrave; une base SESAM</title>
      <programlisting role="php">
&lt;?php
if (! sesam_connect ("moncatalogue", "monschema", "toto")
     die("Impossible de se connecter &agrave; SESAM");
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-disconnect">
   <refnamediv>
    <refname>sesam_disconnect</refname>
    <refpurpose>D&eacute;connexion d'une base SESAM</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>boolean <function>sesam_disconnect</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_disconnect</function> retourne toujours &true;.
    </para>
    <para>
     <function>sesam_disconnect</function> ferme le lien logique &agrave;
     la base de donn&eacute;es SESAM (sans r&eacute;ellement d&eacute;connecter et
     d&eacute;monter le pilote).
    </para>
    <para>
     Notez que ceci n'est g&eacute;n&eacute;ralement pas n&eacute;cessaire, car la connexion
     ouverte est automatiquement ferm&eacute;e &agrave; la fin du script. Les
     donn&eacute;es qui ne seront pas valid&eacute;es seront alors annul&eacute;es,
     gr&acirc;ce &agrave; un <function>sesam_rollback</function> implicite.
    </para>
    <para>
     <function>sesam_disconnect</function> ne ferme pas les connexions
     persistantes : elle invalide simplement les catalogues
     <parameter>catalog</parameter>, sch&eacute;ma <parameter>schema</parameter>
     et utilisateur <parameter>user</parameter> courants, de mani&egrave;re &agrave; ce
     que les prochains appels &agrave; des fonctions SESAM &eacute;chouent.
    </para>
    <para>
     Voir aussi : <function>sesam_connect</function>.
     <example>
      <title>D&eacute;connexion d'une base SESAM</title>
      <programlisting role="php">
&lt;?php
if (sesam_connect ("moncatalogue", "monschema", "toto")) {
... quelques requ&ecirc;tes et d'autres trucs ...
sesam_disconnect();
}
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-settransaction">
   <refnamediv>
    <refname>sesam_settransaction</refname>
    <refpurpose>Modifie les param&egrave;tres de transaction SESAM</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>boolean <function>sesam_settransaction</function></funcdef>
      <paramdef>int <parameter>isolation_level</parameter></paramdef>
      <paramdef>int <parameter>read_only</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_settransaction</function> retourne &true; si les
     valeurs sont valides et que a modification a &eacute;t&eacute;
     r&eacute;ussie. &false; sinon.
    </para>
    <para>
     <function>sesam_settransaction</function> remplace les valeurs par
     d&eacute;faut du niveau d'isolation ("isolation level") et de lecture
     seule ("read-only") fix&eacute;e par le fichier de configuration SESAM),
     afin d'optimiser les requ&ecirc;tes ult&eacute;rieures et garantir la coh&eacute;rence
     de la base. Ces valeurs ne sont utilis&eacute;es que pour la prochaine
     transaction.
    </para>
    <para>
     <function>sesam_settransaction</function> ne peut &ecirc;tre appel&eacute;e qu'avant
     le d&eacute;but de la transaction. Elle est inefficace si la transaction a
     d&eacute;j&agrave; commenc&eacute;.
    </para>
    <para>
     Pour simplifier l'utilisation de cette fonction dans les scripts PHP,
     les constantes suivantes ont &eacute;t&eacute; d&eacute;finies en PHP (reportez vous au
     manuel SESAM pour avoir des d&eacute;tails sur leur signification) :
     <table>
      <title>
       Valeurs valides pour le param&egrave;tre <parameter>Isolation_Level</parameter>
      </title>
      <tgroup cols="3">
       <thead>
        <row>
 	     <entry>Valeur</entry>
 	     <entry>Constante</entry>
 	     <entry>Signification</entry>
        </row>
       </thead>
       <tbody>
        <row>
 	     <entry>1</entry>
 	     <entry><literal>SESAM_TXISOL_READ_UNCOMMITTED</literal></entry>
 	     <entry>Lecture sans validation</entry>
        </row>
        <row>
 	     <entry>2</entry>
 	     <entry><literal>SESAM_TXISOL_READ_COMMITTED</literal></entry>
 	     <entry>Lecutre avec validation</entry>
        </row>
        <row>
      	<entry>3</entry>
 	     <entry><literal>SESAM_TXISOL_REPEATABLE_READ</literal></entry>
 	     <entry>Lecture r&eacute;curente</entry>
        </row>
        <row>
      	<entry>4</entry>
 	     <entry><literal>SESAM_TXISOL_SERIALIZABLE</literal></entry>
 	     <entry>S&eacute;rialisable</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     <table>
      <title>
       Valeurs valides pour le param&egrave;tre <parameter>Read_Only</parameter>
      </title>
      <tgroup cols="3">
       <thead>
        <row>
 	     <entry>Valeur</entry>
 	     <entry>Constante</entry>
 	     <entry>Signification</entry>
        </row>
       </thead>
       <tbody>
        <row>
       	 <entry>0</entry>
   	  	 <entry><literal>SESAM_TXREAD_READWRITE</literal></entry>
   	   	 <entry>Lecture/&eacute;criture</entry>
        </row>
        <row>
 	   	 <entry>1</entry>
 	   	 <entry><literal>SESAM_TXREAD_READONLY</literal></entry>
 	   	 <entry>Lecture seule</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     Les valeurs modifi&eacute;es par <function>sesam_settransaction</function>
     remplaceront les valeurs par d&eacute;faut sp&eacute;cifi&eacute;e dans
     <link linkend="ini.sesam-configfile">le fichier de configuration SESAM</link>.
    </para>
    <para>
     <example>
      <title>Modifier les param&egrave;tres de configuration SESAM</title>
      <programlisting role="php">
&lt;?php
sesam_settransaction(SESAM_TXISOL_REPEATABLE_READ,
                     SESAM_TXREAD_READONLY);
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-commit">
   <refnamediv>
    <refname>sesam_commit</refname>
    <refpurpose>Valide la transaction SESAM en cours</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>boolean <function>sesam_commit</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_commit</function> retourne &true; en cas de succ&egrave;s
     et &false; sinon.
    </para>
    <para>
     <function>sesam_commit</function> valide toutes les modifications
     de tables en attente sur la base.
    </para>
    <para>
     Notez qu'il n'y a pas de mode "auto-commit", comme dans d'autres
     bases de donn&eacute;es, car cela peut conduire &agrave; une perte accidentelle
     de donn&eacute;es. Les donn&eacute;es non valides &agrave; la fin d'un script (ou au
     moment de l'appel de <function>sesam_disconnect</function>) seront
     annul&eacute;es par un appel implicite &agrave; <function>sesam_rollback</function>.
    </para>
    <para>
    </para>
    <para>
     Voir aussi : <function>sesam_rollback</function>.
     <example>
      <title>Valider une transaction SESAM</title>
      <programlisting role="php">
&lt;?php
if (sesam_connect ("moncatalogue", "monschema", "toto")) {
  if (!sesam_execimm("INSERT INTO mytable VALUES (*, 'Small Test', &lt;0, 8, 15&gt;)"))
     die("insertion manqu&eacute;e");
  if (!sesam_commit())
     die("insertion r&eacute;ussie");
}
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-rollback">
   <refnamediv>
    <refname>sesam_rollback</refname>
    <refpurpose>Annule une transaction SESAM</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>boolean <function>sesam_rollback</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_rollback</function> retourne &true; en cas de succ&egrave;s
     et &false; en cas d'erreur.
    </para>
    <para>
     <function>sesam_rollback</function> annule toutes les modifications
     en cours sur la base. Les curseurs de r&eacute;sultat et les descripteurs
     de r&eacute;sultats seront affect&eacute;s.
    </para>
    <para>
     A la fin de chaque script, et dans chaque appel &agrave;
     <function>sesam_disconnect</function>, un appel implicite &agrave;
     <function>sesam_rollback</function> est fait, annulant toutes
     les transactions non valid&eacute;es dans la base.
    </para>
    <para>
     Voir aussi : <function>sesam_commit</function>.
     <example>
      <title>Annulation d'une transaction SESAM</title>
      <programlisting role="php">
&lt;?php
if (sesam_connect ("moncatalogue", "monschema", "toto")) {
  if (sesam_execimm("INSERT INTO matable VALUES (*, 'Petit Test', &lt;0, 8, 15&gt;)")
   && sesam_execimm("INSERT INTO autretable VALUES (*, 'Autre Test', 1)"))
     sesam_commit();
  else
     sesam_rollback();
}
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-execimm">
   <refnamediv>
    <refname>sesam_execimm</refname>
    <refpurpose>Ex&eacute;cute imm&eacute;diatement une requ&ecirc;te SQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>sesam_execimm</function></funcdef>
      <paramdef>string <parameter>query</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_execimm</function> retourne un identifiant de
     r&eacute;sultat SESAM en cas de succ&egrave;s, et &false; sinon.
    </para>
    <para>
     <function>sesam_execimm</function> ex&eacute;cute imm&eacute;diatement la requ&ecirc;te
     <parameter>query</parameter> (i.e., une requ&ecirc;te de type
     UPDATE, INSERT ou DELETE qui ne retourne aucun r&eacute;sultat, et
     n'a aucune variables d'entr&eacute;es ou de sorties). Les requ&ecirc;tes
     de types "SELECT" ne peuvent pas &ecirc;tre utilis&eacute;es avec la fonctoin
     <function>sesam_execimm</function>.  <function>sesam_execimm</function>
     mofidie la valeur <parameter>affected_rows</parameter>, pour
     lecture ult&eacute;rieure avec <function>sesam_affected_rows</function>.
    </para>
    <para>
     Notez que <function>sesam_query</function> peut g&eacute;rer les requ&ecirc;tes
     imm&eacute;diates et les requ&ecirc;tes de selection. Utilisez
     <function>sesam_execimm</function> uniquement si vous
     connaissez le type de requ&ecirc;te auparavant. Une tentative de
     requ&ecirc;te de selection avec <function>sesam_execimm</function> retournera
     <literal>$err["sqlstate"] == "42SBW"</literal>.
    </para>
    <para>
     L'identifiant de r&eacute;sultat retourn&eacute; ne peut pas &ecirc;tre utilis&eacute;
     pour lire quoi que ce soit, mais il peut &ecirc;tre pass&eacute; &agrave;
     <function>sesam_affected_rows</function>; il n'est retourn&eacute; que
     pour sym&eacute;trie avec la fonction <function>sesam_query</function>.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
&lt;?php
$stmt = "INSERT INTO matable VALUES('un', 'deux')";
$result = sesam_execimm ($stmt);
$err = sesam_diagnostic();
print("sqlstate = ".$err["sqlstate"]."\n".
      "Nombre de lignes affect&eacute;es = ".$err["rowcount"]." == ".
      sesam_affected_rows($result)."\n");
?&gt;
      </programlisting>
     </informalexample>
     Voir aussi : <function>sesam_query</function> et
     <function>sesam_affected_rows</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-query">
   <refnamediv>
    <refname>sesam_query</refname>
    <refpurpose>Ex&eacute;cute une requ&ecirc;te SESAM</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>sesam_query</function></funcdef>
      <paramdef>string <parameter>query</parameter></paramdef>
      <paramdef>boolean
       <parameter><optional>scrollable</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_query</function> retourne un identifiant de r&eacute;sultat
     SESAM en cas de succ&egrave;s, ou &false; en cas d'erreur.
    </para>
    <para>
     L'identifiant de r&eacute;sultat est utilis&eacute; par d'autres fonctions
     sesam pour lire les valeurs.
    </para>
    <para>
     <function>sesam_query</function> envoie une requ&ecirc;te &agrave; la base
     active. Elle peut ex&eacute;cuter aussi bien une requ&ecirc;te imm&eacute;diate
     (DELETE, UPDATE ou INSERT), ou une requ&ecirc;te de selection.
     Si une requ&ecirc;te imm&eacute;diate est ex&eacute;cut&eacute;e, aucun curseur n'est
     allou&eacute;, et il ne sera pas possible d'utiliser les fonctions
     <function>sesam_fetch_row</function> ou
     <function>sesam_fetch_result</function>. Pour les requ&ecirc;tes de
     selection, un descripteur de r&eacute;sultat et un curseur
     (scrollable ou s&eacute;quentiel, suivant le param&egrave;tre optionnel
     <parameter>scrollable</parameter> pass&eacute;) sear allou&eacute;.
     Si <parameter>scrollable</parameter> est omis, le curseur sera
     s&eacute;quentiel.
    </para>
    <para>
     Lorsque vous utilisez les curseurs &agrave; d&eacute;filement, le curseur
     peut &ecirc;tre positionn&eacute; librement dans le r&eacute;sultat. Pour chaque
     requ&ecirc;te &agrave; d&eacute;filement, il existe des valeurs globales de
     types de d&eacute;filement (initialis&eacute;e &agrave; :<literal>SESAM_SEEK_NEXT</literal>)
     et la position peut &ecirc;tre fix&eacute;e une seule fois par
     <function>sesam_seek_row</function> ou bien &agrave; chaque appel,
     avec la fonction <function>sesam_fetch_row</function>.
    </para>
    <para>
     Pour les requ&ecirc;tes imm&eacute;diates, le nombre de lignes affect&eacute;es est
     sauv&eacute;, et est accessible par la fonction <function>sesam_affected_rows</function>.
    </para>
    <para>
     Voir aussi : <function>sesam_fetch_row</function> et
     <function>sesam_fetch_result</function>.
     <example>
      <title>
       Liste toutes les lignes de table "phone" sous forme de table HTML
      </title>
      <programlisting role="php">
&lt;?php
if (!sesam_connect("phonedb", "demo", "toto"))
  die("cannot connect");
$result = sesam_query("select * from phone");
if (!$result) {
  $err = sesam_diagnostic();
  die($err["errmsg"]);
}
echo "&lt;TABLE BORDER&gt;\n";
// Ajoute l'ent&ecirc;te de titre comme nom de colonne
if ($cols = sesam_field_array($result)) {
  echo " &lt;TR&gt;&lt;TH COLSPAN=".$cols["count"].&gt;Result:&lt;/TH&gt;&lt;/TR&gt;\n";
  echo " &lt;TR&gt;\n";
  for ($col = 0; $col &lt; $cols["count"]; ++$col) {
    $colattr = $cols[$col];
    /* &eacute;tend les ent&ecirc;tes de la table au dessus des champs multiples */
    if ($colattr["count"] &gt; 1) {
      echo "  &lt;TH COLSPAN=".$colattr["count"]."&gt;".$colattr["name"].
           "(1..".$colattr["count"].")&lt;/TH&gt;\n";
      $col += $colattr["count"] - 1;
    }
    else
      echo "  &lt;TH&gt;" . $colattr["name"] . "&lt;/TH&gt;\n";
  }
  echo " &lt;/TR&gt;\n";
}
do {
  // Lit les r&eacute;sultats par bloc de 100
  $ok = sesam_fetch_result($result,100);
  for ($row=0; $row &lt; $ok["rows"]; ++$row) {
    echo " &lt;TR&gt;\n";
    for ($col = 0; $col &lt; $ok["cols"]; ++$col) {
      if (isset($ok[$col][$row]))
        echo "  &lt;TD&gt;" . $ok[$col][$row] . "&lt;/TD&gt;\n";
      else
        echo "  &lt;TD&gt;-empty-&lt;/TD&gt;\n";
    }
    echo " &lt;/TR&gt;\n";
  }
} while ($ok["truncated"]); // tant qu'il a y encore des donn&eacute;es
echo "&lt;/TABLE&gt;\n";
// lib&egrave;re les ressources
sesam_free_result($result);
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-num-fields">
   <refnamediv>
    <refname>sesam_num_fields</refname>
    <refpurpose>Retourne le nombre de colonne dans un r&eacute;sultat</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sesam_num_fields</function></funcdef>
      <paramdef>string <parameter>result_id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Apr&egrave;s avoir appel&eacute; <function>sesam_query</function> avec une requ&ecirc;te
     de selection, <function>sesam_num_fields</function> indique le
     nombre de colonnes du r&eacute;sultat identifi&eacute; par
     <parameter>result_id</parameter>. Retourne &false; en cas d'erreur.
    </para>
    <para>
     Pour les requ&ecirc;tes imm&eacute;diates, la valeur z&eacute;ro est retourn&eacute;e. Les
     champs multiples SESAM compte autant que leur taille respective,
     c'est &agrave; dire qu'un champs multiple de trois colonnes compte
     comme trois colonne.
    </para>
    <para>
     Voir aussi : <function>sesam_query</function> et
     <function>sesam_field_array</function> pour savoir distinguer
     les champs multiples des colonnes standard.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-field-name">
   <refnamediv>
    <refname>sesam_field_name</refname>
    <refpurpose>
     Retourne le nom d'une colonne
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sesam_field_name</function></funcdef>
      <paramdef>string <parameter>result_id</parameter></paramdef>
      <paramdef>int <parameter>index</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_field_name</function> retourne le nom du champs
     <parameter>index</parameter> dans le r&eacute;sultat identifi&eacute; par
     <parameter>result_id</parameter>, ou &false; en cas d'erreur.
    </para>
    <para>
     Pour les requ&ecirc;tes imm&eacute;diates, ou les colonnes dynamiques,
     une cha&icirc;ne vide est retourn&eacute;e.
    </para>
    <note>
     <para>
      Les colonnes sont index&eacute;es &agrave; partir de 0, et non pas 1.
     </para>
    </note>
    <para>
     Voir aussi : <function>sesam_field_array</function>. Cette fonction
     fournit une interface simple aux noms et types de colonnes, et
     permet la detection des champs multiples.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-diagnostic">
   <refnamediv>
    <refname>sesam_diagnostic</refname>
    <refpurpose>Retourne l'&eacute;tat de la derni&egrave;re requ&ecirc;te SESAM</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>sesam_diagnostic</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_diagnostic</function> retourne un tableau associatif avec
     l'&eacute;tat et les codes de la derni&egrave;re requ&ecirc;te SQL.
     Les &eacute;l&eacute;ments du tableau sont :
     <table>
      <title>
       Informations retourn&eacute;es par <function>sesam_diagnostic</function>
      </title>
      <tgroup cols="2">
       <thead>
        <row>
 	     <entry>El&eacute;ment</entry>
 	     <entry>Contenu</entry>
        </row>
       </thead>
       <tbody>
        <row>
 	     <entry>$array["sqlstate"]</entry>
 	     <entry>
 	      code d'erreur &agrave; 5 chiffres (voir le manuel SESAM pour obtenir une
 	      description des valeurs possibles de SQLSTATE)
 	     </entry>
        </row>
        <row>
 	     <entry>$array["rowcount"]</entry>
 	     <entry>
 	      nombre de lignes affect&eacute;es dans la derni&egrave;re requ&ecirc;te imm&eacute;diate
 	      (update/insert/delete) : uniquement apr&egrave;s une requ&ecirc;te imm&eacute;diate.
        </entry>
        </row>
        <row>
 	     <entry>$array["errmsg"]</entry>
 	     <entry>
 	      message d'erreur lisible : uniquement apr&egrave;s une erreur
        </entry>
        </row>
        <row>
 	     <entry>$array["errcol"]</entry>
 	     <entry>
 	      num&eacute;ro de colonne de la derni&egrave;re erreur
 	      (index&eacute;e &agrave; partir de 0, -1 si ind&eacute;finies. uniquement apr&egrave;s une erreur).
        </entry>
        </row>
        <row>
 	     <entry>$array["errlin"]</entry>
 	     <entry>
 	      num&eacute;ro de ligne de la derni&egrave;re erreur
  	      (index&eacute;e &agrave; partir de 0, -1 si ind&eacute;finies. uniquement apr&egrave;s une erreur).
        </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     Dans l'exemple suivant, une erreur de syntaxe (E SEW42AE ILLEGAL CHARACTER)
     est affich&eacute;e avec la requ&ecirc;te SQL, et en d&eacute;signant la position
     de l'erreur :
     <example>
      <title>Afficher une erreur SESAM</title>
      <programlisting role="php">
&lt;?php
// Fonction qui affiche un message d'erreur format&eacute;
// en affichant la position de l'erreur dans le message d'erreur
function PrintReturncode($exec_str)
{
   $err = Sesam_Diagnostic();
   $colspan=4; // 4 colonnes pour : sqlstate, errlin, errcol, rowcount
   if ($err["errlin"] == -1)
     --$colspan;
   if ($err["errcol"] == -1)
     --$colspan;
   if ($err["rowcount"] == 0)
     --$colspan;
   echo "&lt;TABLE BORDER&gt;\n";
   echo "&lt;TR&gt;&lt;TH COLSPAN=".$colspan."&gt;&lt;FONT COLOR=red&gt;ERROR:&lt;/FONT&gt; ".
	  	htmlspecialchars($err["errmsg"])."&lt;/TH&gt;&lt;/TR&gt;\n";
   if ($err["errcol"] &gt;= 0) {
     echo "&lt;TR&gt;&lt;TD COLSPAN=".$colspan."&gt;&lt;PRE&gt;\n";
     $errstmt = $exec_str."\n";
     for ($lin=0; $errstmt != ""; ++$lin) {
       if ($lin != $err["errlin"]) { // $lin is less or greater than errlin
         if (! ($i = strchr($errstmt, "\n")))
           $i = "";
         $line = substr($errstmt, 0, strlen($errstmt)-strlen($i)+1);
         $errstmt = substr($i, 1);
         if ($line != "\n")
           print htmlspecialchars($line);
       }
       else {
         if (! ($i = strchr($errstmt, "\n")))
           $i = "";
         $line = substr($errstmt, 0, strlen($errstmt)-strlen($i)+1);
         $errstmt = substr($i, 1);
         for ($col=0; $col &lt; $err["errcol"]; ++$col)
           echo (substr($line, $col, 1) == "\t") ? "\t" : ".";
         echo "&lt;FONT COLOR=RED&gt;&lt;BLINK&gt;\\&lt;/BLINK&gt;&lt;/FONT&gt;\n";
         print "&lt;FONT COLOR=\"#880000\"&gt;".htmlspecialchars($line)."&lt;/FONT&gt;";
         for ($col=0; $col &lt; $err["errcol"]; ++$col)
           echo (substr($line, $col, 1) == "\t") ? "\t" : ".";
         echo "&lt;FONT COLOR=RED&gt;&lt;BLINK&gt;/&lt;/BLINK&gt;&lt;/FONT&gt;\n";
       }
     }
     echo "&lt;/PRE&gt;&lt;/TD&gt;&lt;/TR&gt;\n";
   }
   echo "&lt;TR&gt;\n";
   echo " &lt;TD&gt;sqlstate=" . $err["sqlstate"] . "&lt;/TD&gt;\n";
   if ($err["errlin"] != -1)
     echo " &lt;TD&gt;errlin=" . $err["errlin"] . "&lt;/TD&gt;\n";
   if ($err["errcol"] != -1)
     echo " &lt;TD&gt;errcol=" . $err["errcol"] . "&lt;/TD&gt;\n";
   if ($err["rowcount"] != 0)
     echo " &lt;TD&gt;rowcount=" . $err["rowcount"] . "&lt;/TD&gt;\n";
   echo "&lt;/TR&gt;\n";
   echo "&lt;/TABLE&gt;\n";
}
if (!sesam_connect("moncatalogue", "phoneno", "toto"))
  die("cannot connect");
$stmt = "SELECT * FROM phone\n".
        "  WHERE@ LASTNAME='KRAEMER'\n".
        "  ORDER BY FIRSTNAME";
if (! ($result = sesam_query($stmt)))
  PrintReturncode($stmt);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     Voir aussi : <function>sesam_errormsg</function> pour un acc&egrave;s
     simplifi&eacute; aux messages d'erreur.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-fetch-result">
   <refnamediv>
    <refname>sesam_fetch_result</refname>
    <refpurpose>Retourne tout ou partie d'un r&eacute;sultat SESAM</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>sesam_fetch_result</function></funcdef>
      <paramdef>string
       <parameter>result_id</parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>max_rows</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_fetch_result</function> retourne un tableau avec
     les lignes du r&eacute;sultat identifi&eacute; par <parameter>result_id</parameter>,
     &eacute;ventuellement limit&eacute; &agrave; un maximum de <parameter>max_rows</parameter>
     Noteaz que les lignes et les colonnes sont index&eacute;es &agrave; partir de 0.
     <table>
      <title>
       R&eacute;sultat de <function>sesam_fetch_result</function>
      </title>
      <tgroup cols="2">
       <thead>
        <row>
 	     <entry>El&eacute;ment du tableau</entry>
 	     <entry>Contents</entry>
        </row>
       </thead>
       <tbody>
        <row>
 	     <entry>int $arr["count"]</entry>
 	     <entry>
 	      Nombre de colonnes dans le r&eacute;sultat (ou z&eacute;ro si c'&eacute;tait
 	      une requ&ecirc;te imm&eacute;diate).
 	     </entry>
        </row>
        <row>
 	     <entry>int $arr["rows"]</entry>
 	     <entry>
 	      Nombre de ligne dans le r&eacute;sultat (entre z&eacute;ro
 	      et <parameter>max_rows</parameter>)
 	     </entry>
        </row>
        <row>
 	     <entry>boolean $arr["truncated"]</entry>
 	     <entry>
 	      &true; si le nombre de ligne &eacute;tait d'au moins
 	      <parameter>max_rows</parameter>, &false; sinon. Notez que
 	      m&ecirc;me si cette valeur est &agrave; &true;, le prochain appel &agrave;
 	      <function>sesam_fetch_result</function> peut retourner
 	      aucune ligne parce qu'il n'y a plus d'entr&eacute;es.
         </entry>
        </row>
        <row>
 	     <entry>mixed $arr[col][row]</entry>
 	     <entry>
 	      les valeurs du r&eacute;sultat &agrave; la ligne <literal>row</literal> et
 	      colonne <literal>col</literal>. Le r&eacute;sultat est un tableau
 	      multidimensionnel. <literal>row</literal> va de 0 &agrave;
 	      <literal>$arr["rows"]-1</literal>, et <literal>col</literal>
 	      de 0 &agrave; <literal>$arr["count"]-1</literal>). Les champs peuvent &ecirc;tre
 	      vides : vous devez v&eacute;rifier leur existence avec la fonction
 	      <function>isset</function>. Le type retourn&eacute; d&eacute;pend du type
 	      SQL d&eacute;clar&eacute; pour cette colonne (voir
 	      <link linkend="ref.sesam">Introduction SESAM</link> pour
 	      conna&icirc;tre les conversions utilis&eacute;es). Les champs multiples
 	      SESAM sont trait&eacute;s comme des s&eacute;quences de colonnes.
        </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     Notez que la quantit&eacute; de m&eacute;moire utilis&eacute;e par des requ&ecirc;tes peut
     se r&eacute;v&eacute;ler gigantesque. Utilisez alors <parameter>max_rows</parameter>
     pour limiter le nombre maximum de lignes retourn&eacute;es, &agrave; moins que
     vous ne soyez absolument s&ucirc;r que votre r&eacute;sultat ne consommera
     pas toute la m&eacute;moire disponible.
    </para>
    <para>
     Voir aussi : <function>sesam_fetch_row</function>, et
     <function>sesam_field_array</function> pour v&eacute;rifier les
     champs multiples. Voyez <function>sesam_query</function> pour une
     exemple complet avec <function>sesam_fetch_result</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-affected-rows">
   <refnamediv>
    <refname>sesam_affected_rows</refname>
    <refpurpose>Lit le nombre de lignes affect&eacute;es par une requ&ecirc;te imm&eacute;diate</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sesam_affected_rows</function></funcdef>
      <paramdef>string
       <parameter>result_id</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>result_id</parameter> est un identifiant valide de r&eacute;sultat,
     retourn&eacute; par <function>sesam_query</function>.
    </para>
    <para>
     <function>sesam_affected_rows</function> retourne le nombre de lignes
     affect&eacute;es par la requ&ecirc;te associ&eacute;e &agrave; <parameter>result_id</parameter>.
    </para>
    <para>
     <function>sesam_affected_rows</function> ne retourne de valeur coh&eacute;rente
     que lorsqu'utilis&eacute;e avec une requ&ecirc;te imm&eacute;diate (INSERT/UPDATE/DELETE),
     car SESAM ne fournit aucune information de nombre de lignes affect&eacute;es
     pour les requ&ecirc;tes de selection.
    </para>
    <para>
     Voir aussi : <function>sesam_query</function> et
               <function>sesam_execimm</function>
    </para>
     <informalexample>
      <programlisting role="php">
&lt;?php
$result = sesam_execimm ("DELETE FROM PHONE WHERE LASTNAME = '".strtoupper($name)."'");
if (! $result) {
    ... error ...
}
print sesam_affected_rows($result)." entries with last name ".$name." deleted.\n";
?&gt;
     </programlisting>
    </informalexample>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-errormsg">
   <refnamediv>
    <refname>sesam_errormsg</refname>
    <refpurpose>retourne le message d'erreur</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>sesam_errormsg</function></funcdef>
      <paramdef>void</paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_errormsg</function> retourne le message d'erreur SESAM
     associ&eacute; &agrave; la derni&egrave;re requ&ecirc;te SQL.
    </para>
    <informalexample>
     <programlisting role="php">
&lt;?php
if (!sesam_execimm($stmt))
  printf("%s&lt;br&gt;\n", sesam_errormsg());
?&gt;
     </programlisting>
    </informalexample>
    <para>
     Voir aussi : <function>sesam_diagnostic</function> pour la liste
     compl&egrave;te des &eacute;tats de requ&ecirc;tes SQL.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-field-array">
   <refnamediv>
    <refname>sesam_field_array</refname>
    <refpurpose>
     Retourne des informations sur une colonne
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>sesam_field_array</function></funcdef>
      <paramdef>string <parameter>result_id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>result_id</parameter> is a valid result id returned by
     <function>sesam_query</function>.
    </para>
    <para>
     <function>sesam_field_array</function> retourne un tableau contenant
     les informations (nom de colonne, type, pr&eacute;cision...) sur une colonne
     dans le r&eacute;sultat associ&eacute; &agrave; <parameter>result_id</parameter>.
    </para>
    <para>
     <table>
      <title>
       Informations retourn&eacute;es par <function>sesam_field_array</function>
      </title>
      <tgroup cols="2">
       <thead>
        <row>
 	     <entry>Index</entry>
 	     <entry>Contenu</entry>
        </row>
       </thead>
       <tbody>
        <row>
 	     <entry>int $arr["count"]</entry>
 	     <entry>
 	      Nombre total de colonnes dans le r&eacute;sultat (ou z&eacute;ro si
 	      la requ&ecirc;te &eacute;tait imm&eacute;diate). Les champs multiples de
 	      SESAM sont lin&eacute;aris&eacute;s, et trait&eacute;s comme autant de colonnes.
	     </entry>
        </row>
        <row>
 	     <entry>string $arr[col]["name"]</entry>
 	     <entry>
 	      Le nom de la colonne <literal>col</literal>,
 	      avec <literal>col</literal> qui vaut entre 0 et
 	      <literal>$arr["count"]-1</literal>. La valeur retourn&eacute;e
 	      peut &ecirc;tre une cha&icirc;ne vide (pour les colonnes dynamiquement
 	      g&eacute;n&eacute;r&eacute;es). Les champs multiples SESAM sont lin&eacute;aris&eacute;s, et
 	      trait&eacute;s comme autant de colonnes, avec le m&ecirc;me nom.
        </entry>
        </row>
        <row>
  	     <entry>string $arr[col]["count"]</entry>
 	     <entry>
 	      L'attribut "count" d&eacute;crit le facteur de r&eacute;p&eacute;tition
 	      quand la colonne a &eacute;t&eacute; d&eacute;clar&eacute;e comme un champs multiple.
 	      G&eacute;n&eacute;ralement, cet attribut est &agrave; 1. La premi&egrave;re colonne
 	      d'un champs multiple contient le nombre de r&eacute;p&eacute;titions,
 	      tandis que les colonnes suivantes ont un facteur
 	      de r&eacute;p&eacute;tition mis &agrave; 1. Ceci peut &ecirc;tre utilis&eacute; pour
 	      detecter les champs multiples. Reportez vous &agrave; l'exemple
 	      de la fonction <function>sesam_query</function> pour avoir
 	      un exemple d'utilisation.
        </entry>
        </row>
        <row>
 	     <entry>string $arr[col]["type"]</entry>
 	     <entry>
 	      Type de variable PHP pour les donn&eacute;es de la colonne
 	      <literal>col</literal>, o&ugrave; <literal>col</literal> vaut de
 	      0 &agrave; <literal>$arr["count"]-1</literal>. La valeur retourn&eacute;e
 	      peut &ecirc;tre l'une de celles-ci :
          <itemizedlist>
           <listitem>
            <simpara>"integer"</simpara>
           </listitem>
           <listitem>
            <simpara>"double"</simpara>
          </listitem>
          <listitem>
           <simpara>"string"</simpara>
          </listitem>
         </itemizedlist>
         , suivant le type de donn&eacute;es SQL. Les champs multiples
         SESAM sont lin&eacute;aris&eacute;s et trait&eacute;s comme autant de colonnes
         ayant le m&ecirc;me type PHP.
        </entry>
        </row>
        <row>
 	     <entry>string $arr[col]["sqltype"]</entry>
 	     <entry>
 	      Type dedonn&eacute;es SQL de la colonne <literal>col</literal>, o&ugrave;
 	      <literal>col</literal> vaut de 0 &agrave; <literal>$arr["count"]-1</literal>.
 	      La valeur retourn&eacute;e peut &ecirc;tre l'une de celle-ci :
          <itemizedlist>
           <listitem>
            <simpara>"CHARACTER"</simpara>
           </listitem>
           <listitem>
            <simpara>"VARCHAR"</simpara>
           </listitem>
           <listitem>
            <simpara>"NUMERIC"</simpara>
           </listitem>
           <listitem>
            <simpara>"DECIMAL"</simpara>
           </listitem>
           <listitem>
            <simpara>"INTEGER"</simpara>
           </listitem>
           <listitem>
            <simpara>"SMALLINT"</simpara>
           </listitem>
           <listitem>
            <simpara>"FLOAT"</simpara>
           </listitem>
           <listitem>
            <simpara>"REAL"</simpara>
           </listitem>
           <listitem>
            <simpara>"DOUBLE"</simpara>
           </listitem>
           <listitem>
            <simpara>"DATE"</simpara>
           </listitem>
           <listitem>
            <simpara>"TIME"</simpara>
           </listitem>
           <listitem>
            <simpara>"TIMESTAMP"</simpara>
           </listitem>
          </itemizedlist>
          , d&eacute;crivant le type de donn&eacute;es SQL. Les champs multiples SESAM
          sont lin&eacute;aris&eacute;s et trait&eacute;s comme autant de colonnes du m&ecirc;me type.
        </entry>
        </row>
        <row>
 	     <entry>string $arr[col]["length"]</entry>
 	     <entry>
 	      La taille de l'attribut, au sens SQL, de la colonne
 	      <literal>col</literal>, o&ugrave; <literal>col</literal> vaut de 0 &agrave;
 	      <literal>$arr["count"]-1</literal>. La longueur est
 	      utilis&eacute;e avec les champs "CHARACTER" et "VARCHAR", pour
 	      sp&eacute;cifier la taille maximale de la colonne. Les champs multiples
         SESAM sont lin&eacute;aris&eacute;s et trait&eacute;s comme autant de colonnes
         ayant la m&ecirc;me taille SQL.
        </entry>
        </row>
        <row>
 	     <entry>string $arr[col]["precision"]</entry>
 	     <entry>
 	      La pr&eacute;cision de la colonne <literal>col</literal>, au sens SQL,
 	      o&ugrave; <literal>col</literal> vaut de 0 &agrave;
 	      <literal>$arr["count"]-1</literal>. La pr&eacute;cision est
 	      utilis&eacute;e avec les champs num&eacute;riques et de date.
 	      Les champs multiples SESAM sont lin&eacute;aris&eacute;s et trait&eacute;s
 	      comme autant de colonnes ayant la m&ecirc;me pr&eacute;cision SQL.
        </entry>
        </row>
        <row>
     	 <entry>string $arr[col]["scale"]</entry>
 	     <entry>
 	      L'&eacute;chelle de la colonne <literal>col</literal>, au sens SQL,
 	      o&ugrave; <literal>col</literal> vaut de 0 &agrave;
 	      <literal>$arr["count"]-1</literal>. L'&eacute;chelle est
 	      utilis&eacute;e avec les champs num&eacute;riques.
 	      Les champs multiples SESAM sont lin&eacute;aris&eacute;s et trait&eacute;s
 	      comme autant de colonnes ayant la m&ecirc;me &eacute;chelle SQL.
        </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     Voir aussi <function>sesam_query</function>, pour un exemple
     d'utilisation de <function>sesam_field_array</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-fetch-row">
   <refnamediv>
    <refname>sesam_fetch_row</refname>
    <refpurpose>Lit une ligne dans un tableau</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>sesam_fetch_row</function></funcdef>
      <paramdef>string <parameter>result_id</parameter></paramdef>
      <paramdef>int
       <parameter><optional>whence</optional></parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>offset</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_fetch_row</function> retourne un tableau qui correspond &agrave;
     la ligne lue dans le r&eacute;sultat <parameter>result_id</parameter>,
     ou &false; s'il n'y a plus de ligne.
    </para>
    <para>
     Le nombre de colonnes du r&eacute;sultat est retourn&eacute; dans un &eacute;l&eacute;men du tableau
     associatif retourn&eacute; $array["count"]. Comme certaines lignes peuvent &ecirc;tre
     vides, la fonction <function>count</function> ne peut &ecirc;tre utilis&eacute;e avec
     le tableau ainsi retourn&eacute; par <function>sesam_fetch_row</function>.
    </para>
    <para>
     <parameter>result_id</parameter> est un identifiant de r&eacute;sultat valide
     retourn&eacute; par <function>sesam_query</function> (avec une requ&ecirc;te de
     selection seulement!).
    </para>
    <para>
     <parameter><optional>whence</optional></parameter> est un parm&egrave;tre
     optionnel lors d'une op&eacute;ration de lecture sur un curseur &agrave;
     d&eacute;filement, qui peut prendre une des valeurs suivantes :
     <table>
      <title>Valeurs valides pour <parameter>whence</parameter></title>
      <tgroup cols="3">
       <thead>
        <row>
 	     <entry>Valeur</entry>
 	     <entry>Constante</entry>
 	     <entry>Signification</entry>
        </row>
       </thead>
       <tbody>
        <row>
 	     <entry>0</entry>
 	     <entry><literal>SESAM_SEEK_NEXT</literal></entry>
 	     <entry>
 	      Lecture s&eacute;quentielle (apr&egrave;s la lecture, la position
 	      est d&eacute;plac&eacute; &agrave; <literal>SESAM_SEEK_NEXT</literal>)
         </entry>
        </row>
        <row>
      	 <entry>1</entry>
 	     <entry><literal>SESAM_SEEK_PRIOR</literal></entry>
 	     <entry>
 	      Lecture s&eacute;quentielle &agrave; rebours (apr&egrave;s la lecture, la position
 	      est d&eacute;plac&eacute; &agrave; <literal>SESAM_SEEK_PRIOR</literal>)
         </entry>
        </row>
        <row>
      	 <entry>2</entry>
      	 <entry><literal>SESAM_SEEK_FIRST</literal></entry>
      	 <entry>
      	  Repositionnement au d&eacute;but (apr&egrave;s la lecture, la position
      	  est d&eacute;plac&eacute;e &agrave; <literal>SESAM_SEEK_NEXT</literal>)
      	 </entry>
        </row>
        <row>
      	 <entry>3</entry>
 	     <entry><literal>SESAM_SEEK_LAST</literal></entry>
 	     <entry>
 	      Repositionnement &agrave; la fin (apr&egrave;s la lecture, la position
      	  est d&eacute;plac&eacute;e &agrave; <literal>SESAM_SEEK_PRIOR</literal>)
      	 </entry>
        </row>
        <row>
 	     <entry>4</entry>
 	     <entry><literal>SESAM_SEEK_ABSOLUTE</literal></entry>
 	     <entry>
 	      Repositionnement absolu &agrave; <parameter>offset</parameter>
 	      (index commencant &agrave; 0. Apr&egrave;s la lecture, la position
 	      est plac&eacute; &agrave; <literal>SESAM_SEEK_ABSOLUTE</literal>,
 	      et le pointeur interne est auto-incr&eacute;ment&eacute;).
 	     </entry>
        </row>
        <row>
  	     <entry>5</entry>
 	     <entry><literal>SESAM_SEEK_RELATIVE</literal></entry>
 	     <entry>
 	      Repositionnement relatif &agrave; <parameter>offset</parameter>,
 	      o&ugrave; <parameter>offset</parameter> peut &ecirc;tre positif ou
 	      n&eacute;gatif
 	     </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     Ce param&egrave;tre n'est valable que pour les curseurs &agrave; d&eacute;filement.
    </para>
    <para>
     Lors de l'utilisation de curseurs &agrave; d&eacute;filement, le curseur peut
     &ecirc;tre librement repositionn&eacute;. Si le param&egrave;tre
     <parameter><optional>whence</optional></parameter> est omis,
     les valeur par d&eacute;faut seront utilis&eacute;es (initialis&eacute;es &agrave; :
     <literal>SESAM_SEEK_NEXT</literal>, et modifi&eacute;e par
     <function>sesam_seek_row</function>). Si
     <parameter><optional>whence</optional></parameter> est
     fourni, sa valeur remplacera les valeurs par d&eacute;faut.
    </para>
    <para>
     <parameter><optional>offset</optional></parameter> est un parm&egrave;tre
     optionnel qui n'est utilis&eacute; (et n&eacute;cessaire) que si
     <parameter><optional>whence</optional></parameter> vaut soit
     <literal>SESAM_SEEK_RELATIVE</literal> ou
     <literal>SESAM_SEEK_ABSOLUTE</literal>. Ce param&egrave;tre n'est valable
     que pour les curseurs &agrave; d&eacute;filement.
    </para>
    <para>
     <function>sesam_fetch_row</function> lit une ligne de donn&eacute;es dans
     le r&eacute;sultat <parameter>result_id</parameter>. La ligne est retourn&eacute;e
     sous forme d'un tableau (index&eacute; de <literal>0</literal> &agrave;
     <literal>$array["count"]-1</literal>).  Les champs peuvent &ecirc;tre
     vides : il faut vous assurer de leur existence en utilisant la
     fonction <function>isset</function>. Le type de la valeur retourn&eacute;e
     d&eacute;pend du type SQL d&eacute;clar&eacute; dans la base (voir
     <link linkend="ref.sesam">introduction SESAM</link> pour conna&icirc;tre les
     conversion utilis&eacute;es). Les champs multiples SESAM sont
     lin&eacute;aris&eacute;s, et trait&eacute;s comme autant de colonnes.
    </para>
    <para>
     Les prochains appels &agrave; <function>sesam_fetch_row</function> liront
     la prochaine ligne (ou la pr&eacute;c&eacute;dente, ou la n-i&egrave;me, suivant le
     type de d&eacute;filement) dans le r&eacute;sultat, ou &false;, s'il n'y a plus de lignes.
    </para>
    <example>
     <title>Exemple avec <function>sesam_fetch_row</function></title>
     <programlisting role="php">
&lt;?php
$result = sesam_query (&quot;SELECT * FROM phone\n&quot;.
                       &quot;  WHERE LASTNAME='&quot;.strtoupper($name).&quot;'\n&quot;.
                       &quot;  ORDER BY FIRSTNAME&quot;, 1);
if (! $result) {
    ... erreur ...
}
// Affiche la table dans l'ordre inverse
print &quot;&lt;TABLE BORDER&gt;\n&quot;;
$row = sesam_fetch_row ($result, SESAM_SEEK_LAST);
while (is_array($row)) {
    print &quot; &lt;TR&gt;\n&quot;;
    for($col = 0; $col &lt; $row[&quot;count&quot;]; ++$col) {
        print &quot;  &lt;TD&gt;&quot;.htmlspecialchars($row[$col]).&quot;&lt;/TD&gt;\n&quot;;
    }
    print &quot; &lt;/TR&gt;\n&quot;;
    // utilise la valeur implicite de SESAM_SEEK_PRIOR
    $row = sesam_fetch_row ($result);
}
print &quot;&lt;/TABLE&gt;\n&quot;;
sesam_free_result ($result);
?&gt;
     </programlisting>
    </example>
    <para>
     Voir aussi : <function>sesam_fetch_array</function> qui retourne un
     tableau associatif, et <function>sesam_fetch_result</function>
     qui retourne plusieurs lignes en m&ecirc;me temps.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-fetch-array">
   <refnamediv>
    <refname>sesam_fetch_array</refname>
    <refpurpose>Lit une ligne dans un tableau associatif</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>sesam_fetch_array</function></funcdef>
      <paramdef>string <parameter>result_id</parameter></paramdef>
      <paramdef>int
       <parameter><optional>whence</optional></parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>offset</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_fetch_array</function> retourne un tableau qui
     correspond &agrave; la ligne lue dans le r&eacute;sultat <parameter>result_id</parameter>,
     ou &false; si il n'y a pas d'autres lignes.
    </para>
    <para>
     <function>sesam_fetch_array</function> est une version alternative de
     <function>sesam_fetch_row</function>.  Au lieu de stocker les
     donn&eacute;es dans un tableau &agrave; indice num&eacute;rique, il enregistre les
     donn&eacute;es dans un tableau associatif, en utilisant les noms
     des champs comme cl&eacute;s.
    </para>
    <para>
     <parameter>result_id</parameter> est un identifiant de r&eacute;sultat valide
     retourn&eacute; par <function>sesam_query</function> (avec une requ&ecirc;te de
     selection seulement!).
    </para>
    <para>
     Pour conna&icirc;tre les valeurs valides des options
     <parameter><optional>whence</optional></parameter> et
     <parameter><optional>offset</optional></parameter>,
     reportez vous &agrave; <function>sesam_fetch_row</function>.
    </para>
    <para>
     <function>sesam_fetch_array</function> lit une ligne de donn&eacute;es dans
     le r&eacute;sultat <parameter>result_id</parameter>. La ligne est
     retourn&eacute;e sous forme d'un tableau associatif. Chaque colonne est
     enregistr&eacute;e avec leur nom comme index. Les noms des colonnes
     sont convertis en minuscules.
    </para>
    <para>
     Les colonnes sans noms (par exemple, les r&eacute;sultats d'op&eacute;rations
     arithm&eacute;tiques) et les champs vides ne sont pas stock&eacute;s dans
     ce tableau. De plus, si deux colonnes ont le m&ecirc;me noms, la derni&egrave;re
     colonne &eacute;crasera la pr&eacute;c&eacute;dente. Dans cette situation, utilisez
     de pr&eacute;f&eacute;rence <function>sesam_fetch_row</function> ou bien, fa&icirc;tes un
     alias de la colonne.
     <informalexample>
      <programlisting role="sesam">
SELECT TBL1.COL AS FOO, TBL2.COL AS BAR FROM TBL1, TBL2</programlisting>
     </informalexample>
    </para>
    <para>
     Une gestion sp&eacute;ciale permet de lire les champs multiples, qui
     sinon, auraient toutes le m&ecirc;me nom. Pour chaque colonne d'un
     champs multiple, le nom d'index est cr&eacute;&eacute; en ajoutant le
     num&eacute;ro de sous-index &agrave; la suite du nom de la colonne. Ces sous
     indices sont num&eacute;rot&eacute;s &agrave; partir de 1.
     <informalexample>
      <programlisting role="sesam">
CREATE TABLE ... ( ... MULTI(3) INT )
      </programlisting>
     </informalexample>
     Les index associatifs utilis&eacute; pour les valeurs individuelles
     du champs multiple sont : <literal>"multi(1)"</literal>,
     <literal>"multi(2)"</literal>, et <literal>"multi(3)"</literal>,
     respectivement.
    </para>
    <para>
     Les prochains appels &agrave; <function>sesam_fetch_array</function> liront la
     prochaine ligne (ou la pr&eacute;c&eacute;dente, ou la n-i&egrave;me, suivant les
     attributs de d&eacute;filement), jusqu'&agrave; ce qu'il n'y ait plus de lignes.
    </para>
    <example>
     <title>Exemple avec <function>sesam_fetch_array</function></title>
     <programlisting role="php">
&lt;?php
$result = sesam_query (&quot;SELECT * FROM phone\n&quot;.
                       &quot;  WHERE LASTNAME='&quot;.strtoupper($name).&quot;'\n&quot;.
                       &quot;  ORDER BY FIRSTNAME&quot;, 1);
if (! $result) {
    ... error ...
}
// Affiche la table
print &quot;&lt;TABLE BORDER&gt;\n&quot;;
while (($row = sesam_fetch_array ($result)) && count($row) &gt; 0) {
    print &quot; &lt;TR&gt;\n&quot;;
    print &quot;  &lt;TD&gt;&quot;.htmlspecialchars($row[&quot;firstname&quot;]).&quot;&lt;/TD&gt;\n&quot;;
    print &quot;  &lt;TD&gt;&quot;.htmlspecialchars($row[&quot;lastname&quot;]).&quot;&lt;/TD&gt;\n&quot;;
    print &quot;  &lt;TD&gt;&quot;.htmlspecialchars($row[&quot;phoneno&quot;]).&quot;&lt;/TD&gt;\n&quot;;
    print &quot; &lt;/TR&gt;\n&quot;;
}
print &quot;&lt;/TABLE&gt;\n&quot;;
sesam_free_result ($result);
?&gt;
     </programlisting>
    </example>
    <para>
     Voir aussi : <function>sesam_fetch_row</function> qui retourne
     un tableau num&eacute;rique.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-seek-row">
   <refnamediv>
    <refname>sesam_seek_row</refname>
    <refpurpose>
     D&eacute;place un curseur &agrave; d&eacute;filement
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>boolean <function>sesam_seek_row</function></funcdef>
      <paramdef>string <parameter>result_id</parameter></paramdef>
      <paramdef>int <parameter>whence</parameter></paramdef>
      <paramdef>int
       <parameter><optional>offset</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>result_id</parameter> est un indentifiant de r&eacute;sultat
     valide (requ&ecirc;te de s&eacute;lection, et curseur &agrave; d&eacute;filement cr&eacute;&eacute;
     avec <function>sesam_query</function>).
    </para>
    <para>
     <parameter>whence</parameter> modifie la valeur globale par d&eacute;faut
     pour le type de d&eacute;filement, sp&eacute;cifie le type de d&eacute;filement &agrave; utiliser
     lors des op&eacute;rations de lectures ult&eacute;rieurs. Les valeurs valides sont
     les suivantes :
     <table>
      <title>Valeurs valides pour <parameter>whence</parameter></title>
      <tgroup cols="3">
       <thead>
        <row>
 	     <entry>Valeur</entry>
 	     <entry>Constante</entry>
 	     <entry>Signification</entry>
        </row>
       </thead>
       <tbody>
        <row>
 	     <entry>0</entry>
 	     <entry><literal>SESAM_SEEK_NEXT</literal></entry>
 	     <entry>
 	      Lecture s&eacute;quentielle (apr&egrave;s la lecture, la position
 	      est d&eacute;plac&eacute; &agrave; <literal>SESAM_SEEK_NEXT</literal>)
        </entry>
        </row>
        <row>
      	 <entry>1</entry>
 	     <entry><literal>SESAM_SEEK_PRIOR</literal></entry>
 	     <entry>
 	      Lecture s&eacute;quentielle &agrave; rebours (apr&egrave;s la lecture, la position
 	      est d&eacute;plac&eacute; &agrave; <literal>SESAM_SEEK_PRIOR</literal>)
        </entry>
        </row>
        <row>
      	 <entry>2</entry>
      	 <entry><literal>SESAM_SEEK_FIRST</literal></entry>
      	 <entry>
      	  Repositionnement au d&eacute;but (apr&egrave;s la lecture, la position
      	  est d&eacute;plac&eacute;e &agrave; <literal>SESAM_SEEK_NEXT</literal>)
      	 </entry>
        </row>
        <row>
      	 <entry>3</entry>
 	     <entry><literal>SESAM_SEEK_LAST</literal></entry>
 	     <entry>
 	      Repositionnement &agrave; la fin (apr&egrave;s la lecture, la position
      	  est d&eacute;plac&eacute;e &agrave; <literal>SESAM_SEEK_PRIOR</literal>)
      	 </entry>
        </row>
        <row>
 	     <entry>4</entry>
 	     <entry><literal>SESAM_SEEK_ABSOLUTE</literal></entry>
 	     <entry>
 	      Repositionnement absolu &agrave; <parameter>offset</parameter>
 	      (index commencant &agrave; 0. Apr&egrave;s la lecture, la position
 	      est plac&eacute; &agrave; <literal>SESAM_SEEK_ABSOLUTE</literal>,
 	      et le pointeur interne est auto-incr&eacute;ment&eacute;).
 	     </entry>
        </row>
        <row>
  	     <entry>5</entry>
 	     <entry><literal>SESAM_SEEK_RELATIVE</literal></entry>
 	     <entry>
 	      Repositionnement relatif &agrave; <parameter>offset</parameter>,
 	      o&ugrave; <parameter>offset</parameter>  peut &ecirc;tre positif ou
 	      n&eacute;gatif
 	     </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <parameter><optional>offset</optional></parameter> est optionnel.
     Il ne sert que lorsque <parameter>whence</parameter> vaut
     soit <literal>SESAM_SEEK_RELATIVE</literal>, soit
     <literal>SESAM_SEEK_ABSOLUTE</literal>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sesam-free-result">
   <refnamediv>
    <refname>sesam_free_result</refname>
    <refpurpose>Lib&egrave;re les ressources</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sesam_free_result</function></funcdef>
      <paramdef>string <parameter>result_id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sesam_free_result</function> lib&egrave;re les ressources
     reserv&eacute;es par la requ&ecirc;te <parameter>result_id</parameter>.
     retourne &false; en cas d'erreur.
    </para>
   </refsect1>
  </refentry>
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
