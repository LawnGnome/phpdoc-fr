 <reference id="ref.sybase">
  <title>Sybase</title>
  <titleabbrev>Sybase</titleabbrev>
  <refentry id="function.sybase-affected-rows">
   <refnamediv>
    <refname>sybase_affected_rows</refname>
    <refpurpose>
     Retourne le nombre de lignes affect&eacute;es par la derni&egrave;re
     requ&ecirc;te.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>int <function>sybase_affected_rows</function></funcdef>
      <paramdef>int
        <parameter><optional>link_identifier</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>sybase_affected_rows</function> retourne le nombre de lignes
      affect&eacute;es par la derni&egrave;re requ&ecirc;te.
    </para>
    <para>
      <function>sybase_affected_rows</function> retourne le nombre de lignes
      affect&eacute;es par la derni&egrave;re requ&ecirc;te INSERT, UPDATE ou
      DELETE sur le serveur associ&eacute; &agrave; l'identifiant de connexion
      <parameter><optional>link_identifier</optional></parameter>. Si le lien
      n'est pas pr&eacute;cis&eacute;, le dernier lien ouvert est utilis&eacute;.
    </para>
    <para>
      Cette commande ne sert &agrave; rien sur les requ&ecirc;te SELECT : uniquement
      sur des requ&ecirc;tes qui modifient les lignes. Pour conna&icirc;tre le
      nombre de lignes retourn&eacute;es par un SELECT, utilisez
      <function>sybase_num_rows</function>.
    <note>
     <para>
       <function>sybase_affected_rows</function> est disponible avec l'interface
       CT vers Sybase, mais pas avec la librairie DB.
     </para>
    </note>
   </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-close">
   <refnamediv>
    <refname>sybase_close</refname>
    <refpurpose>Ferme une connexion Sybase.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>sybase_close</function></funcdef>
      <paramdef>int <parameter>link_identifier</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>sybase_close</function> retourne <literal>TRUE</literal> en cas de succ&egrave;s,
      et <literal>FALSE</literal> en cas d'erreur.
    </para>
    <para>
      <function>sybase_close</function> termine la connexion avec le serveur Sybase
      associ&eacute; &agrave; l'identifiant de connexion
      <parameter>link_identifier</parameter>.
    </para>
    <para>
       Notez qu'il n'est pas utile de fermer les connexions non persistantes,
       car elles seront termin&eacute;es &agrave; la fin du script.
    </para>
    <para>
       <function>sybase_close</function> ne ferme pas les connexions persistantes
       g&eacute;n&eacute;r&eacute;es par <function>sybase_pconnect</function>.
    </para>
    <para>
       Voir aussi : <function>sybase_connect</function> et
                      <function>sybase_pconnect</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-connect">
   <refnamediv>
    <refname>sybase_connect</refname>
    <refpurpose>Ouvre une connexion &agrave; un serveur Sybase.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_connect</function></funcdef>
      <paramdef>string <parameter>servername</parameter></paramdef>
      <paramdef>string <parameter>username</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>sybase_connect</function> retourne un identifiant positif de
      lien Sybase en cas de succ&egrave;s, et <literal>FALSE</literal> en cas d'erreur.
    </para>
    <para>
     <function>sybase_connect</function> &eacute;tablit une connexion &agrave;
     un serveur Sybase. Le nom de serveur <parameter>servername</parameter>
     doit &ecirc;tre valide, d&eacute;fini dans le fichier d'interface.
    </para>
    <para>
     Si un deuxi&egrave;me appel &agrave; <function>sybase_connect</function>
     est fait avec les m&ecirc;mes arguments, une nouvelle connexion ne sera
     pas &eacute;tablie, mais ce sera l'identifiant de la connexion
     d&eacute;j&agrave; ouverte qui sera retourn&eacute;.
    </para>
    <para>
     La connexion sera ferm&eacute;e d&egrave;s la fin du script, &agrave;
     moins qu'elle ne soit pas explicitement ferm&eacute;e avec
     <function>sybase_close</function>.
    </para>
    <para>
     Voir aussi <function>sybase_pconnect</function>
     et <function>sybase_close</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-data-seek">
   <refnamediv>
    <refname>sybase_data_seek</refname>
    <refpurpose>D&eacute;place le pointeur interne de lignes.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>sybase_data_seek</function></funcdef>
      <paramdef>int <parameter>result_identifier</parameter></paramdef>
      <paramdef>int <parameter>row_number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      Retourne <literal>TRUE</literal> en cas de succ&egrave;s, et <literal>FALSE</literal> en cas d'&eacute;chec.
    </para>
    <para>
      <function>sybase_data_seek</function> d&eacute;place le pointeur interne de ligne
      du r&eacute;sutalt Sybase associ&eacute; &agrave; <parameter>result_identifier</parameter> jusqu'&agrave; la
      ligne <parameter>row_number</parameter>. Le prochain appel &agrave;
      <function>sybase_fetch_row</function> sans pr&eacute;ciser la ligne, retournera la ligne
      <parameter>row_number</parameter>.
    </para>
    <para> Voir aussi: <function>sybase_data_seek</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-fetch-array">
   <refnamediv>
    <refname>sybase_fetch_array</refname>
    <refpurpose>Retourne une ligne sous la forme d'un tableau.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>sybase_fetch_array</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
       Retourne un tableau qui contient la ligne demand&eacute;e, ou <literal>FALSE</literal> s'il ne reste
       plus de ligne.
    </para>
    <para>
      <function>sybase_fetch_array</function> est une version &eacute;volu&eacute;e de
      <function>sybase_fetch_row</function>. En plus d'enregistrer les donn&eacute;es dans un
      tableau &agrave; index num&eacute;rique, cette fonction peut aussi les enregistrer dans un
      tableau associatif, en utilisant les nom des champs comme cl&eacute;s.
    </para>
    <para>
      Il est tr&egrave;s important de noter que<function>sybase_fetch_array</function> N'est
      PAS nettement plus lent que <function>sybase_fetch_row</function>, tandis qu'elle
      fourni un confort d'utilisation notable.
    </para>
    <para>
      Pour plus de d&eacute;tails : <function>sybase_fetch_row</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-fetch-field">
   <refnamediv>
    <refname>sybase_fetch_field</refname>
    <refpurpose>Lit les informations d'un champs.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>sybase_fetch_field</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
      <paramdef>int <parameter>
       <optional>field_offset</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      Retourne un objet contenant les informations du champs.
    </para>
    <para>
      <function>sybase_fetch_field</function> sert &agrave; obtenir des
      informations &agrave; propos des champs dans le r&eacute;sultat
      <parameter>result</parameter>. Si l'offset du champs n'est pas
      pr&eacute;cis&eacute;, le champs suivant est trait&eacute;.
    </para>
    <para>
     Les propri&eacute;t&eacute;s des objets sont :
    </para>
     <itemizedlist>
      <listitem><simpara>
		name - column name.  nom de la colonne. Si la colonne est un
		r&eacute;sultat de fonction, le nom de cette fonction devient
		computed#N, o&uacute; #N est un num&eacute;ro de s&eacute;rie.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		column_source - la table d'origine de la colonne.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		max_length - taille maximale de la colonne
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		numeric - 1 si la colonne est de type num&eacute;rique.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        type - type de donn&eacute;es de la colonne
       </simpara>
      </listitem>
     </itemizedlist>
    <para>
     Voir aussi <function>sybase_field_seek</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-fetch-object">
   <refnamediv>
    <refname>sybase_fetch_object</refname>
    <refpurpose>Retourne une ligne sous la forme d'un objet.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_fetch_object</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
       <function>sybase_fetch_object</function> retourne un objet qui
       contient la ligne demand&eacute;e, en cas de succ&egrave;s, et
       <literal>FALSE</literal> en cas d'erreur.
    </para>
    <para>
      <function>sybase_fetch_object</function> est similaire &agrave;
      <function>sybase_fetch_array</function>, avec une diff&eacute;rence :
      c'est un objet qui est retourn&eacute; &agrave; la place d'un tableau.
      Indirectement, cela signifie que vous ne pourrez acc&eacute;der aux
      valeurs que par les propri&eacute;t&eacute;s, et non plus avec des offsets
      (les nombres sont interdits comme nom de propri&eacute;t&eacute;).
    </para>
    <para>
      Au niveau de la vitesse, cette fonction est identique &agrave;
      <function>sybase_fetch_array</function>, et presque aussi rapide que
      <function>sybase_fetch_row</function> (la diff&eacute;rence est insignifiante).
    </para>
    <para>
      Voir aussi: <function>sybase_fetch-array</function> et
      <function>sybase_fetch-row</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-fetch-row">
   <refnamediv>
    <refname>sybase_fetch_row</refname>
    <refpurpose>
      Retourne une ligne sous la forme d'un tableau &eacute;num&eacute;r&eacute;.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>sybase_fetch_row</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
       <function>sybase_fetch_row</function> retourne un tableau qui contient la
       ligne demand&eacute;e, en cas de succ&egrave;s, et <literal>FALSE</literal> en cas d'erreur.
    </para>
    <para>
       <function>sybase_fetch_row</function> lit une ligne dans le r&eacute;sultat
       associ&eacute; &agrave; l'identifiant de r&eacute;sultat
       <parameter>result</parameter>. La ligne retourn&eacute;e est sous la
       forme d'un tableau. Chaque champs est enregistr&eacute; dans un index du
       tableau, les index commencant &agrave; 0.
    </para>
    <para>
       Les prochains appels &agrave; <function>sybase_fetch_row</function>
       retourneront la ligne suivante du r&eacute;sultat, ou <literal>FALSE</literal>, si il
       ne reste plus de lignes.
    </para>
    <para>
     Voir aussi: <function>sybase_fetch_array</function>,
     <function>sybase_fetch_object</function>, <function>sybase_data_seek</function>
     et <function>sybase_result</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-field-seek">
   <refnamediv>
    <refname>sybase_field_seek</refname>
    <refpurpose>Modifie l'index d'un champs.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_field_seek</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
      <paramdef>int <parameter>field_offset</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>sybase_field_seek</function> modifie l'index d'un champs.
      Le prochain appel &agrave; la fonction
      <function>sybase_fetch_field</function> sans pr&eacute;ciser l'index du champs
      retournera ce champs.
    </para>
    <para>
      Voir aussi: <function>sybase_fetch_field</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-free-result">
   <refnamediv>
    <refname>sybase_free_result</refname>
    <refpurpose>Lib&egrave;re un r&eacute;sultat de la m&eacute;moire.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>sybase_free_result</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>sybase_free_result</function> n'est vraiment utile que si vous
       risquez d'utiliser trop de m&eacute;moire durant votre script. La m&eacute;moire occup&eacute;e par
       les r&eacute;sultats est automatiquement lib&eacute;r&eacute;e &agrave; la fin du script. Mais, si vous &ecirc;tes
       s&ucirc;r de ne pas avoir besoin du r&eacute;sultat ult&eacute;rieurement.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-get-last-message">
   <refnamediv>
    <refname>sybase_get_last_message</refname>
    <refpurpose>Retourne le dernier message du serveur</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>string <function>sybase_get_last_message</function></funcdef>
       <paramdef>void <parameter></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sybase_get_last_message</function> retourne le dernier
     message rapport&eacute; par le serveur.
    </para>
   </refsect1>
  </refentry>
<!--
  <refentry id="function.sybase-min-client-severity">
   <refnamediv>
    <refname>sybase_min_client_severity</refname>
    <refpurpose>Fixe la s&eacute;v&eacute;rit&eacute; minimale du client</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
     <funcprototype>
       <funcdef>void <function>sybase_min_client_severity</function></funcdef>
       <paramdef>int <parameter>severity</parameter></paramdef>
     </funcprototype>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sybase_min_client_severity</function> fixe la s&eacute;v&eacute;rit&eacute; minimale
     du client.
    </para>
   </refsect1>
  </refentry>
-->
  <refentry id="function.sybase-min-client-severity">
   <refnamediv>
    <refname>sybase_min_client_severity</refname>
    <refpurpose>Fixe la s&eacute;v&eacute;rit&eacute; minimale du client</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>void <function>sybase_min_client_severity</function></funcdef>
       <paramdef>int <parameter>severity</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sybase_min_client_severity</function> fixe la s&eacute;v&eacute;rit&eacute; minimale
     du client.
     <note>
     <para>
       Cette fonction est disponible avec l'interface CT vers Sybase, mais pas avec la
      librairie DB.
     </para>
     </note>
    </para>
    <para>
      See also: <function>sybase_min_server_severity</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-min-error-severity">
   <refnamediv>
    <refname>sybase_min_error_severity</refname>
    <refpurpose>Fixe la s&eacute;v&eacute;rit&eacute; minimale du client pour les erreurs</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>void <function>sybase_min_error_severity</function></funcdef>
       <paramdef>int <parameter>severity</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sybase_min_error_severity</function> fixe la s&eacute;v&eacute;rit&eacute; minimale
     du client pour les erreurs.
    </para>
    <para>
      Voir aussi: <function>sybase_min_message_severity</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-min-message-severity">
   <refnamediv>
    <refname>sybase_min_message_severity</refname>
    <refpurpose>Fixe la s&eacute;v&eacute;rit&eacute; minimale du client pour les messages</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>void <function>sybase_min_message_severity</function></funcdef>
       <paramdef>int <parameter>severity</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sybase_min_message_severity</function> fixe la s&eacute;v&eacute;rit&eacute; minimale
     du client pour les messages.
    </para>
    <para>
      Voir aussi: <function>sybase_min_error_severity</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-min-server-severity">
   <refnamediv>
    <refname>sybase_min_server_severity</refname>
    <refpurpose>Fixe la s&eacute;v&eacute;rit&eacute; minimale du client pour le serveur</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>void <function>sybase_min_server_severity</function></funcdef>
       <paramdef>int <parameter>severity</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sybase_min_server_severity</function> fixe la s&eacute;v&eacute;rit&eacute; minimale
     du client pour le serveur.
     <note>
     <para>
       Cette fonction est disponible avec l'interface CT vers Sybase, mais pas avec la
      librairie DB.
     </para>
     </note>
    </para>
    <para>
      Voir aussi: <function>sybase_min_client_severity</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-num-fields">
   <refnamediv>
    <refname>sybase_num_fields</refname>
    <refpurpose>Retourne le nombre de champs dans un r&eacute;sultat.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_num_fields</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>sybase_num_fields</function> retourne le nombre de champs dans un
      r&eacute;sultat.
    </para>
    <para>
     Voir aussi:
     <function>sybase_query</function>, <function>sybase_fetch_field</function>
     et <function>sybase_num_rows</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-num-rows">
   <refnamediv>
    <refname>sybase_num_rows</refname>
    <refpurpose>Retourne le nombre de lignes dans un r&eacute;sultat.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_num_rows</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>sybase_num_rows</function> retourne le nombre de lignes dans un
     r&eacute;sultat.
    </para>
    <para>
     Voir aussi:
     <function>sybase_query</function> et <function>sybase_fetch_row</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-pconnect">
   <refnamediv>
    <refname>sybase_pconnect</refname>
    <refpurpose>Ouvre une connexion persistante &agrave; un serveur Sybase.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_pconnect</function></funcdef>
      <paramdef>string <parameter>servername</parameter></paramdef>
      <paramdef>string <parameter>username</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      Retourne un identifiant de connexion positive en cas de succ&egrave;s, et
      <literal>FALSE</literal> en cas d'erreur.
    </para>
    <para>
      <function>sybase_connect</function> se comporte comme
      <function>sybase_connect</function> avec deux diff&eacute;rence majeures :
    </para>
    <para>
       Premi&egrave;rement, lors de la connexion, la fonction va chercher une connexion
       (persistante) d&eacute;j&agrave; ouverte, avec le m&ecirc;me h&ocirc;te, nom de compte et mot de passe. Si
       une telle connexion est trouv&eacute;e, un identifiant de cette connexion est retourn&eacute;,
       plut&ocirc;t que d'en ouvrir une nouvelle.
    </para>
    <para>
       Deuxi&egrave;mement, la connexion au serveur SyBase ne sera pas termin&eacute;e lors de la
       fin du script. Au contraire, le lien sera maintenu pour des connexions
       ult&eacute;rieures. <function>sybase_close</function> ne fermera pas un lien cr&eacute;e par
       <function>sybase_pconnect</function>).
    </para>
    <para>
      Ce type de liens est dit 'persistent'.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-query">
   <refnamediv>
    <refname>sybase_query</refname>
    <refpurpose>Envoie une requ&ecirc;te &agrave; une base Sybase.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>sybase_query</function></funcdef>
      <paramdef>string <parameter>query</parameter></paramdef>
      <paramdef>int <parameter>link_identifier</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
       Retourne un identifiant de r&eacute;sultat positif en cas de succ&egrave;s, et <literal>FALSE</literal> sinon.
    </para>
    <para>
       <function>sybase_query</function> envoie une requ&ecirc;te &agrave; la base de donn&eacute;es
       courante, sur le serveur associ&eacute; &agrave; l'identifiant de connexion. Si l'identifiant
       de connexion n'est pas pr&eacute;cis&eacute;, la fonction essaiera d'utiliser la derni&egrave;re
       connexion ouverte. Si aucune connexion n'a &eacute;t&eacute; ouverte, la fonction va tenter
       d'ouvrir une connexion avec la fonction <function>sybase_connect</function>.
    </para>
    <para>
     Voir aussi:
     <function>sybase_select_db</function> et <function>sybase_connect</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-result">
   <refnamediv>
    <refname>sybase_result</refname>
    <refpurpose>Lit une valeur dans un r&eacute;sultat.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>sybase_result</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
      <paramdef>int <parameter>i</parameter></paramdef>
      <paramdef>mixed <parameter>field</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>sybase_result</function> retourne le contenu d'une cellule. L'argument
       <parameter>field</parameter> peut &ecirc;tre l'index du champs, ou bien le nom du
       champs, ou encore, le nom de la table " point " le nom du champs. Si la colonne
       a &eacute;t&eacute; alias&eacute;e ('SELECT foo AS bar FROM...'), utilisez l'alias &agrave; la place du nom
       de la colonne.
    </para>
    <para>
       Lorsque vous travaillez sur des r&eacute;sultats de grande taille, vous devriez
       utiliser les autres fonctions qui lisent une ligne enti&egrave;re (voir plus loin).
       Etant donn&eacute; que ces fonctions lisent une ligne enti&egrave;re, elles sont BEAUCOUP plus
       rapide que <function>sybase_result</function>. De plus, l'utilisation d'index
       num&eacute;rique est beaucoup plus rapide que les noms des champs, ou les noms des tables
       et des champs.
    </para>
    <para>
     Fonctions de substitution, &agrave; haute efficacit&eacute; :
     <function>sybase_fetch_row</function>, <function>sybase_fetch_array</function>
     et <function>sybase_fetch_object</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sybase-select-db">
   <refnamediv>
    <refname>sybase_select_db</refname>
    <refpurpose>S&eacute;lectionne une base de donn&eacute;es Sybase.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>sybase_select_db</function></funcdef>
      <paramdef>string <parameter>database_name</parameter></paramdef>
      <paramdef>int <parameter>link_identifier</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
       Retourne <literal>TRUE</literal> en cas de succ&egrave;s, et <literal>FALSE</literal> en cas d'erreur.
    </para>
    <para>
       <function>sybase_select_db</function> change la base de donn&eacute;es courante et
       active sur le serveur associ&eacute; avec l'identifiant de connexion
       <parameter>link_identifier</parameter>. Si <parameter>link_identifier</parameter>
       n'est pas pr&eacute;cis&eacute;, le dernier lien ouvert est utilis&eacute;. Si aucun lien n'a &eacute;t&eacute;
       ouvert, la fonction va tenter d'en &eacute;tablir un en appelant
       <function>sybase_connect</function>.
    </para>
    <para>
       Tous les prochains appels &agrave; <function>sybase_query</function> seront faites
       sur la bas de donn&eacute;es courante et active.
    </para>
    <para> Voir aussi : <function>sybase_connect</function>, <function>sybase_pconnect</function>
    et <function>sybase_query</function>.
    </para>
   </refsect1>
  </refentry>
</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
