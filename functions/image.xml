 <reference id="ref.image">
  <title>Images</title>
  <titleabbrev>Graphisme</titleabbrev>
  <partintro>
   <simpara>
     Vous pouvez utiliser les fonctions PHP pour obtenir les
     tailles des images aux formats <acronym>JPEG</acronym>,
     <acronym>GIF</acronym>, <acronym>PNG</acronym> et
     <acronym>SWF</acronym>, et si vous avez la librairie GD (disponible
     &agrave; <ulink url="&url.gd;">&url.gd;</ulink>) vous pourrez aussi
     cr&eacute;er et manipuler ces images.
   </simpara>
   <simpara>
    Les formats des images que vous pourrez manipuler d&eacute;pend de la
    version de GD que vous installereez, et de toute autre librairie
    dont GD a besoin pour acc&eacute;der &agrave; ces images.  Les versions
    ant&eacute;rieures &agrave; la version 1.6 supportent le
    <acronym>GIF</acronym>, mais pas le <acronym>PNG</acronym>.
    Pour les versions plus r&eacute;centes, c'est le contraire.
   </simpara>
   <simpara>
    Pour acc&eacute;der aux images en <acronym>JPEG</acronym>, vous devez 
    installer la librairie jpeg-6b (disponible &agrave; 
    <ulink url="&url.jpeg;">&url.jpeg;</ulink>), puis, recompiler GD 
    pour qu'elle utilise jpeg-6b. Vous devrez aussi compiler PHP avec
    <option role="configure">--with-jpeg-dir=/path/to/jpeg-6b</option>.
   </simpara>
   <simpara>
    Pour ajouter le support des polices Type 1, vous devez installer t1lib
    (disponible &agrave; <ulink url="&url.t1lib;">&url.t1lib;</ulink>), puis ajouter
    l'option <option role="configure">--with-t1lib[=dir]</option>.
   </simpara>
  </partintro>
  <refentry id="function.getimagesize">
   <refnamediv>
    <refname>GetImageSize</refname>
    <refpurpose>Retourne la taille d'une image GIF, JPG ou PNG.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>getimagesize</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>array <parameter><optional>imageinfo</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>getimagesize</function> va d&eacute;terminer la taille des images
     de type <acronym>GIF</acronym>, <acronym>JPG</acronym>,
     <acronym>PNG</acronym> ou <acronym>SWF</acronym> et en retourner
     les dimensions avec le type d'image, et une cha&icirc;ne type
     &quot;height/width&quot;, &agrave; placer dans une
     balise <acronym>HTML</acronym> ou <sgmltag>IMG</sgmltag> normale.
    </para>
    <para>
     <function>getimagesize</function> retourne un tableau de 4 &eacute;l&eacute;ments.
     L'index 0 contient la largeur. L'index 1 contient la longueur. L'index 2
     contient le type de l'image : 1 = <acronym>GIF</acronym>, 2 = JPG, 3 = PNG. L'index 3 contient la
     cha&icirc;ne &agrave; placer dans les balises HTML :
     &quot;height=xxx width=xxx&quot;.
     <example>
      <title><function>getimagesize</function></title>
      <programlisting role="php">
&lt;?php
$size = GetImageSize("img/flag.jpg");
?&gt;
&lt;IMG SRC="img/flag.jpg"
&lt;?php
echo $size[3];
?&gt;>
      </programlisting>
     </example>
    </para>
     <para>
     <example>
      <title><function>getimagesize</function> avec une URL</title>
      <programlisting role="php">
&lt;?php
$size = getimagesize("http://www.php.net/gifs/logo.gif");
?gt;
      </programlisting>
     </example>
    </para>
    <para>
     Le param&egrave;tre optionnel <parameter>imageinfo</parameter> permet
     d'extraire des informations suppl&eacute;mentaires du fichier image.
     Actuellement, cette option va retourner diff&eacute;rents marqueurs
     <acronym>JPG</acronym> APP dans un tableau associatif. Certains programmes
     utilisent ces marqueur APP pour pr&eacute;ciser les informations dans
     les balises HTML. Un marqueur commun est le marqueur APP13, d&eacute;crit
     &agrave; <ulink url="&url.iptc;">&url.iptc;</ulink>. Vous pouvez utiliser
     la fonction <function>iptcparse</function> pour analyser ce marqueur, et
     obtenir des informations intelligibles.
     <example>
      <title><function>getimagesize</function> qui retourne IPTC</title>
	   <programlisting role="php">
&lt;?php
    $size = getimagesize("testimg.jpg",&amp;$info);
    if (isset($info["APP13"])) {
        $iptc = iptcparse($info["APP13"]);
        var_dump($iptc);
    }
?&gt;
        </programlisting>
       </example>
     <note>
      <simpara>
        <function>getimagesize</function> ne requiert par la biblioth&egrave;que GD.
      </simpara>
     </note>
     <note>
      <simpara>
        Le support URL a &eacute;t&eacute; ajout&eacute; en PHP 4.0.5.
       </simpara>
      </note>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagearc">
   <refnamediv>
    <refname>ImageArc</refname>
    <refpurpose>Dessine une ellipse partielle.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagearc</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>cx</parameter></paramdef>
      <paramdef>int <parameter>cy</parameter></paramdef>
      <paramdef>int <parameter>w</parameter></paramdef>
      <paramdef>int <parameter>h</parameter></paramdef>
      <paramdef>int <parameter>s</parameter></paramdef>
      <paramdef>int <parameter>e</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imagearc</function> dessine une ellipse partielle, centr&eacute;e sur
      <parameter>cx</parameter>, <parameter>cy</parameter> (le coin en haut &agrave;
      gauche est l'origine (0,0)) dans l'image r&eacute;f&eacute;renc&eacute;e par
      <parameter>im</parameter>. <parameter>w</parameter> et
      <parameter>h</parameter> sp&eacute;cifient la largeur et la hauteur de l'ellipse,
      tandis que le d&eacute;but et la fin de l'arc sont donn&eacute;s en
      degr&eacute;s, par les arguments <parameter>s</parameter> et
      <parameter>e</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagechar">
   <refnamediv>
    <refname>ImageChar</refname>
    <refpurpose>Dessine un caract&egrave;re horizontalement.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagechar</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>string <parameter>c</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imagechar</function> dessine le premier caract&egrave;re de la cha&icirc;ne
      <parameter>c</parameter> dans l'image <parameter>id</parameter> avec le coin
      sup&eacute;rieur gauche plac&eacute; &agrave; la position <parameter>x</parameter>,<parameter>y</parameter>
      (le coin en haut &agrave; gauche est l'origine (0,0)) avec la couleur
      <parameter>col</parameter>. Si la police est 1, 2, 3, 4 ou 5, une police int&eacute;gr&eacute;e
      sera utilis&eacute;e (plus le chiffre est grand, plus grande est la police).0
    </para>
    <para>
     Voir aussi <function>imageloadfont</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecharup">
   <refnamediv>
    <refname>ImageCharUp</refname>
    <refpurpose>Dessine un caract&egrave;re verticalement.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecharup</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>string <parameter>c</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imagecharup</function> dessine le premier caract&egrave;re de la cha&icirc;ne
      <parameter>c</parameter> dans l'image <parameter>id</parameter> avec le coin
      sup&eacute;rieur gauche plac&eacute; &agrave; la position <parameter>x</parameter>,<parameter>y</parameter>
      (le coin en haut &agrave; gauche est l'origine (0,0)), avec la couleur
      <parameter>col</parameter>.
      Si la police est 1, 2, 3, 4 ou 5, une police int&eacute;gr&eacute;e sera utilis&eacute;e (plus le
      chiffre est grand, plus grande est la police).
    </para>
    <para>
      Voir aussi <function>imageloadfont</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecolorallocate">
   <refnamediv>
    <refname>ImageColorAllocate</refname>
    <refpurpose>Alloue une couleur pour une image.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolorallocate</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>red</parameter></paramdef>
      <paramdef>int <parameter>green</parameter></paramdef>
      <paramdef>int <parameter>blue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecolorallocate</function> retourne un identifiant de couleur,
     repr&eacute;sentant la couleur compos&eacute;e avec les couleurs RGB
     (<parameter>red</parameter>, <parameter>green</parameter>,
     <parameter>blue</parameter>). L'argument <parameter>im</parameter> est
     le r&eacute;sultat de la fonction <function>imagecreate</function>.
     <function>imagecolorallocate</function>
     doit &ecirc;tre appel&eacute;e pour cr&eacute;er chaque couleur
     qui sera repr&eacute;sent&eacute;e par <parameter>im</parameter>.
     <informalexample>
      <programlisting role="php">
&lt;?php
$white = imagecolorallocate($im, 255,255,255);
$black = imagecolorallocate($im, 0,0,0);
?&gt;
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecolordeallocate">
   <refnamediv>
    <refname>ImageColorDeAllocate</refname>
    <refpurpose>
     D&eacute;sallouune une couleur pour une image
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>int
       <function>imagecolordeallocate</function>
      </funcdef>
       <paramdef>int
       <parameter>im</parameter>
      </paramdef>
       <paramdef>int
       <parameter>index</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecolordeallocate</function> d&eacute;salloue une couleur
     pr&eacute;c&eacute;demment allou&eacute;e avec la fonction <function>imagecolorallocate</function>.
     <informalexample>
      <programlisting role="php">
&lt;?php
$white = imagecolorallocate($im, 255, 255, 255);
imagecolordeallocate($im, $white);
?&gt;
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecolorat">
   <refnamediv>
    <refname>ImageColorAt</refname>
    <refpurpose>Retourne l'index de la couleur d'un pixel donn&eacute;.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolorat</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecolorat</function> retourne l'index de la couleur du pixel situ&eacute;
     aux coordonn&eacute;es (<parameter>x</parameter>, <parameter>y</parameter>), dans l'image
     <parameter>im</parameter>.
    </para>
    <para>
      Voir aussi <function>imagecolorset</function> et <function>imagecolorsforindex</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecolorclosest">
   <refnamediv>
    <refname>ImageColorClosest</refname>
    <refpurpose>Retourne l'index de la couleur la plus proche d'une couleur donn&eacute;e.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolorclosest</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>red</parameter></paramdef>
      <paramdef>int <parameter>green</parameter></paramdef>
      <paramdef>int <parameter>blue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imagecolorclosest</function> retourne l'index de la couleur de la
      palette qui est la plus proche de la valeur RGB pass&eacute;e.
    </para>
    <para>
      La "distance" entre la couleur souhait&eacute;e et les couleurs de la palette est calcul&eacute;e
      en consid&eacute;rant l'espace RGB comme un espace &agrave; 3 dimensions.
    </para>
    <para>
      Voir aussi <function>imagecolorexact</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecolorexact">
   <refnamediv>
    <refname>ImageColorExact</refname>
    <refpurpose>Retourne l'index de la couleur donn&eacute;e.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolorexact</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>red</parameter></paramdef>
      <paramdef>int <parameter>green</parameter></paramdef>
      <paramdef>int <parameter>blue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imagecolorexact</function> retourne l'index de la couleur sp&eacute;cifi&eacute;e
      dans la palette de l'image <parameter>im</parameter>.
    </para>
    <para>
      Si la couleur n'existe pas dans cette palettre, retourne -1.
    </para>
    <para>
      Voir aussi <function>imagecolorclosest</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecolorresolve">
   <refnamediv>
    <refname>ImageColorResolve</refname>
    <refpurpose>
      Retourne l'index de la couleur donn&eacute;e, ou la plus proche possible.
   </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolorresolve</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>red</parameter></paramdef>
      <paramdef>int <parameter>green</parameter></paramdef>
      <paramdef>int <parameter>blue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecolorresolve</function> retourne un index de couleur
     &agrave; tous les coups. Soit il arrive &agrave; trouver la couleur
     demand&eacute;e dans la palette, soit il recherche la couleur la plus
     proche.
    </para>
    <para>
       Voir aussi <function>imagecolorclosest</function>.
    </para>
   </refsect1>
  </refentry>
<refentry id="function.imagegammacorrect">
   <refnamediv>
    <refname>ImageGammaCorrect</refname>
    <refpurpose>
	Applique une correction gamma &agrave; l'image
    </refpurpose>
    </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>int
       <function>imagegammacorrect</function>
      </funcdef>
       <paramdef>int
       <parameter>im</parameter>
      </paramdef>
       <paramdef>double
       <parameter>inputgamma</parameter>
      </paramdef>
       <paramdef>double
       <parameter>outputgamma</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagegammacorrect</function> applique une correction gamma
     au flot d'image GD <parameter>im</parameter>. Le facteur d'entr&eacute;e est
     <parameter>inputgamma</parameter>, et le facteur de sortie est
     <parameter>outputgamma</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecolorset">
   <refnamediv>
    <refname>ImageColorSet</refname>
    <refpurpose>Change la couleur dans une palette &agrave; l'index donn&eacute;.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>imagecolorset</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>index</parameter></paramdef>
      <paramdef>int <parameter>red</parameter></paramdef>
      <paramdef>int <parameter>green</parameter></paramdef>
      <paramdef>int <parameter>blue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecolorset</function> permet d'attribuer &agrave; un index
     d'une palette une couleur sp&eacute;cifique. C'est une fonction tr&egrave;s
     pratique pour effectuer du remplissage de couleur sans le faire
     r&eacute;ellement.
    </para>
    <para>
      Voir aussi <function>imagecolorat</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecolorsforindex">
   <refnamediv>
    <refname>ImageColorsForIndex</refname>
    <refpurpose>Retourne la couleur associ&eacute;e &agrave; un index.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imagecolorsforindex</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>index</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecolorsforindex</function> retourne un tableau associatif
     avec les couleur rouge (red) , vert (green), bleu (blue) qui contiennent
     les valeurs de la couleur correspondante.
    </para>
    <para>
      Voir aussi <function>imagecolorat</function> et 
      <function>imagecolorexact</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecolorstotal">
   <refnamediv>
    <refname>ImageColorsTotal</refname>
    <refpurpose>Calcule le nombre de couleur d'une palette.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolorstotal</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecolorstotal</function> retourne le nombre de couleurs 
     de la palette.
    </para>
    <para>
     Voir aussi <function>imagecolorat</function> et 
     <function>imagecolorsforindex</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecolortransparent">
   <refnamediv>
    <refname>ImageColorTransparent</refname>
    <refpurpose>D&eacute;finit la couleur transparente.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolortransparent</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter><optional>col</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecolortransparent</function> permet de choisir la couleur
     transparente d'une image, et de lui donner la valeur de col.
     <parameter>im</parameter> est un identifiant d'image, retourn&eacute;
     par <function>imagecreate</function> et
     <parameter><optional>col</optional></parameter> est un identifiant de couleur
     retourn&eacute; par <function>imagecolorallocate</function>.
    </para>
    <para>
      L'identifiant de la nouvelle (ou courante) couleur transparante est
      retourn&eacute;.
    </para>
   </refsect1>
  </refentry>
<refentry id="function.imagecopy">
   <refnamediv>
    <refname>ImageCopy</refname>
    <refpurpose>
     Copie une partie d'une image
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>int
       <function>imagecopy</function>
      </funcdef>
       <paramdef>int
       <parameter>dst_im</parameter>
      </paramdef>
       <paramdef>int
       <parameter>src_im</parameter>
      </paramdef>
       <paramdef>int
       <parameter>dst_x</parameter>
      </paramdef>
       <paramdef>int
       <parameter>dst_y</parameter>
      </paramdef>
       <paramdef>int
       <parameter>src_x</parameter>
      </paramdef>
       <paramdef>int
       <parameter>src_y</parameter>
      </paramdef>
       <paramdef>int
       <parameter>src_w</parameter>
      </paramdef>
       <paramdef>int
       <parameter>src_h</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Copie une partie de l'image <parameter>src_im</parameter> sur l'image de
     destination <parameter>dst_im</parameter>, en commencant aux coordonn&eacute;es
     <parameter>src_x</parameter>, <parameter>src_y </parameter> et sur la largeur
     de <parameter>src_w</parameter> et la hauteur de <parameter>src_h</parameter>.
     La portion ainsi d&eacute;finie sera copi&eacute;e et plac&eacute;e aux
     coordonn&eacute;es <parameter>dst_x</parameter> et <parameter>dst_y</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecopyresized">
   <refnamediv>
    <refname>ImageCopyResized</refname>
    <refpurpose>Copie et redimensionne une partie d'une image.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecopyresized</function></funcdef>
      <paramdef>int <parameter>dst_im</parameter></paramdef>
      <paramdef>int <parameter>src_im</parameter></paramdef>
      <paramdef>int <parameter>dstX</parameter></paramdef>
      <paramdef>int <parameter>dstY</parameter></paramdef>
      <paramdef>int <parameter>srcX</parameter></paramdef>
      <paramdef>int <parameter>srcY</parameter></paramdef>
      <paramdef>int <parameter>dstW</parameter></paramdef>
      <paramdef>int <parameter>dstH</parameter></paramdef>
      <paramdef>int <parameter>srcW</parameter></paramdef>
      <paramdef>int <parameter>srcH</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecopyresized</function> copie une partie rectangulaire d'une image
     dans une autre image de destination. <parameter>dst_im</parameter> est l'image
     de destination, <parameter>src_im</parameter> est l'image source. Si les dimensions
     de la source et de la destination ne sont pas &eacute;gales, un
     &eacute;tirement ad&eacute;quat est effectu&eacute; pour faire correspondre
     les deux. Les coordonn&eacute;es fournies se rep&egrave;re par rapport
     au coin sup&eacute;rieur gauche. Cete fonction peut &ecirc;tre
     utilis&eacute;e pour recopier des r&eacute;gions &agrave; l'int&eacute;rieur
     d'une m&ecirc;me image, si <parameter>dst_im</parameter> et
     <parameter>src_im</parameter> sont identiques : mais si les
     r&eacute;gions se chevauchent, le r&eacute;sultat risque d'&ecirc;tre
     incoh&eacute;rent.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecreate">
   <refnamediv>
    <refname>ImageCreate</refname>
    <refpurpose>Cr&eacute;e une nouvelle image.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecreate</function></funcdef>
      <paramdef>int <parameter>x_size</parameter></paramdef>
      <paramdef>int <parameter>y_size</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imagecreate</function> retourne un identifiant d'image
      repr&eacute;sentant une image vide, de largeur <parameter>x_size</parameter>
      et longueur <parameter>y_size</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecreatefromgif">
   <refnamediv>
    <refname>imagecreatefromgif</refname>
    <refpurpose>
      Cr&eacute;e une nouvelle image &agrave; partir d'un fichier ou d'une URL.
   </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecreatefromgif</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecreatefromgif</function> retourne un identifiant d'image qui
     repr&eacute;sente l'image obtenue &agrave; partir du fichier dont le nom est
     donn&eacute;.
    </para>
    <para>
     <function>imagecreatefromgif</function> retourne une cha&icirc;ne vide en
     cas d'&eacute;chec. Il va aussi retourner une erreur qui va afficher un
     lien bris&eacute; dans un navigateur. Pour simplifier le d&eacute;buggage,
     utilisez le code suivant, qui retourne une erreur <acronym>GIF</acronym> :
    <example>
     <title>
       Exemple de gestion des erreurs durant cr&eacute;ation d'image
       (gr&acirc;cieusement offert par vic@zymsys.com )
     </title>
     <programlisting role="php">
&lt;?php
function loadgif($imgname)
{
  $im = @imagecreatefromgif($imgname); /* Tentative d'ouverture */
  if ($im == "") { /* &eacute;chec ? */
    $im = ImageCreate(150,30); /* Cr&eacute;e une image vide */
    $bgc = ImageColorAllocate($im,255,255,255);
    $tc  = ImageColorAllocate($im,0,0,0);
    imagefilledrectangle($im,0,0,150,30,$bgc);
    imagestring($im,1,5,5,"Erreur lors du chargement du fichier $imgname",$tc);
    /* Affiche un message d'erreur */
  }
  return $im;
}
?&gt;
     </programlisting>
    </example>
    <note>
     <para>
      Etant donn&eacute; que toutes les fonctions de gestion des
      <acronym>GIF</acronym> ont &eacute;t&eacute; supprim&eacute;es de
      la biblioth&egrave;que GD version 1.6, cette fonction n'est pas
      disponible si vous utilisez cette version de la librairie.
     </para>
    </note>
   </para>
  </refsect1>
 </refentry>
<refentry id="function.imagecreatefromjpeg">
   <refnamediv>
    <refname>ImageCreateFromJPEG</refname>
    <refpurpose>
      Cr&eacute;e une nouvelle image <acronym>JPEG</acronym>
      &agrave; partir d'un fichier ou d'une URL
      </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>int <function>imagecreatefromjpeg</function></funcdef>
       <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecreatefromjpeg</function> retourne un identifiant d'image
     repr&eacute;sentant un image obtenu &agrave; partir du fichier
     <parameter>filename</parameter>.
    </para>
    <para>
     <function>imagecreatefromjpeg</function> retourne une cha&icirc;ne vide en cas
     d'&eacute;chec. Elle affiche aussi un message d'erreur, qui s'affiche comme un
     lien bris&eacute; dans un navigateur web. Pour faciliter le d&eacute;buggage,
     voici une erreur <acronym>JPEG</acronym>:
    <example>
     <title>
       Exemple de gestion d'erreur lors de la cr&eacute;ation d'image
       (gr&acirc;cieusement offert par vic@zymsys.com )
      </title>
      <programlisting role="php">
&lt;?php
function loadjpeg($imgname) {
    $im = @imagecreatefromjpeg($imgname); /* Tentative d'ouverture */
    if (!$im) { /* V&eacute;rification */
        $im = imagecreate(150, 30); /* Cr&eacute;ation d'une image blanche */
        $bgc = imagecolorallocate($im, 255, 255, 255);
        $tc  = imagecolorallocate($im, 0, 0, 0);
        ImageFilledRectangle($im, 0, 0, 150, 30, $bgc);
        /* Affichage d'un message d'erreur */
        imagestring($im, 1, 5, 5, "Erreur de chargement de l'image $imgname", $tc);
    }
    return $im;
}
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecreatefrompng">
   <refnamediv>
    <refname>ImageCreateFromPNG</refname>
    <refpurpose>
      Cr&eacute;e une nouvelle image <acronym>PNG</acronym> &agrave;
      partir d'un fichier ou d'une URL
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>int <function>imagecreatefrompng</function></funcdef>
       <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecreatefrompng</function> retourne un identifiant d'image
     repr&eacute;sentant un image obtenu &agrave; partir du fichier
     <parameter>filename</parameter>.
    </para>
    <para>
     <function>imagecreatefromjpeg</function> retourne une cha&icirc;ne vide en cas
     d'&eacute;chec. Elle affiche aussi un message d'erreur, qui s'affiche comme un
     lien bris&eacute; dans un navigateur web. Pour faciliter le d&eacute;buggage,
     voici une erreur <acronym>PNG</acronym>:
     <example>
      <title>
       Exemple de gestion d'erreur lors de la cr&eacute;ation d'image
       (gr&acirc;cieusement offert par vic@zymsys.com )
      </title>
      <programlisting role="php">
&lt;?php
function LoadPNG($imgname) {
    $im = @imagecreatefrompng($imgname); /* Tentative d'ouverture */
    if (!$im) { /* V&eacute;rification */
        $im = imagecreate(150, 30); /* Cr&eacute;ation d'une image blanche */
        $bgc = imagecolorallocate($im, 255, 255, 255);
        $tc  = imagecolorallocate($im, 0, 0, 0);
        imagefilledrectangle($im, 0, 0, 150, 30, $bgc);
        /* Affichage d'un message d'erreur */
        imagestring($im, 1, 5, 5, "Erreur de chargement de l'image $imgname", $tc);
    }
    return $im;
}
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecreatefromwbmp">
   <refnamediv>
    <refname>ImageCreateFromWBMP</refname>
    <refpurpose>Cr&eacute;e une image depuis un fichier WBMP</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecreatefromwbmp</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecreatefromwbmp</function> retourne une ressource d'image
     PHP, repr&eacute;sentant l'image <parameter>filename</parameter>.
    </para>
    <para>
     <function>imagecreatefromwbmp</function> retourne une cha&icirc;ne vide en
     cas d'erreur. Il retourne aussi un message d'erreur qui s'affiche
     comme un lien mort dans un navigateur. Pour aider au d&eacute;buggage,
     l'exemple suivant va produire une erreur <acronym>WBMP</acronym>:
     <example>
      <title>
       Exemple de gestion des erreurs durant la cr&eacute;ation d'une image
       WBMP (gr&acirc;cieusement propos&eacute; par vic@zymsys.com)
      </title>
      <programlisting role="php">
function loadwbmp($imgname) {
    $im = @imagecreatefromwbmp($imgname); /* Tentative d'ouverture */
    if (!$im) { /* V&eacute;rification que cela s'est bien pass&eacute; */
        $im  = imagecreate(20, 20); /* Cr&eacute;e une image blanche */
        $bgc = imagecolorallocate($im, 255, 255, 255);
        $tc  = imagecolorallocate($im, 0, 0, 0);
        imagefilledrectangle($im, 0, 0, 10, 10, $bgc);
        /* Affiche le message d'erreur */
        imagestring($im, 1, 5, 5, "Erreur de chargement de $imgname", $tc);
    }
    return $im;
}
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagecreatefromstring">
   <refnamediv>
    <refname>ImageCreateFromString</refname>
    <refpurpose>Cr&eacute;e une image &agrave; partir d'une cha&icirc;ne</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecreatefromstring</function></funcdef>
      <paramdef>string <parameter>string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagecreatefromstring</function> retourne un identifiant
     d'image repr&eacute;sentant la cha&icirc;ne <parameter>string</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagedashedline">
   <refnamediv>
    <refname>ImageDashedLine</refname>
    <refpurpose>Dessine une ligne pointill&eacute;e.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagedashedline</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x1</parameter></paramdef>
      <paramdef>int <parameter>y1</parameter></paramdef>
      <paramdef>int <parameter>x2</parameter></paramdef>
      <paramdef>int <parameter>y2</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagedashedline</function> dessine une ligne pointill&eacute;e
     entre les points (<parameter>x1</parameter>,<parameter>y1</parameter>)
     et (<parameter>x2</parameter>,<parameter>y2</parameter>) (le coin
     sup&eacute;rieur droit est l'origine (0,0)) dans l'image
     <parameter>im</parameter>, avec la couleur <parameter>col</parameter>.
    </para>
    <para>
      Voir aussi <function>imageline</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagedestroy">
   <refnamediv>
    <refname>ImageDestroy</refname>
    <refpurpose>d&eacute;truit une image.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagedestroy</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagedestroy</function> lib&egrave;re toute la m&eacute;moire
     associ&eacute;e avec l'image <parameter>im</parameter>.
     <parameter>im</parameter> est un identifiant d'image valide retourn&eacute;
     par <function>imagecreate</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagefill">
   <refnamediv>
    <refname>ImageFill</refname>
    <refpurpose>Remplit.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagefill</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagefill</function> effectue un remplissage avec la couleur
     <parameter>col</parameter>, dans l'image <parameter>im</parameter>,
     &agrave; partir du point de coordonn&eacute;es (<parameter>x</parameter>,
     <parameter>y</parameter>) (le coin sup&eacute;rieur gauche est
     l'origine (0,0)).
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagefilledpolygon">
   <refnamediv>
    <refname>ImageFilledPolygon</refname>
    <refpurpose>Dessine un polygone rempli.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagefilledpolygon</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>array <parameter>points</parameter></paramdef>
      <paramdef>int <parameter>num_points</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imagefilledpolygon</function> dessine un polygone rempli dans l'image
      <parameter>im</parameter>. <parameter>points</parameter> est un tableau PHP qui
      contient les sommets des polygones sous la forme :. points[0] = x0,
      points[1] = y0, points[2] = x1, points[3] = y1, etc. <parameter>num_points</parameter>
      est le nombre total de sommets.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagefilledrectangle">
   <refnamediv>
    <refname>ImageFilledRectangle</refname>
    <refpurpose>Dessine un rectangle rempli.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagefilledrectangle</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x1</parameter></paramdef>
      <paramdef>int <parameter>y1</parameter></paramdef>
      <paramdef>int <parameter>x2</parameter></paramdef>
      <paramdef>int <parameter>y2</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imagefilledrectangle</function> dessine un rectangle de
      couleur <parameter>col</parameter> dans l'image <parameter>im</parameter>,
      en commencant par le sommet sup&eacute;rieur gauche (<parameter>x1</parameter>,
      <parameter>y1</parameter>) et finissant au sommet inf&eacute;rieur droit
      (<parameter>x2</parameter>, <parameter>y2</parameter>). Le coin sup&eacute;rieur
      gauche est l'origine (0, 0).
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagefilltoborder">
   <refnamediv>
    <refname>ImageFillToBorder</refname>
    <refpurpose>remplir avec une r&eacute;gion avec une couleur sp&eacute;cifique.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagefilltoborder</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>border</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagefilltoborder</function> remplit avec la couleur <parameter>col</parameter>
     toute la r&eacute;gion &agrave; l'int&eacute;rieur de la r&eacute;gion limit&eacute;e par la couleur
     <parameter>border</parameter>. Le point de d&eacute;part est
     (<parameter>x</parameter>,<parameter>y</parameter>)
     (le coin sup&eacute;rieur gauche est l'origine (0,0)).
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagefontheight">
   <refnamediv>
    <refname>ImageFontHeight</refname>
    <refpurpose>Retourne la hauteur de la police.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagefontheight</function></funcdef>
      <paramdef>int <parameter>font</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagefontheight</function> retourne la hauteur de la police en pixel.
    </para>
    <para>
     Voir aussi <function>imagefontwidth</function> et <function>imageloadfont</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagefontwidth">
   <refnamediv>
    <refname>ImageFontWidth</refname>
    <refpurpose>Retourne la largeur de la police.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagefontwidth</function></funcdef>
      <paramdef>int <parameter>font</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagefontwidth</function> retourne la largeur de la police en pixels.
    </para>
    <para>
     Voir aussi <function>imagefontheight</function> et <function>imageloadfont</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagegif">
   <refnamediv>
    <refname>ImageGif</refname>
    <refpurpose>Envoie une image GIF vers un navigateur ou un fichier.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagegif</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagegif</function> cr&eacute;e un fichier image <acronym>GIF</acronym> avec le nom
     <parameter>filename</parameter> d'apr&egrave;s l'image <parameter>im</parameter>.
     L'argument <parameter>im</parameter> est un identifiant valide retourn&eacute; par la
     fonction <function>imagecreate</function>.
    </para>
    <para>
      Le format de l'image sera GIF87a &agrave; moins que l'image n'ai une couleur transparente
      (mise en place gr&acirc;ce &agrave; la fonction <function>imagecolortransparent</function>)),
      ce qui fera qu'elle sera au format GIF89a.
    </para>
    <para>
      Le nom du fichier est optionnel, et dans ce cas, l'image sera transmise
      directement &agrave; la sortie standard. En envoyant une image de type
      <literal>image/gifcontent-type</literal> , (gr&acirc;ce &agrave; la fonction
      <function>header</function>), vous pouvez cr&eacute;er des images avec
      des scripts PHP.
    <note>
     <para>
        Etant donn&eacute; que toutes les fonctions <acronym>GIF</acronym> ont &eacute;t&eacute;
        supprim&eacute;es de la biblioth&egrave;que GD version 1.6, cette fonction
        ne sera pas accessible si vous avez cette version de la librairie.
     </para>
     <para>
       Le code suivant vous permet d'&eacute;crire des scripts PHP plus portables :
       le type de GD est automatiquement d&eacute;tect&eacute;. Il remplace la
       s&eacute;quence <literal>Header("Content-type: image/gif"); ImageGif($im);</literal>
       par un code plus souple :
       <informalexample>
        <programlisting role="php">
&lt;?php
  if (function_exists("imagegif")) {
    header("Content-type: image/gif");
    imagegif($im);
  }
  elseif (function_exists("imageJpeg")) {
    header("Content-type: image/jpeg");
    imagejpeg($im, "", 0.5);
  }
  elseif (function_exists("imagePng")) {
    header("Content-type: image/png");
    imagepng($im);
  }  elseif (function_exists("imagewbmp")) {
     header("Content-type: image/vnd.wap.wbmp");
     imagewbmp($im);
  }  else
    die("Pas de support graphique avec PHP sur ce serveur");
?&gt;
        </programlisting>
       </informalexample>
      </para>
    </note>
      <note>
      <para>
       En PHP 4, &agrave; partir de la version 4.0.2, vous pouvez utiliser la fonction
       <function>imagetypes</function> &agrave; la place de
       <function>function_exists</function> pour v&eacute;rifier que certains
       formats d'images sont support&eacute;s :
       <informalexample>
        <programlisting role="php">
&lt;?php
  if (function_exists("imagegif")) {
    header("Content-type: image/gif");
    imagegif($im);
  }
  elseif (function_exists("imageJpeg")) {
    header("Content-type: image/jpeg");
    imagejpeg($im, "", 0.5);
  }
  elseif (function_exists("imagePng")) {
    header("Content-type: image/png");
    imagepng($im);
  }  elseif (function_exists("imagewbmp")) {
     header("Content-type: image/vnd.wap.wbmp");
     imagewbmp($im);
  }  else
    die("Pas de support graphique avec PHP sur ce serveur");
?&gt;
	    </programlisting>
       </informalexample>
      </para>
     </note>
     </para>
    <para>
     Voir aussi <function>imagepng</function>, <function>imagewbmp</function>,
     <function>imagejpeg</function>, <function>imagetypes</function>.
    </para>
   </refsect1>
  </refentry>
<refentry id="function.imagepng">
   <refnamediv>
    <refname>ImagePNG</refname>
    <refpurpose>
    Envoie une image PNG vers un navigateur ou un fichier.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>int
       <function>imagepng</function>
      </funcdef>
       <paramdef>int <parameter>im</parameter></paramdef>
       <paramdef>string <parameter><optional>filename</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagepng</function> envoie l'image GD (<parameter>im</parameter>)
     au format <acronym>PNG</acronym> sur la sortie standard (typiquement,
     le navigateur web), ou si <parameter>filename</parameter> est fourni,
     l'envoie dans un fichier.
     <informalexample>
      <programlisting role="php">
&lt;?php
$im = imagecreatefrompng("test.png");
imagepng($im);
?&gt;
      </programlisting>
     </informalexample>
    </para>
    <para>
      Le nom du fichier est optionnel, et dans ce cas, l'image sera transmise
      directement &agrave; la sortie standard. En envoyant une image de type
      <literal>image/png content-type</literal> (gr&acirc;ce &agrave; la fonction
      <function>header</function>), vous pouvez cr&eacute;er des images
      <acronym>PNG</acronym> avec des scripts PHP.
	</para>
	<para>
     Voir aussi <function>imagegif</function>, <function>imagewbmp</function>,
     <function>imagejpeg</function>, <function>imagetypes</function>.
    </para>
   </refsect1>
  </refentry>
<refentry id="function.imagejpeg">
   <refnamediv>
    <refname>ImageJPEG</refname>
    <refpurpose>
      Envoie une image JPEG vers un navigateur ou un fichier.
	</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>int <function>imagejpeg</function></funcdef>
       <paramdef>int <parameter>im</parameter></paramdef>
       <paramdef>string
       <parameter><optional>filename</optional></parameter>
      </paramdef>
       <paramdef>int
       <parameter><optional>quality</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagejpeg</function> envoie l'image GD (<parameter>im</parameter>)
     au format <acronym>JPEG</acronym> sur la sortie standard (typiquement,
     le navigateur web), ou si <parameter>filename</parameter> est fourni,
     l'envoi dans un fichier. <parameter>im</parameter> a &eacute;t&eacute;
     cr&eacute;&eacute; par <function>imagecreate</function>.
    </para>
    <para>
      Le nom du fichier est optionnel, et dans ce cas, l'image sera transmise
      directement &agrave; la sortie standard. En envoyant une image de type
      <literal>image/jpeg content-type</literal> (gr&acirc;ce &agrave; la fonction
      <function>header</function>), vous pouvez cr&eacute;er des images
      <acronym>JPEG</acronym> avec des scripts PHP.
	</para>
     <note>
      <para>
       Le support <acronym>JPEG</acronym> n'est disponible que si PHP est compil&eacute;
       avec GD-1.8 ou plus r&eacute;cent.
      </para>
     </note>
    <para>
     Voir aussi <function>imagepng</function>, <function>imagewbmp</function>,
     <function>imagegif</function>, <function>imagetypes</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagewbmp">
   <refnamediv>
    <refname>ImageWBMP</refname>
    <refpurpose>Affiche une image WBMP</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagewbmp</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>string
       <parameter><optional>filename</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagewbmp</function> cr&eacute;e l'image <acronym>WBMP</acronym>
     dans le fichier <parameter>filename</parameter>, &agrave; partir de l'image
     <parameter>im</parameter>. Le param&egrave;tre <parameter>im</parameter>
     a &eacute;t&eacute; cr&eacute;&eacute; avec la fonction <function>imagecreate</function>.
    </para>
    <para>
     <parameter>filename</parameter> est optionnel, et s'il est omis,
     l'image sera envoy&eacute;e directement au client. En placant l'ent&ecirc;te
     <acronym>image/vnd.wap.wbmp</acronym>, dans le champs "content-type",
     vous pourrez afficher une image <acronym>WBMP</acronym>.
     <note>
      <para>
       Le support WBMP n'est disponible que si PHP a &eacute;t&eacute; compil&eacute;
       avec GD-1.8 ou plus r&eacute;cent.
      </para>
     </note>
    </para>
     <para>
     Voir aussi <function>imagepng</function>, <function>imagegif</function>,
     <function>imagejpeg</function>, <function>imagetypes</function>.
     </para>
    </refsect1>
   </refentry>
   <refentry id="function.imageinterlace">
   <refnamediv>
    <refname>ImageInterlace</refname>
    <refpurpose>Active ou d&eacute;sactive l'entrelacement.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imageinterlace</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter><optional>interlace</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imageinterlace</function> active ou d&eacute;sactive le bit d'entrelacement.
     Si l'entrelacement est &agrave; 1, l'image <parameter>im</parameter> sera
     interlac&eacute;e, et sinon, elle ne le sera pas.
    </para>
    <para>
      <function>imageinterlace</function> retourne l'&eacute;tat courant
      d'entrelacement de l'image.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imageline">
   <refnamediv>
    <refname>ImageLine</refname>
    <refpurpose>Draw a line.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imageline</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x1</parameter></paramdef>
      <paramdef>int <parameter>y1</parameter></paramdef>
      <paramdef>int <parameter>x2</parameter></paramdef>
      <paramdef>int <parameter>y2</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imageline</function> dessine une ligne depuis le point
     (<parameter>x1</parameter>,<parameter>y1</parameter>) jusqu'au point
     (<parameter>x2</parameter>,<parameter>y2</parameter>)
     (le coin sup&eacute;rieur gauche est l'origine (0,0)) dans l'image <parameter>im</parameter>
     et avec la couleur <parameter>col</parameter>.
    </para>
    <para>
     Voir aussi <function>imagecreate</function> et <function>imagecolorallocate</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imageloadfont">
   <refnamediv>
    <refname>ImageLoadFont</refname>
    <refpurpose>Charge une nouvelle police.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imageloadfont</function></funcdef>
      <paramdef>string <parameter>file</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imageloadfont</function> charge une nouvelle police utilisateur et
     retourne un identifiant sur cette police. Cet identifiant sera toujours sup&eacute;rieur
     &agrave; 5, pour &eacute;viter les conflits avec les polices standard PHP).
    </para>
    <para>
       Le format des polices d&eacute;pend actuellement du syst&egrave;me d'exploitation. Ce qui
       signifie qu'il vous faut g&eacute;n&eacute;rer des fichiers de polices pour la machine qui
       fait tourner PHP.
    </para>
    <para>
     <table>
      <title>Format de fichier de police.</title>
      <tgroup cols="3">
       <thead>
    <row>
     <entry>position</entry>
     <entry>Type de donn&eacute;s C</entry>
     <entry>description</entry>
    </row>
       </thead>
       <tbody>
    <row>
     <entry>Octets 0-3</entry>
     <entry>int</entry>
     <entry>Nombre de caract&egrave;res de la police</entry>
    </row>
    <row>
     <entry>Octets 4-7</entry>
     <entry>int</entry>
     <entry>
       Valeur du premier caract&egrave;re de la police (souvent 32 pour espace)
      </entry>
    </row>
    <row>
     <entry>Octets 8-11</entry>
     <entry>int</entry>
     <entry>Largeur en pixel des caract&egrave;res</entry>
    </row>
    <row>
     <entry>Octets 12-15</entry>
     <entry>int</entry>
     <entry>Hauteur en pixel des caract&egrave;res</entry>
    </row>
    <row>
     <entry>Octets 16-</entry>
     <entry>char</entry>
     <entry>
        Tableau avec les donn&eacute;es des caract&egrave;res, un octet par pixel pour chaque
        caract&egrave;re, avec un total de (nombre_caract&egrave;res*largeur*hauteur) octets.
       </entry>
    </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     Voir aussi <function>imagefontwidth</function> et <function>imagefontheight</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagepolygon">
   <refnamediv>
    <refname>ImagePolygon</refname>
    <refpurpose>Dessine un polygone.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagepolygon</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>array <parameter>points</parameter></paramdef>
      <paramdef>int <parameter>num_points</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imagepolygon</function> dessine un polygone dans l'image
      <parameter>im</parameter>. <parameter>points</parameter> est un tableau
      PHP qui contient les sommets du polygone sous la forme : points[0] = x0,
      points[1] = y0, points[2] = x1, points[3] = y1, etc. num_points est le
      nombre de sommets.
    </para>
    <para>
      Voir aussi <function>imagecreate</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagepsbbox">
   <refnamediv>
    <refname>ImagePSBBox</refname>
    <refpurpose>
       Retourne le rectangle entourant un texte et dessin&eacute; avec une
       police PostScript Type1.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imagepsbbox</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>int <parameter>size</parameter></paramdef>
      <paramdef>int <parameter>space</parameter></paramdef>
      <paramdef>int <parameter>width</parameter></paramdef>
      <paramdef>float <parameter>angle</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <parameter>size</parameter> est exprim&eacute; en pixels.
    </para>
    <para>
      <parameter>space</parameter> permet de changer la valeur par
      d&eacute;faut du charact&egrave;re espace. Cette valeur est ajout&eacute;e
      lors des dessins, et donc, peut &ecirc;tre n&eacute;gative.
    </para>
    <para>
      <parameter>tightness</parameter> permet de contr&ocirc;ler la
      quantit&eacute; d'espace entre les caract&egrave;res. Cette quantit&eacute;
      est ajout&eacute; lors des dessins, et peut donc &ecirc;tre n&eacute;gative.
    </para>
    <para>
      <parameter>angle</parameter> est en degr&eacute;s.
    </para>
    <para>
     Les param&egrave;tres <parameter>space</parameter> et
     <parameter>tightness</parameter> sont exprim&eacute;s en unit&eacute;
     d'espacement de caract&egrave;res, avec 1 unit&eacute; vaut 1/1000 d'un
     em carr&eacute; (NDT : kesako?).
    </para>
    <para>
     Les param&egrave;tres <parameter>space</parameter>,
     <parameter>tightness</parameter> et <parameter>angle</parameter> sont optionnels.
    </para>
    <para>
      Le rectangle entourant est calcul&eacute; en utilisant les informations
      disponibles sur les tailles de caract&egrave;res, et, malheureusement,
      ont tendance &agrave; &ecirc;tre l&eacute;g&egrave;rement diff&eacute;rents
      du r&eacute;sultat r&eacute;el final. Si l'angle est de 0 degr&eacute;,
      vous pouvez vous attendre &agrave; avoir besoin d'un rectangle d'au moins
      un pixel plus grand dans toutes les directions.
    </para>
    <para>
     <function>imagepsbbox</function> retourne un tableau contenant les
     &eacute;l&eacute;ments suivants :
     <informaltable>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>0</entry>
	 <entry>Abscisse inf&eacute;rieure gauche</entry>
	</row>
	<row>
	 <entry>1</entry>
	 <entry>Ordonn&eacute;e inf&eacute;rieure gauche</entry>
	</row>
	<row>
	 <entry>2</entry>
	 <entry>Abscisse sup&eacute;rieure droite</entry>
	</row>
	<row>
	 <entry>3</entry>
	 <entry>Ordonn&eacute;e sup&eacute;rieure droite</entry>
	</row>
       </tbody>
      </tgroup>
     </informaltable>
    </para>
    <para>
      Voir aussi <function>imagepstext</function>.
    </para>
   </refsect1>
  </refentry>
<!-- The function in t1lib which this function uses seems to be buggy...
Currently, just comment out everywhere in the docs and source until time
permits to find a solution.
  <refentry id="function.imagepscopyfont">
   <refnamediv>
    <refname>imagepscopyfont</refname>
    <refpurpose>
      Fait une copie d'une police charg&eacute;e pour modification ult&eacute;rieure.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagepscopyfont</function></funcdef>
      <paramdef>int <parameter>fontindex</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Utilisez cette fonction si vous devez faire des modifications dans une polie, comme
     par exemple l'extension ou la condensation, ou encore, modifier son vecteur
     d'encodage, tout en conservant l'original. Notez que la police que vous copiez
     doit &ecirc;tre obtenue par <function>imagepsloadfont</function>, et non pas une police
     qui a elle m&ecirc;me &eacute;t&eacute; copi&eacute;e. Vous pouvez aussi faire des modifications avant de
     la copier.
    </para>
    <para>
     Si vous utilisez cette fonction, vous <emphasis>DEVEZ</emphasis> lib&eacute;rer les polices
     obtenues vous m&ecirc;me, et dans l'ordre inverse. Sinon, votre script sera
     <emphasis>suspendu</emphasis>.
    </para>
    <para>
     Si tout a bien &eacute;t&eacute; fait, un index valide de police sera retourn&eacute;, et pourra &ecirc;tre
     utilis&eacute; ult&eacute;rieurement. Sinon, la fonction retournera <literal>FALSE</literal>, et affichera un
     message d&eacute;crivant l'erreur.
    </para>
    <para>
      Voir aussi <function>imageploadpsfont</function>.
    </para>
   </refsect1>
  </refentry>
-->
  <refentry id="function.imagepsencodefont">
   <refnamediv>
    <refname>ImagePSEncodeFont</refname>
    <refpurpose>
      Change le codage vectoriel d'un caract&egrave;re dans une police.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>int <function>imagepsencodefont</function></funcdef>
       <paramdef>int <parameter>font_index</parameter></paramdef>
       <paramdef>string <parameter>encodingfile</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imagepsencodefont</function> charge le codage vectoriel d'un
      caract&egrave;re depuis un fichier et change le codage vectoriel de la
      police correspondante. Etant donn&eacute; que les polices PostScript ne
      disposent pas des caract&egrave;res au-del&agrave; de 127, vous aurez
      s&ucirc;rement besoin de les changer sur vous utilisez une autre langue que
      l'anglais. Le format exact est d&eacute;crit dans la documentation T1libs.
      T1lib est disponible en deux formes : IsoLatin1.enc et IsoLatin2.enc.
    </para>
    <para>
      Si vous commencez &agrave; utiliser cette fonction r&eacute;guli&egrave;rement,
      une meilleure solution est de d&eacute;finir un encodage, et de l'utiliser
      avec set ps.default_encoding dans <link linkend="configuration.file">le fichier
      de configuration</link> pour utiliser par d&eacute;faut l'encodage correct.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagepsfreefont">
   <refnamediv>
    <refname>ImagePSFreeFont</refname>
    <refpurpose>
      Lib&egrave;re la m&eacute;moire occup&eacute;e par une police PostScript Type 1.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>imagepsfreefont</function></funcdef>
      <paramdef>int <parameter>fontindex</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      Voir aussi <function>imagepsloadfont</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagepsloadfont">
   <refnamediv>
    <refname>ImagePSLoadFont</refname>
    <refpurpose>Charge une police PostScript Type 1 depuis un fichier.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagepsloadfont</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      Au cas o&uacute; tout a bien march&eacute;, un index de police va &ecirc;tre retourn&eacute;, et pourra &ecirc;tre
      utilis&eacute; pour des op&eacute;rations ult&eacute;rieures. Sinon, la fonction retourne <literal>FALSE</literal> et
      affiche un message d&eacute;crivant ce qui est erron&eacute;.
    </para>
    <para>
      Voir aussi <function>imagepsfreefont</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagepsextendfont">
   <refnamediv>
    <refname>ImagePsExtendFont</refname>
    <refpurpose>
     Etend ou condense une police de caract&egrave;res
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>bool
       <function>imagepsextendfont</function>
      </funcdef>
       <paramdef>int
       <parameter>font_index</parameter>
      </paramdef>
       <paramdef>double
       <parameter>extend</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Etend ou condense la police de caract&egrave;res <parameter>font_index</parameter>.
     Si la valeur de <parameter>extend</parameter> est inf&eacute;rieure &agrave; 1, ce sera une
     condensation.
    </para>
   </refsect1>
  </refentry>
<refentry id="function.imagepsslantfont">
   <refnamediv>
    <refname>ImagePsSlantFont</refname>
    <refpurpose>
     Inclidnet une police de caract&egrave;res
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>bool
       <function>imagepsslantfont</function>
      </funcdef>
       <paramdef>int
       <parameter>font_index</parameter>
      </paramdef>
       <paramdef>double
       <parameter>slant</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Met en italique la police de caract&egrave;res
     <parameter>font_index</parameter> avec le coefficient
     <parameter>slant</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagepstext">
   <refnamediv>
    <refname>ImagePSText</refname>
    <refpurpose>Dessine un texte sur une image avec une police PostScript Type1.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imagepstext</function></funcdef>
      <paramdef>int <parameter>image</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>int <parameter>size</parameter></paramdef>
      <paramdef>int <parameter>foreground</parameter></paramdef>
      <paramdef>int <parameter>background</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>
       <optional>space</optional></parameter></paramdef>
      <paramdef>int <parameter>
       <optional>tightness</optional></parameter></paramdef>
      <paramdef>float <parameter>
       <optional>angle</optional></parameter></paramdef>
      <paramdef>int <parameter>
       <optional>antialias_steps</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>size</parameter> est exprim&eacute; en pixels.
    </para>
    <para>
     <parameter>foreground</parameter> est la couleur dans laquelle le texte va
     &ecirc;tre dessin&eacute;. <parameter>background</parameter> est la couleur d'anti aliasing.
     Aucun pixel avec la couleur <parameter>background</parameter> n'est dessin&eacute;, ce
     qui fait que l'arri&egrave;re plan n'a pas besoin d'&ecirc;tre dans une couleur fixe.
    </para>
    <para>
     Les coordonn&eacute;es donn&eacute;es (<parameter>x</parameter>,
     <parameter>y</parameter>) d&eacute;finissent l'origine du premier
     caract&egrave;re (grossi&egrave;rement, le coin inf&eacute;rieur
     gauche du caract&egrave;re). Ceci est diff&eacute;rent de la fonction
     <function>imagestring</function>, o&uacute; (x, y) d&eacute;finissait le
     coin sup&eacute;rieur gauche du premier carac&egrave;tre. Reportez vous
     &agrave; la documentation PostScript pour avoir des d&eacute;tails &agrave;
     propos des polices et de leurs tailles.
    </para>
    <para>
      <parameter>space</parameter> permet de changer la taille par d&eacute;faut
      du caract&egrave;re d'espacement. Cette valeur peut &ecirc;tre n&eacute;gative.
    </para>
    <para>
      <parameter>tightness</parameter> permet de contr&ocirc;ler la quantit&eacute;
      d'espace entre deux caract&egrave;res. Cette valeur peut &ecirc;tre
      n&eacute;gative.
    </para>
    <para>
      <parameter>angle</parameter> est en degr&eacute;s.
    </para>
    <para>
      <parameter>antialias_steps</parameter> permet de contr&ocirc;ler le nombre de couleurs
      du texte anti-alias&eacute;. Les valeurs autoris&eacute;es sont 4 et 16. 16 est recommand&eacute; pour
      les polices de moins de 20 pixels, car l'effet est alors visible. Avec les
      tailles plus grandes, utilisez de pr&eacute;f&eacute;rence 4, qui est moins gourmande en
      ressources.
    </para>
    <para>
      Les param&egrave;tres <parameter>space</parameter> et <parameter>tightness</parameter>
      sont exprim&eacute;s en unit&eacute; d'espace caract&egrave;re, ce qui vaut 1/1000&egrave;me d'un em-carr&eacute;
      ( ? ? ?).
    </para>
    <para>
      Les param&egrave;tres <parameter>space</parameter>, <parameter>tightness</parameter>,
      <parameter>angle</parameter> et <parameter>antialias</parameter> sont optionnels.
    </para>
    <para>
     <function>imagepstext</function> retourne un tableau contenant les
     &eacute;l&eacute;ments suivants :
     <informaltable>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>0</entry>
	 <entry>Abscisse inf&eacute;rieure gauche</entry>
	</row>
	<row>
	 <entry>1</entry>
	 <entry>Ordonn&eacute;e inf&eacute;rieure gauche</entry>
	</row>
	<row>
	 <entry>2</entry>
	 <entry>Abscisse sup&eacute;rieure droite</entry>
	</row>
	<row>
	 <entry>3</entry>
	 <entry>Ordonn&eacute;e sup&eacute;rieure droite</entry>
	</row>
       </tbody>
      </tgroup>
     </informaltable>
    </para>
    <para>
     Voir aussi <function>imagepsbbox</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagerectangle">
   <refnamediv>
    <refname>ImageRectangle</refname>
    <refpurpose>Dessine un rectangle.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagerectangle</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x1</parameter></paramdef>
      <paramdef>int <parameter>y1</parameter></paramdef>
      <paramdef>int <parameter>x2</parameter></paramdef>
      <paramdef>int <parameter>y2</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagerectangle</function> dessine un rectangle dans la couleur
     <parameter>col</parameter>, dans l'image <parameter>im</parameter>, et en
     commencant au point sup&eacute;rieur gauche (<parameter>x1</parameter>,
     <parameter>y1</parameter>), et en finissant au point inf&eacute;rieur droit
     (<parameter>x2</parameter>,<parameter>y2</parameter>). Le coin sup&eacute;rieur
     gauche est l'origine (0,0).
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagesetpixel">
   <refnamediv>
    <refname>ImageSetPixel</refname>
    <refpurpose>Dessine un pixel.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagesetpixel</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagesetpixel</function> dessine un pixel au point
     (<parameter>x</parameter>,<parameter>y</parameter>)
     (le coin sup&eacute;rieur gauche est l'origine (0,0)) dans l'image <parameter>im</parameter>,
     et avec la couleur <parameter>col</parameter>.
    </para>
    <para>
       Voir aussi <function>imagecreate</function> et <function>imagecolorallocate</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagestring">
   <refnamediv>
    <refname>ImageString</refname>
    <refpurpose>Dessine une cha&icirc;ne horizontale.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagestring</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>string <parameter>s</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagestring</function> dessine une la cha&icirc;ne sur une ligne
     horizontale, dans l'image <parameter>im</parameter>, aux coordonn&eacute;es
     (<parameter>x</parameter>,<parameter>y</parameter>) (le coin sup&eacute;rieur
     gauche est l'origine (0,0)) dans la couleur <parameter>col</parameter>.
     Si l'argument de police vaut 1, 2, 3, 4 ou 5, une des polices par d&eacute;faut sera
     utilis&eacute;e).
    </para>
    <para>
      Voir aussi <function>imageloadfont</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagestringup">
   <refnamediv>
    <refname>ImageStringUp</refname>
    <refpurpose>Dessine une cha&icirc;ne verticale.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagestringup</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>string <parameter>s</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagestringup</function> dessine une cha&icirc;ne sur une ligne
     verticale dans l'image <parameter>im</parameter> aux coordonn&eacute;es
     (<parameter>x</parameter>, <parameter>y</parameter>) (l'origine est le coin
     sup&eacute;rieur gauche (0,0)) dans la couleur <parameter>col</parameter>.
     Si la police utilis&eacute;e est 1, 2, 3, 4 ou 5, une police par d&eacute;faut
     sera utilis&eacute;e.
    </para>
    <para>
      Voir aussi <function>imageloadfont</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagesx">
   <refnamediv>
    <refname>ImageSX</refname>
    <refpurpose>Retourne la largeur d'une image.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagesx</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagesx</function> retourne la largeur de l'image r&eacute;f&eacute;renc&eacute;e par
     <parameter>im</parameter>.
    </para>
    <para>
       Voir aussi <function>imagecreate</function> et <function>imagesy</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagesy">
   <refnamediv>
    <refname>ImageSY</refname>
    <refpurpose>Retourne la hauteur de l'image.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagesy</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagesy</function> retourne la hauteur de l'image r&eacute;f&eacute;renc&eacute;e par
     <parameter>im</parameter>.
     </para>
    <para>
      Voir aussi <function>imagecreate</function> et <function>imagesx</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagettfbbox">
   <refnamediv>
    <refname>ImageTTFBBox</refname>
    <refpurpose>retourne le rectangle entourant un texte et dessin&eacute; avec une police TrueType.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imagettfbbox</function></funcdef>
      <paramdef>int <parameter>size</parameter></paramdef>
      <paramdef>int <parameter>angle</parameter></paramdef>
      <paramdef>string <parameter>fontfile</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imagettfbbox</function> calcule et retourne le rectangle entourant
      le texte <parameter>text</parameter>, &eacute;crit avec une police truetype.
     <variablelist>
      <varlistentry>
       <term>
        <parameter>text</parameter>
       </term>
       <listitem>
        <simpara>
          La cha&icirc;ne &agrave; mesurer.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <parameter>size</parameter>
       </term>
       <listitem>
        <simpara>
          La taille de la police en pixel.
         </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <parameter>fontfile</parameter>
       </term>
       <listitem>
        <simpara>
          Le nom de la police TrueType (peut aussi &ecirc;tre une URL.)
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <parameter>angle</parameter>
       </term>
       <listitem>
        <simpara>Angle en degr&eacute; dans lequel le texte <parameter>text</parameter>
        va &ecirc;tre mesur&eacute;.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     <function>imagettfbbox</function> retourne une tableau avec 8
     &eacute;l&eacute;ments, repr&eacute;sentants les 4 sommets du rectangle
     ainsi d&eacute;finis.
     <informaltable>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>0</entry>
	 <entry>Coin inf&eacute;rieur gauche, abscisse</entry>
	</row>
	<row>
	 <entry>1</entry>
	 <entry>Coin inf&eacute;rieur gauche, ordonn&eacute;e</entry>
	</row>
	<row>
	 <entry>2</entry>
	 <entry>Coin inf&eacute;rieur droit, abscisse</entry>
	</row>
	<row>
	 <entry>3</entry>
	 <entry>Coin inf&eacute;rieur droit, ordonn&eacute;e</entry>
	</row>
	<row>
	 <entry>4</entry>
	 <entry>Coin sup&eacute;rieur droit, abscisse</entry>
	</row>
	<row>
	 <entry>5</entry>
	 <entry>Coin sup&eacute;rieur droit, ordonn&eacute;e</entry>
	</row>
	<row>
	 <entry>6</entry>
	 <entry>Coin sup&eacute;rieur gauche, abscisse</entry>
	</row>
	<row>
	 <entry>7</entry>
	 <entry>Coin sup&eacute;rieur gauche, ordonn&eacute;e</entry>
	</row>
       </tbody>
      </tgroup>
     </informaltable>
     Les positions des points sont relatives au texte <emphasis>text</emphasis>,
     ind&eacute;pendamment de l'angle : coin sup&eacute;rieur gauche faire
     r&eacute;f&eacute;rence au coin sup&eacute;rieur gauche du texte &eacute;crit
     horizontalement.
    </para>
    <para>
      <function>imagettfbbox</function> requiert les biblioth&egrave;ques
      GD et Freetype.
    </para>
    <para>
      Voir aussi <function>imagettftext</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagettftext">
   <refnamediv>
    <refname>ImageTTFText</refname>
    <refpurpose>Dessine un texte avec une police TrueType.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imagettftext</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>size</parameter></paramdef>
      <paramdef>int <parameter>angle</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
      <paramdef>string <parameter>fontfile</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagettftext</function> dessine la cha&icirc;ne <parameter>text</parameter>
     dans l'image <parameter>im</parameter>, en commancant aux coordonn&eacute;es
     (<parameter>x</parameter>,<parameter>y</parameter>) (le coin sup&eacute;rieur gauche est
     l'origine (0,0)), avec un angle de <parameter>angle</parameter>, et dans la
     couleur <parameter>col</parameter>, en utilisant la police TrueType identifi&eacute;e par
     <parameter>fontfile</parameter>.
    </para>
    <para>
     Les coordonn&eacute;es (<parameter>x</parameter>,<parameter>y</parameter>) serviront
     de r&eacute;f&eacute;rence pour le premier caract&egrave;re (en gros, le coin
     inf&eacute;rieur gauche du caract&egrave;re). C'est diff&eacute;rent de
     <function>imagestring</function>, qui utilise le coin sup&eacute;rieur droit.
    </para>
    <para>
      <parameter>angle</parameter> est donn&eacute; en degr&eacute;s, avec degr&eacute;
      0 pour un texte horizontal, et en comptant les angles dans le sens inverse des
      aiguilles d'une montre (sens direct).
    </para>
    <para>
      <parameter>fontfile</parameter> est le chemin jusqu'&agrave; la police TrueType &agrave;
      utiliser.
    </para>
    <para>
      <parameter>text</parameter> est le texte &agrave; dessiner, incluant
      aussi des s&eacute;quences de caract&egrave;res UTF-8 (de la forme: &amp;#123; )
      pour g&eacute;n&eacute;rer des caract&egrave;res au del&agrave; de 255.
    </para>
    <para>
      <parameter>col</parameter> est l'index de la couleur dans la palette. Utiliser
      des index n&eacute;gatifs, revient &agrave; supprimer l'anti-aliasing.
    </para>
    <para>
      <function>imagettftext</function> retourne un tableau de 8 &eacute;l&eacute;ments
      repr&eacute;sentants les 4 points marquant les limites du texte. L'ordre
      des points est :sup&eacute;rieur gauche, sup&eacute;rieur droit,
      inf&eacute;rieur droit, inf&eacute;rieur gauche. Les points sont nomm&eacute;s
      relativement au texte &agrave; l'horizontal.
    </para>
    <para>
      Cet exemple va g&eacute;n&eacute;rer une image <acronym>GIF</acronym> noire
      de 400x30 pixels, avec les mots "Test en cours..." en police blanche, Arial.
     <example>
      <title><function>imagettftext</function></title>
      <programlisting role="php">
&lt;?php
Header("Content-type: image/gif");
$im = imagecreate(400,30);
$black = ImageColorAllocate($im, 0,0,0);
$white = ImageColorAllocate($im, 255,255,255);
ImageTTFText($im, 20, 0, 10, 20, $white, "/path/arial.ttf", "Test en cours... Omega: &amp;#937;");
ImageGif($im);
ImageDestroy($im);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     <function>imagettftext</function> requiert les biblioth&egrave;ques GD et
     <ulink url="&url.freetype;">FreeType</ulink>.
    </para>
    <para>
     Voir aussi <function>imagettfbbox</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imagetypes">
   <refnamediv>
    <refname>ImageTypes</refname>
    <refpurpose>
     Retourne les types d'images support&eacute;s par la version
     courante de PHP
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>int <function>imagetypes</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imagetypes</function> retourne un champs de bit correspondant aux
     formats d'images support&eacute;s par la version de GD
     utilis&eacute;e. Les valeurs suivantes sont valables : IMG_GIF |
     IMG_JPG | IMG_PNG | IMG_WBMP.  Pour vous assurer du support <acronym>PNG</acronym>,
     faites ceci :
     <example>
      <title>Exemple avec ImageTypes</title>
      <programlisting role="php">
&lt;?php
if (imagetypes() &amp; IMG_PNG) {
    echo "Le type PNG est support&eacute;";
}
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.read-exif-data">
   <refnamediv>
    <refname>read_exif_data</refname>
    <refpurpose>Lis les ent&ecirc;tes EXIF d'une image JPEG</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
       <funcdef>array <function>read_exif_data</function></funcdef>
       <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>read_exif_data</function> lit les ent&ecirc;tes EXIF de
     l'image <acronym>JPEG</acronym> <parameter>filename</parameter>.
     Elle retourne un tableau associatif o&ugrave; les index sont les noms
     d'ent&ecirc;tes EXIF, et les valeurs sont leur valeur
     associ&eacute;e. Les ent&ecirc;tes EXIF sont souvent disponibles
     dans les images g&eacute;n&eacute;r&eacute;es par les appareils
     phots digitals, mais chaque constructeur marque ses images d'une
     mani&egrave;re qui lui est propre : il est impossible de savoir
     quels ent&ecirc;tes seront pr&eacute;sents.
     <example>
      <title>read_exif_data</title>
      <programlisting role="php">
&lt;?php
 $exif = read_exif_data('p0001807.jpg');
 while(list($k,$v)=each($exif)) {
   echo "$k: $v&lt;br>\n";
 }
?&gt;
      </programlisting>
      <simpara>
	  Cet exemple va afficher :
      </simpara>
      <literallayout>
       <computeroutput>
FileName: p0001807.jpg
FileDateTime: 929353056
FileSize: 378599
CameraMake: Eastman Kodak Company
CameraModel: KODAK DC265 ZOOM DIGITAL CAMERA (V01.00)
DateTime: 1999:06:14 01:37:36
Height: 1024
Width: 1536
IsColor: 1
FlashUsed: 0
FocalLength:  8.0mm
RawFocalLength: 8
ExposureTime:  0.004 s (1/250)
RawExposureTime: 0.0040000001899898
ApertureFNumber: f/ 9.5
RawApertureFNumber: 9.5100002288818
FocusDistance: 16.66m
RawFocusDistance: 16.659999847412
Orientation: 1
ExifVersion: 0200
       </computeroutput>
      </literallayout>
     </example>
    </para>
    <para>
     <note>
      <simpara>
       <function>read_exif_data</function> n'est disponible que sous PHP 4 ,
       compil&eacute; avec 
       <link linkend="install.configure.enable-exif">--enable-exif</link>.
      </simpara>
      <simpara>
       <function>read_exif_data</function> ne requiert par la librairie GD.
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
