 <reference id="ref.imap">
  <title>Fonctions IMAP</title>
  <titleabbrev>IMAP</titleabbrev>
  <partintro>
   <simpara>
     Pour avoir acc&egrave;s &agrave; ces fonctions, vous devez compiler PHP
     avec l'option <option role="configure">--with-imap</option>. Il faut avoir
     install&eacute; la librairie C-client. Chargez sa derni&egrave;re version
     sur le serveur <ulink url="&url.imap;">&url.imap;</ulink> et compilez la.
     Puis, copiez le fichier <filename>c-client/c-client.a</filename> dans
     <filename>/usr/local/lib</filename>  ou n'importe quel autre dossier
     qui soit dans le chemin de link. Enfin, copiez les fichiers
     <filename>c-client/rfc822.h</filename>, <filename>mail.h</filename>
     et <filename>linkage.h</filename> dans <filename>/usr/local/include</filename>
     ou n'importe quel autre dossier qui soit dans le chemin d'inclusion.
   </simpara>
   <simpara>
     Ces fonctions ne sont pas limit&eacute;es au protocole
     <acronym>IMAP</acronym>, malgr&eacute; leur nom. La librairie sur laquelle
     elles sont developp&eacute;es supporte aussi <acronym>NNTP</acronym>,
     <acronym>POP3</acronym> et les m&eacute;thodes d'acc&egrave;s aux
     bo&icirc;tes aux lettres locales. Reportez vous &agrave; la fonction
     <function>imap_open</function> pour plus d'informations.
   </simpara>
   <para>
    Ce document ne peut entrer dans les d&eacute;tails de toutes les sujets abord&eacute;s.
    Plus d'informations sont disponibles avec la documentation de la librairie
    C (<filename>docs/internal.txt</filename>). ainsi que les RFC suivantes :
    <itemizedlist>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc821.html">RFC821</ulink>: Simple Mail
			 Transfer Protocol (SMTP).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc822.html">RFC822</ulink>: Standard for
			 ARPA internet text messages.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc2060.html">RFC2060</ulink>: Internet
			 Message Access Protocol (IMAP) Version 4rev1.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc1939.html">RFC1939</ulink>:  Post
			 Office Protocol Version 3 (POP3).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc977.html">RFC977</ulink>: Network News
			 Transfer Protocol (NNTP).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc2076.html">RFC2076</ulink>: Common
			 Internet Message Headers.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc2045.html">RFC2045</ulink> , <ulink
				url="&url.rfc;rfc2046.html">RFC2046</ulink> , <ulink
				url="&url.rfc;rfc2047.html">RFC2047</ulink> , <ulink
				url="&url.rfc;rfc2048.html">RFC2048</ulink> &amp; <ulink
				url="&url.rfc;rfc2049.html">RFC2049</ulink>: Multipurpose
			 Internet Mail Extensions (MIME).
      </simpara>
     </listitem>
    </itemizedlist>
		Une &eacute;tude approfondie est aussi disponibles dans les livres suivants
		(en anglais):
		<ulink url="&url.email.book;">Programming Internet Email</ulink>
		par David Wood et <ulink url="&url.imap.book;">Managing
		 IMAP</ulink> par Dianna Mullet & Kevin Mullet.
   </para>
  </partintro>
  <refentry id="function.imap-append">
   <refnamediv>
    <refname>imap_append</refname>
    <refpurpose>
     Ajoute une cha&icirc;ne dans une bo&icirc;te au lettre.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_append</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
      <paramdef>string <parameter>message</parameter></paramdef>
      <paramdef>string<parameter>flags</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_append</function> ajoute un message dans la bo&icirc;te
     aux lettres <parameter>mbox</parameter>. Si l'option
     <parameter>flags</parameter> est utilis&eacute;e,
     <parameter>flags</parameter> sera aussi &eacute;crit dans la bo&icirc;te
     aux lettres.
    </para>
    <para>
     Retourne TRUE en cas de succ&egrave;s, et FALSE en cas d'erreur.
    </para>
    <para>
     Lors des &eacute;changes avec le serveur Cyrus IMAP, vous devrez utiliser
     "\r\n" comme terminaison de ligne, &agrave; la place de "\n" ou
     l'op&eacute;ration &eacute;chouera.
    </para>
    <para>
     <example>
      <title>Exemple avec <function>imap_append</function></title>
      <programlisting role="php">
$stream = imap_open("{your.imap.host}INBOX.Drafts","username", "password");
$check = imap_check($stream);
print "Nombre de message avant ajout : ". $check->Nmsgs."\n";
imap_append($stream,"{your.imap.host}INBOX.Drafts"
                   ,"From: me@my.host\r\n"
                   ."To: you@your.host\r\n"
                   ."Subject: test\r\n"
                   ."\r\n"
                   ."Ceci est un message de test. Ignorez le\r\n"
                   );
$check = imap_check($stream);
print "Nombre de message apr&egrave;s ajout : ". $check->Nmsgs."\n";
imap_close($stream);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-base64">
   <refnamediv>
    <refname>imap_base64</refname>
    <refpurpose>D&eacute;code un texte encod&eacute; en BASE64.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_base64</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_base64</function> d&eacute;code un texte encod&eacute;
     en BASE64. Le texte d&eacute;cod&eacute; est retourn&eacute; sous la
     forme d'une cha&icirc;ne.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-body">
   <refnamediv>
    <refname>imap_body</refname>
    <refpurpose>Lit le corps d'un message.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_body</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>int <parameter>flags</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_body</function> retourne le corps du message num&eacute;ro
     <parameter> msg_number</parameter> de la bo&icirc;te aux lettres courante.
     L'option <parameter>flags</parameter> est un masque qui peut contenir les
     valeurs suivantes :
     <itemizedlist>
      <listitem>
       <simpara>
		FT_UID - msgno est un UID
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		FT_PEEK - Ne pas lever le drapeaux \Seen (Message lu) si il n'est
		pas d&eacute;j&agrave; lev&eacute;.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		FT_INTERNAL -  La cha&icirc;ne renvoy&eacute;e est au format interne,
		et ne va pas canoniser les CRLF.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
	<para>
     <function>imap_body</function> va retourner une copie brute du corps du
     message. Pour extraire les sous parties MIME du message, utilisez
     <function>imap_fetch_structure</function> pour analyser la structure,
     et <function>imap_fetch_body</function> pour extraire une copie d'une
     des sous-partie.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-check">
   <refnamediv>
    <refname>imap_check</refname>
    <refpurpose>
      V&eacute;rifie le courrier de la bo&icirc;te aux lettres courante.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>imap_check</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_check</function> retourne les informations &agrave;
     propos de la bo&icirc;te aux lettres courante. Retourne FALSE en cas
     d'&eacute;chec.
    </para>
    <para>
      <function>imap_check</function> v&eacute;rifie le statut de la bo&icirc;te
      aux lettres courante, sur le serveur <parameter>imap_stream</parameter>, et
      retourne les informations dans un objet avec les membres suivants :
    </para>
    <para>
     <itemizedlist>
      <listitem>
       <simpara>
        Date - Date de derni&egrave;re modification du contenu de la
        bo&icirc;te aux lettres
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		Driver - protocole utilis&eacute; pour acc&eacute;der &agrave; la bo&icirc;te aux lettres:
		POP3, IMAP, NNTP
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		Mailbox - nom de la bo&icirc;te aux lettres
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		Nmsgs - nombre de messages de la bo&icirc;te aux lettres
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		Recent - nombre de messages r&eacute;cents de la bo&icirc;te aux lettres
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-close">
   <refnamediv>
    <refname>imap_close</refname>
    <refpurpose>Termine un flot IMAP.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_close</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>flags</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_close</function> termine un flot IMAP. Prend un argument
      optionnel <parameter>flag</parameter>, CL_EXPUNGE, qui va retirer
      automatiquement de la liste la bo&icirc;te aux lettres.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-createmailbox">
   <refnamediv>
    <refname>imap_createmailbox</refname>
    <refpurpose>Cr&eacute;e une nouvelle bo&icirc;te aux lettres.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_createmailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_createmailbox</function> cr&eacute;e une nouvelle bo&icirc;te
     aux lettres nomm&eacute;e <parameter>mbox</parameter>. Les noms
     contenant des caract&egrave;res sp&eacute;ciaux doivent &ecirc;tre encod&eacute;s.
    </para>
    <para>
     Retourne TRUE en cas de succ&egrave;s, et FALSE en cas d'erreur.
    </para>
    <para>
     <example>
      <title>Exemple avec <function>imap_createmailbox</function></title>
      <programlisting>
$mbox = imap_open("{your.imap.host}","utilisateur","mot_de_passe",OP_HALFOPEN)
     || die("connexion impossible: ".imap_last_error());
$name1 = "nouvellephpbox";
$name2 = imap_utf7_encode("nouvellephpbox&eacute;x");
$newname = $name1;
echo "Le nouveau nom sera '$name1'&lt;br>\n";
# Nous allons cr&eacute;er maintenant une nouvelle bo&icirc;te aux lettres "phptestbox"
# dans votre dossier inbox, v&eacute;rfier son &eacute;tat et finalement, la supprimer
# pour remettre votre inbox dans son &eacute;tat initial.
if(@imap_createmailbox($mbox,imap_utf7_encode("{your.imap.host}INBOX.$newname"))) {
  $status = @imap_status($mbox,"{your.imap.host}INBOX.$newname",SA_ALL);
  if($status) {
    print("Votre nouvelle bo&icirc;te '$name1' est dans l'&eacute;tat suivant :&lt;br>\n");
    print("Messages:   ". $status->messages   )."&lt;br>\n";
    print("R&eacute;cent:     ". $status->recent     )."&lt;br>\n";
    print("Non lus:     ". $status->unseen     )."&lt;br>\n";
    print("UID suivant:    ". $status->uidnext    )."&lt;br>\n";
    print("UID validit&eacute;:". $status->uidvalidity)."&lt;br>\n";
    if(imap_renamemailbox($mbox,"{your.imap.host}INBOX.$newname","{your.imap.host}INBOX.$name2")) {
      echo "renommage de la bo&icirc;te aux lettres '$name1' en '$name2'&lt;br>\n";
      $newname=$name2;
    } else {
      print "imap_renamemailbox sur la nouvelle bo&icirc;te aux lettres a &eacute;chou&eacute; : ".imap_last_error()."&lt;br>\n";
    }
  } else {
    print  "imap_status sur la nouvelle bo&icirc;te aux lettres a &eacute;chou&eacute; : ".imap_last_error()."&lt;br>\n";
  }
  if(@imap_deletemailbox($mbox,"{your.imap.host}INBOX.$newname")) {
    print "new mailbox supprim&eacute;e pour remettre tout en &eacute;tat&lt;br>\n";
  } else {
    print  "imap_deletemailbox ur la nouvelle bo&icirc;te aux lettres a &eacute;chou&eacute; : ".implode("&lt;br>\n",imap_errors())."&lt;br>\n";
  }
} else {
  print  "Impossible de cr&eacute;er une nouvelle bo&icirc;te aux lettres : ".implode("&lt;br>\n",imap_errors())."&lt;br>\n";
}
imap_close($mbox);
      </programlisting>
     </example>
    </para>
    <para>
      Voir aussi <function>imap_renamemailbox</function>,
      <function>imap_deletemailbox</function> et
      <function>imap_open</function> pour conna&icirc;tre le format des noms de
     <parameter>mbox</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-delete">
   <refnamediv>
    <refname>imap_delete</refname>
    <refpurpose>
     Marque le fichier pour l'effacement, dans la bo&icirc;te aux lettres courante.
   </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_delete</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>int
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_delete</function> retourne TRUE.
    </para>
    <para>
     <function>imap_delete</function> marque le fichier
     <parameter>msg_number</parameter> pour l'effacement, dans la
     bo&icirc;te aux lettres courante. Le param&egrave;tre optionnel
     <parameter>flags</parameter> ne prend qu'une seule valeur,
     <parameter>FT_UID</parameter>, qui indique &agrave; PHP qu'il faut traiter
     <parameter>msg_number</parameter> comme un <parameter>UID</parameter>.
     L'effacement r&eacute;el n'interviendra que lors de l'appel de la fonction
     <function>imap_expunge</function>.
    </para>
    <para>
     <example>
      <title>Exemple <function>imap_delete</function></title>
      <programlisting role="php">
$mbox = imap_open ("{your.imap.host}INBOX", "utilisateur", "mot_de_passe")
    || die ("connexion impossible: " . imap_last_error());
$check = imap_mailboxmsginfo ($mbox);
print "Nombre de messages avant effacement  : " . $check->Nmsgs . "&lt;br>\n" ;
imap_delete ($mbox, 1);
$check = imap_mailboxmsginfo ($mbox);
print "Nombre de messages apr&egrave;s effacement: " . $check->Nmsgs . "&lt;br>\n" ;
imap_expunge ($mbox);
$check = imap_mailboxmsginfo ($mbox);
print "Nombre de messages apr&egrave;s imap_expunge: " . $check->Nmsgs . "&lt;br>\n" ;
imap_close ($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-deletemailbox">
   <refnamediv>
    <refname>imap_deletemailbox</refname>
    <refpurpose>Efface une bo&icirc;te aux lettres.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_deletemailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_deletemailbox</function> efface la bo&icirc;te aux lettres
     (voir <function>imap_open</function> pour conna&icirc;tre le format
     des noms de <parameter>mbox</parameter>).
    </para>
    <para>
     Retourne TRUE en cas de succ&egrave;s, et FALSE en cas d'erreur.
    </para>
    <para>
     Voir aussi <function>imap_createmailbox</function>,
     <function>imap_renamemailbox</function>, et
     <function>imap_open</function> pour le format du param&egrave;tre
     <parameter>mbox</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-expunge">
   <refnamediv>
    <refname>imap_expunge</refname>
    <refpurpose>
      Efface tous les messages marqu&eacute;s pour l'effacement.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_expunge</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_expunge</function> efface tous les messages marqu&eacute;s pour
     l'effacement par <function>imap_delete</function>.
    </para>
    <para>
     Retourne TRUE.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-fetchbody">
   <refnamediv>
    <refname>imap_fetchbody</refname>
    <refpurpose>Retourne une section extraite du corps d'un message.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_fetchbody</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>string <parameter>part_number</parameter></paramdef>
      <paramdef>flags
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_fetchbody</function> va rechercher une section du corps
     du message, et la retourne sous la forme d'une cha&icirc;ne. La section
     est une cha&icirc;ne d'entiers, s&eacute;par&eacute;s par des virgules, qui
     servent d'index dans le corps du message, comme sp&eacute;cifi&eacute; dans
     la norme IMAP4. Le texte n'est alors pas d&eacute;cod&eacute; par
     <function>imap_fetchbody</function>.
    </para>
    <para>
     L'option <function>imap_fetchbody </function> est un masque qui peut
     contenir les valeurs suivantes :
     <itemizedlist>
      <listitem>
       <simpara>
		FT_UID - msgono est un UID
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		FT_PEEK - Ne pas lever le drapeau \Seen (Message lu) si il n'est pas
		d&eacute;j&agrave; lev&eacute;.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		FT_INTERNAL - La cha&icirc;ne renvoy&eacute;e est au format interne, et
		ne va pas canoniser les CRLF.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-fetchstructure">
   <refnamediv>
    <refname>imap_fetchstructure</refname>
    <refpurpose>
     Lit la structure d'un message.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object
       <function>imap_fetchstructure</function>
      </funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>int
      <parameter><optional>flags</optional></parameter>
     </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_fetchstructure</function> la structure du message
      <parameter>msg_number</parameter>. <function>imap_fetchstructure</function>
      dispose d'une option <optional>flags</optional>, qui une seule valeur,
      <parameter>FT_UID</parameter>, pour indiquer que l'argument
      <parameter>msg_number</parameter> est un <parameter>UID</parameter>.
      Cette fonction retourne un objet avec des propri&eacute;t&eacute;s d'enveloppe,
      de date interne, de taille, de structure de flags et de corps, ainsi qu'un objet
      pour chaque attachement. La structure est la suivante :
    </para>
    <para>
     <table>
      <title>
       Objets retourn&eacute;s par <function>imap_fetchstructure</function>
      </title>
      <tgroup cols="2">
       <tbody>
		<row>
	 	<entry>type</entry>
		 <entry>Type primaire de corps</entry>
		</row>
		<row>
		 <entry>encoding</entry>
		 <entry>Codage de transfert du corps</entry>
		</row>
		<row>
		 <entry>ifsubtype</entry>
		 <entry>TRUE si il y a une cha&icirc;ne de sous type</entry>
		</row>
		<row>
		 <entry>subtype</entry>
		 <entry>sous type<acronym>MIME</acronym></entry>
		</row>
		<row>
		 <entry>ifdescription</entry>
		 <entry>TRUE si il y au ne cha&icirc;ne de description</entry>
		</row>
		<row>
		 <entry>description</entry>
		 <entry>Cha&icirc;ne de description du contenu</entry>
		</row>
		<row>
		 <entry>ifid</entry>
		 <entry>TRUE si il y a une cha&icirc;ne d'identification</entry>
		</row>
		<row>
		 <entry>id</entry>
		 <entry>Cha&icirc;ne d'identification</entry>
		</row>
		<row>
		 <entry>lines</entry>
		 <entry>Nombre de lignes</entry>
		</row>
		<row>
		 <entry>bytes</entry>
		 <entry>Nombre d'octets</entry>
		</row>
		<row>
		 <entry>ifdisposition</entry>
		 <entry>TRUE si il y a une cha&icirc;ne de disposition</entry>
		</row>
		<row>
		 <entry>disposition</entry>
		 <entry>Cha&icirc;ne de disposition</entry>
		</row>
		<row>
		 <entry>ifdparameters</entry>
		 <entry>TRUE s'il y a un tableau de param&egrave;tres dparameters</entry>
		</row>
		<row>
		 <entry>dparameters</entry>
		 <entry>tableau de disposition</entry>
		</row>
		<row>
		 <entry>ifparameters</entry>
		 <entry>TRUE si le tableau de param&egrave;tres existe</entry>
		</row>
		<row>
		 <entry>parameters</entry>
		 <entry>Tableau de param&egrave;tres <acronym>MIME</acronym></entry>
		</row>
		<row>
		 <entry>parts</entry>
		 <entry>Tableau d'objet d&eacute;crivant chaque partie du message</entry>
		</row>
   	   </tbody>
      </tgroup>
     </table>
    </para>
    <note>
     <orderedlist>
      <listitem>
       <para>
         dparameters est un tableau d'objet o&uacute; chaque objet &agrave;
         un "attribut" et une "valeur".
       </para>
      </listitem>
      <listitem>
       <para>
         parameter est un tableau d'objet o&uacute; chaque objet &agrave; un
         "attribut" et une "valeur".
       </para>
      </listitem>
      <listitem>
       <para>
		parts est un tableau d'objets de m&ecirc;me structure que l'objet
		sup&eacute;rieur, mais qui ne contient pas d'autres objets de
		m&ecirc;me sorte.
       </para>
      </listitem>
     </orderedlist>
    </note>
    <para>
     <table>
       <title>Type primaire de corps</title>
       <tgroup cols="2">
        <tbody>
        <row><entry>0</entry><entry>text</entry></row>
        <row><entry>1</entry><entry>multipart</entry></row>
        <row><entry>2</entry><entry>message</entry></row>
        <row><entry>3</entry><entry>application</entry></row>
        <row><entry>4</entry><entry>audio</entry></row>
        <row><entry>5</entry><entry>image</entry></row>
        <row><entry>6</entry><entry>vid&eacute;o</entry></row>
        <row><entry>7</entry><entry>autre</entry></row>
        </tbody>
       </tgroup>
     </table>
    </para>
    <para>
     <table>
       <title>Codage de transfert</title>
       <tgroup cols="2">
        <tbody>
        <row><entry>0</entry><entry>7BIT</entry></row>
        <row><entry>1</entry><entry>8BIT</entry></row>
        <row><entry>2</entry><entry>BINARY</entry></row>
        <row><entry>3</entry><entry>BASE64</entry></row>
        <row><entry>4</entry><entry>QUOTED-PRINTABLE</entry></row>
        <row><entry>5</entry><entry>OTHER</entry></row>
        </tbody>
       </tgroup>
     </table>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-headerinfo">
   <refnamediv>
    <refname>imap_headerinfo</refname>
    <refpurpose>Lit l'ent&ecirc;te  du message</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
	  <funcdef>object <function>imap_headerinfo</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>int
       <parameter><optional>fromlength</optional></parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>subjectlength</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>defaulthost</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_headerinfo</function> retourne un objet contenant
     divers &eacute;l&eacute;ments d'ent&ecirc;te.
    </para>
    <para>
     <informalexample>
      <literallayout>
       remail, date, Date, subject, Subject, in_reply_to, message_id,
       newsgroups, followup_to, references
&eacute;l&eacute;ments d'ent&ecirc;tes:
   Recent -  'R' si r&eacute;cent et lu
             'N' si r&eacute;cent et non lu
             ' ' si non r&eacute;cent
   Unseen -  'U' si non lu ET non r&eacute;cent
             ' ' si lu OU non lu et r&eacute;cent
   Answered -'A' si r&eacute;pondu,
             ' ' si non r&eacute;pondu
   Deleted - 'D' si effac&eacute;,
             ' ' si non effac&eacute;
   Draft -   'X' si brouillon,
             ' ' si non brouillon
   Flagged - 'F' si marqu&eacute;,
             ' ' si non marqu&eacute;
Notez bien que le comportement r&eacute;cent/non lu est un peu particulier :
si vous voulez savor si un message est non lu, vous devez le v&eacute;rifier
avec
Unseen == 'U' || Recent == 'N'
toaddress (toute la ligne d'ent&ecirc;te To: jusqu'&agrave; 1024 caract&egrave;res)
to[] (retourne un objet avec tout l'ent&ecirc;te To, contenant):
   personal
   adl
   mailbox
   host
fromaddress (toute la ligne d'ent&ecirc;te from: jusqu'&agrave; 1024 caract&egrave;res)
from[] (retourne un objet avec tout l'ent&ecirc;te From, contenant):
   personal
   adl
   mailbox
   host
ccaddress (toute la ligne d'ent&ecirc;te CC: jusqu'&agrave; 1024 caract&egrave;res)
cc[] (retourne un objet avec tout l'ent&ecirc;te CC, contenant):
   personal
   adl
   mailbox
   host
bccaddress (toute la ligne d'ent&ecirc;te BCC: jusqu'&agrave; 1024 caract&egrave;res)
bcc[] (retourne un objet avec tout l'ent&ecirc;te BCC, contenant):
   personal
   adl
   mailbox
   host
reply_toaddress (oute la ligne d'ent&ecirc;te Reply_to: jusqu'&agrave; 1024 caract&egrave;res)
reply_to[] (retourne un objet avec tout l'ent&ecirc;te Reply_to, contenant)
   personal
   adl
   mailbox
   host
senderaddress (toute la ligne d'ent&ecirc;te Sender: jusqu'&agrave; 1024 caract&egrave;res)
sender[] (retourne un objet avec tout l'ent&ecirc;te Sender, contenant)
   personal
   adl
   mailbox
   host
return_path (toute la ligne d'ent&ecirc;te Return-path: jusqu'&agrave; 1024 caract&egrave;res)
return_path[] (retourne un objet avec tout l'ent&ecirc;te Return-path, contenant)
   personal
   adl
   mailbox
   host
udate (Date du mail, au format UNIX)
fetchfrom (Ligne d'ent&ecirc;te from format&eacute;e pour tenir dans <parameter>fromlength</parameter>
caract&egrave;res)
fetchsubject (Ligne d'ent&ecirc;te subject format&eacute;e pour tenir dans <parameter>subjectlength</parameter> caract&egrave;res)
      </literallayout>
     </informalexample>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-header">
   <refnamediv>
    <refname>imap_header</refname>
    <refpurpose>Lit l'ent&ecirc;te d'un message.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>imap_header</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>int
       <parameter><optional>fromlength</optional></parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>subjectlength</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>defaulthost</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Cette fonction est un alias de <function>imap_headerinfo</function>
     et lui est identique en tout point.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-rfc822-parse-headers">
   <refnamediv>
    <refname>imap_rfc822_parse_headers</refname>
    <refpurpose>Analyse un ent&ecirc;te mail</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>imap_rfc822_parse_headers</function></funcdef>
      <paramdef>string <parameter>headers</parameter></paramdef>
      <paramdef>string
       <parameter><optional>defaulthost</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_rfc822_parse_headers</function> analyse la cha&icirc;ne
     <parameter>headers</parameter>, et retourne un objet contenant
     differents &eacute;l&eacute;ments, similaires &agrave; la fonction
     <function>imap_header</function>, hormis les flags, et autres
     &eacute;l&eacute;ments li&eacute;s au serveur IMAP.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-headers">
   <refnamediv>
    <refname>imap_headers</refname>
    <refpurpose>
     Retourne les ent&ecirc;tes de tous les messages d'une bo&icirc;te aux lettres.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_headers</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_headers</function> retourne un tableau de cha&icirc;ne
      contenant les ent&ecirc;te des messages. Une cha&icirc;ne par message.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-listmailbox">
   <refnamediv>
    <refname>imap_listmailbox</refname>
    <refpurpose>Liste les bo&icirc;tes aux lettres.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_listmailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pat</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_listmailbox</function> retourne un tableau contenant les
     noms des bo&icirc;tes aux lettres.
    </para>
    <para>
     <example>
      <title>Exemple avec <function>imap_listmailbox</function></title>
      <programlisting role="php">
$mbox = imap_open("{your.imap.host}","utilisateur","mot_de_passe",OP_HALFOPEN)
      || die("connexion impossible: ".imap_last_error());
$list = imap_listmailbox($mbox,"{your.imap.host}","*");
if(is_array($list)) {
  reset($list);
  while (list($key, $val) = each($list))
    print imap_utf7_decode($val)."&lt;br>\n";
} else
  print "imap_listmailbox a &eacute;chou&eacute;: ".imap_last_error()."\n";
imap_close($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-getmailboxes">
   <refnamediv>
    <refname>imap_getmailboxes</refname>
    <refpurpose>
     Liste les bo&icirc;tes aux lettres, et retourne le d&eacute;tail pour chacune.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_getmailboxes</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pat</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_getmailboxes</function> retourne un tableau d'objets contenant
     les informations sur les bo&icirc;tes aux lettres. Chaque objet a les attributs
     de <parameter>name</parameter>, qui contient le nom complet de la bo&icirc;te
     aux lettres; <parameter>delimiter</parameter>, qui est le d&eacute;limiteur
     hi&eacute;rarchique; et <parameter>attributes</parameter>.
     <parameter>Attributes</parameter> est un masque de bits, qui contient :
     <itemizedlist>
      <listitem>
       <simpara>
		LATT_NOINFERIORS - Cette bo&icirc;te aux lettres n'a pas d'"enfants"
		(il n'y a plus de bo&icirc;tes aux lettres en dessous de celle-ci).
       </simpara>
      </listitem>
     <listitem>
       <simpara>
		LATT_NOSELECT - Ceci est juste un container, pas une bo&icirc;te aux lettres
		(vous ne pouvez pas l'ouvrir).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		LATT_MARKED - Cette bo&icirc;te aux lettres est marqu&eacute;e.
		Utilis&eacute; uniquement avec UW-IMAPD.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		LATT_UNMARKED - Cette bo&icirc;te aux lettres n'est pas marqu&eacute;e. Utilis&eacute; uniquement
        avec UW-IMAPD.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <parameter>ref</parameter> ne devrait &ecirc;tre que le serveur IMAP sous
     la forme <literal>{imap_server:imap_port}</literal>, et
     <parameter>pattern</parameter> sp&eacute;cifie la position dans la
     hi&eacute;rarchie des bo&icirc;tes aux lettres, o&uacute; il faut
     commencer &agrave; charcher. Si vous voulez passer en revue toute la
     hi&eacute;rarchier, passez '*' comme <parameter>pattern</parameter>.
    </para>
    <para>
     Il y a deux caract&egrave;res sp&eacute;ciaux que vous pouvez utiliser dans
     <parameter>pattern</parameter> : '*' et  '%'. '*' signifie : toutes les
     bo&icirc;tes aux lettres. Si vous passez <parameter>pattern</parameter>
     comme '*', vous obtiendrez la liste compl&egrave;te des bo&icirc;tes aux
     lettres de la hi&eacute;rarchie. '%' signifie qu'on ne s'interesse qu'au
     niveau courant. '%' pass&eacute; &agrave; <parameter>pattern</parameter>
     ne retournera que les bo&icirc;tes aux lettres de niveau sup&eacute;rieur;
     '~/mail/%'.Sous UW_IMAPD retournera toutes les bo&icirc;tes aux lettres du
     dossier  <filename>~/mail directory</filename>, mais pas leurs enfants.
    </para>
    <para>
     <example>
      <title>Exemple avec <function>imap_getmailboxes</function></title>
      <programlisting role="php">
$mbox = imap_open("{your.imap.host}","utilisateur","mot_de_passe",OP_HALFOPEN)
      || die("connexion impossible: ".imap_last_error());
$list = imap_getmailboxes($mbox,"{your.imap.host}","*");
if(is_array($list)) {
  reset($list);
  while (list($key, $val) = each($list))
  {
    print "($key) ";
    print imap_utf7_decode($val->name).",";
    print "'".$val->delimiter."',";
    print $val->attributes."&lt;br>\n";
  }
} else
  print "imap_getmailboxes a &eacute;chou&eacute; : ".imap_last_error()."\n";
imap_close($mbox);
      </programlisting>
     </example>
    </para>
	<para>
	 Voir aussi <function>imap_getsubscribed</function>.
	</para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-listsubscribed">
   <refnamediv>
    <refname>imap_listsubscribed</refname>
    <refpurpose>Liste les bo&icirc;tes aux lettres souscrites.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_listsubscribed</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pattern</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_listsubscribed</function> retourne un tableau avec toutes les
     bo&icirc;tes aux lettres auxquelles vous avez souscrit.
     Les arguments <parameter>ref</parameter> et <parameter>pattern</parameter>
     indiquent respectivement, le dossier o&uacute; chercher et le nom des
     bo&icirc;tes recherch&eacute;es, sous la forme d'un masque.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-getsubscribed">
   <refnamediv>
    <refname>imap_getsubscribed</refname>
    <refpurpose>Liste toutes les bo&icirc;tes aux lettres souscrites.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_getsubscribed</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pattern</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_getsubscribed</function> est identique &agrave;
      <function>imap_getmailboxes</function>, mais ne retourne que les
      bo&icirc;tes aux lettres auxquelles l'utilisateur est inscrit.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-mail-copy">
   <refnamediv>
    <refname>imap_mail_copy</refname>
    <refpurpose>
      Copie les messages sp&eacute;cifi&eacute;s dans une bo&icirc;te aux lettres.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_mail_copy</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>msglist</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
      <paramdef>int <parameter>flags</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_mail_copy</function> copie les messages email
      sp&eacute;cifi&eacute;s par <parameter>msglist</parameter> dans la
      bo&icirc;te aux lettres nomm&eacute;e <parameter>mbox</parameter>.
      <parameter>msglist</parameter> est un intervalle, et pas seulement
      une liste num&eacute;ros de message.
    </para>
    <para>
      <function>imap_mail_copy</function> retourne TRUE en cas de succ&egrave;s et
      FALSE en cas d'erreur.
    </para>
    <para>
     <parameter>flags</parameter> est un masque, qui peut contenir une ou plusieurs
     des valeurs suivantes :
     <itemizedlist>
      <listitem>
       <simpara>
		CP_UID - la s&eacute;quence de nombre contient des UIDS
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		CP_MOVE - Efface les messages apr&egrave;s copie.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-mail-move">
   <refnamediv>
    <refname>imap_mail_move</refname>
    <refpurpose>
      D&eacute;place les messages sp&eacute;cifi&eacute;s
      dans une bo&icirc;te aux lettres.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_mail_move</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>msglist</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
      <paramdef>int
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_mail_move</function> d&eacute;place les messages
      sp&eacute;cifi&eacute;s par <parameter>msglist</parameter> dans la
      bo&icirc;te aux lettres <parameter>mbox</parameter>.
      <parameter>msglist</parameter> est un intervalle, et pas seulement une
      liste de messages.
    </para>
    <para>
     <parameter>flags</parameter> est un champs de bit et peut contenir une
     seule valeur :
     <itemizedlist>
      <listitem>
       <simpara>
		CP_UID - La s&eacute;quence de nombrs contient UIDS
       </simpara>
      </listitem>
     </itemizedlist>
    </para>    <para>
     Retourne TRUE en cas de succ&egrave;s, et FALSE en cas d'erreur.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-num-msg">
   <refnamediv>
    <refname>imap_num_msg</refname>
    <refpurpose>
     Retourne le nombre de message dans la bo&icirc;te aux lettres courante.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_num_msg</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_num_msg</function> retourne le nombre de message dans la
      bo&icirc;te aux lettres courante.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-num-recent">
   <refnamediv>
    <refname>imap_num_recent</refname>
    <refpurpose>
       Retourne le nombre de messages r&eacute;cents dans la bo&icirc;te
       aux lettres courante.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_num_recent</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
       <function>imap_num_recent</function> retourne le nombre de message
       r&eacute;cents dans la bo&icirc;te aux lettres courante.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-open">
   <refnamediv>
    <refname>imap_open</refname>
    <refpurpose>Ouvre un flot IMAP vers une bo&icirc;te aux lettres.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_open</function></funcdef>
      <paramdef>string <parameter>mailbox</parameter></paramdef>
      <paramdef>string <parameter>username</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
      <paramdef>int
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_open</function> retourne un flot IMAP en cas de succ&egrave;s,
     et FALSE en cas d'erreur. <function>imap_open</function> peut aussi &ecirc;tre
     utilis&eacute;e pour ouvrir des flots sur des serveurs POP3 et NNTP.
    </para>
    <para>
     Un nom de bo&icirc;te aux lettre est constitu&eacute; d'une adresse de serveur,
     et d'une adresse de bo&icirc;te sur ce serveur. Le mot reserv&eacute; INBOX repr&eacute;sente
     la bo&icirc;te aux lettres de l'utilisateur courant. L'adresse du serveur,
     mise entre accolades '{' et '}', est constitu&eacute; du nom du serveur ou de
     son adresse IP, d'une sp&eacute;cification de protocole (commencant par '/')
     et d'un port optionnel (sp&eacute;cifi&eacute; avec ':'). Cette partie est obligatoire
     dans les param&egrave;tres de la bo&icirc;te aux lettres. Les noms de bo&icirc;tes aux lettres
     qui contiennent des caract&egrave;res sp&eacute;ciaux (en dehors de l'espace ASCII) doivent
     &ecirc;tre encod&eacute;s avec <function>imap_utf7_encode</function>.
    </para>
    <para>
     Les options sont un masque de bit, qui peut prendre une ou plusieurs des
     valeurs suivantes :
     <itemizedlist>
      <listitem>
       <simpara>
		OP_READONLY - Ouvre une bo&icirc;te aux lettres en lecture seule
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		OP_ANONYMOUS - Ne pas utiliser, ou modifier le fichier .newsrc pour les news.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		OP_HALFOPEN - Pour les noms IMAP et NNTP, ouvre une connexion
		mais n'ouvre pas une bo&icirc;te aux lettre.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		CL_EXPUNGE - Supprime automatiquement la bo&icirc;te aux lettres de la
		liste, lors de la terminaison du flot.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     Pour se connecter &agrave; un serveur IMAP, on peut utiliser la 
     commande suivante :
     <informalexample>
      <programlisting role="php">
$mbox  = imap_open("{localhost:143}INBOX","user_id","password");
      </programlisting>
     </informalexample>
     Pour se connecter &agrave; un serveur POP3 qui fonctionne sur le port 110
     de la machine locale on peut utiliser la commande suivante :
     <informalexample>
      <programlisting role="php">
$mbox = imap_open("{localhost/pop3:110}INBOX","user_id","password");
      </programlisting>
     </informalexample>
     Pour se connecter &agrave; un serveur NNTP qui fonctionne sur le port 119
     de la machine locale on peut utiliser la commande:
     <informalexample>
      <programlisting role="php">
$nntp = imap_open("{localhost/nntp:119}comp.test","","");
      </programlisting>
     </informalexample>
     Pour se connecter &agrave; un serveur distant, remplacez "localhost" par
     le nom ou l'adresse IP de la machine.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-ping">
   <refnamediv>
    <refname>imap_ping</refname>
    <refpurpose>V&eacute;rifie que le flot IMAP est toujours actif.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_ping</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Retourne TRUE si le flot existe toujours, et FALSE sinon.
    </para>
    <para>
     <function>imap_ping</function> v&eacute;rifie que le flot IMAP est toujours actif,
     en lui envoyant un ping. Cette fonction permet de se rendre compte que du mail
     est arriv&eacute; : c'est m&ecirc;me la m&eacute;thode pr&eacute;conis&eacute;e pour des tests p&eacute;riodiques de
     v&eacute;rification du courrier. Cette fonction peut aussi servir &agrave; garder une connexion
     ouverte, avec les serveurs dot&eacute;s d'un d&eacute;lai d'expiration.
    </para>
    <para>
     <example>
      <title><function>imap_open</function> example</title>
      <programlisting role="php">
$mbox = imap_open ("{your.imap.host:143}", "username", "password");
echo "&lt;p>&lt;h1>Mailboxes&lt;/h1>\n";
$folders = imap_listmailbox ($mbox, "{your.imap.host:143}", "*");
if ($folders == false) {
    echo "Call failed&lt;br>\n";
} else {
    while (list ($key, $val) = each ($folders)) {
        echo $val."&lt;br>\n";
    }
}
echo "&lt;p>&lt;h1>Headers in INBOX&lt;/h1>\n";
$headers = imap_headers ($mbox);
if ($headers == false) {
    echo "Call failed&lt;br>\n";
} else {
    while (list ($key,$val) = each ($headers)) {
        echo $val."&lt;br>\n";
    }
}
imap_close($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-renamemailbox">
   <refnamediv>
    <refname>imap_renamemailbox</refname>
    <refpurpose>Renomme une bo&icirc;te aux lettres.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_renamemailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>old_mbox</parameter></paramdef>
      <paramdef>string <parameter>new_mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_renamemailbox</function> renomme la bo&icirc;te aux lettres
      <parameter>old_mbox</parameter> en <parameter>new_mbox</parameter>.
    </para>
    <para>
      Retourne TRUE en cas de succ&egrave;s, et FALSE en cas d'erreur.
    </para>
    <para>
     Voir aussi <function>imap_createmailbox</function>,
     <function>imap_deletemailbox</function> et
     <function>imap_open</function> pour le format de <parameter>mbox</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-reopen">
   <refnamediv>
    <refname>imap_reopen</refname>
    <refpurpose>
      Ouvre un flot IMAP vers une nouvelle bo&icirc;te aux lettres.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_reopen</function></funcdef>
      <paramdef>string <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mailbox</parameter></paramdef>
      <paramdef>string
     <parameter><optional>flags</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_reopen</function> r&eacute;ouvre la connexion sp&eacute;cifi&eacute;e
      au serveur IMAP ou NNTP, avec une nouvelle bo&icirc;tes aux lettres.
    </para>
    <para>
      Les options sont des masques de bit, qui peuvent contenir les valeurs suivantes :
     <itemizedlist>
      <listitem>
       <simpara>
		OP_READONLY - Ouvre une bo&icirc;te aux lettres en lecture seule
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		OP_ANONYMOUS - Ne pas utiliser, ou modifier le fichier .newsrc pour les news
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		OP_HALFOPEN - Pour les noms IMAP et NNTP, ouvre une connexion
        mais n'ouvre pas une bo&icirc;te aux lettre.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		CL_EXPUNGE - Supprime automatiquement la bo&icirc;te aux lettres de la liste,
        lors de la terminaison du flot. (voir <function>imap_delete</function> et
		<function>imap_expunge</function>).
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-subscribe">
   <refnamediv>
    <refname>imap_subscribe</refname>
    <refpurpose>Souscrit &agrave; une bo&icirc;te aux lettres.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_subscribe</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      Souscrit &agrave; la bo&icirc;te aux lettres <parameter>mbox</parameter>.
    </para>
    <para>
      Retourne TRUE en cas de succ&egrave;s, et FALSE en cas d'&eacute;chec.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-undelete">
   <refnamediv>
    <refname>imap_undelete</refname>
    <refpurpose>
      Enl&egrave;ve la marque d'effacement d'un message.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_undelete</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_undelete</function> enl&egrave;ve la marque d'effacement
      du message <parameter>msg_number</parameter>, plac&eacute;e avec
      <function>imap_delete</function>.
    </para>
    <para>
      Retourne TRUE en cas de succ&egrave;s, et FALSE en cas d'erreur.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-unsubscribe">
   <refnamediv>
    <refname>imap_unsubscribe</refname>
    <refpurpose>
      Termine la souscription &agrave; une bo&icirc;te aux lettres.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_unsubscribe</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_unsubscribe</function> termine la souscription &agrave;
      la bo&icirc;te aux lettres <parameter>mbox</parameter>.
    </para>
    <para>
      Retourne TRUE en cas de succ&egrave;s, et FALSE en cas d'erreur.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-qprint">
   <refnamediv>
    <refname>imap_qprint</refname>
    <refpurpose>
      Convertit une cha&icirc;ne &agrave; guillemets en une
      cha&icirc;ne &agrave; 8 bits.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_qprint</function></funcdef>
      <paramdef>string <parameter>string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_qprint</function> convertit la cha&icirc;ne &agrave;
     guillemets <parameter>string</parameter> en une cha&icirc;ne &agrave;
     8 bits.
    </para>
    <para>
      Retourne une cha&icirc;ne 8 bits (binaire).
    </para>
    <para>
     Voir aussi <function>imap_8bit</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-8bit">
   <refnamediv>
    <refname>imap_8bit</refname>
    <refpurpose>
      Convertit une cha&icirc;ne &agrave; 8 bits en une cha&icirc;ne &agrave; guillemets.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_8bit</function></funcdef>
      <paramdef>string <parameter>string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_8bit</function> convertit la cha&icirc;ne &agrave; 8 bits
      en une cha&icirc;ne &agrave; guillemets.
    </para>
    <para>
      Retourne une cha&icirc;ne &agrave; guillemets.
    </para>
    <para>
     Voir aussi <function>imap_qprint</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-binary">
   <refnamediv>
    <refname>imap_binary</refname>
    <refpurpose>
      Convertit une cha&icirc;ne &agrave; 8 bits en une cha&icirc;ne &agrave; base64.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_binary</function></funcdef>
      <paramdef>string <parameter>string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_binary</function> convertit la cha&icirc;ne &agrave;
     8 bits <parameter>string</parameter> en une cha&icirc;ne &agrave; base64.
    </para>
    <para>
      Retourne la cha&icirc;ne cod&eacute;e.
    </para>
    <para>
     Voir aussi <function>imap_base64</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-scanmailbox">
   <refnamediv>
    <refname>imap_scanmailbox</refname>
    <refpurpose>
      Lis la liste des bo&icirc;tes aux lettres, et y recherche une cha&icirc;ne.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_scanmailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_scanmailbox</function> retourne un tableau contenant
     les noms des bo&icirc;tes aux lettres qui contiennent la cha&icirc;ne
     <parameter>string</parameter>. <function>imap_scanmailbox</function>
     est simialaire &agrave; <function>imap_listmailbox</function>,
     mais va aussi rechercher la cha&icirc;ne <parameter>string</parameter> dans
     dans les donn&eacute;es de la bo&icirc;te aux lettres. Reportez vous &agrave;
     <function>imap_getmailboxes</function> pour une description des
     param&egrave;tres <parameter>ref</parameter> et <parameter>pattern</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-mailboxmsginfo">
   <refnamediv>
    <refname>imap_mailboxmsginfo</refname>
    <refpurpose>
      Lit les informations &agrave; propos de la bo&icirc;te aux lettres courante.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>imap_mailboxmsginfo</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_mailboxmsginfo</function> retourne les informations &agrave;
      propos de la bo&icirc;te aux lettres courante. Retourne FALSE en cas
      d'&eacute;chec.
    </para>
    <para>
      <function>imap_mailboxmsginfo</function> v&eacute;rifie le statut courant de
      la bo&icirc;te aux lettres sur le serveur, et retourne un objet avec les
      propri&eacute;t&eacute;s suivantes :
    </para>
    <para>
     <table>
      <title>Propri&eacute;t&eacute;s de bo&icirc;te aux lettres</title>
      <tgroup cols="2">
       <tbody>
        <row>
		 <entry>Date</entry>
		 <entry>
		   Date de derni&egrave;re modification du contenu de la bo&icirc;te aux lettres
		 </entry>
		</row>
        <row>
		 <entry>Driver</entry>
		 <entry>Pilote</entry>
		</row>
        <row>
		 <entry>Mailbox</entry>
		 <entry>Nom de la bo&icirc;te aux lettres</entry>
		</row>
        <row>
		 <entry>Nmsgs</entry>
		 <entry>Nombre de messages</entry>
		</row>
        <row>
		 <entry>Recent</entry>
		 <entry>Nombre de messages r&eacute;cents</entry>
		</row>
        <row>
		 <entry>Unread</entry>
		 <entry>Nombre de messages non lus</entry>
		</row>
        <row>
		 <entry>Deleted</entry>
		 <entry>Nombre de messages effac&eacute;s</entry>
		</row>
        <row>
		 <entry>Size</entry>
		 <entry>Taille de la bo&icirc;te aux lettres</entry>
		</row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <example>
      <title>Exemple avec <function>imap_mailboxmsginfo</function></title>
      <programlisting role="php">
&lt;?php
$mbox = imap_open("{your.imap.host}INBOX","utilisateur", "mot_de_passe")
      || die("conexion impossible: ".imap_last_error());
$check = imap_mailboxmsginfo($mbox);
if($check) {
    print "Date: "    . $check->Date    ."&lt;br>\n" ;
    print "Pilote: "  . $check->Driver  ."&lt;br>\n" ;
    print "Mailbox: " . $check->Mailbox ."&lt;br>\n" ;
    print "Messages: ". $check->Nmsgs   ."&lt;br>\n" ;
    print "R&eacute;cent: "  . $check->Recent  ."&lt;br>\n" ;
    print "Non lus: "  . $check->Unread  ."&lt;br>\n" ;
    print "Effac&eacute;s: " . $check->Deleted ."&lt;br>\n" ;
    print "Taille: "    . $check->Size    ."&lt;br>\n" ;
} else {
    print "imap_check() a &eacute;chou&eacute;: ".imap_last_error(). "&lt;br>\n";
}
imap_close($mbox);
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-rfc822-write-address">
   <refnamediv>
    <refname>imap_rfc822_write_address</refname>
    <refpurpose>
      Retourne une adresse email proprement format&eacute;e
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string
      <function>imap_rfc822_write_address</function>
     </funcdef>
      <paramdef>string <parameter>mailbox</parameter></paramdef>
      <paramdef>string <parameter>host</parameter></paramdef>
      <paramdef>string <parameter>personal</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <parameter>mailbox</parameter> retourne une adresse email proprement
      format&eacute;e, &agrave; partir du nom de la bo&icirc;te aux
      lettre de l'h&ocirc;te <parameter>host</parameter>, et
      des informations personnelles <parameter>personal</parameter>.
    </para>
    <para>
     <example>
      <title>Exemple avec <function>imap_rfc822_write_address</function></title>
      <programlisting role="php">
print imap_rfc822_write_address("hartmut","cvs.php.net","Hartmut Holzgraefe")."\n";
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-rfc822-parse-adrlist">
   <refnamediv>
    <refname>imap_rfc822_parse_adrlist</refname>
    <refpurpose>Analyse une cha&icirc;ne d'adresse.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string
      <function>imap_rfc822_parse_adrlist</function>
     </funcdef>
      <paramdef>string <parameter>address</parameter></paramdef>
      <paramdef>string <parameter>default_host</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <parameter>address</parameter> analyse la cha&icirc;ne
      <parameter>address</parameter> et essaie, pour chaque adresse,
      de retourner un tableau d'objets. Les 4 objets sont :
    </para>
    <para>
     <itemizedlist>
      <listitem>
       <simpara>
        mailbox  - Le nom de la bo&icirc;te aux lettres
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        host - le nom de l'h&ocirc;te
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        personal - Le nom personnel
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        adl - at domain source route (NDT : ???).
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title>Exemple avec <function>imap_rfc822_parse_adrlist</function></title>
      <programlisting role="php">
$address_string = "Hartmut Holzgraefe &lt;hartmut@cvs.php.net>, postmaster@somedomain.net, root";
$address_array  = imap_rfc822_parse_adrlist($address_string,"somedomain.net");
if(! is_array($address_array)) die("une erreur...\n");
reset($address_array);
while(list($key,$val)=each($address_array)){
  print "bo&icirc;te   : ".$val->mailbox."&lt;br>\n";
  print "h&ocirc;te    : ".$val->host."&lt;br>\n";
  print "personel: ".$val->personal."&lt;br>\n";
  print "adl     : ".$val->adl."&lt;p>\n";
}
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-setflag-full">
   <refnamediv>
    <refname>imap_setflag_full</refname>
    <refpurpose>Positionne un flag sur un message.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_setflag_full</function></funcdef>
      <paramdef>int <parameter>stream</parameter></paramdef>
      <paramdef>string <parameter>sequence</parameter></paramdef>
      <paramdef>string <parameter>flag</parameter></paramdef>
      <paramdef>string <parameter>options</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_setflag_full</function> affecte le flag sp&eacute;cifi&eacute;
      aux messages de la sequence donn&eacute;.
    </para>
    <para>
     Les flags que vous pouvez modifier sont "\\Seen", "\\Answered",
     "\\Flagged", "\\Deleted", "\\Draft" et "\\Recent" (comme d&eacute;fini dans
     la RFC2060).
    </para>
    <para>
     Les options sont un masque de bits, et peuvent contenir les valeurs suivantes :
     <informalexample>
      <literallayout>
        ST_UID         la s&eacute;quence contient des UIDs au lieu de num&eacute;ro
        de s&eacute;quence.
      </literallayout>
     </informalexample>
    </para>
    <para>
     <example>
      <title>Exemple avec <function>imap_setflag_full</function></title>
      <programlisting role="php">
$mbox = imap_open("{your.imap.host:143}","utilisateur","mot_de_passe")
     || die("can't connect: ".imap_last_error());
$status = imap_setflag_full($mbox,"2,5","\\Seen \\Flagged");
print gettype($status)."\n";
print $status."\n";
imap_close($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-clearflag-full">
   <refnamediv>
    <refname>imap_clearflag_full</refname>
    <refpurpose>Supprime un flag sur un message.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string
      <function>imap_clearflag_full</function>
     </funcdef>
      <paramdef>int <parameter>stream</parameter></paramdef>
      <paramdef>string <parameter>sequence</parameter></paramdef>
      <paramdef>string <parameter>flag</parameter></paramdef>
      <paramdef>string <parameter>options</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
       <parameter>stream</parameter> efface le flag sp&eacute;cifi&eacute; dans
       les messages de la s&eacute;quence <parameter>sequence</parameter>.
    </para>
    <para>
      Les options sont un masque de bit, qui accepte les valeurs suivantes :
     <informalexample>
      <literallayout>
        ST_UID  : la s&eacute;quence contient des UIDs au lieu de num&eacute;ro
        de s&eacute;quence
      </literallayout>
     </informalexample>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-sort">
   <refnamediv>
    <refname>imap_sort</refname>
    <refpurpose>Trie des messages.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_sort</function></funcdef>
      <paramdef>int <parameter>stream</parameter></paramdef>
      <paramdef>int <parameter>criteria</parameter></paramdef>
      <paramdef>int <parameter>reverse</parameter></paramdef>
      <paramdef>int <parameter>options</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
       <function>imap_sort</function> retourne un tableau de nombre de message,
       tri&eacute;s suivant les param&egrave;tres suivants :
    </para>
    <para>
       <parameter>reverse</parameter> vaut 1 pour signifier : tri inverse.
    </para>
    <para>
     Les crit&egrave;res peuvent &ecirc;tre un (et un seul) parmis les suivants :
     <informalexample>
      <literallayout>
        SORTDATE        Date du message
        SORTARRIVAL     Date d'arriv&eacute;e
        SORTFROM        Nom de la premi&egrave;re bo&icirc;te aux lettres de l'adresse d'origine (From address)
        SORTSUBJECT     Sujet du message
        SORTTO          Nom de la premi&egrave;re bo&icirc;te aux lettres de destination (To address)
        SORTCC          Nom de la bo&icirc;te aux lettres de copie cach&eacute;e (cc address)
        SORTSIZE        Taille du message en octets
      </literallayout>
     </informalexample>
    </para>
    <para>
    Les flags dont des masques de bits, d'un ou plusieurs des &eacute;l&eacute;ments
    suivants :
    <informalexample>
      <literallayout>
        SE_UID          Retourne l'UIDs &agrave; la place d'une s&eacute;quence
        de nombres.
        SE_NOPREFETCH   Ne pas pr&eacute;-t&eacute;l&eacute;charger les messages
        trouv&eacute;s.
      </literallayout>
     </informalexample>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-fetchheader">
   <refnamediv>
    <refname>imap_fetchheader</refname>
    <refpurpose>Retourne l'ent&ecirc;te d'un message.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_fetchheader</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msgno</parameter></paramdef>
      <paramdef>int <parameter>flags</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
       <function>imap_fetchheader</function> retourne l'ent&ecirc;te brut et
       complet RFC 822 du message <parameter>msgno</parameter>, et le retourne
       sous la forme d'une cha&icirc;ne.
    </para>
    <para>
     Les options sont :
     <informalexample>
      <literallayout>
        FT_UID          L'argument msgno est un UID
        FT_INTERNAL     la cha&icirc;ne renvoy&eacute;e est au format "internal" ,
                        c'est &agrave; dire sans canonisation des CRLF
        FT_PREFETCHTEXT RFC822.TEXT doit &ecirc;tre pr&eacute;
        t&eacute;l&eacute;charg&eacute; en m&ecirc;me temps que l'ent&ecirc;te.
        Cela r&eacute;duit le RTT sur une connexion IMAP, si le message complet
        est souhait&eacute;. (e.g. dans une op&eacute;ration de sauvegarde dans
        un fichier).
      </literallayout>
     </informalexample>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-uid">
   <refnamediv>
    <refname>imap_uid</refname>
    <refpurpose>
      Retourne l' UID d'un message.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_uid</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msgno</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_uid</function> retourne l'UID pour le message
     <parameter>msgno</parameter>. Un UID est un identifant unique
     que ne change jamais, alors que le num&eacute;ro du message dans
     la lsite des messages peut changer &agrave; toute modification
     de la bo&icirc;te aux lettres. C'est la fonction contraire de
     <function>imap_msgno</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-msgno">
   <refnamediv>
    <refname>imap_msgno</refname>
    <refpurpose>
     Retourne le num&eacute;ro de s&eacute;quence de message pour un UID donn&eacute;.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_msgno</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>uid</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_msgno</function> retourne le num&eacute;ro de s&eacute;quence
      de message pour l'UID <parameter>uid</parameter>.
      C'est la fonction contraire de <function>imap_uid</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-search">
   <refnamediv>
    <refname>imap_search</refname>
    <refpurpose>
     Retourne un tableau de message apr&egrave;s recherche.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_search</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>criteria</parameter></paramdef>
      <paramdef>int <parameter>flags</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_search</function> effectue une recherche dans la bo&icirc;te aux
      lettres courantes, sur le flot IMAP courant. <parameter>criteria</parameter>
      est une cha&icirc;ne, d&eacute;limit&eacute;e par des espaces, dans laquelle
      les mots-cl&eacute;s suivants sont accept&eacute;s. Tous les arguments
      multi-mots doivent &ecirc;tre entre guillemets :
     <itemizedlist>
      <listitem>
       <simpara>
		ALL - retourne tous les message qui v&eacute;rifie le reste du crit&egrave;re.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		ANSWERED - tous les messages avec le flag \\ANSWERED
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		BCC "string" - tous les messages avec la cha&icirc;ne "string" dans le
		champs Bcc:
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		BEFORE "date" - tous les messages avec Date: avant "date"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		BODY "string" - tous les messages avec "string" dans le corps
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		CC "string" - tous les messages avec "string" dans le champs Cc:
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		DELETED - tous les messages effac&eacute;s
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		FLAGGED - tous les messages avec le flag \\FLAGGED (parfois
		interpr&eacute;t&eacute; comme Important ou Urgent)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		FROM "string" - tous les messages avec la cha&icirc;ne "string" dan le
		champs From:
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		KEYWORD "string" - tous les messags avec la cha&icirc;ne "string" comme mot cl&eacute;
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		NEW - tous les nouveaux messages
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		OLD - tous les anciens messages
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		ON "date" - tous les messages avec la date "date" comme champs Date:
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		RECENT - tous les messages avec le flag \\RECENT
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		SEEN - tous les messages lus (avec le flag\\SEEN flag)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		SINCE "date" - tous les messages avec la date Date: apr&egrave;s "date"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		SUBJECT "string" - tous les messages avec la cha&icirc;ne "string"
		dans le champs Subject:
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		TEXT "string" - tous les messages avec le texte "string"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		TO "string" - tous les messages avec la cha&icirc;ne "string" dans le
		champs To:
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		UNANSWERED - tous les messages non r&eacute;pondus
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		UNDELETED - tous les messages non effac&eacute;s
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		UNFLAGGED - tous les messages non flagg&eacute;s
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		UNKEYWORD "string" - tous les messages dans le mot cl&eacute;s "string"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		UNSEEN - tous les messages non lus
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
      Par exemple, pour rechercher les messages non r&eacute;pondus, envoy&eacute;s
      par maman, vous pouvez utiliser : "UNANSWERED FROM maman". Les recherches
      semblent insensibles &agrave; la casse. Cette liste de crit&egrave;res est
      issue du code d'un client C UW et peut &ecirc;tre incompl&egrave;te ou
      inpr&eacute;cise. (voir aussi RFC2060, section 6.4.4).
    </para>
    <para>
     Les valeurs pour les flags sont SE_UID, qui fait que le tableau r&eacute;ponse
     contient les UIDs plut&ocirc;t que les num&eacute;ros de s&eacute;quence.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-last-error">
   <refnamediv>
    <refname>imap_last_error</refname>
    <refpurpose>
     Retourne la derni&egrave;re erreur (si elle existe) qui est survenu lors
     de la derni&egrave;re requ&ecirc;te.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_last_error</function></funcdef>
      <paramdef>void </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_last_error</function> retourne le texte complet de la
     derni&egrave;re erreur IMAP (si elle existe) qui est survenu lors de
     la derni&egrave;re requ&ecirc;te. La pile d'erreur n'est pas touch&eacute;e.
     Appeler <function>imap_last_error</function> successivement dans nouvelles
     erreurs retournera la m&ecirc;me erreur.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-errors">
   <refnamediv>
    <refname>imap_errors</refname>
    <refpurpose>
      Retourne toutes les erreurs (si elles existent).
   </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_errors</function></funcdef>
      <paramdef>void </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_errors</function> retourne tous les messages d'erreurs IMAP
      g&eacute;n&eacute;r&eacute;s depuis le dernier appel &agrave;
      <function>imap_errors</function>, ou depuis le d&eacute;but de la page.
      Lorsque <function>imap_errors</function> est appel&eacute;s, la pile
      d'erreur est vid&eacute;e.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-alerts">
   <refnamediv>
    <refname>imap_alerts</refname>
    <refpurpose>
      Retourne toutes les alertes
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_alerts</function></funcdef>
      <paramdef>void </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_alerts</function> retourne tous les messages d'alerte
     IMAP g&eacute;n&eacute;r&eacute;s depuis le dernier appel &agrave;
     <function>imap_alerts</function> ou depuis le d&eacute;but de la page.
     Lorsque <function>imap_alerts</function> est appel&eacute;, la pile
     d'alerte est vid&eacute;e.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-status">
   <refnamediv>
    <refname>imap_status</refname>
    <refpurpose>
     Retourne les informations de statut sur une bo&icirc;te aux lettres
     autres que la bo&icirc;te courante.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>imap_status</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mailbox</parameter></paramdef>
      <paramdef>int <parameter>options</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>imap_status</function> retourne un objet contenant les informations
      de statut. Les options valables sont :
     <itemizedlist>
      <listitem>
       <simpara>
		SA_MESSAGES - met la valeur de status->messages au nombre de messages dans la
        bo&icirc;tes aux lettres.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		SA_RECENT - met la valeur destatus->recent au nombre de messages
		r&eacute;cents  dans la bo&icirc;te aux lettres.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		SA_UNSEEN - met la valeur de status->unseen au nombre de messages
		non lus dans la bo&icirc;te aux lettres.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		SA_UIDNEXT - met la valeur de status->uidnext &agrave; la procha&icirc;ne
		valeur d'uid qui sera utilis&eacute;e.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		SA_UIDVALIDITY - met la valeur de status->uidvalidity &agrave; une
		constante, qui change lorsque l'uid de la bo&icirc;te aux lettres
		n'est plus valide.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
		SA_ALL - fixe les valeurs de de toutes les pr&eacute;c&eacute;dents.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     status->flags est aussi fix&eacute; : c'est un masque de bit qui
     peut contenir tous les flags ci dessus.
    </para>
    <para>
     <example>
      <title>Exemple <function>imap_status</function></title>
      <programlisting role="php">
$mbox = imap_open("{your.imap.host}","utilisateur","mot_de_passe",OP_HALFOPEN)
      || die("can't connect: ".imap_last_error());
$status = imap_status($mbox,"{your.imap.host}INBOX",SA_ALL);
if($status) {
  print("Messages:   ". $status->messages   )."&lt;br>\n";
  print("R&eacute;cents:     ". $status->recent     )."&lt;br>\n";
  print("Non lus:     ". $status->unseen     )."&lt;br>\n";
  print("UIDnext:    ". $status->uidnext    )."&lt;br>\n";
  print("UIDvalidit&eacute;:". $status->uidvalidity)."&lt;br>\n";
} else
  print "imap_status a &eacute;chou&eacute; : ".imap_lasterror()."\n";
imap_close($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-utf7-decode">
   <refnamediv>
    <refname>imap_utf7_decode</refname>
    <refpurpose>
     D&eacute;code une cha&icirc;ne modifi&eacute;e UTF-7.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_utf7_decode</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_utf7_decode</function> d&eacute;code la cha&icirc;ne UTF-7
     <parameter>text</parameter> en donn&eacute;es 8 bits.
    </para>
    <para>
     <function>imap_utf7_decode</function> retourne les donn&eacute;es
     8bits d&eacute;cod&eacute;es, ou FALSE si la cha&icirc;ne <parameter>text</parameter>
     n'est pas au format UTF-7. Cette fonction sert &agrave; d&eacute;coder des noms
     de bo&icirc;tes aux lettres qui contiennent des caract&egrave;res internationaux
     hors de l'espace ASCII. Le standard UTF-7 est d&eacute;fini
     dans la <ulink url="&url.rfc;rfc2060.html">RFC 2060</ulink>, section
     5.1.3 (l'original UTF-7 a &eacute;t&eacute; d&eacute;fini dans <ulink
     url="&url.rfc;rfc1642.html">RFC1642</ulink>).
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-utf7-encode">
   <refnamediv>
    <refname>imap_utf7_encode</refname>
    <refpurpose>
     Convertie des donn&eacute;es 8bit en texte UTF-7.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_utf7_encode</function></funcdef>
      <paramdef>string <parameter>data</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_utf7_encode</function> retourne les donn&eacute;es
     <parameter>data</parameter> 8bits encod&eacute;es, ou FALSE si une erreur est
     survenue. Cette fonction sert &agrave; encoder des noms de bo&icirc;tes aux lettres qui
     contiennent des caract&egrave;res internationaux
     hors de l'espace ASCII. Le standard UTF-7 est d&eacute;fini
     dans la <ulink url="&url.rfc;rfc2060.html">RFC 2060</ulink>, section
     5.1.3 (l'original UTF-7 a &eacute;t&eacute; d&eacute;fini dans <ulink
     url="&url.rfc;rfc1642.html">RFC1642</ulink>).
    </para>
    <para>
      Retourne un texte UTF-7.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-utf8">
   <refnamediv>
    <refname>imap_utf8</refname>
    <refpurpose>
      Convertit du texte en UTF8
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_utf8</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_utf8</function> convertit le texte <parameter>text</parameter>
     en  UTF8 (comme d&eacute;fini dans <ulink url="&url.rfc;rfc2044.html">RFC2044</ulink>).
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-fetch-overview">
   <refnamediv>
    <refname>imap_fetch_overview</refname>
    <refpurpose>
     Lit un sommaire des ent&ecirc;tes de messages
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_fetch_overview</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>sequence</parameter></paramdef>
      <paramdef>int <parameter><optional>flags</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_fetch_overview</function> lit les ent&ecirc;tes des messages
     mails de la s&eacute;quence <parameter>sequence</parameter> et retourne
     un sommaire de leur contenu. <parameter>sequence</parameter> va contenir
     une s&eacute;quence d'indice de message ou d'UIDs, si <parameter>flags</parameter>
     cotient FT_UID. La valeur retourn&eacute;e est un tableau d'objets, un par
     message d'ent&ecirc;te d&eacute;crit :
     <itemizedlist>
      <listitem>
       <simpara>
        subject - Le sujet du message
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        from - Exp&eacute;diteur
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        date - Date d'exp&eacute;dition
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        message_id - Identification du message
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        references - est une r&eacute;f&eacute;rence sur l'id de ce message
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        size - taille en octets
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        uid - UID du message dans la bo&icirc;te aux lettres
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        msgno - num&eacute;ro de s&eacute;quence du message dans la bo&icirc;te
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        recent - Ce message est r&eacute;cent
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        flagged -  Ce message est marqu&eacute;
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        answered -  Ce message a donn&eacute; lieu &agrave; une r&eacute;ponse
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        deleted -  Ce message est marqu&eacute; pour l'effacement
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        seen -  Ce message est d&eacute;j&agrave; lu
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        draft -  Ce message est un brouillon
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title>Exemple avec <function>imap_fetch_overview</function></title>
      <programlisting role="php">
$mbox = imap_open("{your.imap.host:143}","utilisateur","mot_de_passe")
     || die("connexion impossible : ".imap_last_error());
$overview = imap_fetch_overview($mbox,"2,4:6",0);
if(is_array($overview)) {
        reset($overview);
        while( list($key,$val) = each($overview)) {
                print     $val->msgno
                . " - " . $val->date
                . " - " . $val->subject
                . "\n";
        }
}
imap_close($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-mime-header-decode">
   <refnamediv>
    <refname>imap_mime_header_decode</refname>
    <refpurpose>D&eacute;code les &eacute;l&eacute;ments MIME d'un ent&ecirc;te</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_header_decode</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_mime_header_decode</function> d&eacute;code un message
     MIME qui contient des donn&eacute;es non ASCII
     (Voir  <ulink url="&url.rfc;rfc2047.html">RFC2047</ulink>)
     Les &eacute;l&eacute;ments d&eacute;cod&eacute;s sont retourn&eacute;s dans un tableau
     d'objets. Chacun de ces objets a deux propri&eacute;t&eacute;s :
     "charset" &amp; "text". Si l'&eacute;l&eacute;ment n'a pas &eacute;t&eacute; encod&eacute;,
     ou, en d'autres termes, sil il est en clair (plain US_ASCII),
     la propri&eacute;t&eacute; "charset" est mise &agrave; "default".
    </para>
    <para>
     <example>
      <title>Exemple <function>imap_mime_header_decode</function></title>
      <programlisting role="php">
$text="=?ISO-8859-1?Q?Keld_J=F8rn_Simonsen?= &lt;keld@dkuug.dk>";
$elements=imap_mime_header_decode($text);
for($i=0;$i&lt;count($elements);$i++) {
	echo "Charset: {$elements[$i]->charset}\n";
	echo "Texte: {$elements[$i]->text}\n\n";
}
      </programlisting>
     </example>
    </para>
    <para>
     Dans l'exemple ci dessus, on trouve deux &eacute;l&eacute;ments : le premier
     a &eacute;t&eacute; encod&eacute; en ISO-8859-1, et le second est en clair.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-mail-compose">
   <refnamediv>
    <refname>imap_mail_compose</refname>
    <refpurpose>
     Cr&eacute;e un message MIME
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_mail_compose</function></funcdef>
      <paramdef>array <parameter>envelope</parameter></paramdef>
      <paramdef>array <parameter>body</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    </para>
    <para>
     <example>
      <title>Exemple <function>imap_mail_compose</function> example</title>
      <programlisting role="php">
&lt;?php
$envelope["from"]="musone@afterfive.com";
$envelope["to"]="musone@darkstar";
$envelope["cc"]="musone@edgeglobal.com";
$part1["type"]=TYPEMULTIPART;
$part1["subtype"]="mixed";
$filename="/tmp/imap.c.gz";
$fp=fopen($filename,"r");
$contents=fread($fp,filesize($filename));
fclose($fp);
$part2["type"]=TYPEAPPLICATION;
$part2["encoding"]=ENCBINARY;
$part2["subtype"]="octet-stream";
$part2["description"]=basename($filename);
$part2["contents.data"]=$contents;
$part3["type"]=TYPETEXT;
$part3["subtype"]="plain";
$part3["description"]="description3";
$part3["contents.data"]="contents.data3\n\n\n\t";
$body[1]=$part1;
$body[2]=$part2;
$body[3]=$part3;
echo nl2br(imap_mail_compose($envelope,$body));
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.imap-mail">
   <refnamediv>
    <refname>imap_mail</refname>
    <refpurpose>
     Send an email message
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_mail</function></funcdef>
      <paramdef>string <parameter>to</parameter></paramdef>
      <paramdef>string <parameter>subject</parameter></paramdef>
      <paramdef>string <parameter>message</parameter></paramdef>
      <paramdef>string
       <parameter><optional>additional_headers</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>cc</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>bcc</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>rpath</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_mail</function> est uniquement disponible sous PHP 3.
    </para>
   </refsect1>
  </refentry>
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
