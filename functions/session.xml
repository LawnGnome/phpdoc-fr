 <reference id="ref.session">
  <title>Sessions</title>
  <titleabbrev>Sessions</titleabbrev>
  <partintro>
   <para>
	La gestion des sessions avec PHP est un moyen de sauver des informations
	entre deux acc&egrave;s. Cela permet notamment de construire des
	applications personnalis&eacute;es, et d'accro&icirc;tre l'attrait de votre site.
   </para>
   <para>
	Si vous connaissez d&eacute;j&agrave; la gestion des sessions avec
	phplib, vous remarquerez que certains concepts sont similaires.
   </para>
   <para>
	Chaque visiteur qui acc&egrave;de &agrave; votre site se voit assigner
	un num&eacute;ro d'identifiant, appel&eacute; plus loin "identifiant de
	session". Celui ci est enregistr&eacute; soit dans un cookie, chez
	le client, soit dans l'URL.
   </para>
   <para>
	Les sessions vous permettront d'enregistrer des variables, pour
	les pr&eacute;server et les r&eacute;utiliser tout au long des
	requ&ecirc;tes. Lorsqu'un visiteur acc&egrave;de &agrave; votre site,
	PHP v&eacute;rifiera automatiquement (si session.auto_start est &agrave;
	1) ou manuellement (explicitement avec <function>session_start</function>
	ou implicitement avec <function>session_register</function>) si une
	session a d&eacute;j&agrave; &eacute;t&eacute; ouverte. Si
	une telle session existe d&eacute;j&agrave;, l'environnement
	pr&eacute;c&eacute;dent sera recr&eacute;&eacute;.
   </para>
   <para>
	Toutes les variables &agrave; enregistrer seront enregistr&eacute;es
	sur le disque &agrave; la fin de chaque requ&ecirc;te. Les variables
	enregistr&eacute;es mais non d&eacute;finies seront marqu&eacute;es
	comme tel. Lors des acc&egrave;s ult&eacute;rieurs, elles ne seront
	d&eacute;finies que si l'utilisateur le fait.
   </para>
   <para>
    Les options <literal>track_vars</literal> et <literal>gpc_globals</literal>
    modifient la fa&ccedil;on avec laquelle les variables sont recharg&eacute;ees.
   </para>
   <note>
    <para>
     Depuis PHP 4.0.3,
     <link linkend="ini.track-vars"><literal>track_vars</literal></link> est toujours
     activ&eacute;e.
    </para>
   </note>
   <para>
    Si <literal>track_vars</literal> est activ&eacute;e, et <link
    linkend="ini.register-globals"><literal>register_globals</literal></link>
    est d&eacute;sactiv&eacute;e, alors les variables de session seront accessibles
    uniquement dans le tableau associatif global $HTTP_STATE_VARS.
    Les variables de sessions lues seront disponibles dans
    $HTTP_STATE_VARS.
    <example>
     <title>
      Enregistrer une variable lorsque l'option <link
      linkend="ini.track-vars"><literal>track_vars</literal></link>
      est activ&eacute;e
     </title>
     <programlisting role="php">
&lt;?php
session_register("compte");
$HTTP_SESSION_VARS["compte"]++;
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Si <link linkend="ini.register-globals"><literal>register_globals</literal></link>
    est activ&eacute;, alors les variables de session seront plac&eacute;s
    dans les variables globales associ&eacute;es.
    <example>
     <title>
      Enregistrer une variable lorsque <link
      linkend="ini.register-globals"><literal>register_globals</literal></link>
      est activ&eacute;e
     </title>
     <programlisting role="php">
&lt;?php
session_register("compte");
$compte++;
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Si les deux options
    <link linkend="ini.track-vars"><literal>track_vars</literal></link> et
    <link linkend="ini.register-globals"><literal>register_globals</literal></link>
    sont activ&eacute;es, alors les variables globales et
    $HTTP_STATE_VARS contiendront les valeurs de session.
   </para>
   <para>
    Il y a deux modes de propagation de l'identifiant de session :
    <itemizedlist>
     <listitem>
	<simpara>
	 Cookies
	</simpara>
     </listitem>
     <listitem>
	<simpara>
	 Param&egrave;tre URL
	</simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Le module de session supporte les deux techniques. La
    m&eacute;thode par cookies est optimale, mais &eacute;tant
    donn&eacute; le peu de fiabilit&eacute; (les clients peuvent les refuser,
    ou les effacer), on ne peut pas se contenter de cette technique.
    La deuxi&egrave;me m&eacute;thode place l'identifiant de session
    directement dans l'URL.
   </para>
   <para>
    PHP est capable de g&eacute;rer ceci de mani&egrave;re transparente,
    lorsque vous le compilez avec l'option <literal>--enable-trans-sid</literal>.
    Dans ce cas, les URL relatives seront modifi&eacute;es pour
    contenir l'identifiant de session automatiquement. Sinon,
    vous pouvez toujours utiliser la constante <literal>SID</literal>,
    qui sera d&eacute;finie si le client n'envoie pas le cookie
    appropri&eacute;. <literal>SID</literal> prend la forme de
    <literal>session_name=session_id</literal>, ou bien, c'est
    une cha&icirc;ne vide.
   </para>
    <note>
     <para>
      La fonction qui g&eacute;rera l'&eacute;criture des donn&eacute;es ne sera appel&eacute;e
      qu'une fois le script aura envoy&eacute; toutes ses donn&eacute;es. Ainsi,
      les affichages tent&eacute;s par cette fonction ne pourront jamais
      &ecirc;tre recus par le navigateur. Si un tel affichage est n&eacute;cessaire,
      il est conseill&eacute; d'&eacute;crire les debugs dans un fichier.
     </para>
    </note>
   <para>
    L'exemple suivant montre comment enregistrer une variable, et comment relier
    correctement des pages avec SID.
    <example>
     <title>Compter le nombre de hit d'un utilisateur.</title>
     <programlisting role="php">
&lt;?php
session_register("compteur");
$compteur++;
?&gt;
Salut visiteur, vous avez vu cette page &lt;?php echo $compteur; ?&gt; times.&lt;P&gt;
&lt;php?
# le &lt;?=SID&gt; est n&eacute;cessaire pour transmettre l'identifiant de session
# au cas o&uacute; les utilisateurs auraient inactiv&eacute; les cookies
?&gt;
     </programlisting>
     <simpara>
      Pour continuer, &lt;A HREF="nextpage.php?&lt;?=SID"?&gt;clique ici&lt;/?&gt;
    </simpara>
    </example>
   </para>
   <para>
    Le <literal>&lt;?=SID-&gt;</literal> n'est pas n&eacute;cessaire, si l'option
    <literal>--enable-trans-sid</literal> a &eacute;t&eacute; utilis&eacute;
    pour compiler PHP.
   </para>
   <para>
    Pour enregistrer ces informations dans une base de donn&eacute;es,
    il vous faut utiliser la fonction <function>session_set_save_handler</function>.
    Il faudra alors impl&eacute;menter la fonction suivante pour
    l'adapter &agrave; MySQL ou toute autre base de donn&eacute;es :
   </para>
   <para>
    Le syst&egrave;me de gestion des sessions dispose d'un grand nombre d'options,
    qui sont plac&eacute;es dans le fichier <filename>php.ini</filename>. En voici
    un survol rapide :
    <itemizedlist>
     <listitem>
	  <simpara>
	  <literal>session.save_handler</literal> d&eacute;fini les noms
	  des fonctions qui seront utilis&eacute;es pour enregistrer et
	  retrouver les donn&eacute;es associ&eacute;es &agrave; une session.
	  Par d&eacute;faut, les sessions sont enregistr&eacute;es dans des
	  <literal>fichiers</literal>.
  	  </simpara>
     </listitem>
     <listitem>
	  <simpara>
	   <literal>session.save_path</literal> d&eacute;fini l'argument qui
  	   est pass&eacute; &agrave; la fonction de sauvegarde. Si vous utilisez
	   la sauvegarde par fichier, cet argument est le chemin jusqu'au dossier
	   o&uacute; les fichiers sont cr&eacute;&eacute;s. Par d&eacute;faut, le
	   dossier est <literal>/tmp</literal>.
	  </simpara>
      <warning>
       <para>
        Si le dossier que vous utilisez a les droits de lecture universels,
        comme <filename>/tmp</filename> (valeur par d&eacute;faut), les autres utilisateurs
        du serveur peuvent aussi lire ces fichiers, et s'imiscer dans vos sessions.
       </para>
      </warning>
     </listitem>
     <listitem>
	  <simpara>
	   <literal>session.name</literal> sp&eacute;cifie le nom de la session,
	   qui sera utilis&eacute; comme nom de cookie. Par d&eacute;faut :
	   <literal>PHPSESSID</literal>.
	  </simpara>
     </listitem>
     <listitem>
	<simpara>
	 <literal>session.auto_start</literal> indique qu'une session doit
	 commencer automatiquement lors de la premier requ&ecirc;te. Par
	 d&eacute;faut &agrave; <literal>0</literal> (inactiv&eacute;).
	</simpara>
     </listitem>
     <listitem>
	<simpara>
	 <literal>session.lifetime</literal> fixe la dur&eacute;e de vie,
	 en secondes, du cookie envoy&eacute; au client. La valeur 0 signifie
	 "jusqu'&agrave; ce que le client soit ferm&eacute;". Par d&eacute;faut
	 &agrave; <literal>0</literal> (inactiv&eacute;).
	</simpara>
     </listitem>
     <listitem>
	<simpara>
	 <literal>session.serialize_handler</literal> d&eacute;fini le
	 nom de la fonction qui sera utilis&eacute;e pour enregistrer et
	 relire les donn&eacute;s. Actuellement, c'est un format interne
	 de PHP (nom : <literal>php</literal>) et WDDX (nom :
	 <literal>wddx</literal>). WDDX n'est utilisable que si
	 PHP a &eacute;t&eacute; compil&eacute; avec le
	 <link linkend="ref.wddx">support WDDX</link>. Par d&eacute;faut,
	 c'est le mode <literal>php</literal> qui est selectionn&eacute;.
	 </simpara>
     </listitem>
     <listitem>
	<simpara>
	 <literal>session.gc_probability</literal> pr&eacute;cise la
	 probabilit&eacute; que la routine gc (garbage collection) soit
	 lanc&eacute;e, en pourcentage. Par d&eacute;faut, <literal>1</literal>.
	</simpara>
     </listitem>
     <listitem>
	<simpara>
	 <literal>session.gc_maxlifetime</literal> fixe la dur&eacute;e,
	 en secondes, au-dela de laquelle les donn&eacute;es
	 consid&eacute;r&eacute;es comme inutiles seront supprim&eacute;es.
	</simpara>
     </listitem>
     <listitem>
	<simpara>
	 <literal>session.referer_check</literal> d&eacute;termine si
	 l'identifiant de session ids utilis&eacute; par des sites externe
	 seront &eacute;limin&eacute;. Si les identifiants de sessions sont
	 propag&eacute;s avec la m&eacute;thode des URL, des utilisateurs qui
	 n'en conna&icirc;trait pas l'utilit&eacute; risque de divulguer ces
	 valeurs, et cela m&eacute;nera &agrave; des probl&egrave;mes de
	 s&eacute;curit&eacute;. Cette option y rem&eacute;die. Par
	 d&eacute;faut :  <literal>0</literal>.
	</simpara>
     </listitem>
     <listitem>
	<simpara>
	 <literal>session.entropy_file</literal> est le chemin jusqu'&agrave;
	 une source externe (fichier) d'entropie, qui sera utilis&eacute;e
	 lors de la cr&eacute;ation de l'identifiant de session. Par exemple,
	 <literal>/dev/random</literal> ou <literal>/dev/urandom</literal> qui
	 sont disponibles sur de nombreux syst&egrave;mes UNIX.
	</simpara>
     </listitem>
     <listitem>
	<simpara>
	 <literal>session.entropy_length</literal> pr&eacute;cise le
	 nombre d'octets qui seront lus dans le fichier ci-dessus.
	 Par d&eacute;faut, <literal>0</literal> (inactiv&eacute;).
	</simpara>
     </listitem>
     <listitem>
	<simpara>
	 <literal>session.use_cookies</literal> cookies indique si le module doit
	 utiliser des cookies pour enregistrer l'identifiant de session chez le client.
	 Par d&eacute;faut, <literal>1</literal> (activ&eacute;).
	</simpara>
     </listitem>
    <listitem>
      <simpara>
       <literal>session.cookie_path</literal> sp&eacute;cifie le chemin &agrave;
       utiliser avec session_cookie. Par d&eacute;faut, <literal>/</literal>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.cookie_domain</literal> sp&eacute;cifie le
       domaine &agrave; utiliser avec session_cookie. Par d&eacute;faut, rien du tout.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.cache_limiter</literal> sp&eacute;cifie le controle du
       cache, &agrave; utiliser avec les pages de sessions (nocache/private/public).
	   Par d&eacute;faut, <literal>nocache</literal>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.cache_expire</literal> sp&eacute;cifie la dur&eacute;e de vie
       des pages de sessions cach&eacute;es, en minutes, mais sans que cela
       n'ait d'efft sur le limiteur "nocache". Par d&eacute;faut, <literal>180</literal>.
      </simpara>
     </listitem>
    </itemizedlist>
    <note>
     <para>
	   La gestion des sessions a &eacute;t&eacute; ajout&eacute;e dans PHP 4.0.
     </para>
    </note>
   </para>
  </partintro>
  <refentry id="function.session-start">
   <refnamediv>
    <refname>session_start</refname>
    <refpurpose>Initialise les donn&eacute;es de session</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>session_start</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>session_start</function> cr&eacute;e une session (ou
     continue la session courante, en fonction de l'identifiant de
     session pass&eacute; par une variable GET ou par un cookie)
    </simpara>
    <simpara>
     <function>session_start</function> retourne toujours <literal>TRUE</literal>.
    </simpara>
    <note>
     <para>
	   <function>session_start</function> a &eacute;t&eacute; ajout&eacute;e en PHP 4.0.
     </para>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.session-destroy">
   <refnamediv>
    <refname>session_destroy</refname>
    <refpurpose>
      D&eacute;truit toutes les donn&eacute;es enregistr&eacute;es d'une session
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>session_destroy</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>session_destroy</function> d&eacute;truit toutes les
     donn&eacute;es associ&eacute;es &agrave; la session courante.
    </simpara>
    <simpara>
     <function>session_destroy</function> retourne <literal>TRUE</literal> en
     cas de succ&egrave;s, et <literal>FALSE</literal> sinon.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.session-name">
   <refnamediv>
    <refname>session_name</refname>
    <refpurpose>Affecte et/ou retourne le nom de la session courante </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>string <function>session_name</function></funcdef>
     <paramdef>string
	<parameter><optional>name</optional></parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     <function>session_name</function>retourne le nom de la session courante.
     Si <parameter>name</parameter> est fourni, le nom de la session changera,
     et prendra la valeur fournie.
    </para>
    <para>
     Le nom de session fait r&eacute;f&eacute;rence &agrave; l'identifiant
     de session dans les cookies. Il ne doit contenir que des
     caract&egrave;res alphanum&eacute;riques; il doit &ecirc;tre court et
     descriptif.  (i.e. surtout pour les utilisateurs d'alertes de cookie).
     Le nom de session est remis &agrave; une valeur par d&eacute;faut,
     enregistr&eacute;es dans <literal>session.name</literal> au moment
     du d&eacute;marrage. Ainsi, vous devez appeler
     <function>session_name</function> &agrave; chaque requ&ecirc;te
     (et avant <function>session_start</function> ou
     <function>session_register</function>).
    </para>
    <example>
     <title>Exemple avec <function>session_name</function></title>
     <programlisting role="php">
&lt;?php
# Change le nom de la session &agrave; WebsiteID
$previous_name = session_name ("WebsiteID");
echo "L'ancien nom de la session &eacute;tait $previous_name&lt;P&gt;";
?&gt;
     </programlisting>
    </example>
    <note>
     <para>
	   <function>session_name</function> a &eacute;t&eacute; ajout&eacute;e
	   en PHP 4.0.
     </para>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.session-module-name">
   <refnamediv>
    <refname>session_module_name</refname>
    <refpurpose>Affecte et/ou retourne le module courant de session courante</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>session_module_name</function></funcdef>
      <paramdef>string
       <parameter><optional>module</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_module_name</function> affecte et/ou retourne
     le module courant de session courante. Si <parameter>module</parameter>
     est fourni, ce module sera utilis&eacute; &agrave; la place du courant.
     <note>
	  <para>
	   <function>session_module_name</function> a &eacute;t&eacute; ajout&eacute;e
	   en PHP 4.0.
	  </para>
     </note>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.session-save-path">
   <refnamediv>
    <refname>session_save_path</refname>
    <refpurpose>Affecte et/ou retourne le chemin de sauvegarde de la session courante </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>session_save_path</function></funcdef>
      <paramdef>string
       <parameter><optional>path</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_save_path</function> retourne le chemin du
     dossier utilis&eacute; pour enregistrer les donn&eacute;es de
     sessions. Si <parameter>path</parameter> est fourni, le chemin
     prendra alors la valeur fournie.
     <note>
	  <para>
	   Sur certains syst&egrave;mes d'exploitation, il vous faudra peut
	   &ecirc;tre fournir un chemin vers un syst&egrave;me de sauvegarde
	   qui peut g&eacute;rer de grandes quantit&eacute;s de petits
	   fichiers efficacement : par exemple, sous Linux, reiserfs peut
	   &ecirc;tre plus efficace que ext2fs.
	</para>
     </note>
     <note>
	  <para>
   	   <function>session_save_path</function> a &eacute;t&eacute; ajout&eacute;e
   	   en PHP 4.0.
	  </para>
     </note>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.session-id">
   <refnamediv>
    <refname>session_id</refname>
    <refpurpose>Affecte et/ou retourne l'identifiant de session courante</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>session_id</function></funcdef>
      <paramdef>string <parameter><optional>id</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_id</function> retourne l'identifiant de session courante.
     Si <parameter>id</parameter> est fourni, il remplacera l'identifiant
     courant de la session.
    </para>
    <para>
     La constante <systemitem>SID</systemitem> peut aussi &ecirc;tre
     utilis&eacute;e pour retrouver le nom de la session courante et
     son identifiant, comme cha&icirc;ne &agrave; ajouter dans les URL.
     <note>
	  <para>
	   <function>session_id</function> a &eacute;t&eacute; ajout&eacute;e
	   en PHP 4.0.
	  </para>
     </note>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.session-register">
   <refnamediv>
    <refname>session_register</refname>
    <refpurpose>
     Enregistre une variable dans la session courante
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>session_register</function></funcdef>
      <paramdef>mixed <parameter>name</parameter></paramdef>
      <paramdef>mixed
       <parameter><optional>...</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_register</function> enregistre une variable avec
     le nom name dans la session courante. <function>session_register</function>
     accepte un nombre d'arguments variable, qui peuvent &ecirc;tre des cha&icirc;nes
     repr&eacute;sentant le nom de la variable, ou bien un tableau, repr&eacute;sentant
     des cha&icirc;nes ou d'autre tableau (r&eacute;cursif).
    </para>
    <para>
	<function>session_register</function> retourne <literal>TRUE</literal> lorsque
	la variable est correctement enregistr&eacute;e.
     <note>
	  <para>
  	   <function>session_register</function> a &eacute;t&eacute; ajout&eacute;e
  	   en PHP 4.0.
	  </para>
     </note>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.session-unregister">
   <refnamediv>
    <refname>session_unregister</refname>
    <refpurpose>
     Supprime une variable dans la session courante
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>session_unregister</function></funcdef>
      <paramdef>string <parameter>name</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_unregister</function> supprime la variable
     nomm&eacute;e <parameter>name</parameter> dans la session courante.
    </para>
    <para>
     <function>session_unregister</function> retourne <literal>TRUE</literal>
     lorsque la variable a &eacute;t&eacute; correctement supprim&eacute;e
     de la session.
     <note>
	  <para>
	   <function>session_unregister</function> a &eacute;t&eacute; ajout&eacute;e
	   en PHP 4.0.
	  </para>
     </note>
    </para>
   </refsect1>
  </refentry>
 <refentry id="function.session-unset">
   <refnamediv>
    <refname>session_unset</refname>
    <refpurpose>
     D&eacute;truit toutes les variables de session
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>session_unset</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_unset</function> d&eacute;truit toutes les variables de
     session couramment enregistr&eacute;es.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.session-is-registered">
   <refnamediv>
    <refname>session_is_registered</refname>
    <refpurpose>
     Indique si une variable a &eacute;t&eacute; enregistr&eacute;e dans la session ou pas
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>session_is_registered</function></funcdef>
      <paramdef>string <parameter>name</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_is_registered</function> retourne <literal>TRUE</literal>
     s'il y a une variable du nom de <parameter>name</parameter>
     enregistr&eacute;e dans la session courante.
     <note>
	  <para>
	   <function>session_is_registered</function> a &eacute;t&eacute; ajout&eacute;e
	   en PHP 4.0.
	  </para>
     </note>
    </para>
   </refsect1>
  </refentry>
    <refentry id="function.session-get-cookie-params">
   <refnamediv>
    <refname>session_get_cookie_params</refname>
    <refpurpose>
     Lit les param&egrave;tres du cookie de session
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>
       array <function>session_get_cookie_params</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_get_cookie_params</function> retourne un
     tableau avec les param&egrave;tres du cookie de la session courante.
     Le tableau contient les &eacute;l&eacute;ments suivants :
     <itemizedlist>
      <listitem>
       <simpara>
        "lifetime" -  La dur&eacute;e de vie du cookie.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "path" -  Le chemin de stockage du cookie.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "domain" -  Le domaine du cookie.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.session-set-cookie-params">
   <refnamediv>
    <refname>session_set_cookie_params</refname>
    <refpurpose>
     Modifie les param&egrave;tres du cookie de session
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>session_set_cookie_params</function></funcdef>
      <paramdef>
       int <parameter>lifetime</parameter>
      </paramdef>
      <paramdef>
       string <parameter><optional>path</optional></parameter>
      </paramdef>
      <paramdef>
       string <parameter><optional>domain</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_set_cookie_params</function> modifie les
     param&egrave;tres du cookie de session, tel qu'ils ont &eacute;t&eacute; d&eacute;finis dans
     le fichier <filename>php.ini</filename>.  L'effet de cette
     fonction ne dure que le temps du script.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.session-decode">
   <refnamediv>
    <refname>session_decode</refname>
    <refpurpose>
      D&eacute;code les donn&eacute;es de session &agrave; partir d'une cha&icirc;ne
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>session_decode</function></funcdef>
      <paramdef>string <parameter>data</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_decode</function> d&eacute;code les donn&eacute;es
     de session &agrave; partir de la cha&icirc;ne <parameter>data</parameter>,
     et affecte les valeurs des variables de session.
     <note>
	  <para>
	   <function>session_decode</function> a &eacute;t&eacute; ajout&eacute;e
	   en PHP 4.0.
	  </para>
     </note>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.session-encode">
   <refnamediv>
    <refname>session_encode</refname>
    <refpurpose>
     Encode les donn&eacute;es de session dans une cha&icirc;ne
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>bool <function>session_encode</function></funcdef>
     <void/>
    </funcsynopsis>
    <para>
     <function>session_encode</function> retourne les donn&eacute;es de
     session dans une cha&icirc;ne.
     <note>
	  <para>
	   <function>session_encode</function> a &eacute;t&eacute; ajout&eacute;e
	   en PHP 4.0.
	  </para>
     </note>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.session-set-save-handler">
   <refnamediv>
    <refname>session_set_save_handler</refname>
    <refpurpose>
     D&eacute;finit les fonctions utilisateurs de stockage des sessions
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>session_set_save_handler</function>
      </funcdef>
      <paramdef>string
      <parameter>open</parameter></paramdef><paramdef>string
      <parameter>close</parameter></paramdef><paramdef>string
      <parameter>read</parameter></paramdef><paramdef>string
      <parameter>write</parameter></paramdef><paramdef>string
      <parameter>destroy</parameter></paramdef><paramdef>string
      <parameter>gc</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_set_save_handler</function> d&eacute;finit les
     fonctions utilisateurs de stockage et chargement des sessions.
     Cela est particuli&egrave;rement pratique pour sp&eacute;cifier une autre
     m&eacute;thode de stockage que celle fournie en standard avec PHP.
     Notamment, il est possible de stocker les sessions dans une
     base de donn&eacute;es.
    </para>
    <note>
     <para>
      Vous devez donner &agrave; l'option de configuration
      <parameter>session.save_handler</parameter> la valeur de
      <parameter>user</parameter> dans votre fichier <filename>php.ini</filename> pour que
      <function>session_set_save_handler</function> soit effective.
     </para>
    </note>
    <para>
     L'exemple suivant fournit un exemple de stockage de session
     dans un fichier, similaire aux fonctions standard de PHP. Cet
     exemple peut &ecirc;tre facilement &eacute;tendu pour utiliser un
     stockage en base de donn&eacute;es, en utilisant votre base pr&eacute;f&eacute;r&eacute;e.
    </para>
    <para>
     <example>
      <title>
       Exemple avec <function>session_set_save_handler</function>
      </title>
      <programlisting role="php">
&lt;?php
function open ($save_path, $session_name) {
  global $sess_save_path, $sess_session_name;
  $sess_save_path = $save_path;
  $sess_session_name = $session_name;
  return(<literal>TRUE</literal>);
}
function close() {
  return(<literal>TRUE</literal>);
}
function read ($id) {
  global $sess_save_path, $sess_session_name;
  $sess_file = "$sess_save_path/sess_$id";
  if ($fp = @fopen($sess_file, "r")) {
    $sess_data = fread($fp, filesize($sess_file));
    return($sess_data);
  } else {
    return("");
  }
}
function write ($id, $sess_data) {
  global $sess_save_path, $sess_session_name;
  $sess_file = "$sess_save_path/sess_$id";
  if ($fp = @fopen($sess_file, "w")) {
    return(fwrite($fp, $sess_data));
  } else {
    return(<literal>FALSE</literal>);
  }
}
function destroy ($id) {
  global $sess_save_path, $sess_session_name;
  $sess_file = "$sess_save_path/sess_$id";
  return(@unlink($sess_file));
}
/***************************************************
 * ATTENTION - Vous devez impl&eacute;menter une routine  *
 * d'entretien des sessions ici.                   *
 ***************************************************/
function gc ($maxlifetime) {
  return <literal>TRUE</literal>;
}
session_set_save_handler ("open", "close", "read", "write", "destroy", "gc");
session_start();
// utilisez vos sessions normalement
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.session-cache-limiter">
   <refnamediv>
    <refname>session_cache_limiter</refname>
    <refpurpose>Lit et/ou modifie le limiteur de cache</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>session_cache_limiter</function></funcdef>
      <paramdef>string
       <parameter><optional>cache_limiter</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_cache_limiter</function> retourne le nom du limiteur
     de cache courant. Si <parameter>cache_limiter</parameter> est sp&eacute;cifi&eacute;,
     le nom du limiteur de cache est remplac&eacute; par cette nouvelle valeur.
    </para>
    <para>
     Le limiteur de cache contr&ocirc;le l'envoi des ent&ecirc;te HTTP envoy&eacute;s au client.
     Ces ent&ecirc;tes d&eacute;terminent les r&egrave;gles de mise en cache des pages. En utilisant
     la valeur de <literal>nocache</literal>, par exemple, vous d&eacute;sactiverez
     la mise en cache cot&eacute; client. La valeur de <literal>public</literal>,
     cependant, le permettra. <literal>private</literal> aussi,
     tout en &eacute;tant l&eacute;g&egrave;rement plus restrictive que <literal>public</literal>.
    </para>
    <para>
     Le limiteur de cache est remis &agrave; sa valeur par d&eacute;faut, stock&eacute;e dans
     <literal>session.cache_limiter</literal>, initialis&eacute;e au lancement.
     Vous devrez donc appeler <function>session_cache_limiter</function> pour
     chaque requ&ecirc;te (et avant l'appel &agrave; <function>session_start</function>).
    </para>
    <example>
     <title>Exemples avec <function>session_cache_limiter</function></title>
     <programlisting role="php">
&lt;?php
# Met le limiteur de cache &agrave; 'private'
session_cache_limiter('private');
$cache_limiter = session_cache_limiter();
echo "Le limiteur de cache vaut actuellement $cache_limiter&lt;P&gt;";
?&gt;
     </programlisting>
    </example>
    <note>
     <para>
      <function>session_cache_limiter</function> a &eacute;t&eacute; ajout&eacute;e dans
      PHP 4.0.3.
     </para>
    </note>
   </refsect1>
  </refentry>
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
