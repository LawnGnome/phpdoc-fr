 <reference id="ref.bzip2">  <title>Compression Bzip2</title>  <titleabbrev>Bzip2</titleabbrev>  <partintro>   <para>    Ce module utilise les fonctions de la librairie     <ulink url="&url.bzip2;">bzip2</ulink>, de Julian Seward pour    &eacute;crire et lire des fichier bzip2 (.bz2) de mani&egrave;re transparente.   </para>   <para>    Le support <acronym>bzip2</acronym> par PHP n'est pas activ&eacute; par    d&eacute;faut. Vous devez utiliser l'option de configuration    <link linkend="install.configure.with-bzip2-dir">--with-bz2[=DIR]</link>     lors de la compilation de PHP pour l'activer. Ce module requiert la librairie    bzip2/libbzip2, version &gt;= 1.0.x.   </para>   <sect1 id="bzip2-example">    <title>Exemple de compression bzip2</title>    <para>     Cet exemple ouvre un fichier temporaire, et &eacute;crit une ligne de test,     puis il en affiche le contenu.    </para>    <example>     <title>Exemple avec bzip2</title>     <programlisting role="php">&lt;?php$filename = "/tmp/fichier_de_test.bz2";$str = "Ceci est une cha&icirc;ne de test.\n";// ouvre le fichier en &eacute;criture$bz = bzopen($filename, "w");// &eacute;crit une cha&icirc;ne dans le fichierbzwrite($bz, $str);// ferme le fichierbzclose($bz);// ouvre le fichier en lecture$bz = bzopen($filename, "r");// lit 10 caract&egrave;resprint bzread($bz, 10);// affiche tout le reste du fichier, puis le fermeprint bzread($bz);bzclose($bz);?&gt;     </programlisting>    </example>   </sect1>  </partintro>  <refentry id="function.bzclose">   <refnamediv>    <refname>bzclose</refname>    <refpurpose>Ferme un fichier bzip2</refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>int <function>bzclose</function></funcdef>      <paramdef>resource <parameter>bz</parameter></paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>bzclose</function> ferme le fichier bzip2      repr&eacute;sent&eacute; par le pointeur <parameter>bz</parameter>.    </para>    <para>     <function>bzclose</function> retourne <literal>TRUE</literal>     en cas de succ&egrave;s, et <literal>FALSE</literal> sinon.    </para>    <para>     Le pointeur de fichier <parameter>bz</parameter> doit &ecirc;tre     valide, et avoir &eacute;t&eacute; ouvert avec <function>bzopen</function>.    </para>    <para>     Voir aussi <function>bzopen</function>.    </para>   </refsect1>  </refentry>  <refentry id="function.bzcompress">   <refnamediv>    <refname>bzcompress</refname>    <refpurpose>Compresse une cha&icirc;ne avec bzip2</refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>string <function>bzcompress</function></funcdef>      <paramdef>string <parameter>source</parameter></paramdef>      <paramdef>int       <parameter><optional>blocksize</optional></parameter>      </paramdef>      <paramdef>int        <parameter><optional>workfactor</optional></parameter>      </paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>bzcompress</function> compresse la cha&icirc;ne      <parameter>source</parameter> et retourne les donn&eacute;es     ainsi encod&eacute;e.    </para>    <para>     Le param&egrave;tre optionnel <parameter>blocksize</parameter> sp&eacute;cifie     la taille de bloc utilis&eacute; durant la compression, et doit &ecirc;tre un     nombre de 1 &agrave; 9, sachant que 9 repr&eacute;sente la meilleure compression,     mais qu'elle utilise plus de ressource pour ce faire.     <parameter>blocksize</parameter> vaut par d&eacute;faut 4.    </para>    <para>     Le param&egrave;tre optionnel <parameter>workfactor</parameter> contr&ocirc;le     le comportement de la compression dans les pires cas de donn&eacute;es     hautement r&eacute;p&eacute;titives. Cette valeur peut aller de 0 &agrave; 250 (0     est une valeur sp&eacute;ciale, et 30 la valeur par d&eacute;faut). En dehors     de <parameter>workfactor</parameter>, le r&eacute;sultat sera le m&ecirc;me.    </para>    <para>     <example>      <title>Exemple avec <function>bzcompress</function></title>      <programlisting role="php">&lt;?php$str = "donn&eacute;es de test";$bzstr = bzcompress($str, 9);?&gt;      </programlisting>     </example>    </para>    <para>     Voir aussi <function>bzdecompress</function>.    </para>   </refsect1>  </refentry>  <refentry id="function.bzdecompress">   <refnamediv>    <refname>bzdecompress</refname>    <refpurpose>D&eacute;compresse une cha&icirc;ne bzip2</refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>string <function>bzdecompress</function></funcdef>      <paramdef>string <parameter>source</parameter></paramdef>      <paramdef>int       <parameter><optional>small</optional></parameter>      </paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>bzdecompress</function> d&eacute;compresse la cha&icirc;ne      <parameter>source</parameter>, en supposant qu'elle a &eacute;t&eacute;     compress&eacute;e avec bzip2, puis la retourne. Si le param&egrave;tre     optionnel <parameter>small</parameter> vaut <literal>TRUE</literal>,     un autre algorithme de d&eacute;compression sera utilis&eacute; : il consomme     moins de m&eacute;moire (le maximum demand&eacute; tombe autour de      2300 ko), mais fonctionne globalement &agrave; la moiti&eacute; de      la vitesse.  Reportez-vous &agrave; la      <ulink url="&url.bzip2;">documentation bzip2</ulink> pour plus de      d&eacute;tails sur cette fonctionnalit&eacute;.    </para>    <para>     <example>      <title>Exemple avec <function>bzdecompress</function></title>      <programlisting role="php">&lt;?php$str = $bzdecompress($bzstr);?&gt;      </programlisting>     </example>    </para>    <para>     Voir aussi <function>bzcompress</function>.    </para>   </refsect1>  </refentry>  <refentry id="function.bzerrno">   <refnamediv>    <refname>bzerrno</refname>    <refpurpose>Retourne le num&eacute;ro d'erreur bzip2</refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>int <function>bzerrno</function></funcdef>      <paramdef>resource <parameter>bz</parameter></paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>bzerrno</function> retourne le num&eacute;ro d'erreur     du fichier bz2 repr&eacute;sent&eacute; par le pointeur      <parameter>bz</parameter>.    </para>    <para>     Voir aussi <function>bzerror</function> et <function>bzerrstr</function>.    </para>   </refsect1>  </refentry>  <refentry id="function.bzerror">   <refnamediv>    <refname>bzerror</refname>    <refpurpose>     Retourne le num&eacute;ro et le message d'erreur bzip2 dans un tableau    </refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>array <function>bzerror</function></funcdef>      <paramdef>int <parameter>bz</parameter></paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>bzerror</function> retourne le num&eacute;ro et le message d'erreur     du fichier bz2 repr&eacute;sent&eacute; par le pointeur      <parameter>bz</parameter>. <function>bzerror</function> retourne     un tableau associatif.    </para>    <para>     <example>      <title>Exemple avec <function>bzerror</function></title>      <programlisting role="php">&lt;?php$error = bzerror($bz);echo $error["errno"];echo $error["errstr"];?&gt;      </programlisting>     </example>    </para>    <para>     Voir aussi <function>bzerrno</function> et <function>bzerrstr</function>.    </para>   </refsect1>  </refentry>  <refentry id="function.bzerrstr">   <refnamediv>    <refname>bzerrstr</refname>    <refpurpose>Retourne le message d'erreur bzip2</refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>string <function>bzerrstr</function></funcdef>      <paramdef>resource <parameter>bz</parameter></paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>bzerrstr</function> retourne le message d'erreur     du fichier bz2 repr&eacute;sent&eacute; par le pointeur      <parameter>bz</parameter>.    </para>    <para>     Voir aussi <function>bzerrno</function> et <function>bzerror</function>.    </para>   </refsect1>  </refentry>  <refentry id="function.bzflush">   <refnamediv>    <refname>bzflush</refname>    <refpurpose>     Force l'&eacute;criture de toutes les donn&eacute;es compress&eacute;es    </refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>int <function>bzflush</function></funcdef>      <paramdef>resource <parameter>bz</parameter></paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>bzflush</function> vide les buffers d'&eacute;criture du     fichier repr&eacute;sent&eacute; par <parameter>bz</parameter>.    </para>    <para>     <function>bzflush</function> retourne <literal>TRUE</literal>     en cas de succ&egrave;s, et <literal>FALSE</literal> sinon.    </para>    <para>     Voir aussi <function>bzread</function> et <function>bzwrite</function>.    </para>   </refsect1>  </refentry>  <refentry id="function.bzopen">   <refnamediv>    <refname>bzopen</refname>    <refpurpose>Ouvre un fichier compress&eacute; avec bzip2</refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>resource <function>bzopen</function></funcdef>      <paramdef>string <parameter>filename</parameter></paramdef>      <paramdef>string <parameter>mode</parameter></paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>bzopen</function> ouvre un fichier bzip2 (.bz2)     en &eacute;criture ou en lecture. <parameter>filename</parameter>      est le nom du fichier &agrave; ouvrir. <parameter>mode</parameter>     est similaire au m&ecirc;me param&egrave;tre de la fonction <function>fopen</function>     (`r' pour lecture, `w' pour &eacute;criture, etc.).    </para>    <para>     Si l'ouverture &eacute;choue, <function>bzopen</function> retourne     <literal>FALSE</literal>, sinon, elle retourne un pointeur     de fichier.    </para>    <para>     <example>      <title>Exemple avec <function>bzopen</function></title>      <programlisting role="php">&lt;?php$bz = bzopen("/tmp/foo.bz2", "r");?&gt;      </programlisting>     </example>    </para>    <para>     Voir aussi <function>bzclose</function>.    </para>   </refsect1>  </refentry>  <refentry id="function.bzread">   <refnamediv>    <refname>bzread</refname>    <refpurpose>Lecture binaire d'un fichier bzip2</refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>string <function>bzread</function></funcdef>      <paramdef>resource <parameter>bz</parameter></paramdef>      <paramdef>int        <parameter><optional>length</optional></parameter>      </paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>bzread</function> lit jusqu'&agrave; <parameter>length</parameter>      octets depuis le fichier bzip2, r&eacute;f&eacute;renc&eacute; par le pointeur      <parameter>bz</parameter>. La lecture s'arr&ecirc;te lorsque      <parameter>length</parameter> octets (non compress&eacute;s)      ont &eacute;t&eacute; lus, qu'une erreur est rencontr&eacute;e,      ou bien que la fin du fichier a &eacute;t&eacute; atteinte :      le premier des trois qui survient. Si le param&egrave;tre      optionnel <parameter>length</parameter> est omis,      <function>bzread</function> lit 1024 octets (non compress&eacute;s) en     m&ecirc;me temps.    </para>    <para>     <example>      <title>Exemple avec <function>bzread</function></title>      <programlisting role="php">&lt;?php$bz = bzopen("/tmp/foo.bz2", "r");$str = bzread($bz, 2048);echo $str;?&gt;      </programlisting>     </example>    </para>    <para>     Voir aussi <function>bzwrite</function> et <function>bzopen</function>.    </para>   </refsect1>  </refentry>  <refentry id="function.bzwrite">   <refnamediv>    <refname>bzwrite</refname>    <refpurpose>Ecriture binaire dans un fichier bzip2</refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>int <function>bzwrite</function></funcdef>      <paramdef>resource <parameter>bz</parameter></paramdef>      <paramdef>string <parameter>data</parameter></paramdef>      <paramdef>int       <parameter><optional>length</optional></parameter>      </paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>bzwrite</function> &eacute;crit le contenu de la cha&icirc;ne     <parameter>data</parameter> dans le fichier bzip2 repr&eacute;sent&eacute;     par <parameter>bz</parameter>. Si le param&egrave;tre optionnel      <parameter>length</parameter> est fourni, l'&eacute;criture sera      arr&ecirc;t&eacute;e apr&egrave;s l'&eacute;criture de      <parameter>length</parameter> octets (non compress&eacute;s),      ou la fin de la cha&icirc;ne (le premier qui survient).    </para>    <para>     <example>      <title>Exemple <function>bzwrite</function></title>      <programlisting role="php">&lt;?php$str = "donn&eacute;es non compress&eacute;es";$bz = bzopen("/tmp/foo.bz2", "w");bzwrite($bz, $str, strlen($str));?&gt;      </programlisting>      </example>    </para>    <para>     Voir aussi <function>bzread</function> et <function>bzopen</function>.    </para>   </refsect1>  </refentry> </reference><!-- Keep this comment at the end of the fileLocal variables:mode: sgmlsgml-omittag:tsgml-shorttag:tsgml-minimize-attributes:nilsgml-always-quote-attributes:tsgml-indent-step:1sgml-indent-data:tsgml-parent-document:nilsgml-default-dtd-file:"../../manual.ced"sgml-exposed-tags:nilsgml-local-catalogs:nilsgml-local-ecat-files:nilEnd:-->