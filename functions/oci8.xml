<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.18 $ -->
 <reference id="ref.oci8">
  <title>Oracle 8</title>
  <titleabbrev>oci8</titleabbrev>
  <partintro>
   <para>
     Ces fonctions vous permettront d'acc&eacute;der aux serveurs Oracle8 et
     Oracle7. Elles utilisent l'interface Oracle8 Call-Interface (oci8).
     Vous aurez donc besoin des librairies clientes Oracle8 pour pouvoir
     les utiliser.
   </para>
   <para>
     Il faut noter que cette extension est plus souple que l'extension Oracle
     officielle. Elle supporte notamment les liaisons entre les variables
     globales et locales de PHP avec des emplacements Oracle; elle supporte
     compl&egrave;tement les types LOB, FILE et ROWID et vous permet
     d'utiliser des variables de d&eacute;finitions personnalisables.
  </para>
   <para>
    Avant d'utiliser cette extension, assurez-vous que vous avez bien
    param&eacute;tr&eacute; vos variables d'environnement Oracle, ainsi que votre
    d&eacute;mon utilisateur. Les variables dont vous pouvez avoir besoin sont :
    <itemizedlist>
     <listitem>
      <simpara>
       ORACLE_HOME
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ORACLE_SID
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       LD_PRELOAD
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       LD_LIBRARY_PATH
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       NLS_LANG
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       ORA_NLS33
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Apr&egrave;s avoir configur&eacute; ces variables pour votre utilisateur "serveur
    web", assurez-vous aussi d'ajouter cet utilisateur (nobody, www)
    au group Oracle.
   </para>
   <note>
    <title>
      Si votre serveur web ne d&eacute;marre pas, ou crashe au d&eacute;marrage
     </title>
    <para>
     V&eacute;rifiez que Apache a bien &eacute;t&eacute; compil&eacute; avec la librairie pthread :
    </para>
    <para>
     <informalexample>
      <programlisting>
# ldd /www/apache/bin/httpd
    libpthread.so.0 => /lib/libpthread.so.0 (0x4001c000)
    libm.so.6 => /lib/libm.so.6 (0x4002f000)
    libcrypt.so.1 => /lib/libcrypt.so.1 (0x4004c000)
    libdl.so.2 => /lib/libdl.so.2 (0x4007a000)
    libc.so.6 => /lib/libc.so.6 (0x4007e000)
    /lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)
      </programlisting>
     </informalexample>
    </para>
    <para>
     Si la libpthread n'est pas list&eacute;e, vous devez r&eacute;installer Apache :
    </para>
    <para>
     <informalexample>
      <programlisting>
# cd /usr/src/apache_1.3.xx
# make clean
# LIBS=-lpthread ./config.status
# make
# make install
      </programlisting>
     </informalexample>
    </para>
   </note>
   <para>
    <example>
     <title>Aide oci</title>
      <programlisting role="php">
&lt;?php
// par sergo@bacup.ru
// Utilisez l'option : oci_DEFAULT pour &eacute;x&eacute;cuter les commandes avec un d&eacute;lai
ociExecute($stmt, oci_DEFAULT);
// pour lire les donn&eacute;es apr&egrave;s lecture, utilisez :
$result = ociResult($stmt, $n);
if (is_object ($result)) $result = $result->load();
// Pour les commandes INSERT ou UPDATE utilisez:
$sql = "insert into table (field1, field2) values (field1 = 'value',
 field2 = empty_clob()) returning field2 into :field2";
ociparse($conn, $sql);
$clob = ociNewDescriptor($conn, oci_D_LOB);
ociBindByName ($stmt, ":field2", &amp;$clob, -1, oci_B_CLOB);
ociexecute($stmt, oci_DEFAULT);
$clob->save ("Du texte");
ocicommit($conn);
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Vous pouvez facilement acc&eacute;der aux proc&eacute;dures stock&eacute;es, de la m&ecirc;me
    fa&ccedil;on que vous le feriez par ligne de commande :
    <example>
     <title>Utilisation de proc&eacute;dures stock&eacute;es</title>
      <programlisting role="php">
&lt;?php
// par webmaster@remoterealty.com
$sth = ociparse ( $dbh, "begin sp_newaddress( :address_id, '$firstname',
 '$lastname', '$company', '$address1', '$address2', '$city', '$state',
 '$postalcode', '$country', :error_code );end;" );
// Ce script appelle la proc&eacute;dure stock&eacute;e sp_newaddress, avec address_id qui est
// une variable entrante/sortante et :error_code une variable sortante.
// Lorsque vous les liez :
   ociBindByName ( $sth, ":address_id", $addr_id, 10 );
   ociBindByName ( $sth, ":error_code", $errorcode, 10 );
   ociExecute ( $sth );
?&gt;
     </programlisting>
    </example>
   </para>
  </partintro>
  <refentry id="function.ocidefinebyname">
   <refnamediv>
    <refname>ociDefineByName</refname>
    <refpurpose>
      Utilise une variable PHP pour la phase de d&eacute;finition, dans une commande SELECT.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocidefinebyname</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
      <paramdef>string <parameter>Column-Name</parameter></paramdef>
      <paramdef>mixed <parameter>variable</parameter></paramdef>
      <paramdef>int <parameter><optional>type</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocidefinebyname</function> copie les valeurs issues de colonnes
     SQL <parameter>Column-Name</parameter> dans les variables PHP.
     M&eacute;fiez-vous des colonnes Oracle qui sont toutes en majuscule,
     tandis que dans les SELECT, vous pouvez aussi les &eacute;crire en minuscules.
     <function>ocidefinebyname</function> s'attends &agrave; ce que
     <parameter>Column-Name</parameter> soit en majuscules.
     Si vous d&eacute;finissez une variable qui n'existe pas dans
     la commande SELECT, vous ne serez pas pr&eacute;venu par une erreur.
    </para>
    <para>
      Si vous avez besoin de d&eacute;finir un type de donn&eacute;es
      abstrait, tel que (LOB/ROWID/BFILE), vous devez lui allouer la
      m&eacute;moire avec <function>ocinewdescriptor</function>.
      Reportez-vous aussi &agrave; <function>ocibindbyname</function>.
    </para>
     <example>
      <title>ociDefineByName</title>
      <programlisting role="php">
&lt;?php
/* Exemple ociDefineByPos par thies@thieso.net (980219) */
$conn = ociLogon("scott","tiger");
$stmt = ociparse($conn,"select empno, ename from emp");
/* La d&eacute;finition DOIT &ecirc;tre fa&icirc;te AVANT ociexecute! */
ociDefineByName($stmt,"EMPNO",&amp;$empno);
ociDefineByName($stmt,"ENAME",&amp;$ename);
ociexecute($stmt);
while (ociFetch($stmt)) {
    echo "empno:".$empno."\n";
    echo "ename:".$ename."\n";
}
ociFreeStatement($stmt);
ociLogoff($conn);
?&gt;
     </programlisting>
    </example>
   </refsect1>
  </refentry>
  <refentry id="function.ocibindbyname">
   <refnamediv>
    <refname>ociBindByName</refname>
    <refpurpose>
     Utilise une variable PHP pour la phase de d&eacute;finition, dans un SELECT.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocibindbyname</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
      <paramdef>string <parameter>ph_name</parameter></paramdef>
      <paramdef>mixed &amp;<parameter>variable</parameter></paramdef>
      <paramdef>int <parameter>length</parameter></paramdef>
      <paramdef>int <parameter>
       <optional>type</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocibindbyname</function> relie la variable PHP
     <parameter>variable</parameter> &agrave; l'emplacement Oracle
     <parameter>ph_name</parameter>. Son utilisation (comme entr&eacute;e
     ou comme sortie) sera d&eacute;finie &agrave; l'ex&eacute;cution,
     et l'espace n&eacute;cessaire sera allou&eacute;. Le param&egrave;tre de
     longueur <parameter>length</parameter> fixe la taille maximum pour
     la liaison. Si vous affectez une longueur de -1,
     <function>ocibindbyname</function> utilisera la longueur de variable
     comme maximum.
    </para>
    <para>
     Si vous devez lier des types abstraits de donn&eacute;es (LOB/ROWID/BFILE),
     vous devrez l'allouer dans un premier temps, avec
     <function>ocinewdescriptor</function>. La longueur
     <parameter>length</parameter> ne sert pas pour ces types et
     devrait &ecirc;tre fix&eacute;e &agrave; -1. La variable
     <parameter>type</parameter> indique au serveur Oracle, quel type de
     pointeur va &ecirc;tre utilis&eacute;. Les valeurs possibles sont :
     oci_B_FILE (Fichier binaires), oci_B_CFILE (Fichier texte),
     oci_B_CLOB (LOB- texte), oci_B_BLOB (LOB binaire)
     et oci_B_ROWID (ROWID).
    </para>
    <example>
     <title>ociDefineByName</title>
     <programlisting role="php">
&lt;?php
/* Exemple ociBindByPos par thies@thieso.net (980221)
  Ins&egrave;re 3 lignes dans emp, et utilise ROWID pour mettre &agrave; jour
  les lignes, juste apr&egrave;s l'insertion.
*/
$conn = ociLogon("scott","tiger");
$stmt = ociparse($conn,"insert into emp (empno, ename) ".
		   "values (:empno,:ename) ".
		   "returning ROWID into :rid");
$data = array(1111 =&gt; "Larry", 2222 =&gt; "Bill", 3333 =&gt; "Jim");
$rowid = ociNewDescriptor($conn,oci_D_ROWID);
ociBindByName($stmt,":empno",&amp;$empno,32);
ociBindByName($stmt,":ename",&amp;$ename,32);
ociBindByName($stmt,":rid",&amp;$rowid,-1,oci_B_ROWID);
$update = ociparse($conn,"update emp set sal = :sal where ROWID = :rid");
ociBindByName($update,":rid",&amp;$rowid,-1,oci_B_ROWID);
ociBindByName($update,":sal",&amp;$sal,32);
$sal = 10000;
while (list($empno,$ename) = each($data)) {
	ociexecute($stmt);
	ociexecute($update);
}
$rowid->free();
ociFreeStatement($update);
ociFreeStatement($stmt);
$stmt = ociparse($conn,"select * from emp where empno in (1111,2222,3333)");
ociexecute($stmt);
while (ociFetchInto($stmt,&amp;$arr,oci_ASSOC)) {
	var_dump($arr);
}
ociFreeStatement($stmt);
/* Effacement des lignes inutiles dans la table emp .... */
$stmt = ociparse($conn,"delete from emp where empno in (1111,2222,3333)");
ociexecute($stmt);
ociFreeStatement($stmt);
ociLogoff($conn);
?&gt;
	 </programlisting>
	</example>
   </refsect1>
  </refentry>
  <refentry id="function.ocilogon">
   <refnamediv>
    <refname>ociLogon</refname>
    <refpurpose>Etablit une connexion &agrave; un serveur Oracle.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>ocilogon</function></funcdef>
      <paramdef>string <parameter>username</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
      <paramdef>string
       <parameter><optional>db</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      <function>ocilogon</function> retourne un identifiant de connexion,
      n&eacute;cessaire &agrave; la plupart des fonctions oci. Si l'option
      ORACLE_SID n'est pas pr&eacute;cis&eacute;e, PHP utilisera la variable
      d'environnement ORACLE_SID pour d&eacute;terminer le serveur de connexion.
    </para>
    <para>
      Les connexions sont partag&eacute;es, &agrave; l'int&eacute;rieur
      d'une m&ecirc;me page avec <function>ocilogon</function>. Cela signifie
      que COMMIT et ROLLBACK s'appliquent &agrave; toutes les transactions
      commenc&eacute;es &agrave; l'int&eacute;rieur d'une m&ecirc;me page,
      m&ecirc;me si vous avez cr&eacute;&eacute; de multiples connexions.
    </para>
    <para>
     Cet exemple montre comment les connexions sont partag&eacute;es :
     <example>
      <title>ociLogon</title>
      <programlisting role="php">
&lt;?php
print "&lt;HTML>&lt;PRE>";
$db = "";
$c1 = ocilogon("scott","tiger",$db);
$c2 = ocilogon("scott","tiger",$db);
function create_table($conn)
{ $stmt = ociparse($conn,"create table scott.hallo (test
varchar2(64))");
  ociexecute($stmt);
  echo $conn." created table\n\n";
}
function drop_table($conn)
{ $stmt = ociparse($conn,"drop table scott.hallo");
  ociexecute($stmt);
  echo $conn." dropped table\n\n";
}
function insert_data($conn)
{ $stmt = ociparse($conn,"insert into scott.hallo values('$conn' || ' ' || to_char(sysdate,'DD-MON-YY HH24:MI:SS'))");
  ociexecute($stmt,oci_DEFAULT);
  echo $conn." inserted hallo\n\n";
}
function delete_data($conn)
{ $stmt = ociparse($conn,"delete from scott.hallo");
  ociexecute($stmt,oci_DEFAULT);
  echo $conn." deleted hallo\n\n";
}
function commit($conn)
{ ocicommit($conn);
  echo $conn." commited\n\n";
}
function rollback($conn)
{ ocirollback($conn);
  echo $conn." rollback\n\n";
}
function select_data($conn)
{ $stmt = ociparse($conn,"select * from scott.hallo");
  ociexecute($stmt,oci_DEFAULT);
  echo $conn."----selecting\n\n";
  while (ocifetch($stmt))
    echo $conn." &lt;".ociresult($stmt,"TEST").">\n\n";
  echo $conn."----done\n\n";
}
create_table($c1);
insert_data($c1);   // Insertion d'une ligne avec c1
insert_data($c2);   // Insertion d'une ligne avec c2
select_data($c1);   // Les r&eacute;sultats des deux insertions sont retourn&eacute;s
select_data($c2);
rollback($c1);      // Annulation avec c1
select_data($c1);   // Les r&eacute;sultats des deux insertions sont annul&eacute;s
select_data($c2);
insert_data($c2);   // Insertion d'une ligne avec c2
commit($c2);        // Validation avec using c2
select_data($c1);   // Le r&eacute;sultat de c2 est retourn&eacute;
delete_data($c1);   // Effacement de toutes les lignes avec c1
select_data($c1);   // Aucune ligne n'est retourn&eacute;e
select_data($c2);   // Aucune ligne n'est retourn&eacute;e
commit($c1);        // Validation avec c1
select_data($c1);   // Aucune ligne n'est retourn&eacute;e
select_data($c2);   // Aucune ligne n'est retourn&eacute;e
drop_table($c1);
print "&lt;/PRE>&lt;/HTML>";
?&gt;
      </programlisting>
     </example>
    </para>
    <simpara>
     Voir aussi 
     <function>ociplogon</function> et 
     <function>ocinlogon</function>.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ociplogon">
   <refnamediv>
    <refname>ociPLogon</refname>
    <refpurpose>Connection persistante &agrave; un serveur Oracle.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>ociplogon</function></funcdef>
      <paramdef>string <parameter>username</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
      <paramdef>string
       <parameter><optional>db</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ociplogon</function> cr&eacute;e une connexion persistante
     &agrave; un serveur Oracle 8 et s'authentifie. Si l'option ORACLE_SID
     n'est pas sp&eacute;cifi&eacute;e, PHP utilisera la variable
     d'environnement ORACLE_SID pour d&eacute;terminer le serveur de
     connexion.
    </para>
    <simpara>
     Voir aussi 
     <function>ocilogon</function> et 
     <function>ocinlogon</function>.
    </simpara>
   </refsect1></refentry>
  <refentry id="function.ocinlogon">
   <refnamediv>
    <refname>ociNLogon</refname>
    <refpurpose>
      Se connecte &agrave; un serveur Oracle avec une nouvelle connexion.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>ocinlogon</function></funcdef>
      <paramdef>string <parameter>username</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
      <paramdef>string
       <parameter><optional>db</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocinlogon</function> cr&eacute;e une nouvelle connexion &agrave;
     un serveur Oracle et s'authentifie. Si l'option ORACLE_SID n'est pas
     sp&eacute;cifi&eacute;, PHP utilisera la variable d'environnement
     ORACLE_SID pour d&eacute;terminer le serveur de connexion.
    </para>
    <para>
       <function>ocinlogon</function> force le serveur &agrave;
       &eacute;tablir une nouvelle connexion. Cette fonction ne
       doit &ecirc;tre utilis&eacute;e que si vous voulez isoler un
       ensemble de transactions. Par d&eacute;faut, les connexions
       sont partag&eacute;es au niveau de la page, si vous utilisez
       la fonction <function>ocinlogon</function> ou bien au niveau
       du processus web, si vous utilisez <function>ociplogon</function>.
       Si vous avez de multiples connexions ouvertes avec
       <function>ocinlogon</function>, les validations et annulations
       ne s'appliquent qu'&agrave; la connexion sp&eacute;cif&eacute;e.
    </para>
    <para>
      L'exemple ci-dessous montre l'utilisation des connexions
      s&eacute;par&eacute;es.
     <example>
      <title>ociNLogon</title>
      <programlisting role="php">
&lt;?php
print "&lt;HTML>&lt;PRE>";
$db = "";
$c1 = ocilogon("scott","tiger",$db);
$c2 = ocinlogon("scott","tiger",$db);
function create_table($conn)
{ $stmt = ociparse($conn,"create table scott.hallo (test
varchar2(64))");
  ociexecute($stmt);
  echo $conn." created table\n\n";
}
function drop_table($conn)
{ $stmt = ociparse($conn,"drop table scott.hallo");
  ociexecute($stmt);
  echo $conn." dropped table\n\n";
}
function insert_data($conn)
{ $stmt = ociparse($conn,"insert into scott.hallo values('$conn' || ' ' || to_char(sysdate,'DD-MON-YY HH24:MI:SS'))");
  ociexecute($stmt,oci_DEFAULT);
  echo $conn." inserted hallo\n\n";
}
function delete_data($conn)
{ $stmt = ociparse($conn,"delete from scott.hallo");
  ociexecute($stmt,oci_DEFAULT);
  echo $conn." deleted hallo\n\n";
}
function commit($conn)
{ ocicommit($conn);
  echo $conn." commited\n\n";
}
function rollback($conn)
{ ocirollback($conn);
  echo $conn." rollback\n\n";
}
function select_data($conn)
{ $stmt = ociparse($conn,"select * from scott.hallo");
  ociexecute($stmt,oci_DEFAULT);
  echo $conn."----selecting\n\n";
  while (ocifetch($stmt))
    echo $conn." &lt;".ociresult($stmt,"TEST").">\n\n";
  echo $conn."----done\n\n";
}
create_table($c1);
insert_data($c1);
select_data($c1);
select_data($c2);
rollback($c1);
select_data($c1);
select_data($c2);
insert_data($c2);
commit($c2);
select_data($c1);
delete_data($c1);
select_data($c1);
select_data($c2);
commit($c1);
select_data($c1);
select_data($c2);
drop_table($c1);
print "&lt;/PRE>&lt;/HTML>";
?&gt;
      </programlisting>
     </example>
    </para>
    <simpara>
     Voir aussi 
     <function>ocilogon</function> et
     <function>ociplogon</function>.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocilogoff">
   <refnamediv>
    <refname>ociLogOff</refname>
    <refpurpose>D&eacute;connexion d'un serveur Oracle.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocilogoff</function></funcdef>
      <paramdef>resource <parameter>connection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocilogoff</function> ferme la connexion Oracle.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ociexecute">
   <refnamediv>
    <refname>ociexecute</refname>
    <refpurpose>Ex&eacute;cute une commande.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ociexecute</function></funcdef>
      <paramdef>resource <parameter>statement</parameter></paramdef>
      <paramdef>int
       <parameter><optional>mode</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ociexecute</function> &eacute;x&eacute;cute une commande
     d&eacute;j&agrave; pr&eacute;par&eacute;e (voir
     <function>ociparse</function>). L'option <parameter>mode</parameter> vous
     permet de sp&eacute;cifier le mode d'ex&eacute;cution (par d&eacute;faut,
     il est &agrave; oci_COMMIT_ON_SUCCESS). Si vous ne voulez pas que la
     commande soit automatiquement valid&eacute;e, utilisez le mode oci_DEFAULT.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ocicommit">
   <refnamediv>
    <refname>ociCommit</refname>
    <refpurpose>Valide les transactions en cours.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocicommit</function></funcdef>
      <paramdef>resource <parameter>connection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocicommit</function> valide toutes les transactions en
     cours sur la connexion Oracle <parameter>connection</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ocirollback">
   <refnamediv>
    <refname>ociRollback</refname>
    <refpurpose>Annule les transactions en cours.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocirollback</function></funcdef>
      <paramdef>resource <parameter>connection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocirollback</function> annule les transactions en cours sur la
     connexion Oracle <parameter>connection</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ocinewdescriptor">
   <refnamediv>
    <refname>ociNewDescriptor</refname>
    <refpurpose>Initialise un nouveau pointeur vide de LOB/FILE</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>ocinewdescriptor</function></funcdef>
      <paramdef>resource <parameter>connection</parameter></paramdef>
      <paramdef>int
       <parameter><optional>type</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocinewdescriptor</function> alloue l'espace
     n&eacute;cessaire pour stocker un descripteur, ou un pointeur
     de LOB. Les valeurs accept&eacute;es pour type sont
     oci_D_FILE, oci_D_LOB et oci_D_ROWID.
      </para>
     <example>
      <title>ocinewdescriptor</title>
      <programlisting role="php">
&lt;?php
    /* Ce script est fait pour &ecirc;tre appel&eacute; dans un formulaire HTML
     * Il attends les variables $user, $password, $table, $where, et $commitsize
     * Le script efface alors les lignes s&eacute;lectionn&eacute;es avec ROWID et valide
     * l'effacement apr&egrave;s chaque groupe de $commitsize lignes.
     * (Utilisez avec prudence, car il n'y a pas d'annulation possible).
     */
    $conn = ociLogon($user, $password);
    $stmt = ociparse($conn,"select rowid from $table $where");
    $rowid = ociNewDescriptor($conn,oci_D_ROWID);
    ociDefineByName($stmt,"ROWID",&amp;$rowid);
    ociexecute($stmt);
    while ( ociFetch($stmt) ) {
       $nrows = ociRowCount($stmt);
       $delete = ociparse($conn,"delete from $table where ROWID = :rid");
       ociBindByName($delete,":rid",&amp;$rowid,-1,oci_B_ROWID);
       ociexecute($delete);
       print "$nrows\n";
       if ( ($nrows % $commitsize) == 0 ) {
           ociCommit($conn);
       }
    }
    $nrows = ociRowCount($stmt);
    print "$nrows effac&eacute;es...\n";
    ociFreeStatement($stmt);
    ociLogoff($conn);
?&gt;
   </programlisting>
   <programlisting role="php">
&lt;?php
    /* Ce script est fait pour &ecirc;tre appel&eacute; depuis un formulaire HTML.
     * Il attends les variables $user, $password, $table, $where, et $commitsize,
     * donn&eacute;es par le formulaire. Le script efface
     * les lignes s&eacute;lectionn&eacute;es avec ROWID est valide les transactions
     * &agrave; chaque jeu de $commitsize lignes. (Attention : il n'y plus d'annulation) */
  if(!isset($lob_upload) || $lob_upload == 'none'){
?&gt;
&lt;form action="upload.php3" method="post" enctype="multipart/form-data">
Upload file: &lt;input type="file" name="lob_upload">&lt;br&gt;
&lt;input type="submit" value="Upload"> - &lt;input type="reset">
&lt;/form>
&lt;?php
  } else {
     // $lob_upload contains the temporary filename of the uploaded file
     $conn = ociLogon($user, $password);
     $lob = ociNewDescriptor($conn, oci_D_LOB);
     $stmt = ociparse($conn,"insert into $table (id, the_blob) values(my_seq.NEXTVAL, EMPTY_BLOB()) returning the_blob into :the_blob");
     ociBindByName($stmt, ':the_blob', &amp;$lob, -1, oci_B_BLOB);
     ociexecute($stmt, oci_DEFAULT);
     if($lob->savefile($lob_upload)){
        ociCommit($conn);
        echo "Blob sauv&eacute;!\n";
     }else{
        echo "Impossible de sauver le Blob\n";
     }
     ociFreeDescriptor($lob);
     ociFreeStatement($stmt);
     ociLogoff($conn);
  }
?&gt;
     </programlisting>
    </example>
    <example>
     <title>Exemple avec <function>ocinewdescriptor</function></title>
     <programlisting>
&lt;?php   
    /* Appel d'une proc&eacute;dure PL/SQL stock&eacute;e qui prend un clobs
     * en entr&eacute;e (PHP 4 >= 4.0.6). 
     * Exemple de signateure de proc&eacute;dure stock&eacute;e PL/SQL :
     *
     * PROCEDURE save_data
     *   Nom de l'argument              Type                    In/Out Default?
     *   ------------------------------ ----------------------- ------ --------
     *   KEY                            NUMBER(38)              IN
     *   DATA                           CLOB                    IN
     *
     */

    $conn = OCILogon($user, $password);
    $stmt = OCIParse($conn, "begin save_data(:key, :data); end;");
    $clob = OCINewDescriptor($conn, OCI_D_LOB);
	OCIBindByName($stmt, ':key', $key);
	OCIBindByName($stmt, ':data', $clob, -1, OCI_B_CLOB);
	$clob->WriteTemporary($data);
	OCIExecute($stmt, OCI_DEFAULT);
	OCICommit($conn);
	$clob->close();
	$clob->free();
	OCIFreeStatement($stmt);
?&gt;
     </programlisting>
    </example>
   </refsect1>
  </refentry>
  <refentry id="function.ocirowcount">
   <refnamediv>
    <refname>ociRowCount</refname>
    <refpurpose>Retourne le nombre de lignes affect&eacute;es.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocirowcount</function></funcdef>
      <paramdef>resource <parameter>statement</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocirowcount</function> retourne le nombre de lignes
     affect&eacute;es par une commande de modification. Cette fonction
     ne vous indiquera pas le nombre de lignes retourn&eacute;es par
     un SELECT : il faut que les lignes aient &eacute;t&eacute; modifi&eacute;es.
    </para>
    <para>
     <example>
      <title>ociRowCount</title>
      <programlisting role="php">
&lt;?php
    print "&lt;HTML>&lt;PRE>";
    $conn = ociLogon("scott","tiger");
    $stmt = ociparse($conn,"create table emp2 as select * from emp");
    ociexecute($stmt);
    print ociRowCount($stmt) . " rows inserted.&lt;br&gt;";
    ociFreeStatement($stmt);
    $stmt = ociparse($conn,"delete from emp2");
    ociexecute($stmt);
    print ociRowCount($stmt) . " rows deleted.&lt;br&gt;";
    ociCommit($conn);
    ociFreeStatement($stmt);
    $stmt = ociparse($conn,"drop table emp2");
    ociexecute($stmt);
    ociFreeStatement($stmt);
    ociLogOff($conn);
    print "&lt;/PRE>&lt;/HTML>";
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ocinumcols">
   <refnamediv>
    <refname>ociNumCols</refname>
    <refpurpose>Retourne le nombre de colonnes dans un r&eacute;sultat</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocinumcols</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocinumcols</function> retourne le nombre de colonnes
     dans un r&eacute;sultat.
    </para>
     <example>
      <title>ociNumCols</title>
      <programlisting role="php">
&lt;?php
    print "&lt;HTML>&lt;PRE>\n";
    $conn = ociLogon("scott", "tiger");
    $stmt = ociparse($conn,"select * from emp");
    ociexecute($stmt);
    while ( ociFetch($stmt) ) {
        print "\n";
        $ncols = ociNumCols($stmt);
        for ( $i = 1; $i &lt;= $ncols; $i++ ) {
            $column_name  = ociColumnName($stmt,$i);
            $column_value = ociResult($stmt,$i);
            print $column_name . ': ' . $column_value . "\n";
        }
        print "\n";
    }
    ociFreeStatement($stmt);
    ociLogoff($conn);
    print "&lt;/PRE>";
    print "&lt;/HTML>\n";
?&gt;
     </programlisting>
    </example>
   </refsect1>
  </refentry>
  <refentry id="function.ociresult">
   <refnamediv>
    <refname>ociResult</refname>
    <refpurpose>Retourne la valeur d'une colonne</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>ociresult</function></funcdef>
      <paramdef>resource <parameter>statement</parameter></paramdef>
      <paramdef>mixed <parameter>column</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ociresult</function> retourne les donn&eacute;es de la colonne
     <parameter>column</parameter>  dans la ligne courante
     (voir <function>ocifetch</function>).
     <function>ocifetch</function> retournera tout les types, sauf
     les types abstraits (ROWIDs, LOBs et FILEs).
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ocifetch">
   <refnamediv>
    <refname>ociFetch</refname>
    <refpurpose>
      Modifie la prochaine ligne dans le r&eacute;sultat.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocifetch</function></funcdef>
      <paramdef>resource <parameter>statement</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocifetch</function> place la prochaine ligne
     (d'une commande SELECT) dans le pointeur interne de r&eacute;sultat.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ocifetchinto">
   <refnamediv>
    <refname>ociFetchInto</refname>
    <refpurpose>Retourne la ligne suivante dans un tableau.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocifetchinto</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
      <paramdef>array &amp;<parameter>result</parameter></paramdef>
      <paramdef>int
       <parameter><optional>mode</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocifetchinto</function> retourne la ligne suivante
     (pour une commande SELECT) dans le tableau <parameter>result</parameter>.
     <function>ocifetchinto</function> &eacute;crasera le contenu de
     <parameter>result</parameter>. Par d&eacute;faut,
     <parameter>result</parameter> sera un tableau &agrave;
     index num&eacute;rique, commen&ccedil;ant &agrave; 1, et qui
     contiendra toute les colonnes qui ne sont pas NULL.
    </para>
    <para>
      L'option <parameter>mode</parameter> vous permet de modifier
      le comportement par d&eacute;faut de la fonction. Vous pouvez
      passer plusieurs modes simplement en les additionnant
      (i.e. oci_ASSOC+oci_RETURN_NULLS). Les modes valides sont :
     <simplelist>
      <member>
        <literal>oci_ASSOC</literal> Retourne un tableau associatif.
      </member>
      <member>
        <literal>oci_NUM</literal> Retourne un tableau &agrave; index num&eacute;rique
        (DEFAULT, valeur par d&eacute;faut)
      </member>
      <member>
       <literal>oci_RETURN_NULLS</literal> Retourne les colonnes vides.
      </member>
      <member>
       <literal>oci_RETURN_LOBS</literal> Retourne la valeur des objets LOB
       plut&ocirc;t que leur descripteur.
      </member>
     </simplelist>
	</para>
   </refsect1>
  </refentry>
  <refentry id="function.ocifetchstatement">
   <refnamediv>
    <refname>ociFetchStatement</refname>
    <refpurpose>Retourne toutes les lignes d'un r&eacute;sultat.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>int <function>ocifetchstatement</function></funcdef>
     <paramdef>resource <parameter>stmt</parameter></paramdef>
     <paramdef>array &amp;<parameter>variable</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocifetchstatement</function> retourne toutes les lignes
     d'un r&eacute;sultat dans le tableau variable.
     <function>ocifetchstatement</function> retourne le nombre
     de lignes retourn&eacute;es.
    </para>
     <example>
      <title>ociFetchStatement</title>
      <programlisting role="php">
&lt;?php
/* exemple ociFetchStatement par mbritton@verinet.com (990624) */
$conn = ociLogon("scott","tiger");
$stmt = ociparse($conn,"select * from emp");
ociexecute($stmt);
$nrows = ociFetchStatement($stmt,$results);
if ( $nrows &gt; 0 ) {
   print "&lt;TABLE BORDER=\"1\">\n";
   print "&lt;TR>\n";
   while ( list( $key, $val ) = each( $results ) ) {
      print "&lt;TH>$key&lt;/TH>\n";
   }
   print "&lt;/TR>\n";
   for ( $i = 0; $i &lt; $nrows; $i++ ) {
      reset($results);
      print "&lt;TR>\n";
      while ( $column = each($results) ) {
         $data = $column['value'];
         print "&lt;TD>$data[$i]&lt;/TD>\n";
      }
      print "&lt;/TR>\n";
   }
   print "&lt;/TABLE>\n";
} else {
   echo "Rien n'a &eacute;t&eacute; trouv&eacute;&lt;br&gt;\n";
}
print "$nrows Records Selected&lt;br&gt;\n";
ociFreeStatement($stmt);
ociLogoff($conn);
?&gt;
    </programlisting>
   </example>
  </refsect1>
  </refentry>
  <refentry id="function.ocicolumnisnull">
   <refnamediv>
    <refname>ociColumnIsNULL</refname>
    <refpurpose>Teste si la valeur d'une colonne est NULL.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocicolumnisnull</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
      <paramdef>mixed <parameter>column</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocicolumnisnull</function> retourne <literal>TRUE</literal> si la colonne
     <parameter>col</parameter> du r&eacute;sultat
     <parameter>stmt</parameter> est NULL. Vous pouvez utiliser
     le num&eacute;ro de colonne (l'indexation des colonnes
     commence &agrave; 1) ou le nom de la colonne, pour le
     param&egrave;tre <parameter>col</parameter>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ocicolumnname">
   <refnamediv>
    <refname>ociColumnName</refname>
    <refpurpose>Retourne le nom d'une colonne.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ocicolumnname</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>ocicolumnname</function> retourne le nom de la colonne
     num&eacute;ro <parameter>col</parameter> (en commen&ccedil;ant &agrave; 1).
    </simpara>
    <para>
     <example>
      <title>ociColumnName</title>
      <programlisting role="php">
&lt;?php
    print "&lt;HTML>&lt;PRE>\n";
    $conn = ociLogon("scott", "tiger");
    $stmt = ociparse($conn,"select * from emp");
    ociexecute($stmt);
    print "&lt;TABLE BORDER=\"1\">";
    print "&lt;TR>";
    print "&lt;TH>Name&lt;/TH>";
    print "&lt;TH>Type&lt;/TH>";
    print "&lt;TH>Length&lt;/TH>";
    print "&lt;/TR>";
    $ncols = ociNumCols($stmt);
    for ( $i = 1; $i &lt;= $ncols; $i++ ) {
        $column_name  = ociColumnName($stmt,$i);
        $column_type  = ociColumnType($stmt,$i);
        $column_size  = ociColumnSize($stmt,$i);
        print "&lt;TR>";
        print "&lt;TD>$column_name&lt;/TD>";
        print "&lt;TD>$column_type&lt;/TD>";
        print "&lt;TD>$column_size&lt;/TD>";
        print "&lt;/TR>";
    }
    ociFreeStatement($stmt);
    ociLogoff($conn);
    print "&lt;/PRE>";
    print "&lt;/HTML>\n";
?&gt;
      </programlisting>
     </example>
    </para>
    <simpara>
     Voir aussi
     <function>ocinumcols</function>,
     <function>ocicolumntype</function> et
     <function>ocicolumnsize</function>.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocicolumnsize">
   <refnamediv>
    <refname>ociColumnSize</refname>
    <refpurpose>Retourne la taille de la colonne.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocicolumnsize</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
      <paramdef>mixed <parameter>column</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocicolumnsize</function> retourne la taille de la colonne.
     Vous pouvez utiliser l'index de colonne (l'indexation commence
     &agrave; 1) ou le nom de la colonne dans le param&egrave;tre
     <parameter>col</parameter>.
    </para>
    <para>
     <example>
      <title>ociColumnSize</title>
      <programlisting role="php">
&lt;?php
    print "&lt;HTML>&lt;PRE>\n";
    $conn = ociLogon("scott", "tiger");
    $stmt = ociparse($conn,"select * from emp");
    ociexecute($stmt);
    print "&lt;TABLE BORDER=\"1\">";
    print "&lt;TR>";
    print "&lt;TH>Name&lt;/TH>";
    print "&lt;TH>Type&lt;/TH>";
    print "&lt;TH>Length&lt;/TH>";
    print "&lt;/TR>";
    $ncols = ociNumCols($stmt);
    for ( $i = 1; $i &lt;= $ncols; $i++ ) {
        $column_name  = ociColumnName($stmt,$i);
        $column_type  = ociColumnType($stmt,$i);
        $column_size  = ociColumnSize($stmt,$i);
        print "&lt;TR>";
        print "&lt;TD>$column_name&lt;/TD>";
        print "&lt;TD>$column_type&lt;/TD>";
        print "&lt;TD>$column_size&lt;/TD>";
        print "&lt;/TR>";
    }
    print "&lt;/TABLE>";
    ociFreeStatement($stmt);
    ociLogoff($conn);
    print "&lt;/PRE>";
    print "&lt;/HTML>\n";
?&gt;
	  </programlisting>
     </example>
    </para>
    <simpara>
     Voir aussi
     <function>ocinumcols</function>,
     <function>ocicolumnname</function> et
     <function>ocicolumnsize</function>.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocicolumntype">
   <refnamediv>
    <refname>ociColumnType</refname>
    <refpurpose>Retourne le type de donn&eacute;es d'une colonne.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>mixed <function>ocicolumntype</function></funcdef>
     <paramdef>resource <parameter>stmt</parameter></paramdef>
     <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>ocicolumntype</function> retourne le type de donn&eacute;es
     de la colonne correspondant au num&eacute;ro de colonne
     <parameter>col</parameter> dans le r&eacute;sultat <parameter>stmt</parameter>
     (les colonnes sont index&eacute;es &agrave; partir de 1).
    </simpara>
    <para>
     <example>
      <title>Exemple avec <function>ocicolumntype</function></title>
      <programlisting role="php">
&lt;?php
    print "&lt;HTML&gt;&lt;PRE&gt;\n";
    $conn = ociLogon("scott", "tiger");
    $stmt = ociparse($conn,"select * from emp");
    ociexecute($stmt);
    print "&lt;TABLE BORDER=\"1\"&gt;";
    print "&lt;TR&gt;";
    print "&lt;TH&gt;Name&lt;/TH&gt;";
    print "&lt;TH&gt;Type&lt;/TH&gt;";
    print "&lt;TH&gt;Length&lt;/TH&gt;";
    print "&lt;/TR&gt;";
    $ncols = ociNumCols($stmt);
    for ( $i = 1; $i &lt;= $ncols; $i++ ) {
        $column_name  = ociColumnName($stmt,$i);
        $column_type  = ociColumnType($stmt,$i);
        $column_size  = ociColumnSize($stmt,$i);
        print "&lt;TR&gt;";
        print "&lt;TD&gt;$column_name&lt;/TD&gt;";
        print "&lt;TD&gt;$column_type&lt;/TD&gt;";
        print "&lt;TD&gt;$column_size&lt;/TD&gt;";
        print "&lt;/TR&gt;";
    }
    ociFreeStatement($stmt);
    ociLogoff($conn);
    print "&lt;/PRE&gt;";
    print "&lt;/HTML&gt;\n";
?&gt;
      </programlisting>
     </example>
    </para>
    <simpara>
     Voir aussi 
     <function>ocinumcols</function>,
     <function>ocicolumnname</function> et
     <function>ocicolumnsize</function>.
     </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ociserverversion">
   <refnamediv>
    <refname>ociServerVersion</refname>
    <refpurpose>
     Retourne une cha&icirc;ne contenant les informations de version du serveur.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>string <function>ociserverversion</function></funcdef>
     <paramdef>resource <parameter>conn</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ociserverversion</function> retourne une cha&icirc;ne contenant les
     informations de version du serveur
     <example>
      <title>Exemple avec <function>ociserverversion</function></title>
      <programlisting role="php">
&lt;?php
   $conn = ociLogon("scott","tiger");
   print "Version du serveur : " . ociServerVersion($conn);
   ociLogOff($conn);
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ocistatementtype">
   <refnamediv>
    <refname>ociStatementType</refname>
    <refpurpose>Retourne le type de commande OCI.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ocistatementtype</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocistatementtype</function> retourne une des valeurs suivantes :
     <orderedlist>
      <listitem><simpara>"SELECT"</simpara></listitem>
      <listitem><simpara>"UPDATE"</simpara></listitem>
      <listitem><simpara>"DELETE"</simpara></listitem>
      <listitem><simpara>"INSERT"</simpara></listitem>
      <listitem><simpara>"CREATE"</simpara></listitem>
      <listitem><simpara>"DROP"</simpara></listitem>
      <listitem><simpara>"ALTER"</simpara></listitem>
      <listitem><simpara>"BEGIN"</simpara></listitem>
      <listitem><simpara>"DECLARE"</simpara></listitem>
      <listitem><simpara>"UNKNOWN"</simpara></listitem>
     </orderedlist>
    </para>
    <para>
     <example>
      <title>Exemples</title>
      <programlisting role="php">
&lt;?php
    print "&lt;HTML&gt;&lt;PRE&gt;";
    $conn = ociLogon("scott","tiger");
    $sql  = "delete from emp where deptno = 10";
    $stmt = ociparse($conn,$sql);
    if ( ociStatementType($stmt) == "DELETE" ) {
        die "Vous n'etes pas autoris&eacute; &agrave; effacer dans cette table.&lt;BR&gt;";
    }
    ociLogoff($conn);
    print "&lt;/PRE&gt;&lt;/HTML&gt;";
?&gt;
      </programlisting>
	 </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ocinewcursor">
   <refnamediv>
    <refname>ociNewCursor</refname>
    <refpurpose>
     Retourne un nouveau pointeur &agrave; utiliser pour lier
     les pointeurs de r&eacute;f&eacute;rences
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocinewcursor</function></funcdef>
      <paramdef>resource <parameter>conn</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocinewcursor</function> alloue un nouveau pointeur
     de commande, pour la connexion <parameter>conn</parameter>.
    </para>
    <para>
     <example>
      <title>
        Utiliser un REF CURSOR issue d'une proc&eacute;dure enregistr&eacute;e.
      </title>
      <programlisting role="php">
&lt;?php
// supposons que votre proc&eacute;dure stoqu&eacute;e info.output retourne un pointeur
// de curseur dans : data
$conn = ociLogon("scott","tiger");
$curs = ociNewCursor($conn);
$stmt = ociparse($conn,"begin info.output(:data); end;");
ocibindbyname($stmt,"data",&amp;$curs,-1,oci_B_CURSOR);
ociexecute($stmt);
ociexecute($curs);
while (ociFetchInto($curs,&amp;$data)) {
    var_dump($data);
}
ociFreeStatement($curs);
ociFreeCursor($stmt);
ociLogoff($conn);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Utiliser un REF CURSOR issue d'une commande SELECT</title>
      <programlisting role="php">
&lt;?php
print "&lt;HTML>&lt;BODY>";
$conn = ociLogon("scott","tiger");
$count_cursor = "CURSOR(select count(empno) num_emps from emp " .
                "where emp.deptno = dept.deptno) as EMPCNT from dept";
$stmt = ociparse($conn,"select deptno,dname,$count_cursor");
ociexecute($stmt);
print "&lt;TABLE BORDER=\"1\">";
print "&lt;TR>";
print "&lt;TH>DEPT NAME&lt;/TH>";
print "&lt;TH>DEPT #&lt;/TH>";
print "&lt;TH># EMPLOYEES&lt;/TH>";
print "&lt;/TR>";
while (ociFetchInto($stmt,&amp;$data,oci_ASSOC)) {
    print "&lt;TR>";
    $dname  = $data["DNAME"];
    $deptno = $data["DEPTNO"];
    print "&lt;TD>$dname&lt;/TD>";
    print "&lt;TD>$deptno&lt;/TD>";
    ociexecute($data[ "EMPCNT" ]);
    while (ociFetchInto($data[ "EMPCNT" ],&amp;$subdata,oci_ASSOC)) {
        $num_emps = $subdata["NUM_EMPS"];
        print  "&lt;TD>$num_emps&lt;/TD>";
    }
    print "&lt;/TR>";
}
print "&lt;/TABLE>";
print "&lt;/BODY>&lt;/HTML>";
ociFreeStatement($stmt);
ociLogoff($conn);
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ocifreestatement">
   <refnamediv>
    <refname>ociFreeStatement</refname>
    <refpurpose>
      Lib&egrave;re toutes les ressources occup&eacute;es par une commande.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocifreestatement</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocifreestatement</function> retourne <literal>TRUE</literal>
     en cas de succ&egrave;s, et <literal>FALSE</literal> en cas d'&eacute;chec.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ocifreecursor">
   <refnamediv>
    <refname>ociFreeCursor</refname>
    <refpurpose>
      Lib&egrave;re toutes les ressources occup&eacute;es par un pointeur.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>boolean <function>ocifreecursor</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocifreecursor</function> retourne <literal>TRUE</literal> en cas de
     succ&egrave;s, et <literal>FALSE</literal> en cas d'&eacute;chec.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ocifreedesc">
   <refnamediv>
    <refname>ociFreeDesc</refname>
    <refpurpose>Supprime un descripteur de LOB</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocifreedesc</function></funcdef>
      <paramdef>object <parameter>lob</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ocifreedesc</function> retourne <literal>TRUE</literal> en cas de
     succ&egrave;s, et <literal>FALSE</literal> en cas d'&eacute;chec.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ociparse">
   <refnamediv>
    <refname>ociparse</refname>
    <refpurpose>Analyse une requ&ecirc;te.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ociparse</function></funcdef>
      <paramdef>resource <parameter>conn</parameter></paramdef>
      <paramdef>string <parameter>query</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
      <function>ociparse</function> analyse la requ&ecirc;te
      <parameter>query</parameter> sur la connexion
      <parameter>conn</parameter>, et retourne <literal>TRUE</literal> si la requ&ecirc;te
      <parameter>query</parameter> est valide, et <literal>FALSE</literal>, si
      ce n'est pas le cas. <parameter>query</parameter> peut
      &ecirc;tre n'importe quelle requ&ecirc;te SQL.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocierror">
   <refnamediv>
    <refname>ociError</refname>
    <refpurpose>
     Retourne la derni&egrave;re erreur de stmt|conn|global.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>array <function>ocierror</function></funcdef>
     <paramdef>int <parameter><optional>stmt|conn</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>ocierror</function> retourne la derni&egrave;re erreur trouv&eacute;e.
     Si l'option <parameter>stmt|conn</parameter> n'est pas fournie, la
     derni&egrave;re erreur rencontr&eacute;e est retourn&eacute;e. Si aucune
     erreur n'est trouv&eacute;e, <function>ocierror</function> retourne
     <literal>FALSE</literal>.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ociinternaldebug">
   <refnamediv>
    <refname>ociinternaldebug</refname>
    <refpurpose>
     Active ou d&eacute;sactive l'affichage des donn&eacute;es de debuggage.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>void <function>ociinternaldebug</function></funcdef>
     <paramdef>int <parameter>onoff</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>ociinternaldebug</function> active ou d&eacute;sactive
     l'affichage des informations de debuggage. Pour les afficher, mettez
     <parameter>onoff</parameter> &agrave; 1, ou sinon mettez
     <parameter>onoff</parameter> &agrave; 0 pour les cacher.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocicancel">
   <refnamediv>
    <refname>OCICancel</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocicancel</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>ocicancel</function> d&eacute;truit les ressources li&eacute;es
     au dernier r&eacute;sultat <parameter>stmt</parameter>. Si vous ne
     souhaitez plus lire d'informations dans ce r&eacute;sultat,
     utilisez cette fonction.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocisetprefetch">
   <refnamediv>
    <refname>ocisetprefetch</refname>
    <refpurpose>Indique le nombre de lignes qui doivent &ecirc;tre pr&eacute;-lues</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocisetprefetch</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
      <paramdef>int <parameter>rows</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>ocisetprefetch</function> indique le nombre des premi&egrave;res lignes
     qui doivent &ecirc;tre pr&eacute;-lues. La valeur par d&eacute;faut est de 1.
     </simpara>
    </refsect1>
   </refentry>
  <refentry id="function.ociwritelobtofile">
   <refnamediv>
    <refname>OCIWriteLobToFile</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>ociwritelobtofile</function></funcdef>
      <paramdef>object <parameter>lob</parameter></paramdef>
      <paramdef>string <parameter><optional>filename</optional></parameter></paramdef>
      <paramdef>int <parameter><optional>start</optional></parameter></paramdef>
      <paramdef>int <parameter><optional>lenght</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocisavelobfile">
   <refnamediv>
    <refname>OCISaveLobFile</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ocisavelobfile</function></funcdef>
      <paramdef>object <parameter>lob</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocisavelob">
   <refnamediv>
    <refname>OCISaveLob</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ocisavelob</function></funcdef>
      <paramdef>object <parameter>lob</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ociloadlob">
   <refnamediv>
    <refname>OCILoadLob</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ociloadlob</function></funcdef>
      <paramdef>object <parameter>lob</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocicolumnscale">
   <refnamediv>
    <refname>OCIColumnScale</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocicolumnscale</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocicolumnprecision">
   <refnamediv>
    <refname>OCIColumnPrecision</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ocicolumnprecision</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocicolumntyperaw">
   <refnamediv>
    <refname>OCIColumnTypeRaw</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>ocicolumntyperaw</function></funcdef>
      <paramdef>resource <parameter>stmt</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocinewcollection">
   <refnamediv>
    <refname>OCINewCollection</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ocinewcollection</function></funcdef>
      <paramdef>int <parameter>conn</parameter></paramdef>
      <paramdef>string <parameter>tdo</parameter></paramdef>
      <paramdef>string <parameter><optional>shema</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocifreecollection">
   <refnamediv>
    <refname>OCIFreeCollection</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ocifreecollection</function></funcdef>
      <paramdef>object <parameter>lob</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocicollassign">
   <refnamediv>
    <refname>OCICollAssign</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ocicollassign</function></funcdef>
      <paramdef>object <parameter>collection</parameter></paramdef>
      <paramdef>object <parameter>object</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocicollassignelem">
   <refnamediv>
    <refname>OCICollAssignElem</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ocicollassignelem</function></funcdef>
      <paramdef>object <parameter>collection</parameter></paramdef>
      <paramdef>string <parameter>ndx</parameter></paramdef>
      <paramdef>string <parameter>val</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocicollgetelem">
   <refnamediv>
    <refname>OCICollGetElem</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ocicollgetelem</function></funcdef>
      <paramdef>object <parameter>collection</parameter></paramdef>
      <paramdef>string <parameter>ndx</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocicollmax">
   <refnamediv>
    <refname>OCICollMax</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ocicollmax</function></funcdef>
      <paramdef>object <parameter>collection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocicollsize">
   <refnamediv>
    <refname>OCICollSize</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ocicollsize</function></funcdef>
      <paramdef>object <parameter>collection</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ocicolltrim">
   <refnamediv>
    <refname>OCICollTrim</refname>
    <refpurpose>Bient&ocirc;t document&eacute;....</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ocicolltrim</function></funcdef>
      <paramdef>object <parameter>collection</parameter></paramdef>
      <paramdef>int <parameter>num</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Bient&ocirc;t document&eacute;....
    </simpara>
   </refsect1>
  </refentry>
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
