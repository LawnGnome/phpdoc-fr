<?xml version="1.0" encoding="iso-8859-1"?>
<!--
	$Id: satellite.xml,v 1.7 2001-12-12 20:49:47 hholzgra Exp $
	Author: David Eriksson <david@2good.com>
-->
 <reference id="ref.satellite">
  <title>Satellite CORBA client extension</title>
  <titleabbrev>Satellite</titleabbrev>
  <partintro>
   &warn.experimental;
   <para>
    Le module Satellite sert &agrave; acc&eacute;der aux objets CORBA. Vous devez
    ajouter l'option idl_directory= entry dans <filename>php.ini</filename>:
    c'est le chemin jusqu'aux fichiers IDL.
   </para>
  </partintro>
  <refentry id="function.orbitobject">
   <refnamediv>
    <refname>OrbitObject</refname>
    <refpurpose>Acc&egrave;de aux objets CORBA</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>new <function>orbitobject</function></funcdef>
      <paramdef>string <parameter>ior</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>orbitobject</function> cr&eacute;e un objet qui acc&egrave;dera aux
     objets CORBA. Le param&egrave;tre <parameter>ior</parameter> doit &ecirc;tre une
     cha&icirc;ne contenant l'IOR (Interoperable Object Reference (r&eacute;f&eacute;rence
     interop&eacute;rable d'objet)) qui identifie l'objet distant.
    </para>
    <para>
     <example>
      <title>Fichier IDL : MonInterface</title>
      <programlisting role="idl">
interface MonInterface {
    void SetInfo (string info);
    string GetInfo();
    attribute int value;
}
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Code PHP pour acc&eacute;der &agrave; MonInterface</title>
      <programlisting role="php">
&lt;?php
$obj = new OrbitObject ($ior);
$obj->SetInfo ("Un Super Objet");
echo $obj->GetInfo();
$obj->value = 42;
echo $obj->value;
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.orbitenum">
   <refnamediv>
    <refname>OrbitEnum</refname>
    <refpurpose>Utilise les &eacute;num&eacute;rations CORBA</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>new <function>orbitenum</function></funcdef>
      <paramdef>string <parameter>id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>orbitenum</function> repr&eacute;sente l'&eacute;numeration identifi&eacute;e par
     <parameter>id</parameter>. <parameter>id</parameter> peut &ecirc;tre soit
     le nom d'une &eacute;num&eacute;ration (e.g "MonEnumeration"), ou bien l'identifiant
     du repository complet (e.g. "IDL:MyEnum:1.0").
    </para>
    <para>
     <example>
      <title>Fichier d'exemple IDL : MonEnumeration</title>
      <programlisting role="idl">
enum MonEnumeration {
    a,b,c,d,e
};
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Code PHP pour acc&eacute;der &agrave; MonEnumeration</title>
      <programlisting role="php">
&lt;?php
$enum = new OrbitEnum ("MonEnumeration");
echo $enum->a;	/* &eacute;crit 0 */
echo $enum->c;	/* &eacute;crit 2 */
echo $enum->e;	/* &eacute;crit 4 */
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.orbitstruct">
   <refnamediv>
    <refname>OrbitStruct</refname>
    <refpurpose>Utilise une structure CORBA</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>new <function>orbitstruct</function></funcdef>
      <paramdef>string <parameter>id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>orbitstruct</function> repr&eacute;sente une structure identifi&eacute;e
     par le param&egrave;tre <parameter>id</parameter>. <parameter>id</parameter>
     peut &ecirc;tre soit le nom d'une structure (e.g "MaStructure"), ou bien l'identifiant
     du repository complet (e.g. "IDL:MaStructure:1.0").
    </para>
    <para>
     <example>
      <title>Fichier d'exemple IDL : MaStructure</title>
      <programlisting role="idl">
struct MaStructure {
    short shortvalue;
    string stringvalue;
};
interface UneInterface {
  void SetValues (MaStructure values);
  MaStructure GetValues();
}
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Code PHP pour acc&eacute;der &agrave; MaStructure</title>
      <programlisting role="php">
&lt;?php
$obj = new OrbitObject ($ior);
$initial_values = new OrbitStruct ("IDL:MaStructure:1.0");
$initial_values->shortvalue = 42;
$initial_values->stringvalue = "HGTTG";
$obj->SetValues ($initial_values);
$values = $obj->GetValues();
echo $values->shortvalue;
echo $values->stringvalue;
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.satellite_caught_exception">
   <refnamediv>
    <refname>satellite_caught_exception</refname>
    <refpurpose>
     Indique si une exception a &eacute;t&eacute; &eacute;mise
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool
       <function>satellite_caught_exception</function>
      </funcdef>
      <paramdef></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>satellite_caught_exception</function> retourne &true;      si une exception a &eacute;t&eacute; &eacute;mise lors du dernier appel &agrave; une fonction
     Orbit.
    </para>
    <para>
     <example>
      <title>Fichier IDL exemple : PlusDeFromage</title>
      <programlisting role="php">
&lt;?php
/* ++?????++ Erreur PlusDeFromage. Recommence tout au d&eacute;but. */
exception PlusDeFromageErreur {
    int parameter;
}
interface UneAutreInterface {
    void AskWhy() raises (PlusDeFromage);
}
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Code PHP pour g&eacute;rer les exceptions CORBA</title>
      <programlisting role="php">
&lt;?php
$obj = new OrbitObject ($ior);
$obj->AskWhy();
if (satellite_caught_exception()) {
    if ("IDL:PlusDeFromage:1.0" == satellite_exception_id()) {
        $exception = satellite_exception_value();
        echo $exception->parameter;
    }
}
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.satellite_exception_id">
   <refnamediv>
    <refname>satellite_exception_id</refname>
    <refpurpose>Lit l'identifiant de repository de la derni&egrave;re exception</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>satellite_exception_id</function></funcdef>
      <paramdef></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>satellite_exception_id</function> retourne une cha&icirc;ne
     d'identification d'un repository. (E.g. "IDL:MyException:1.0".)  Pour
     un exemple, voyez <function>satellite_caught_exception</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.satellite_exception_value">
   <refnamediv>
    <refname>satellite_exception_value</refname>
    <refpurpose>
     Lit la structure de la derni&egrave;re exception
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>OrbitStruct
       <function>satellite_exception_value</function>
      </funcdef>
      <paramdef></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>satellite_exception_value</function> retourne une structure
     d'exception. Pour un exemple, voyez
     <function>satellite_caught_exception</function>.
    </para>
   </refsect1>
  </refentry>
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
