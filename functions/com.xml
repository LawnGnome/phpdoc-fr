<?xml version="1.0" encoding="iso-8859-1"?><!-- $Revision: 1.6 $ --><reference id="ref.com"> <title>Support COM pour Windows</title> <titleabbrev>COM</titleabbrev> <partintro>  <simpara>   Les fonctions COM sont uniquement disponibles sur les versions   Windows de PHP. Elles ont &eacute;t&eacute; ajout&eacute;es &agrave;   partir de PHP 4.0.  </simpara> </partintro>  <refentry id="class.com">  <refnamediv>   <refname>COM</refname>   <refpurpose>Classe COM</refpurpose>  </refnamediv>  <refsynopsisdiv>  <synopsis>$obj = new <classname>COM</classname>("server.object")</synopsis>  </refsynopsisdiv>  <refsect1 id="class.com.class">   <title>Description</title>   <simpara>    La classe COM fournit un environnement d'int&eacute;gration des composants (D)COM    dans vos scripts PHP.   </simpara>  </refsect1>  <refsect1 id="class.com.constructor">   <title>Methods</title>   <funcsynopsis>    <funcprototype>     <funcdef>string <function>com::com</function></funcdef>     <paramdef>string <parameter>module_name</parameter></paramdef>     <paramdef>string       <parameter><optional>server_name</optional></parameter></paramdef>     <paramdef>int       <parameter><optional>codepage</optional></parameter></paramdef>    </funcprototype>   </funcsynopsis>   <para>    Constructeur de la classe COM. Param&egrave;tres :    <variablelist>    <varlistentry><term>module_name</term>    <listitem>     <simpara>      nom ou class-id du composant deamnd&eacute;.     </simpara>    </listitem>    </varlistentry>    <varlistentry><term>server_name</term>    <listitem>     <simpara>      nom du serveur DCOM, aupr&egrave;s duquel le composant doit &ecirc;tre sollicit&eacute;.      Si ce param&egrave;tre est &null;, <literal>localhost</literal> sera utilis&eacute;.      Pour que les objets DCOM soient accessibles; il faut que      <constant>com.allow_dcom</constant> ait la valeur &true;      dans le fichier <filename>php.ini</filename>.     </simpara>    </listitem>    </varlistentry>    <varlistentry><term>codepage</term>    <listitem>     <simpara>      sp&eacute;cifie le code qui est utilis&eacute; pour transformer les cha&icirc;nes de      caract&egrave;res PHP en cha&icirc;nes unicode, et vice-versa. Les valeurs possibles      sont      <constant>CP_ACP</constant>, <constant>CP_MACCP</constant>,      <constant>CP_OEMCP</constant>, <constant>CP_SYMBOL</constant>,      <constant>CP_THREAD_ACP</constant>, <constant>CP_UTF7</constant>      et <constant>CP_UTF8</constant>.     </simpara>    </listitem>    </varlistentry>    </variablelist>   </para>   <para>    <example id="example.com1">     <title>Exemple COM (1)</title>     <programlisting role="php">&lt;?php// d&eacute;marrage de Word$word = new COM("word.application") or die("Unable to instanciate Word");print "Word lanc&eacute;, version {$word->Version}\n";//amener Word devant$word->Visible = 1;//cree un document vide$word->Documents->Add();//Quelques commandes$word->Selection->TypeText("Ceci est un test...");$word->Documents[1]->SaveAs("test.doc");//Fermeture de word$word->Quit();//Lib&eacute;ration des ressources$word->Release();$word = null;?&gt;     </programlisting>    </example>   </para>   <para>    <example id="example.com2">     <title>Example COM (2)</title>     <programlisting role="php">&lt;?php$conn = new COM("ADODB.Connection") or die("Cannot start ADO");$conn->Open("Provider=SQLOLEDB; Data Source=localhost;Initial Catalog=database; User ID=user; Password=password");$rs = $conn->Execute("SELECT * FROM sometable");    // Recordset$num_columns = $rs->Fields->Count();echo $num_columns . "\n";for ($i=0; $i &lt; $num_columns; $i++){    $fld[$i] = $rs->Fields($i);}$rowcount = 0;while (!$rs->EOF){    for ($i=0; $i &lt; $num_columns; $i++)    {        echo $fld[$i]->value . "\t";    }    echo "\n";    $rowcount++;            // incr&eacute;mente le nombre de lignes    $rs->MoveNext();}$rs->Close();$conn->Close();$rs->Release();$conn->Release();$rs = null;$conn = null;?&gt;     </programlisting>    </example>   </para>  </refsect1> </refentry> <refentry id="class.variant">  <refnamediv>   <refname>VARIANT</refname>   <refpurpose>classe VARIANT</refpurpose>  </refnamediv>  <refsynopsisdiv>  <synopsis>$vVar = new <classname>VARIANT</classname>($var)</synopsis>  </refsynopsisdiv>  <refsect1 id="class.variant.class">   <title>Description</title>   <simpara>    Une classe container qui transforme les variables en structures    VARIANT.   </simpara>  </refsect1>  <refsect1 id="class.variant.constructor">   <title>Methodes</title>   <funcsynopsis>    <funcprototype>     <funcdef>string <function>variant::variant</function></funcdef>     <paramdef>mixed <parameter><optional>value</optional></parameter></paramdef>     <paramdef>int <parameter><optional>type</optional></parameter></paramdef>     <paramdef>int <parameter><optional>codepage</optional></parameter></paramdef>    </funcprototype>   </funcsynopsis>   <para>    Constructeur VARIANT. Param&egrave;tres:    <variablelist>    <varlistentry><term>value</term>    <listitem>     <simpara>      valeur initiale. Si omis, un objet VT_EMPTY.     </simpara>    </listitem>    </varlistentry>    <varlistentry><term>type</term>    <listitem>     <simpara>      sp&eacute;cifie le type d'objet VARIANT contenu. Les valeurs possibles      <constant>VT_UI1</constant>, <constant>VT_UI2</constant>,      <constant>VT_UI4</constant>, <constant>VT_I1</constant>,      <constant>VT_I2</constant>, <constant>VT_I4</constant>,      <constant>VT_R4</constant>, <constant>VT_R8</constant>,      <constant>VT_INT</constant>, <constant>VT_UINT</constant>,      <constant>VT_BOOL</constant>, <constant>VT_ERROR</constant>,      <constant>VT_CY</constant>, <constant>VT_DATE</constant>,      <constant>VT_BSTR</constant>, <constant>VT_DECIMAL</constant>,      <constant>VT_UNKNOWN</constant>, <constant>VT_DISPATCH</constant>      et <constant>VT_VARIANT</constant>. Ces valeurs sont mutuellement      exclusives, mais elles peuvent &ecirc;tre combin&eacute;es avec      <constant>VT_BYREF</constant> pour sp&eacute;cifier que c'est une valeur.      Si omis le type de <parameter>value</parameter> est utilis&eacute;. Consultez      la librairy MSDN pour plus de d&eacute;tails.     </simpara>    </listitem>    </varlistentry>    <varlistentry><term>codepage</term>    <listitem>     <simpara>      sp&eacute;cifie le code qui est utilis&eacute; pour transformer les cha&icirc;nes de      caract&egrave;res PHP en cha&icirc;nes unicode, et vice-versa. Les valeurs possibles      sont      <constant>CP_ACP</constant>, <constant>CP_MACCP</constant>,      <constant>CP_OEMCP</constant>, <constant>CP_SYMBOL</constant>,      <constant>CP_THREAD_ACP</constant>, <constant>CP_UTF7</constant>      et <constant>CP_UTF8</constant>.     </simpara>    </listitem>    </varlistentry>    </variablelist>   </para>  </refsect1> </refentry>  <refentry id="function.com-load">   <refnamediv>    <refname>com_load</refname>    <refpurpose>     Cr&eacute;e une r&eacute;f&eacute;rence sur un composant COM    </refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>resource <function>com_load</function></funcdef>      <paramdef>string <parameter>module_name</parameter></paramdef>      <paramdef>string       <parameter><optional>server_name</optional></parameter>      </paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>com_load</function> cr&eacute;e une nouvelle     r&eacute;f&eacute;rence au composant COM     <parameter>module_name</parameter>, et     retourne une r&eacute;f&eacute;rence dessus.     <function>com_load</function> retourne     &false; en cas d'&eacute;chec.    </para>   </refsect1>  </refentry>  <refentry id="function.com-invoke">   <refnamediv>    <refname>com_invoke</refname>    <refpurpose>     Appelle une m&eacute;thode d'un composant    </refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>mixed <function>com_invoke</function></funcdef>      <paramdef>resource <parameter>com_object</parameter></paramdef>      <paramdef>string <parameter>function_name</parameter></paramdef>      <paramdef>mixed       <parameter>        <optional>function parameters, ...</optional>       </parameter>      </paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>com_invoke</function> appelle la m&eacute;thode     <parameter>function_name</parameter> du composant COM     <parameter>com_object</parameter>. <function>com_invoke</function>     retourne &false; en cas d'erreur, sinon retourne     le r&eacute;sultat de la fonction <parameter>function_name</parameter>     en cas de succ&egrave;s.    </para>   </refsect1>  </refentry>  <refentry id="function.com-propget">   <refnamediv>    <refname>com_propget</refname>    <refpurpose>     Lit la valeur d'un propri&eacute;t&eacute; d'un composant COM    </refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>mixed <function>com_propget</function></funcdef>      <paramdef>resource <parameter>com_object</parameter></paramdef>      <paramdef>string <parameter>property</parameter></paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>com_propget</function> est un alias de     <function>com_get</function>.    </para>   </refsect1>  </refentry>  <refentry id="function.com-get">   <refnamediv>    <refname>com_get</refname>    <refpurpose>     Lit la valeur d'un propri&eacute;t&eacute; d'un composant COM    </refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>mixed <function>com_get</function></funcdef>      <paramdef>resource <parameter>com_object</parameter></paramdef>      <paramdef>string <parameter>property</parameter></paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>com_get</function> retourne la valeur de la     propri&eacute;t&eacute;     <parameter>property</parameter> du composant COM     <parameter>com_object</parameter>.     <function>com_get</function> retourne &false; en cas d'erreur.    </para>   </refsect1>  </refentry>  <refentry id="function.com-propput">   <refnamediv>    <refname>com_propput</refname>    <refpurpose>     Modifie une propri&eacute;t&eacute; d'un composant COM    </refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>void <function>com_propput</function></funcdef>      <paramdef>resource <parameter>com_object</parameter></paramdef>      <paramdef>string <parameter>property</parameter></paramdef>      <paramdef>mixed <parameter>value</parameter></paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>com_propput</function> est un alias de     <function>com_set</function>.    </para>   </refsect1>  </refentry>  <refentry id="function.com-propset">   <refnamediv>    <refname>com_propset</refname>    <refpurpose>     Modifie une propri&eacute;t&eacute; d'un composant COM    </refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>void <function>com_propset</function></funcdef>      <paramdef>resource <parameter>com_object</parameter></paramdef>      <paramdef>string <parameter>property</parameter></paramdef>      <paramdef>mixed <parameter>value</parameter></paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>com_propset</function> est un alias de     <function>com_propput</function>.    </para>   </refsect1>  </refentry>  <refentry id="function.com-set">   <refnamediv>    <refname>com_set</refname>    <refpurpose>     Modifie une propri&eacute;t&eacute; d'un composant COM    </refpurpose>   </refnamediv>   <refsect1>    <title>Description</title>    <funcsynopsis>     <funcprototype>      <funcdef>void <function>com_set</function></funcdef>      <paramdef>resource <parameter>com_object</parameter></paramdef>      <paramdef>string <parameter>property</parameter></paramdef>      <paramdef>mixed <parameter>value</parameter></paramdef>     </funcprototype>    </funcsynopsis>    <para>     <function>com_set</function> remplace la valeur de la     propri&eacute;t&eacute; <parameter>property</parameter> du     composante COM <parameter>com_object</parameter> par     <parameter>value</parameter>. <function>com_set</function> retourne     &true; en cas de succ&egrave;s, et     &false; sinon.    </para>   </refsect1>  </refentry> <refentry id="function.com-addref">  <refnamediv>   <refname>com_addref</refname>   <refpurpose>    Incr&eacute;mente le compteur de r&eacute;f&eacute;rences   </refpurpose>  </refnamediv>  <refsect1>   <title>Description</title>   <funcsynopsis>    <funcprototype>      <funcdef>void <function>com_addref</function></funcdef>      <void/>    </funcprototype>   </funcsynopsis>   <para>    <function>com_addref</function> incr&eacute;mente le compteur de r&eacute;f&eacute;rences.   </para>  </refsect1> </refentry> <refentry id="function.com-release">  <refnamediv>   <refname>com_release</refname>   <refpurpose>    D&eacute;cr&eacute;mente le compteur de r&eacute;f&eacute;rences   </refpurpose>  </refnamediv>  <refsect1>   <title>Description</title>   <funcsynopsis>    <funcprototype>      <funcdef>void <function>com_release</function></funcdef>      <void/>    </funcprototype>   </funcsynopsis>   <para>    <function>com_release</function> d&eacute;cr&eacute;mente le compteur de r&eacute;f&eacute;rences.   </para>  </refsect1> </refentry> </reference><!-- Keep this comment at the end of the fileLocal variables:mode: sgmlsgml-omittag:tsgml-shorttag:tsgml-minimize-attributes:nilsgml-always-quote-attributes:tsgml-indent-step:1sgml-indent-data:tsgml-parent-document:nilsgml-default-dtd-file:"../../manual.ced"sgml-exposed-tags:nilsgml-local-catalogs:nilsgml-local-ecat-files:nilEnd:-->