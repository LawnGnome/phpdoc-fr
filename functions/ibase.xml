 <reference id="ref.ibase">
  <title>Fonctions InterBase</title>
  <titleabbrev>InterBase</titleabbrev>
  <partintro>
   <para>
      Interbase est une base de donn&eacute;es populaire, cr&eacute;&eacute;e
      par Borland/Inprise. Pour plus d'informations sur Interbase, allez &agrave;
      <ulink url="http://www.interbase.com">http://www.interbase.com</ulink>.
      Par ailleurs, Interbase vient de rejoindre le mouvement Open Source!
   </para>
   <note>
    <para>
     Le support int&eacute;gral de InterBase 6 a &eacute;t&eacute; ajout&eacute;
     &agrave; PHP 4.0.
    </para>
	<para>
	 Cette base de donn&eacute;es utilise les guillemets simples (')
	 pour &eacute;chapper les caract&egrave;res, un peu comme le fait Sybase.
	 Ajoutez &agrave; votre fichier <filename>php.ini</filename> la directive
	 suivante :
	 <informalexample>
	  <programlisting>
magic_quotes_sybase = On
	  </programlisting>
	 </informalexample>
	</para>
   </note>
  </partintro>
  <refentry id="function.ibase-connect">
   <refnamediv>
    <refname>ibase_connect</refname>
    <refpurpose>
     Ouvre une connexion &agrave; une base de donn&eacute;es Interbase.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_connect</function></funcdef>
      <paramdef>string <parameter>database</parameter></paramdef>
      <paramdef>string
       <parameter><optional>username</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>password</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>charset</optional></parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>buffers</optional></parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>dialect</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>role</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ibase_connect</function> &eacute;tablit une connexin avec
     un serveur InterBase. <parameter>database</parameter> doit &ecirc;tre un chemin
     valide jusqu'&agrave; un fichier de base de donn&eacute;s sur le serveur sur
     lequel il r&eacute;sde. Si le serveur est distant, il faut le pr&eacute;fixer
     avec un nom d'h&ocirc;te 'hostname:' (TCP/IP), '//hostname/' (NetBEUI) ou
     'hostname@' (IPX/SPX), en fonction du protocole de communication utilis&eacute;.
     <parameter>username</parameter> et <parameter>password</parameter> peuvent
     &ecirc;tre sp&eacute;cifi&eacute; dans les directives de configuration du PHP
     ibase.default_user et ibase.default_password. <parameter>charset</parameter> est
     le jeu de caract&egrave;re par d&eacute;faut de la base.
     <parameter>buffers</parameter> est le nombre de buffer de base &agrave;
     allouer pour le cache serveur. Si il est pass&eacute; &agrave; 0 ou
     omis, le serveur choisira de lui-m&ecirc;me. <parameter>dialect</parameter>
     selectionne le dialecte SQL pour les requ&ecirc;tes ex&eacute;cut&eacute;es
     avec cette connexion, et par d&eacute;faut, il utilise le meilleur dialecte
     disponible.
    </para>
    <para>
     Si un deuxi&egrave;me appel est fait avec <function>ibase_connect</function>, en
     passant les m&ecirc;mes arguments, une nouvelle connexion ne sera pas ouverte,
     mais la connexion d&eacute;j&agrave; ouverte sera retourn&eacute;e. La connexion
     sera ferm&eacute;e d&egrave;s que le script se termine, &agrave; moins qu'elle
     ne soit ferm&eacute;e explicitement avec <function>ibase_close</function>,
     durant le script.
     <example>
      <title>Exemple <function>ibase_connect</function></title>
      <programlisting role="php">
&lt;?php
    $dbh = ibase_connect ($host, $username, $password);
    $stmt = 'SELECT * FROM tblname';
    $sth = ibase_query ($dbh, $stmt);
    while ($row = ibase_fetch_object ($sth)) {
        print $row->email . "\n";
    }
    ibase_close ($dbh);
?>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      <parameter>buffers</parameter> a &eacute;t&eacute; ajout&eacute; dans PHP4-RC2.
     </para>
    </note>
    <note>
     <para>
      <parameter>dialect</parameter> a &eacute;t&eacute; ajout&eacute; dans PHP4-RC2.
      Il n'est op&eacute;rationnel qu'avec les versions InterBase 6 et plus
      r&eacute;centes.
     </para>
    </note>
    <note>
     <para>
      <parameter>role</parameter> a &eacute;t&eacute; ajout&eacute; dans PHP4-RC2.
      Il n'est op&eacute;rationnel qu'avec les versions InterBase 5 et plus
      r&eacute;centes.
     </para>
    </note>
    <para>
     Voir aussi: <function>ibase_pconnect</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-pconnect">
   <refnamediv>
    <refname>ibase_pconnect</refname>
    <refpurpose>
     Ouvre une connexion persistante &agrave; une base de donn&eacute;es Interbase.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_pconnect</function></funcdef>
      <paramdef>string <parameter>database</parameter></paramdef>
      <paramdef>string
       <parameter><optional>username</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>password</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>charset</optional></parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>buffers</optional></parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>dialect</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter><optional>role</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ibase_pconnect</function> se comporte similairement &agrave;
     <function>ibase_connect</function>, avec deux diff&eacute;rences
     majeures : la premi&egrave;re est que, lors de la connexion, la fonction
     va essayer de trouver une connexion (perisitante) d&eacute;j&agrave; ouverte.
     Si elle la trouve, cette derni&egrave;re sera retourn&eacute;e, plut&ocirc;t
     qu'une nouvelle connexion. Sinon, une nouvelle connexion sera ouverte.
     La deuxi&egrave;me est que la connexion ne sera pas ferm&eacute;e &agrave; la fin
     du script, mais restera ouverte pour utilisation ult&eacute;rieure.
     (<function>ibase_close</function> ne fermera pas une connexion ouverte
     avec <function>ibase_pconnect</function>). Ce type de lien est alors dit
     'persistant'.
    </para>
     <note>
     <para>
      <parameter>buffers</parameter> a &eacute;t&eacute; ajout&eacute; dans PHP4-RC2.
     </para>
    </note>
    <note>
     <para>
      <parameter>dialect</parameter> a &eacute;t&eacute; ajout&eacute; dans PHP4-RC2.
      Il n'est op&eacute;rationnel qu'avec les versions InterBase 6 et plus
      r&eacute;centes.
     </para>
    </note>
    <note>
     <para>
      <parameter>role</parameter> a &eacute;t&eacute; ajout&eacute; dans PHP4-RC2.
      Il n'est op&eacute;rationnel qu'avec les versions InterBase 5 et plus
      r&eacute;centes.
     </para>
    </note>
    <para>
     Voir aussi <function>ibase_connect</function> pour plus de d&eacute;tails
     sur les arguments de cette fonction.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-close">
   <refnamediv>
    <refname>ibase_close</refname>
    <refpurpose>
     Ferme une connexion &agrave; une base de donn&eacute;es Interbase.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_close</function></funcdef>
      <paramdef>int
       <parameter><optional>connection_id</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ibase_close</function> ferme une connexion &agrave; une base
     de donn&eacute;es Interbase. Cette fonction prend comme argument l'identifiant
     de connexion <parameter>connection_id</parameter> retourn&eacute; par
     <function>ibase_connect</function>. Si <parameter>connection_id</parameter>
     est omis, la derni&egrave;re connexion ibase est ferm&eacute;e. Les
     transactions par d&eacute;faut sont valid&eacute;es et les autres sont
     annul&eacute;es.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-query">
   <refnamediv>
    <refname>ibase_query</refname>
    <refpurpose>Ex&eacute;cute une requ&ecirc;te sur une base Interbase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_query</function></funcdef>
      <paramdef>int
       <parameter><optional>link_identifier</optional></parameter>
      </paramdef>
      <paramdef>string
       <parameter>query</parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>bind_args</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
      Ex&eacute;cute une requ&ecirc;te sur une base Interbase, et retourne un
      identifiant de r&eacute;sultat, &agrave; utiliser avec
      <function>ibase_fetch_row</function>, <function>ibase_free_result</function>
      et/ou <function>ibase_free_query</function>.
    </simpara>
    <note>
     <para>
      Bien que ces fonctions supportent la liaison de variables avec des
      param&egrave;tres de requ&ecirc;tes, il n'y a pas d'inter&ecirc;t sp&eacute;cial
      &agrave; les utiliser. Pour des exemples grandeur r&eacute;elle, voyez
      <function>ibase_prepare</function> et <function>ibase_execute</function>.
     </para>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-fetch-row">
   <refnamediv>
    <refname>ibase_fetch_row</refname>
    <refpurpose> Lit une ligne dans une base Interbase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>ibase_fetch_row</function></funcdef>
      <paramdef>int
       <parameter>result_identifier</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Retourne la procha&icirc;ne ligne sp&eacute;cifi&eacute;e dans le
     r&eacute;sultat obtenu de <function>ibase_query</function>.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-fetch-object">
   <refnamediv>
    <refname>ibase_fetch_object</refname>
    <refpurpose>Lit une ligne dans une base Interbase dans un objet.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>ibase_fetch_object</function></funcdef>
      <paramdef>int
       <parameter>result_id</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      Lit une ligne dans une base Interbase et la place dans un pseudo objet.
      Cette fonction prend comme argument un identifiant de r&eacute;sultat obtenu de
      <function>ibase_query</function> ou <function>ibase_execute</function>.
     <informalexample>
      <programlisting role="php">
&lt;php
    $dbh = ibase_connect ($host, $username, $password);
    $stmt = 'SELECT * FROM tblname';
    $sth = ibase_query ($dbh, $stmt);
    while ($row = ibase_fetch_object ($sth)) {
        print $row->email . "\n";
    }
    ibase_close ($dbh);
?>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Voir aussi <function>ibase_fetch_row</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-field-info">
   <refnamediv>
    <refname>ibase_field_info</refname>
    <refpurpose>
     Lit les informations sur un champs
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>ibase_field_info</function></funcdef>
      <paramdef>int <parameter>result</parameter></paramdef>
      <paramdef>int <parameter>field number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Retourne un tableau contenant les informations sur un champs
     apr&egrave;s une requ&ecirc;te de SELECT. Le tableau contient les index
     name (nom), alias, relation, length (taille), type.
    </para>
    <informalexample>
     <programlisting role="php">
// helio@helio.com.br  08-Dec-2000 02:53
$rs=ibase_query("Select * from unetable");
$coln = ibase_num_fields($rs);
for ($i=0 ; $i < $coln ; $i++) {
    $col_info = ibase_field_info($rs, $i);
    echo "nom: ".$col_info['name']."\n";
    echo "alias: ".$col_info['alias']."\n";
    echo "relation: ".$col_info['relation']."\n";
    echo "taille: ".$col_info['length']."\n";
    echo "type: ".$col_info['type']."\n";
    }
     </programlisting>
    </informalexample>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-free-result">
   <refnamediv>
    <refname>ibase_free_result</refname>
    <refpurpose>Lib&egrave;re un r&eacute;sultat.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_free_result</function></funcdef>
      <paramdef>int
       <parameter>result_identifier</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
      Lib&egrave;re un r&eacute;sultat cr&eacute;&eacute; par
      <function>ibase_query</function>.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-prepare">
   <refnamediv>
    <refname>ibase_prepare</refname>
    <refpurpose>
      Pr&eacute;pare une requ&ecirc;te pour lier les param&egrave;tres et
      l'&eacute;x&eacute;cuter ult&eacute;rieurement.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_prepare</function></funcdef>
      <paramdef>int
       <parameter><optional>link_identifier</optional></parameter>
      </paramdef>
      <paramdef>string <parameter>query</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
      Pr&eacute;pare une requ&ecirc;te pour l'&eacute;x&eacute;cuter
      (avec <function>ibase_execute</function>).
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-execute">
   <refnamediv>
    <refname>ibase_execute</refname>
    <refpurpose>Ex&eacute;cute une requ&ecirc;te pr&eacute;par&eacute;e.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_execute</function></funcdef>
      <paramdef>int
       <parameter>query</parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>bind_args</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      Execute une requ&ecirc;te pr&eacute;par&eacute;e (et &eacute;ventuellement
      li&eacute;e) par <function>ibase_prepare</function>.
      Cette fonction est beaucoup plus efficace
      que <function>ibase_query</function>, si vous effectuez plusieurs fois
      la m&ecirc;me requ&ecirc;te, en ne changeant que quelques param&egrave;tres.
    <informalexample>
      <programlisting role="php">
&lt;?php
    $updates = array(
        1 => 'Eric',
        5 => 'Filip',
        7 => 'Larry'
    );
    $query = ibase_prepare("UPDATE FOO SET BAR = ? WHERE BAZ = ?");
    while (list($baz, $bar) = each($updates)) {
        ibase_execute($query, $bar, $baz);
    }
?>
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>
 <refentry id="function.ibase-trans">
   <refnamediv>
    <refname>ibase_trans</refname>
    <refpurpose>Pr&eacute;pare une transaction</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_trans</function></funcdef>
      <paramdef>int
       <parameter><optional>trans_args</optional></parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>link_identifier</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Pr&eacute;pare une transaction
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-commit">
   <refnamediv>
    <refname>ibase_commit</refname>
    <refpurpose>Valide une transaction</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_commit</function></funcdef>
      <paramdef>int
       <parameter><optional>link_identifier</optional></parameter>
      </paramdef>
      <paramdef>int <parameter>trans_number</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Valide la  transaction <parameter>trans_number</parameter>, qui a &eacute;t&eacute;
     pr&eacute;par&eacute;e avec <function>ibase_trans</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-rollback">
   <refnamediv>
    <refname>ibase_rollback</refname>
    <refpurpose>Annule une transaction</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_rollback</function></funcdef>
      <paramdef>int
       <parameter><optional>link_identifier</optional></parameter>
      </paramdef>
      <paramdef>int <parameter>trans_number</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Annule la transaction <parameter>trans_number</parameter> qui a &eacute;t&eacute;
     pr&eacute;par&eacute;e avec <function>ibase_trans</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-free-query">
   <refnamediv>
    <refname>ibase_free_query</refname>
    <refpurpose>
      Lib&egrave;re la m&eacute;moire reserv&eacute;e par une requ&ecirc;te pr&eacute;par&eacute;e.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_free_query</function></funcdef>
      <paramdef>int
       <parameter>query</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
      Lib&egrave;re la m&eacute;moire r&eacute;serv&eacute;e par une
      requ&ecirc;te pr&eacute;par&eacute;e par <function>ibase_prepare</function>.
    </simpara>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-timefmt">
   <refnamediv>
    <refname>ibase_timefmt</refname>
    <refpurpose>
     Fixe le format de date pour les procha&icirc;nes requ&ecirc;tes.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_timefmt</function></funcdef>
      <paramdef>string
       <parameter>format</parameter>
      </paramdef>
      <paramdef>int
       <parameter><optional>columntype</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Fixe le format des colonnes de type dates, heure et timestamp,
     retourn&eacute;es par les requ&ecirc;tes. En interne, les colonnes 
     sont format&eacute;es par la fonction C strftime() : reportez-vous
     &agrave; sa documentation pour conna&icirc;tre la structure de la 
     cha&icirc;ne de format. <parameter>columntype</parameter> est une 
     des constantes suivantes : IBASE_TIMESTAMP, IBASE_DATE ou IBASE_TIME. 
     Si elle est omise, la valeur par d&eacute;faut est IBASE_TIMESTAMP, 
     pour compatibilit&eacute; ascendante.
     <informalexample>
      <programlisting role="php">
&lt;?php
    // Les colonnes TIME de InterBase 6 seront retourn&eacute;es avec
    // la forme '05 heures 37 minutes'.
    ibase_timefmt("%H heures %M minutes", IBASE_TIME);
?&gt;
      </programlisting>
     </informalexample>
    </para>
    <para>
     Vous pouvez aussi modifier les formats par d&eacute;faut avec les directives
     PHP ibase.timestampformat, ibase.dateformat et ibase.timeformat.
    </para>
    <note>
     <para>
      <parameter>columntype</parameter> a &eacute;t&eacute; ajout&eacute; dans PHP 4.0. Il n'a
      aucun sens jusqu'&agrave; InterBase version 6 et plus r&eacute;cent.
     </para>
    </note>
    <note>
     <para>
      Une modification incompatible avec l'existant est apparue
      dans PHP 4.0 lorsque la directive PHP ibase.timeformat a &eacute;t&eacute; renomm&eacute;e
      ibase.timestampformat et les directives ibase.dateformat et
      ibase.timeformat ont &eacute;t&eacute; ajout&eacute;e, de mani&egrave;re &agrave; les adapter &agrave; leur
      fonction.
     </para>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-num-fields">
   <refnamediv>
    <refname>ibase_num_fields</refname>
    <refpurpose>
       Retourne le nombre de lignes dans un r&eacute;sultat.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ibase_num_fields</function></funcdef>
      <paramdef>int <parameter>result_id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Retourne le nombre de lignes dans un r&eacute;sultat.
     <informalexample>
      <programlisting role="php">
&lt;?php
$dbh = ibase_connect ($host, $username, $password);
$stmt = 'SELECT * FROM tblname';
$sth = ibase_query ($dbh, $stmt);
if ( ibase_num_rows($sth) > 0 ) {
    while ($row = ibase_fetch_object ($sth)) {
        print $row->email . "\n";
    }
} else {
    die("Aucun r&eacute;sultat");
}
ibase_close ($dbh);
?>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      <function>ibase_timefmt</function> ne fonctionne pas encore sous PHP4.
     </para>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.ibase-errmsg">
   <refnamediv>
    <refname>ibase_errmsg</refname>
    <refpurpose>
     Retourne un message d'erreur
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ibase_errmsg</function></funcdef>
      <paramdef>void <parameter></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Retourne une cha&icirc;ne contenant les messages d'erreurs.
    </simpara>
   </refsect1>
  </refentry>
 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
