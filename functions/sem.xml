<?xml version="1.0" encoding="iso-8859-1"?>
 <reference id="ref.sem">
  <title>S&eacute;maphores et gestion de la m&eacute;moire partag&eacute;e</title>
  <titleabbrev>S&eacute;maphore</titleabbrev>
  <partintro>
  <para>
    Ce module fourni un syst&egrave;me de s&eacute;maphore. Ce syst&egrave;me
    utilise les s&eacute;maphores System V. Les s&eacute;maphores peuvent
    &ecirc;tre utilis&eacute;s pour fournir un acc&egrave;s exclusif
    &agrave; certaines ressources de la machine, ou pour limiter le
    nombre de processus qui utilisent en m&ecirc;me temps une ressource.
  </para>
  <para>
    Ce module fournit aussi un syst&egrave;me de m&eacute;moire
    partag&eacute;e, qui utilise la m&eacute;moire partag&eacute;e
    System V. Cette m&eacute;moire partag&eacute;e permet
    d'acc&eacute;der &agrave; des variables globales. Les
    diff&eacute;rents d&eacute;mons httpd et m&ecirc;mes
    d'autres programmes (tels que Perl, C, ...) permettent
    un tel &eacute;change de donn&eacute;es global. N'oubliez
    pas que la m&eacute;moire partag&eacute;e n'est pas
    prot&eacute;g&eacute;es contre l'acc&egrave;s simultan&eacute;.
    Il vous faudra utiliser les s&eacute;maphores pour assurer la synchronisation.
    <table>
     <title>Limites de la m&eacute;moire partag&eacute;e sous Unix OS</title>
     <tgroup cols="2">
      <tbody>
       <row>
	    <entry>SHMMAX</entry>
	    <entry>
	      Taille maximale de m&eacute;moire partag&eacute;e,
	      par d&eacute;faut, 131072 octets.
	    </entry>
       </row>
       <row>
     	<entry>SHMMIN</entry>
	    <entry>
	      Taille minimale de m&eacute;moire partag&eacute;e,
	      par d&eacute;faut, 1 octet.
	    </entry>
       </row>
       <row>
	    <entry>SHMMNI</entry>
	    <entry>
	      Nombre maximal de segment de m&eacute;moire partag&eacute;,
	      par d&eacute;faut 100.
	    </entry>
       </row>
       <row>
	    <entry>SHMSEG</entry>
	    <entry>
	      Taille maximale de m&eacute;moire partag&eacute;e par processus,
	      par d&eacute;faut 6.
	    </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </partintro>
  <refentry id="function.sem-get">
   <refnamediv>
    <refname>sem_get</refname>
    <refpurpose>Retourne un identifiant de s&eacute;maphore.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>sem_get</methodname>
      <methodparam><type>int</type><parameter>key</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>max_acquire</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>perm</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>sem_get</function> retourne un identifiant positif
     de s&eacute;maphore en cas de succ&egrave;s, et
     &false; en cas d'erreur.
    </para>
    <para>
     <function>sem_get</function> retourne un identifiant qui pourra
     &ecirc;tre utilis&eacute; pour acc&eacute;der &agrave; un
     s&eacute;maphore System V. Le s&eacute;maphore est cr&eacute;&eacute;,
     si n&eacute;cessaire, en utilisant les bits de permission (par
     d&eacute;faut, 0666). Le nombre de processus qui peuvent
     r&eacute;server simultan&eacute;ment le s&eacute;maphore
     est pr&eacute;cis&eacute; dans max_acquire (par d&eacute;faut
     &agrave; 1). Actuellement, cette valeur n'est affect&eacute;e
     que si le processus est le seul processus actuellement
     attach&eacute; au s&eacute;maphore.
    </para>
    <para>
     Un deuxi&egrave;me appel &agrave; <function>sem_get</function>
     avec la m&ecirc;me cl&eacute; retournera un identifiant
     diff&eacute;rent, mais les deux identifiants permettront
     d'acc&eacute;der au m&ecirc;me s&eacute;maphore.
    </para>
    <para>
     Voir aussi
     <function>sem_acquire</function> et
     <function>sem_release</function>.
    </para>
    <note>
     <simpara>
      <function>sem_get</function> n'est pas disponibles sous Windows.
     </simpara>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.sem-acquire">
   <refnamediv>
    <refname>sem_acquire</refname>
    <refpurpose>R&eacute;serve un s&eacute;maphore.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>sem_acquire</methodname>
      <methodparam><type>resource</type><parameter>sem_identifier</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>sem_acquire</function> retourne &true;
     en cas de succ&egrave;s, et &false; sinon.
    </para>
    <para>
     <function>sem_acquire</function> se bloque (si n&eacute;cessaire)
     jusqu'&agrave; ce que le s&eacute;maphore puisse &ecirc;tre
     r&eacute;serv&eacute;. Un processus qui tente de r&eacute;server
     un s&eacute;maphore qu'il a d&eacute;j&agrave; reserv&eacute;
     restera en attente ind&eacute;finie, si cette acquisition exc&egrave;de
     le nombre max_acquire de r&eacute;servation simultan&eacute;e.
    </para>
    <para>
     A la fin d'un script, tous les s&eacute;maphores r&eacute;serv&eacute;s
     mais non explicitement lib&eacute;r&eacute;s seront lib&eacute;r&eacute;s
     automatiquement, et une alerte sera g&eacute;n&eacute;r&eacute;e.
    </para>
    <para>
     Voir aussi
     <function>sem_get</function> et
     <function>sem_release</function>.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.sem-release">
   <refnamediv>
    <refname>sem_release</refname>
    <refpurpose>Lib&egrave;re un s&eacute;maphore.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>sem_release</methodname>
      <methodparam><type>int</type><parameter>sem_identifier</parameter></methodparam>
     </methodsynopsis>
    <para>
       Retourne &true; en cas de succ&egrave;s, &false; en cas d'erreur.
    </para>
    <para>
       <function>sem_release</function> lib&egrave;re le s&eacute;maphore
       s'il a &eacute;t&eacute; r&eacute;serv&eacute; par le
       processus courant. Sinon, g&eacute;n&egrave;re une erreur.
    </para>
    <para>
      Apr&egrave;s lib&eacute;ration du s&eacute;maphore,
      <function>sem_acquire</function> peut &ecirc;tre appel&eacute;
      pour le r&eacute;server &agrave; nouveau.
    </para>
    <para>
       Voir aussi : <function>sem_get</function> et <function>sem_acquire</function>.
    </para>
    <note>
     <simpara>
      Cette fonction n'est pas disponibles sous Windows.
     </simpara>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.shm-attach">
   <refnamediv>
    <refname>shm_attach</refname>
    <refpurpose>
      Cr&eacute;e ou ouvre un segment de m&eacute;moire partag&eacute;e.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>shm_attach</methodname>
      <methodparam><type>int</type><parameter>key</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>memsize</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>perm</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>shm_attach</function> retourne un identifiant qui
     permettra d'acc&eacute;der au System V de m&eacute;moire
     partag&eacute;e. Au premier appel, la m&eacute;moire sera
     cr&eacute;&eacute;e, avec la taille mem_size (par d&eacute;faut:
     sysvshm.init_mem dans <filename>php3.ini</filename>, sinon 10000 octets)
      et avec les permissions perm(par d&eacute;faut : 666).
    </para>
    <para>
      Aux appels suivants avec la m&ecirc;me cl&eacute;
      <parameter>key</parameter>, <function>shm_attach</function>
      retournera un nouvel identifiant, mais cet identifiant
      acc&eacute;dera toujours &agrave; la m&ecirc;me portion de
      m&eacute;moire partag&eacute;e. Dans ce cas, <parameter>memsize</parameter>
      et <parameter>perm</parameter>seront ignor&eacute;s.
    </para>
    <note>
     <simpara>
      Cette fonction n'est pas disponibles sous Windows.
     </simpara>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.shm-detach">
   <refnamediv>
    <refname>shm_detach</refname>
    <refpurpose>Lib&egrave;re un segment de m&eacute;moire partag&eacute;e.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>resource</type><methodname>shm_detach</methodname>
      <methodparam><type>int</type><parameter>shm_identifier</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>shm_detach</function> lib&egrave;re le segment de
     m&eacute;moire partag&eacute;e identifi&eacute; par
     <parameter>shm_identifier</parameter> et cr&eacute;&eacute; par
     <function>sem_get</function>. N'oubliez pas que cette m&eacute;moire
     partag&eacute;e existe toujours sous Unix, et que les
     donn&eacute;es sont toujours accessibles.
    </para>
   </refsect1>
  </refentry>
  <refentry id="function.shm-remove">
   <refnamediv>
    <refname>shm_remove</refname>
    <refpurpose>
     Supprime un segment de m&eacute;moire partag&eacute;e sous Unix.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>shm_remove</methodname>
      <methodparam><type>resource</type><parameter>shm_identifier</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>shm_remove</function> supprime un segment de m&eacute;moire
     partag&eacute;e sous Unix. Toutes les donn&eacute;es seront supprim&eacute;es.
    </para>
    <note>
     <simpara>
      <function>shm_remove</function> n'est pas disponibles sous Windows.
     </simpara>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.shm-put-var">
   <refnamediv>
    <refname>shm_put_var</refname>
    <refpurpose>
     Ins&egrave;re ou modifie une variable de la m&eacute;moire partag&eacute;e.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>shm_put_var</methodname>
      <methodparam><type>resource</type><parameter>shm_identifier</parameter></methodparam>
      <methodparam><type>int</type><parameter>variable_key</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>variable</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>shm_put_var</function> ins&egrave;re ou modifie la
     variable <parameter>variable</parameter> avec la cl&eacute;
     <parameter>variable_key</parameter>. Tous les types de
     variables (double, int, string, array, objects...) sont support&eacute;s.
    </para>
    <note>
     <simpara>
      <function>shm_put_var</function> n'est pas disponibles sous Windows.
     </simpara>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.shm-get-var">
   <refnamediv>
    <refname>shm_get_var</refname>
    <refpurpose>
     Lit une variable dans la m&eacute;moire partag&eacute;e.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>mixed</type><methodname>shm_get_var</methodname>
      <methodparam><type>resource</type><parameter>shm_identifier</parameter></methodparam>
      <methodparam><type>int</type><parameter>variable_key</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>shm_get_var</function> retourne la variable
     rep&eacute;r&eacute;e par <parameter>variable_key</parameter>.
     La variable est toujours pr&eacute;sente en m&eacute;moire
     partag&eacute;e.
    </para>
    <note>
     <simpara>
      <function>shm_get_var</function> n'est pas disponibles sous Windows.
     </simpara>
    </note>
   </refsect1>
  </refentry>
  <refentry id="function.shm-remove-var">
   <refnamediv>
    <refname>shm_remove_var</refname>
    <refpurpose>
      Efface une variable de la m&eacute;moire partag&eacute;e.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>int</type><methodname>shm_remove_var</methodname>
      <methodparam><type>int</type><parameter>shm_identifier</parameter></methodparam>
      <methodparam><type>int</type><parameter>variable_key</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>shm_remove_var</function> efface la variable
     <parameter>variable_key</parameter> de la m&eacute;moire
     partag&eacute;e et lib&egrave;re la m&eacute;moire.
    </para>
    <note>
     <simpara>
      <function>shm_remove_var</function> n'est pas disponibles sous Windows.
     </simpara>
    </note>
   </refsect1>
  </refentry>
</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

