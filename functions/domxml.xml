<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<reference id="ref.domxml">
 <title>DOM XML</title>
 <titleabbrev>DOM XML</titleabbrev>
 <partintro>
  <simpara>
   Note importante : cette documentation est en cours de r&eacute;daction,
   et n'est pas encore finie. Elle souffre naturellement d'un
   manque de d&eacute;tails et de relecture. Soyez en pr&eacute;venu. (Damien
   Seguy).
  </simpara>
  <simpara>
   Ces fonctions ne sont disponibles que si PHP a &eacute;t&eacute;
   configur&eacute; avec l'option
   <link linkend="install.configure.with-dom"><option role="configure">--with-dom=[DIR]</option></link>,
   et utilise la librairie GNOME xml library. Vous aurez aussi besoin
   de la librairie libxml-2.2.7 (la version beta ne fonctionne pas).
   Ces fonctions ont &eacute;t&eacute; ajout&eacute;es en PHP 4.
  </simpara>
  <simpara>
   Cette extension vous permet de g&eacute;n&eacute;rer des documents XML avec
   les API DOM. Elle fournit aussi une fonction <function>xmltree</function>
   qui transforme un fichier XML en tableau PHP. Actuellement, ce
   tableau est accessible uniquement en lecture. Cela ne siginifie pas
   que vous ne pouvez pas le modifier, mais cela n'aurait aucun sens
   car <function>domxml_dumpmem</function> ne pourra pas prendre ces
   modifications en consid&eacute;ration. Par cons&eacute;quent, si vous voulez
   lire un fichier XML et &eacute;crire sa version modifi&eacute;e, utilisez les
   fonctions <function>domxml_add_node</function>,
   <function>domxml_set_attribute</function>, etc...
   et finalement <function>domxml_dumpmem</function>.
  </simpara>
  <simpara>
   Ce module d&eacute;finit les constantes suivantes :
  </simpara>
  <table>
   <title>Constantes XML</title>
   <tgroup cols="3">
    <thead>
    <row>
     <entry>Constante</entry>
     <entry>Valeur</entry>
     <entry>Description</entry>
    </row>
    </thead>
    <tbody>
     <row>
      <entry>XML_ELEMENT_NODE</entry>
      <entry>1</entry>
      <entry>Le noeud est un &eacute;l&eacute;ment</entry>
     </row>
     <row>
      <entry>XML_ATTRIBUTE_NODE</entry>
      <entry>2</entry>
      <entry>Le noeud est un attribut</entry>
     </row>
     <row>
      <entry>XML_TEXT_NODE</entry>
      <entry>3</entry>
      <entry>Le noeud est un texte</entry>
     </row>
     <row>
      <entry>XML_CDATA_SECTION_NODE</entry>
      <entry>4</entry>
      <entry></entry>
     </row>
     <row>
      <entry>XML_ENTITY_REF_NODE</entry>
      <entry>5</entry>
      <entry></entry>
     </row>
     <row>
      <entry>XML_ENTITY_NODE</entry>
      <entry>6</entry>
      <entry>Le noeud est une entit&eacute; telle que &amp;nbsp;</entry>
     </row>
     <row>
      <entry>XML_PI_NODE</entry>
      <entry>7</entry>
      <entry>Le noeud est une instruction</entry>
     </row>
     <row>
      <entry>XML_COMMENT_NODE</entry>
      <entry>8</entry>
      <entry>Le noeud est un commentaire</entry>
     </row>
     <row>
      <entry>XML_DOCUMENT_NODE</entry>
      <entry>9</entry>
      <entry>Le noeud est un document</entry>
     </row>
     <row>
      <entry>XML_DOCUMENT_TYPE_NODE</entry>
      <entry>10</entry>
      <entry></entry>
     </row>
     <row>
      <entry>XML_DOCUMENT_FRAG_NODE</entry>
      <entry>11</entry>
      <entry></entry>
     </row>
     <row>
      <entry>XML_NOTATION_NODE</entry>
      <entry>12</entry>
      <entry></entry>
     </row>
     <row>
      <entry>XML_GLOBAL_NAMESPACE</entry>
      <entry>1</entry>
      <entry></entry>
     </row>
     <row>
      <entry>XML_LOCAL_NAMESPACE</entry>
      <entry>2</entry>
      <entry></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <simpara>
   Chaque fonction de cette extension peut &ecirc;tre utilis&eacute;e de deux mani&egrave;res
   diff&eacute;rentes. Dans un contexte proc&eacute;dural, il faut passer l'objet en
   premier argument; dans un contexte objet, vous pouvez appeler la
   fonction comme une m&eacute;thode de cet objet. Cette documentation pr&eacute;sente
   les fonctions dans leur contexte proc&eacute;dural. Vous pouvez conna&icirc;tre la
   m&eacute;thode objet en supprimant le pr&eacute;fixe "<literal>domxml_</literal>".
   Les tables suivantes listes toutes les classes, leurs attributs et
   leurs m&eacute;thodes.
  </simpara>
  <simpara>
   Ce module d&eacute;finit un ensemble de classes, qui sont list&eacute;es
   ci-dessous (y compris leur attributs et leur m&eacute;thodes).
  </simpara>
  <para>
   <table>
    <title>classe DomDocument (m&eacute;thodes)</title>
    <tgroup cols="3">
     <thead>
     <row>
      <entry>Nom de la m&eacute;thode</entry>
      <entry>Nom de la fonction</entry>
      <entry>Description</entry>
     </row>
     </thead>
     <tbody>
      <row>
       <entry>root</entry>
       <entry><function>domxml_root</function></entry>
       <entry></entry>
      </row>
      <row>
       <entry>children</entry>
       <entry><function>domxml_children</function></entry>
       <entry></entry>
      </row>
      <row>
       <entry>add_root</entry>
       <entry><function>domxml_add_root</function></entry>
       <entry></entry>
      </row>
      <row>
       <entry>dtd</entry>
       <entry><function>domxml_intdtd</function></entry>
       <entry></entry>
      </row>
      <row>
       <entry>dumpmem</entry>
       <entry><function>domxml_dumpmem</function></entry>
       <entry></entry>
      </row>
      <row>
       <entry>xpath_init</entry>
       <entry>xpath_init</entry>
       <entry></entry>
      </row>
      <row>
       <entry>xpath_new_context</entry>
       <entry>xpath_new_context</entry>
       <entry></entry>
      </row>
      <row>
       <entry>xptr_new_context</entry>
       <entry>xptr_new_context</entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <para>
   <table>
    <title>Classe DomDocument (attributs)</title>
    <tgroup cols="3">
     <thead>
     <row>
      <entry>Nom</entry>
      <entry>Type</entry>
      <entry>Description</entry>
     </row>
     </thead>
     <tbody>
      <row>
       <entry>doc</entry>
       <entry>class DomDocument</entry>
       <entry>L'objet lui-m&ecirc;me</entry>
      </row>
      <row>
       <entry>name</entry>
       <entry>string</entry>
       <entry></entry>
      </row>
      <row>
       <entry>url</entry>
       <entry>string</entry>
       <entry></entry>
      </row>
      <row>
       <entry>version</entry>
       <entry>string</entry>
       <entry>Version de XML</entry>
      </row>
      <row>
       <entry>encoding</entry>
       <entry>string</entry>
       <entry></entry>
      </row>
      <row>
       <entry>standalone</entry>
       <entry>long</entry>
       <entry>1 si le fichier est complet</entry>
      </row>
      <row>
       <entry>type</entry>
       <entry>long</entry>
       <entry>Une des constantes de la table ... </entry>
      </row>
      <row>
       <entry>compression</entry>
       <entry>long</entry>
       <entry>1 si le fichier est compress&eacute;</entry>
      </row>
      <row>
       <entry>charset</entry>
       <entry>long</entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <para>
   <table>
    <title>classe DomNode (m&eacute;thodes)</title>
    <tgroup cols="3">
     <thead>
     <row>
      <entry>Nom</entry>
      <entry>Nom en PHP</entry>
      <entry>Description</entry>
     </row>
     </thead>
     <tbody>
      <row>
       <entry>lastchild</entry>
       <entry><function>domxml_last_child</function></entry>
       <entry></entry>
      </row>
      <row>
       <entry>children</entry>
       <entry><function>domxml_children</function></entry>
       <entry></entry>
      </row>
      <row>
       <entry>parent</entry>
       <entry><function>domxml_parent</function></entry>
       <entry></entry>
      </row>
      <row>
       <entry>new_child</entry>
       <entry><function>domxml_new_child</function></entry>
       <entry></entry>
      </row>
      <row>
       <entry>get_attribute</entry>
       <entry><function>domxml_get_attribute</function></entry>
       <entry></entry>
      </row>
      <row>
       <entry>set_attribute</entry>
       <entry><function>domxml_set_attribute</function></entry>
       <entry></entry>
      </row>
      <row>
       <entry>attributes</entry>
       <entry><function>domxml_attributes</function></entry>
       <entry></entry>
      </row>
      <row>
       <entry>node</entry>
       <entry><function>domxml_node</function></entry>
       <entry></entry>
      </row>
      <row>
       <entry><function>set_content</function></entry>
       <entry>domxml_set_content</entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <para>
   <table>
    <title>classe DomNode (attributs)</title>
    <tgroup cols="3">
     <thead>
     <row>
      <entry>Nom</entry>
      <entry>Type</entry>
      <entry>Description</entry>
     </row>
     </thead>
     <tbody>
      <row>
       <entry>node</entry>
       <entry>class DomNode</entry>
       <entry>L'objet lui-m&ecirc;me</entry>
      </row>
      <row>
       <entry>type</entry>
       <entry>long</entry>
       <entry></entry>
      </row>
      <row>
       <entry>name</entry>
       <entry>string</entry>
       <entry></entry>
      </row>
      <row>
       <entry>content</entry>
       <entry>string</entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </partintro>
 <!-- class Dom document -->
 <!-- has member functions
 array root([int doc_handle])
 returns array of root nodes of this document. Array
 elements are objects of class "Dom node" having properties of
 "node" (resource), "type" (long), "name" (string)
 and optionally "content" (string).
 array children([ int node ])
 returns an array of child nodes of this element. Array
 elements are objects of class "Dom node" having properties
 of "node" (resource), "type" (long), "name" (string)
 and optionally "content" (string).
 object add_root([int doc_handle,] string name)
 Add a root node to document.
 returns an object of class "Dom node" having properties
 of "node" (resource), "type" (long), "name" (string)
 and optionally "content" (string).
 object intdtd([int doc_handle])
 returns the DTD of document.
 returns an object of class "Dtd" having properties
 of "dtd" (resource), "sysid" (string), "name" (string)
 and optionally "extid" (string).
 string dumpmem([int doc_handle])
 dumps document into string.
 -->
 <!-- class Dom node
 object lastchild([int node])
 returns Dom node object
 array children([int node])
 as above
 object parent([ int node])
 returns Dom node object
 (parent of this node)
 new_child
 string getattr([int node,] string attrname)
 get value of attribute named attrname
 bool setattr([int node,] string attrname, string value)
 set value of given attribute.
 array attributes([int node])
 returns associative array of (string name, string value)
 pairs.
 object node(string name)
 creates a named Dom node object.
 -->
 <!-- class Dom Attribute
 name
 -->
 <!-- class Dom Namespace
 -->
 <!-- class Dtd
 -->
 <refentry id="function.xmldoc">
  <refnamediv>
   <refname>xmldoc</refname>
   <refpurpose>Cr&eacute;e un objet DOM pour un document XML.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>object <function>xmldoc</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
    <function>xmldoc</function> analyse le document XML <parameter>str</parameter>
    et retourne un objet de classe "Dom document", avec les
    propri&eacute;t&eacute;s de "doc" (ressources), "version" (string)
    et "type" (long).
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.xmldocfile">
  <refnamediv>
   <refname>xmldocfile</refname>
   <refpurpose>Cr&eacute;e un objet DOM &agrave; partir d'un fichier XML</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>object <function>xmldocfile</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
    <function>xmldocfile</function> analyse le fichier XML
    <parameter>filename</parameter> et retourne un objet "Dom document",
    avec les propri&eacute;t&eacute;es de "doc" (ressources) et
    "version" (string).
    <!-- conspiciously the file attribute is missing? -->
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.xmltree">
  <refnamediv>
   <refname>xmltree</refname>
   <refpurpose>
    Cr&eacute;e un arbre d'objet PHP, &agrave; partir d'un document XML.
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>object <function>xmltree</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
    <function>xmltree</function> analyse le document XML <parameter>str</parameter>
    et retourne un arbre d'objets PHP qui repr&eacute;sente le document
    analys&eacute;. <function>xmltree</function> est diff&eacute;rentes des autres
    fonctions, car vous ne pouvez acc&eacute;der &agrave; cet arbre avec aucune des
    autres fonctions. Modifier cet arbre n'a pas de sens, car il n'y
    a pas moyen de sauver ces modifications. Cette fonction a tout de
    m&ecirc;me des applications en lecture seule.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.domxml_root">
  <refnamediv>
   <refname>domxml_root</refname>
   <refpurpose>
    Retourne l'&eacute;l&eacute;ment racine
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>object <function>domxml_root</function></funcdef>
     <paramdef>object <parameter>doc</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
    <function>domxml_root</function> prend en argument <parameter>doc</parameter>,
    un objet de la classe "Dom document", et  retourn l'&eacute;l&eacute;ment racine de
    ce document. Les autres noeuds qui peuvent &ecirc;tre consid&eacute;r&eacute;s comme
    racine (tels que les commentaires) sont ignor&eacute;s.
   </para>
   <para>
    L'exemple suivant retourne simplement l'&eacute;l&eacute;ment CHAPTER et
    l'affiche. Les autres racines (des commentaires) ne sont
    pas retourn&eacute;s.
    <example>
     <title>Lecture de l'&eacute;l&eacute;ment principal</title>
     <programlisting role="php">
&lt;?php
  $xmlstr = "&lt;?xml version='1.0' standalone='yes'&gt;
  &lt;!DOCTYPE chapter SYSTEM '/share/sgml/Norman_Walsh/db3xml10/db3xml10.dtd'
  [ &lt;!ENTITY sp \"spanish\"&gt;
  ]&gt;
  &lt;!-- lsfj  --&gt;
  &lt;chapter language='en'&gt;&lt;title language='en'&gt;Title&lt;/title&gt;
   &lt;para language='ge'&gt;
    &amp;sp;
    &lt;!-- comment --&gt;
    &lt;informaltable language='&amp;sp;'&gt;
     &lt;tgroup cols='3'&gt;
      &lt;tbody&gt;
       &lt;row&gt;&lt;entry&gt;a1&lt;/entry&gt;&lt;entry
  morerows='1'&gt;b1&lt;/entry&gt;&lt;entry&gt;c1&lt;/entry&gt;&lt;/row&gt;
  &lt;row&gt;&lt;entry&gt;a2&lt;/entry&gt;&lt;entry&gt;c2&lt;/entry&gt;&lt;/row&gt;
       &lt;row&gt;&lt;entry&gt;a3&lt;/entry&gt;&lt;entry&gt;b3&lt;/entry&gt;&lt;entry&gt;c3&lt;/entry&gt;&lt;/row&gt;
      &lt;/tbody&gt;
     &lt;/tgroup&gt;
    &lt;/informaltable&gt;
   &lt;/para&gt;
  &lt;/chapter&gt;";
  if(!$dom = xmldoc($xmlstr)) {
    echo "Erreur lors de l'analyse du document\n";
    exit;
  }
  $root = $dom-&gt;root();
  /* ou $root = domxml_root($dom); */
  print_r($root);
?&gt;
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.domxml_add_root">
  <refnamediv>
   <refname>domxml_add_root</refname>
   <refpurpose>
    Ajoute une autre racine
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>resource <function>domxml_add_root</function></funcdef>
     <paramdef>resource <parameter>doc</parameter></paramdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
    <function>domxml_add_root</function> ajoute la racine <parameter>name</parameter>
    au document <parameter>doc</parameter>.
   </para>
   <para>
    <example>
     <title>Cr&eacute;ation d'une en-t&ecirc;te HTML simple</title>
     <programlisting role="php">
&lt;?php
  $root = $doc-&gt;add_root("HTML");
  $head = $root-&gt;new_child("HEAD", "");
  $head-&gt;new_child("TITLE", "Ici, le titre");
  echo $doc-&gt;dumpmem();
?&gt;
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.domxml_dumpmem">
  <refnamediv>
   <refname>domxml_dumpmem</refname>
   <refpurpose>
    Ecrit le document XML interne dans une cha&icirc;ne
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>domxml_dumpmem</function></funcdef>
     <paramdef>resource <parameter>doc</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
    <function>domxml_dumpmem</function> cr&eacute;e un document XML &agrave; partir
    de la repr&eacute;sentation interne. <function>domxml_dumpmem</function>
    est g&eacute;n&eacute;ralement appel&eacute;e avec avoir construit un nouveau document
    XML, comme dans l'exemple <function>domxml_add_root</function>.
   </para>
   <para>
    Voir aussi
    <function>domxml_add_root</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.domxml_attributes">
  <refnamediv>
   <refname>domxml_attributes</refname>
   <refpurpose>
    Retourne les attributs d'un noeud
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>array <function>domxml_attributes</function></funcdef>
     <paramdef>resource <parameter>node</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
    <function>domxml_attributes</function> retourne tous les
    attributs du noeud <parameter>node</parameter> sous forme
    d'un tableau d'objets "dom attribute".
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.domxml_get_attribute">
  <refnamediv>
   <refname>domxml_get_attribute</refname>
   <refpurpose>
    Retourne un attribut d'un noeud
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>object <function>domxml_get_attribute</function></funcdef>
     <paramdef>resource <parameter>node</parameter></paramdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
    <function>domxml_get_attribute</function> retourn l'attribut
    <parameter>name</parameter> du noeud <parameter>node</parameter>.
   </para>
   <simpara>
    Voir aussi
    <function>domxml_set_attribute</function>.
   </simpara>
  </refsect1>
 </refentry>
 <refentry id="function.domxml_set_attribute">
  <refnamediv>
   <refname>domxml_set_attribute</refname>
   <refpurpose>
    Modifie un attribut
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>object <function>domxml_set_attribute</function></funcdef>
     <paramdef>resource <parameter>node</parameter></paramdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     <paramdef>string <parameter>value</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
    <function>domxml_set_attribute</function> modifie l'attribut
    <parameter>name</parameter> du noeud <parameter>node</parameter>
    en lui attribuant la valeur <parameter>value</parameter>.
   </para>
   <para>
    En partant de l'exemple propos&eacute; &agrave; la fonction
    <function>domxml_add_root</function>, il est simple d'ajouter
    un attribut &agrave; l'&eacute;l&eacute;ment HEAD en
    appelant simplement <function>set_attribute</function>.
    <example>
     <title>Ajouter un attribut &agrave; un &eacute;l&eacute;ment</title>
     <programlisting role="php">
&lt;?php
  $doc = new_xmldoc("1.0");
  $root = $doc-&gt;add_root("HTML");
  $head = $root-&gt;new_child("HEAD", "");
  $head-&gt;new_child("TITLE", "Ici, le titre");
  $head-&gt;set_attribute("Language", "fr");
  $head-&gt;new_child("TITLE", "Hier der Titel");
  $head-&gt;set_attribute("Language", "ge");
  echo $doc-&gt;dumpmem();
?&gt;
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.domxml_children">
  <refnamediv>
   <refname>domxml_children</refname>
   <refpurpose>
    Retourne les fils d'un noeud
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>array <function>domxml_children</function></funcdef>
     <paramdef>object <parameter>doc|node</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
    <function>domxml_children</function> retourne tous les fils
    du noeud <parameter>doc|node</parameter>, sous forme d'un tableau
    de noeuds.
   </para>
   <para>
    Dans l'exemple ci-dessous, la variable <varname>children</varname>
    contiendra un tableau avec les noeuds de type XML_ELEMENT. Ce noeud est
    l'&eacute;l&eacute;ment TITLE.
    <example>
     <title>Lire les fils d'un noeud</title>
     <programlisting role="php">
&lt;?php
  $doc = new_xmldoc("1.0");
  $root = $doc-&gt;add_root("HTML");
  $head = $root-&gt;new_child("HEAD", "");
  $head-&gt;new_child("TITLE", "Hier der Titel");
  $head-&gt;set_attribute("Language", "ge");
  $children = $head-&gt;children();
?&gt;
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.domxml_new_child">
  <refnamediv>
   <refname>domxml_new_child</refname>
   <refpurpose>
    Ajoute un nouveau fils
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>resource <function>domxml_new_child</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     <paramdef>string <parameter>content</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
    <function>domxml_new_child</function> ajoute un nouveau fils.
    (NDtraducteur : cette documentation n'est pas encore finie...)
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.domxml_new_xmldoc">
  <refnamediv>
   <refname>domxml_new_xmldoc</refname>
   <refpurpose>
    Cr&eacute;e un document XML vide
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>object <function>domxml_new_xmldoc</function></funcdef>
     <paramdef>string <parameter>version</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
    <function>domxml_new_xmldoc</function> cr&eacute;e un nouveau
    document XML vide, et le retourne.
   </para>
   <para>
    Voir aussi
    <function>domxml_add_root</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.xpath_new_context">
  <refnamediv>
   <refname>xpath_new_context</refname>
   <refpurpose>
    Cr&eacute;e un nouveau contexte xpath
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>object <function>xpath_new_context</function></funcdef>
     <paramdef>object <parameter>dom_document</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
   </para>
   <para>
    Pas de documentation encore (22/2/2201).
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.xpath_eval">
  <refnamediv>
   <refname>xpath_eval</refname>
   <refpurpose>
    Evalue une expression xpath
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>array <function>xpath_eval</function></funcdef>
     <paramdef>object <parameter>xpath_context</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   &warn.experimental.func;
   <para>
    Pas de documentation encore (22/2/2201).
   </para>
  </refsect1>
 </refentry>
</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->