<reference id="ref.mbstring">
 <title>Cha&icirc;nes de caract&egrave;res multi-octets</title>
 <titleabbrev>Cha&icirc;nes de caract&egrave;res multi-octets</titleabbrev>
 <partintro>
   &warn.experimental;
  <sect1 id="mb-intro">
  <title>Introduction</title>
  <warning>
  <simpara>
   Ce module est exp&eacute;rimental. Les noms des fonctions sont sujets &agrave;
   des changaments probables. Actuellement, les conversions ne supportent
   que le Japonais.
  </simpara>
  </warning>
  <para>
   De nombreuses langues dont les signes ne peuvent pas &ecirc;tre exprim&eacute;s
   sur un seul octet. Des codes multi-octets sont utilis&eacute;s pour
   pallier &agrave; cette insuffisance. <literal>mbstring</literal>
   est d&eacute;velopp&eacute; pour supporter les caract&egrave;res japonais. Cependant,
   de nombreuses fonctions <literal>mbstring</literal> peuvent supporter
   d'autres jeux de caract&egrave;res.
  </para>
  <para>
   Les jeux de caract&egrave;res multi-octets repr&eacute;sentent les caract&egrave;res
   sur plusieurs octets cons&eacute;cutifs (d'o&ugrave; leur nom). Certains
   syst&egrave;mes d'encodages ont des caract&egrave;res d'&eacute;chappement d&eacute;di&eacute;s, pour
   d&eacute;marrer/finir une s&eacute;quence de caract&egrave;res multi-octets. De ce fait,
   certains caract&egrave;res peuvent &ecirc;tre d&eacute;truit lorsqu'une cha&icirc;ne est
   coup&eacute;e en plusieurs morceaux, ou bien conduire &agrave; des r&eacute;sultats
   erronn&eacute;s lorsque le nombre de caract&egrave;re est compt&eacute;. Il faut utiliser
   des fonctions qui supportent ces encodages. Les fonctions
   <literal>mbstring</literal> supportent les jeux de caract&egrave;res
   multi-octets, ainsi que les conversions.
  </para>
  <sect2 id="mb-ja-basic">
  <title>Cas des caract&egrave;res japonais</title>
  <para>
   La plupart des caract&egrave;res japonais demandent plus d'un octet
   pour &ecirc;tre repr&eacute;sent&eacute;s. De plus, plusieurs jeux de caract&egrave;res
   japonais existent : il y a notamment EUC-JP, Shift_JIS et
   ISO-2022-JP. Unicode devient de plus en plus populaire, et
   UTF-8 aussi. Pour d&eacute;velopper des applications Web en environnement
   japonais, il faut savoir que les encodages ci-dessus d&eacute;pendent de
   l'application qu'on en fait : entr&eacute;e/sortie HTTP, bases de donn&eacute;es
   ou courrier &eacute;lectronique.
  </para>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>
      La taille n&eacute;cessaire &agrave; un caract&egrave;re peut aller jusqu'&agrave; 4 octets.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Un caract&egrave;re multi-octets occupe g&eacute;n&eacute;ralement deux octets,
      &agrave; comparer avec les caract&egrave;res simple-octet traditionnellement
      utilis&eacute;. Les caract&egrave;res les plus gros sont appel&eacute;s "zen-kaku"
      (i.e. grande largeur) et les plus petits sont appel&eacute;s "han-kaku"
      (i.e. demi-largeur). Les caract&egrave;res "zen-kaku" sont g&eacute;n&eacute;ralement de taille
      constante.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Certains encodage de caract&egrave;res d&eacute;finissent des s&eacute;quences de
      d&eacute;but/fin pour les sections multi-octets.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Les bases de donn&eacute;es allouent des tailles de stockages diff&eacute;rentes
      de celles utilis&eacute;es par PHP, m&ecirc;me si le m&ecirc;me encodage de caract&egrave;re
      est utilis&eacute; (par exemple, PostGreSQL).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Le courrier &eacute;lectronique utilise g&eacute;n&eacute;ralement ISO-2022-JP.
     </simpara>
    </listitem>
    <listitem>
     <para>
      Les sites web en &quot;i-mode&quot; utilisent Shift_JIS.
     </para>
    </listitem>
   </itemizedlist>
  </para>
  </sect2>
  <sect2 id="mb-code">
  <title>Jeux de caract&egrave;res support&eacute;s</title>
  <para>
   Les jeux de caract&egrave;res suivants sont support&eacute;s par cette extension PHP :
   <literal>UCS-4</literal>,
   <literal>UCS-4BE</literal>,
   <literal>UCS-4LE</literal>,
   <literal>UCS-2</literal>,
   <literal>UCS-2BE</literal>,
   <literal>UCS-2LE</literal>,
   <literal>UTF-32</literal>,
   <literal>UTF-32BE</literal>,
   <literal>UTF-32LE</literal>,
   <literal>UCS-2LE</literal>,
   <literal>UTF-16</literal>,
   <literal>UTF-16BE</literal>,
   <literal>UTF-16LE</literal>,
   <literal>UTF-8</literal>,
   <literal>UTF-7</literal>,
   <literal>ASCII</literal>,
   <literal>EUC-JP</literal>,
   <literal>SJIS</literal>,
   <literal>eucJP-win</literal>,
   <literal>SJIS-win</literal>,
   <literal>ISO-2022-JP</literal>(<literal>JIS</literal>),
   <literal>ISO-8859-1</literal>,
   <literal>ISO-8859-2</literal>,
   <literal>ISO-8859-3</literal>,
   <literal>ISO-8859-4</literal>,
   <literal>ISO-8859-5</literal>,
   <literal>ISO-8859-6</literal>,
   <literal>ISO-8859-7</literal>,
   <literal>ISO-8859-8</literal>,
   <literal>ISO-8859-9</literal>,
   <literal>ISO-8859-10</literal>,
   <literal>ISO-8859-13</literal>,
   <literal>ISO-8859-14</literal>,
   <literal>ISO-8859-15</literal>.
  </para>
  </sect2>
  <sect2 id="mb-ini">
  <title>Configuration du fichier php.ini</title>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>
      <literal>mbstring.internal_encoding</literal> d&eacute;finit le jeu
      de caract&egrave;res interne par d&eacute;faut.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>mbstring.http_input</literal> d&eacute;finit le jeu
      de caract&egrave;res d'entr&eacute;e HTTP par d&eacute;faut.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>mbstring.http_output</literal> defines d&eacute;finit le jeu
      de caract&egrave;res d'affichage HTTP par d&eacute;faut.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>mbstring.detect_order</literal> d&eacute;finit l'ordre de d&eacute;tection
      des jeux de caract&egrave;res (lors de la lecture sur une source externe
      inconnue).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>mbstring.substitute_character</literal> d&eacute;finit le
      caract&egrave;re de substitution pour les codes invalides.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   <example>
    <title>Exemple de configuration du <literal>php.ini</literal></title>
    <programlisting role="php.ini">
;; Set default internal encoding
mbstring.internal_encoding    = UTF-8  ; Par d&eacute;faut, to UTF-8
;; Set default HTTP input character code
mbstring.http_input = auto     ; Par d&eacute;faut, mode automatique
; or
; mbstring.http_input = SJIS     ; Par d&eacute;faut, HTTP fournit du code SJIS
; mbstring.http_input = eucjp-win, sjis-win, UTF-8 ; Ordre sp&eacute;cifique
;; Set default HTTP output character code
mbstring.http_output = UTF-8   ; Par d&eacute;faut, HTTP affiche du code UTF-8
;; Set default character code detection order
mbstring.detect_order = auto   ; Par d&eacute;faut, mode automatique
; or
; mbstring.detect_order = eucjp-win, sjis-win, UTF-8 ; Ordre sp&eacute;cifique
;; Set default substitute character
mbstring.substitute_character = 12307 ; Sp&eacute;cifie un code de caract&egrave;re
; or
; mbstring.substitute_character = none  ; Caract&egrave;re NULL
; mbstring.substitute_character = long  ; Long
    </programlisting>
   </example>
  </para>
  </sect2>
  </sect1>
 </partintro>
 <refentry id="function.mb-internal-encoding">
  <refnamediv>
   <refname>mb_internal_encoding</refname>
   <refpurpose>
    Lit/modifie l'encodage interne
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string
     <function>mb_internal_encoding</function></funcdef>
     <paramdef>string
     <parameter><optional>encoding</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_internal_encoding</function> modifie l'encodage interne
    courant en le remplacant par <parameter>encoding</parameter>. Si ce
    param&egrave;tre est omis, l'encodage interne courant est retourn&eacute;.
   </para>
   <para>
    <parameter>encoding</parameter> sert lors des conversions des
    cha&icirc;nes en provenance et en direction du web, ainsi que lors de
    la cr&eacute;ation de cha&icirc;nes avec le module mbstring.
   </para>
   <para>
    <parameter>encoding</parameter>: Nom d'encodage.
   </para>
   <para>
    Valeur retourn&eacute;e : si <parameter>encoding</parameter> est fourni,
    <function>mb_internal_encoding</function> retourne
    &true; en cas de succ&egrave;s, et
    &false; sinon. Si <parameter>encoding</parameter>
    est omis, <function>mb_internal_encoding</function> retourne le
    nom de l'encodage courant.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>mb_internal_encoding</function></title>
     <programlisting role="php">
&lt?php
/* Utilise l'encodage interne UTF-8 */
mb_internal_encoding("UTF-8");
/* Affiche l'encodage interne courant */
echo mb_internal_encoding();
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Voir aussi
    <function>mb_http_input</function>,
    <function>mb_http_output</function> et
    <function>mb_detect_order</function>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-http-input">
  <refnamediv>
   <refname>mb_http_input</refname>
   <refpurpose>D&eacute;tecte le type d'encodage d'un caract&egrave;re HTTP</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_http_input</function></funcdef>
     <paramdef>string
      <parameter><optional>type</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <simpara>
    <function>mb_http_input</function> retourne le type d'encodage
    utilis&eacute; par une requ&ecirc;te HTTP.
   </simpara>
   <para>
    Le param&egrave;tre <parameter>type</parameter> sp&eacute;cifie le type
    d'entr&eacute;e HTTP. Il peut prendre l'une des valeurs suivantes :
    &quot;G&quot; pour GET, &quot;P&quot; pour POST,
    &quot;C&quot; pour COOKIE. Si <parameter>type</parameter> est omis,
    il prend la valeur du dernier type utilis&eacute;.
   </para>
   <para>
    Valeur retourn&eacute;e : nom de l'encodage utilis&eacute;. Si
    <function>mb_http_input</function> ne peut traiter ce type d'encodage,
    elle retourne &false;.
   </para>
   <para>
    Voir aussi
    <function>mb_internal_encoding</function>,
    <function>mb_http_output</function> et
    <function>mb_detect_order</function>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-http-output">
  <refnamediv>
   <refname>mb_http_output</refname>
   <refpurpose>Lit/modifie l'encodage d'affichage</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_http_output</function></funcdef>
     <paramdef>string
      <parameter><optional>encoding</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    Si <parameter>encoding</parameter> est fourni,
    <function>mb_http_output</function> utilisera dor&eacute;navant l'encodage
    <parameter>encoding</parameter> pour les affichages HTTP : les
    caract&egrave;res qui seront envoy&eacute;s aux clients web seront convertis dans le
    jeu de caract&egrave;res <parameter>encoding</parameter>.
    <function>mb_http_output</function> retourne &true; en
    cas de succ&egrave;s, et &false; en cas d'&eacute;chec.
   </para>
   <para>
    Si <parameter>encoding</parameter> est omis,
    <function>mb_http_output</function> retourne l'encodage d'affichage
    courant.
   </para>
   <para>
    Voir aussi
    <function>mb_internal_encoding</function>,
    <function>mb_http_input</function> et
    <function>mb_detect_order</function>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-detect-order">
  <refnamediv>
   <refname>mb_detect_order</refname>
   <refpurpose>
    Lit/modifie l'ordre de d&eacute;tection des encodages
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>array <function>mb_detect_order</function></funcdef>
     <paramdef>mixed
      <parameter><optional>encoding-list</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_detect_order</function> remplace l'ordre de d&eacute;tection
    des encodages courant par <parameter>encoding-list</parameter>.
    <function>mb_detect_order</function> retourne &true; en
    cas de succ&egrave;s, et &false; en cas d'erreur failure.
   </para>
   <para>
    <parameter>encoding-list</parameter> est un tableau, ou une liste d'encodages
    s&eacute;par&eacute;s par une virgule. La valeur <literal>"auto"</literal> est
    automatiquement remplac&eacute; par "ASCII, JIS, UTF-8, EUC-JP, SJIS".
   </para>
   <para>
    SI <parameter>encoding-list</parameter> est omis, <function>mb_detect_order</function>
    retourne l'ordre de d&eacute;tection courant des encodages.
   </para>
   <para>
    Ce param&eacute;trage affected les fonctions <function>mb_detect_encoding</function> et
    <function>mb_send_mail</function>.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>mb_detect_order</function></title>
     <programlisting role="php">
&lt?php
/* Remplace l'ordre de d&eacute;tection par une liste &eacute;num&eacute;r&eacute;e */
mb_detect_order("eucjp-win,sjis-win,UTF-8");
/* Remplace l'ordre de d&eacute;tection par un tableau */
$ary[] = "ASCII";
$ary[] = "JIS";
$ary[] = "EUC-JP";
mb_detect_order($ary);
/* Affiche l'ordre de d&eacute;tection courant */
echo implode(", ", mb_detect_order());
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Voir aussi
    <function>mb_internal_encoding</function>,
    <function>mb_http_input</function>,
    <function>mb_http_output</function> et
    <function>mb_send_mail</function>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-substitute-character">
  <refnamediv>
   <refname>mb_substitute_character</refname>
   <refpurpose>Lit/modifie les caract&egrave;res de substitution</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>mixed <function>mb_substitute_character</function></funcdef>
     <paramdef>mixed
      <parameter><optional>substrchar</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_substitute_character</function> sp&eacute;cifie le caract&egrave;re
    de substitution des caract&egrave;res invalides, ou des encodages invalides.
    Les caract&egrave;res invalides peuvent &ecirc;tre remplac&eacute;s par &null; (pas
    d'affichage, ils sont supprim&eacute;s), une cha&icirc;ne ou un code h&eacute;xad&eacute;cimal.
   </para>
   <para>
    Ce param&eacute;trage affecte <function>mb_detect_encoding</function>
    et <function>mb_send_mail</function>.
   </para>
   <para>
    <parameter>substchar</parameter> sp&eacute;cifie une valeur Unicode
    sous la forme d'un entier, ou bien une cha&icirc;ne sous ces formes :
    <itemizedlist>
     <listitem>
      <simpara>
       &quot;none&quot; : pas d'affichage
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       &quot;long&quot; :  affiche la valeur hexad&eacute;cimale (Par exemple : U+3000,JIS+7E7E)
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    SI <parameter>substchar</parameter> est fourni,
    <function>mb_substitute_character</function> retourne
    &true; en cas de succ&egrave;s, et &false; en
    cas d'erreur. Si <parameter>substchar</parameter> est omis,
    <function>mb_substitute_character</function> retourne une valeur Unicode,
    ou bien &quot;<literal>none</literal>&quot;/&quot;<literal>long</literal>&quot;.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>mb_substitute_character</function></title>
     <programlisting role="php">
&lt?php
/* Configure le caract&egrave;re de substitution avec U+3013 (GETA MARK) */
mb_substitute_character(0x3013);
/* Configure le caract&egrave;re de substitution avec un format h&eacute;xad&eacute;cimal */
mb_substitute_character("long");
/* Affiche la configuration courante */
echo mb_substitute_character();
?&gt;
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-output-handler">
  <refnamediv>
   <refname>mb_output_handler</refname>
   <refpurpose>
    Fonction de traitement des affichages web
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_output_handler</function></funcdef>
     <paramdef>string <parameter>contents</parameter></paramdef>
     <paramdef>int <parameter>status</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_output_handler</function> est la fonction &agrave; fournir &agrave;
    <function>ob_start</function>. <function>mb_output_handler</function>
    convertit les caract&egrave;res envoy&eacute;s au client Web, dans l'encodage
    param&eacute;tr&eacute; avec <function>mb_http_output</function>.
   </para>
   <para>
    <parameter>contents</parameter> : Le contenu &agrave; traiter
   </para>
   <para>
    <parameter>status</parameter> : L'&eacute;tat du contenu
   </para>
   <para>
    <function>mb_output_handler</function> retourne la cha&icirc;ne convertie.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>mb_output_handler</function></title>
     <programlisting role="php">
&lt?php
mb_http_output("UTF-8");
ob_start("mb_output_handler");
?&gt;
     </programlisting>
    </example>
   </para>
   <note>
    <para>
     Si vous souhaitez envoyer des donn&eacute;es binaires telles que des images
     issues d'un script PHP, vous devez sp&eacute;cifier l'encodage sp&eacute;cial
     <literal>"pass"</literal>, avec la fonction
     <function>mb_http_output</function>.
    </para>
   </note>
   <para>
    Voir aussi
    <function>ob_start</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-preferred-mime-name">
  <refnamediv>
   <refname>mb_preferred_mime_name</refname>
   <refpurpose>D&eacute;tecte l'encodage MIME</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_preferred_mime_name</function></funcdef>
     <paramdef>string <parameter>encoding</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_preferred_mime_name</function> retourne le type
    d'encodage MIME utilis&eacute; dans le mail <parameter>encoding</parameter>. Le
    nom de l'encodage est retourn&eacute; sous forme de cha&icirc;ne.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>mb_preferred_mime_string</function></title>
     <programlisting role="php">
&lt?php
$outputenc = "sjis-win";
mb_http_output($outputenc);
ob_start("mb_output_handler");
Header("Content-Type: text/html; charset=" . mb_preferred_mime_name($outputenc));
?&gt;
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-strlen">
  <refnamediv>
   <refname>mb_strlen</refname>
   <refpurpose>Retourne la taille d'une cha&icirc;ne</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_strlen</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
     <paramdef>string
      <parameter><optional>encoding</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_strlen</function> retourne le nombre de caract&egrave;res
    dans la cha&icirc;ne <parameter>str</parameter>, avec l'encodage
    <parameter>encoding</parameter>. Un caract&egrave;re multi-octets est
    alors compt&eacute; pour 1.
   </para>
   <para>
    Voir aussi
    <function>mb_internal_encoding</function>,
    <function>strlen</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-strpos">
  <refnamediv>
   <refname>mb_strpos</refname>
   <refpurpose>
    Rep&egrave;re la premi&egrave;re occurence d'un caract&egrave;re dans une cha&icirc;ne
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_strpos</function></funcdef>
     <paramdef>string <parameter>haystack</parameter></paramdef>
     <paramdef>string <parameter>needle</parameter></paramdef>
     <paramdef>int
      <parameter><optional>offset</optional></parameter>
     </paramdef>
     <paramdef>string
      <parameter><optional>encoding</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_strpos</function> retourne la position num&eacute;rique de
    la premi&egrave;re occurence du caract&egrave;re <parameter>needle</parameter> dans la
    cha&icirc;ne <parameter>haystack</parameter>. Si <parameter>needle</parameter> est
    introuvable, <function>mb_strpos</function> retourne &false;.
   </para>
   <para>
    <function>mb_strpos</function> effectue une recherche de type
    <function>strpos</function>, en tenant compte des caract&egrave;res
    multi-octets. La position de <parameter>needle</parameter> est compt&eacute;e
    &agrave; partir du d&eacute;but de la cha&icirc;ne <parameter>haystack</parameter> : les
    positions commencent &agrave; 0.
   </para>
   <para>
    Si <parameter>encoding</parameter> est omis, l'encodage interne
    par d&eacute;faut est utilis&eacute;. <function>mb_strrpos</function>
    accepte des cha&icirc;nes comme argument <parameter>needle</parameter>,
    alors que <function>strrpos</function> n'accepte que des caract&egrave;res.
   </para>
   <para>
    <parameter>offset</parameter> est l'offset de d&eacute;but de recherche. S'il
    est omis, il sera utilis&eacute; &agrave; 0 (d&eacute;but de la cha&icirc;ne).
   </para>
   <para>
    <parameter>encoding</parameter> est un nom d'encodage de caract&egrave;res. S'il
    n'est pas sp&eacute;cifi&eacute;, l'encodage interne est utilis&eacute;.
   </para>
   <para>
    Voir aussi
    <function>mb_strpos</function>,
    <function>mb_internal_encoding</function> et
    <function>strpos</function>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-strrpos">
  <refnamediv>
   <refname>mb_strrpos</refname>
   <refpurpose>
    Rep&egrave;re la derni&egrave;re occurence d'un caract&egrave;re dans une cha&icirc;ne
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_strrpos</function></funcdef>
     <paramdef>string <parameter>haystack</parameter></paramdef>
     <paramdef>string <parameter>needle</parameter></paramdef>
     <paramdef>string
      <parameter><optional>encoding</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_strrpos</function> retourne la position num&eacute;rique de
    la premi&egrave;re occurence du caract&egrave;re <parameter>needle</parameter> dans la
    cha&icirc;ne <parameter>haystack</parameter>. Si <parameter>needle</parameter> est
    introuvable, <function>mb_strrpos</function> retourne &false;.
   </para>
   <para>
    <function>mb_strrpos</function> effectue une recherche de type
    <function>strpos</function>, en tenant compte des caract&egrave;res
    multi-octets. La position de <parameter>needle</parameter> est compt&eacute;e
    &agrave; partir du d&eacute;but de la cha&icirc;ne <parameter>haystack</parameter> : les
    positions commencent &agrave; 0.
   </para>
   <para>
    Si <parameter>encoding</parameter> est omis, l'encodage interne
    par d&eacute;faut est utilis&eacute;. <function>mb_strrpos</function>
    accepte des cha&icirc;nes comme argument <parameter>needle</parameter>,
    alors que <function>strrpos</function> n'accepte que des caract&egrave;res.
   </para>
   <para>
    <parameter>encoding</parameter> est un nom d'encodage de caract&egrave;res. S'il
    n'est pas sp&eacute;cifi&eacute;, l'encodage interne est utilis&eacute;.
   </para>
   <para>
    Voir aussi
    <function>mb_strpos</function>,
    <function>mb_internal_encoding</function> et
    <function>strrpos</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-substr">
  <refnamediv>
   <refname>mb_substr</refname>
   <refpurpose>Lit une sous-cha&icirc;ne</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_substr</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
     <paramdef>int <parameter>start</parameter></paramdef>
     <paramdef>int
      <parameter><optional>length</optional></parameter>
     </paramdef>
     <paramdef>string
      <parameter><optional>encoding</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_substr</function> retourne la portion de la cha&icirc;ne
    <parameter>str</parameter> qui commence au caract&egrave;re
    <parameter>start</parameter> et a la longueur de
    <parameter>length</parameter> caract&egrave;res.
   </para>
   <para>
    <function>mb_substr</function> effectue une recherche de type
    <function>strpos</function>, en tenant compte des caract&egrave;res
    multi-octets. La position de <parameter>needle</parameter> est compt&eacute;e
    &agrave; partir du d&eacute;but de la cha&icirc;ne <parameter>haystack</parameter> : les
    positions commencent &agrave; 0.
   </para>
   <para>
    <parameter>encoding</parameter> est un nom d'encodage de caract&egrave;res. S'il
    n'est pas sp&eacute;cifi&eacute;, l'encodage interne est utilis&eacute;.
   </para>
   <para>
    Voir aussi
    <function>mb_strcut</function> et
    <function>mb_internal_encoding</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-strcut">
  <refnamediv>
   <refname>mb_strcut</refname>
   <refpurpose>Coupe une partie de cha&icirc;ne</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_strcut</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
     <paramdef>int <parameter>start</parameter></paramdef>
     <paramdef>int
      <parameter><optional>length</optional></parameter>
     </paramdef>
     <paramdef>string
      <parameter><optional>encoding</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_strcut</function> retourne la portion de la cha&icirc;ne
    <parameter>str</parameter> qui commence au caract&egrave;re
    <parameter>start</parameter> et a la longueur de
    <parameter>length</parameter> caract&egrave;res.
   </para>
   <para>
    <function>mb_strcut</function> effectue une recherche de type
    <function>strpos</function>, en tenant compte des caract&egrave;res
    multi-octets. La position de <parameter>needle</parameter> est compt&eacute;e
    &agrave; partir du d&eacute;but de la cha&icirc;ne <parameter>haystack</parameter> : les
    positions commencent &agrave; 0.
   </para>
   <para>
    <function>mb_strcut</function> soustrait la partie de la cha&icirc;ne
    <parameter>str</parameter> qui compte <parameter>length</parameter>
    caract&egrave;res.
   </para>
   <para>
    <parameter>encoding</parameter> est un nom d'encodage de caract&egrave;res. S'il
    n'est pas sp&eacute;cifi&eacute;, l'encodage interne est utilis&eacute;.
   </para>
   <para>
    Voir aussi
    <function>mb_substr</function> et
    <function>mb_internal_encoding</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-strwidth">
  <refnamediv>
   <refname>mb_strwidth</refname>
   <refpurpose>Retourne la largeur d'une cha&icirc;ne</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>mb_strwidth</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
     <paramdef>string
      <parameter><optional>encoding</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_strwidth</function> retourne la largeur de la cha&icirc;ne
    <parameter>str</parameter>.
   </para>
   <para>
    Les cha&icirc;nes &agrave; encodage multi-octet sont g&eacute;n&eacute;ralement deux fois plus
    grandes que les cha&icirc;nes &agrave; simple-octet.
   </para>
   <para>
    <informalexample>
     <programlisting>
       Largeur de caract&egrave;res :
       U+0000 - U+0019   0
       U+0020 - U+1FFF   1
       U+2000 - U+FF60   2
       U+FF61 - U+FF9F   1
       U+FFA0 -          2
     </programlisting>
    </informalexample>
   </para>
   <para>
    <parameter>encoding</parameter> est un nom d'encodage de caract&egrave;res. S'il
    n'est pas sp&eacute;cifi&eacute;, l'encodage interne est utilis&eacute;.
   </para>
   <para>
    Voir aussi
    <function>mb_strimwidth</function> et
    <function>mb_internal_encoding</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-strmwidth">
  <refnamediv>
   <refname>mb_strimwidth</refname>
   <refpurpose>Tronque une cha&icirc;ne</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_strimwidth</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
     <paramdef>int <parameter>start</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>string <parameter>trimmarker</parameter></paramdef>
     <paramdef>string
      <parameter><optional>encoding</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_strimwidth</function> tronque la cha&icirc;ne
    <parameter>str</parameter> &agrave; la longueur
    <parameter>width</parameter>. Elle retourne la cha&icirc;ne tronqu&eacute;e.
   </para>
   <para>
    SI <parameter>trimmarker</parameter> est fourni,
    <parameter>trimmarker</parameter> est ajout&eacute;e &agrave; la fin de la cha&icirc;ne
    retourn&eacute;e.
   </para>
   <para>
    <parameter>start</parameter> est l'offet de d&eacute;part, en nombre
    de caract&egrave;res depuis le d&eacute;but de la cha&icirc;ne (cela commence &agrave; 0).
   </para>
   <para>
    <parameter>encoding</parameter> est un nom d'encodage de caract&egrave;res. S'il
    n'est pas sp&eacute;cifi&eacute;, l'encodage interne est utilis&eacute;.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>mb_strimwidth</function></title>
     <programlisting role="php">
&lt?php
$str = mb_strimwidth($str, 0, 40, "..>");
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Voir aussi
    <function>mb_strwidth</function> et
    <function>mb_internal_encoding</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-convert-encoding">
  <refnamediv>
   <refname>mb_convert_encoding</refname>
   <refpurpose>Conversion d'encodage</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_convert_encoding</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
     <paramdef>string <parameter>to-encoding</parameter></paramdef>
     <paramdef>mixed
      <parameter><optional>from-encoding</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_convert_encoding</function> convertit la cha&icirc;ne
    <parameter>str</parameter> depuis l'encodage
    <parameter>from-encoding</parameter> vers l'encodage
    <parameter>to-encoding</parameter>.
   </para>
   <para>
    <parameter>str</parameter> &agrave; convertir.
   </para>
   <para>
    <parameter>from-encoding</parameter> est l'encodage de la cha&icirc;ne
    <parameter>str</parameter> &agrave; l'origine. Il sera d&eacute;tect&eacute; parmi
    plusieurs encodage fournis sous forme d'un tableau, ou d'une
    liste d'encodages s&eacute;par&eacute;s par des virgules.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>mb_convert_encoding</function></title>
     <programlisting role="php">
&lt?php
/* Convertit l'encodage interne vers SJIS */
$str = mb_convert_encoding($str, "SJIS");
/* Convertit EUC-JP en UTF-7 */
$str = mb_convert_encoding($str, "UTF-7", "EUC-JP");
/* D&eacute;tecte automatiquement un encodage entre JIS, eucjp-win ou sjis-win,
   Puis convertit en UCS-2LE */
$str = mb_convert_encoding($str, "UCS-2LE", "JIS, eucjp-win, sjis-win");
/* "auto" signifie "ASCII,JIS,UTF-8,EUC-JP,SJIS" */
$str = mb_convert_encoding($str, "EUC-JP", "auto");
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Voir aussi
    <function>mb_detect_order</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-detect-encoding">
  <refnamediv>
   <refname>mb_detect_encoding</refname>
   <refpurpose>D&eacute;tecte un encodage</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_detect_encoding</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
     <paramdef>mixed
      <parameter><optional>encoding-list</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_detect_encoding</function> d&eacute;tecte l'encodage utilis&eacute;
    par la cha&icirc;ne <parameter>str</parameter>. <function>mb_detect_encoding</function>
    retourne le nom de l'encodage d&eacute;tect&eacute;.
   </para>
   <para>
    <parameter>encoding-list</parameter> est une liste d'encodage,
    sous forme de tableau, ou bien de cha&icirc;ne, les valeurs &eacute;tant s&eacute;par&eacute;s
    par des virgules.
   </para>
   <para>
    Si <parameter>encoding_list</parameter> est omis,
    l'ordre sp&eacute;cifi&eacute; par <function>mb_detect_order</function> est utilis&eacute;.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>mb_detect_encoding</function></title>
     <programlisting role="php">
&lt?php
/* D&eacute;tecte l'encodage avec les valeurs par d&eacute;faut */
echo mb_detect_encoding($str);
/* "auto" signifie "ASCII,JIS,UTF-8,EUC-JP,SJIS" */
echo mb_detect_encoding($str, "auto");
/* Sp&eacute;cifie une liste d'encodages possibles avec une liste &agrave; virgules */
echo mb_detect_encoding($str, "JIS, eucjp-win, sjis-win");
/* Sp&eacute;cifie une liste d'encodages possibles avec un tableau  */
$ary[] = "ASCII";
$ary[] = "JIS";
$ary[] = "EUC-JP";
echo mb_detect_encoding($str, $ary);
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Voir aussi
    <function>mb_detect_order</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-convert-kana">
  <refnamediv>
   <refname>mb_convert_kana</refname>
   <refpurpose>
    Convertit entre les diff&eacute;rents "kana"
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_convert_kana</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
     <paramdef>string <parameter>option</parameter></paramdef>
     <paramdef>mixed
      <parameter><optional>encoding</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_convert_kana</function> effectue une conversion "han-kaku" -
    "zen-kaku" sur la cha&icirc;ne <parameter>str</parameter>. Elle retourne
    la cha&icirc;ne convertie. Cette fonction n'est utile que pour le japonais.
   </para>
   <para>
    <parameter>option</parameter> est l'option de conversion. La valeur par
    d&eacute;faut est <literal>"KV"</literal>.
   </para>
   <para>
    <parameter>encoding</parameter> est un nom d'encodage de caract&egrave;res. S'il
    n'est pas sp&eacute;cifi&eacute;, l'encodage interne est utilis&eacute;.
   </para>
   <para>
    <informalexample>
     <programlisting>
       Options de conversions possibles :
       "r" :  Convertit l'alphabet "zen-kaku" en "han-kaku"
       "R" :  Convertit l'alphabet "han-kaku" en "zen-kaku"
       "n" :  Convertit les nombres "zen-kaku" en "han-kaku"
       "N" :  Convertit les nombres "han-kaku" en "zen-kaku"
       "a" :  Convertit les nombres et alphabets "zen-kaku" en "han-kaku"
       "A" :  Convertit les nombres et alphabets "zen-kaku" en "han-kaku"
       (Les caract&egrave;res inclus dans les options "a", "A" sont
       U+0021 - U+007E en excluant U+0022, U+0027, U+005C, U+007E)
       "s" :  Convertit les espaces "zen-kaku" en "han-kaku" (U+3000 -> U+0020)
       "S" :  Convertit les espaces "han-kaku" en "zen-kaku" (U+0020 -> U+3000)
       "k" :  Convertit "zen-kaku kata-kana" en "han-kaku kata-kana"
       "K" :  Convertit "han-kaku kata-kana" en "zen-kaku kata-kana"
       "h" :  Convertit "zen-kaku hira-gana" en "han-kaku kata-kana"
       "H" :  Convertit "han-kaku kata-kana" en "zen-kaku hira-gana"
       "c" :  Convertit "zen-kaku kata-kana" en "zen-kaku hira-gana"
       "C" :  Convertit "zen-kaku hira-gana" en "zen-kaku kata-kana"
       "V" :  Supprime les notations vocales, et les convertit en caract&egrave;res. A utiliser avec "K","H"
     </programlisting>
    </informalexample>
   </para>
   <para>
    <example>
     <title>Exemple avec <function>mb_convert_kana</function></title>
     <programlisting role="php">
&lt?php
/* Convertit tous les "kana" en "zen-kaku" "kata-kana" */
$str = mb_convert_kana($str, "KVC");
/* Convertit "han-kaku" "kata-kana" en "zen-kaku" "kata-kana"
   et "zen-kaku" alpha-numeric en "han-kaku" */
$str = mb_convert_kana($str, "KVa");
?&gt;
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-encode-mimeheader">
  <refnamediv>
   <refname>mb_encode_mimeheader</refname>
   <refpurpose>Encode une cha&icirc;ne pour une en-t&ecirc;te MIME</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_encode_mimeheader</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
     <paramdef>string
      <parameter><optional>charset</optional></parameter>
     </paramdef>
     <paramdef>string
      <parameter><optional>transfer-encoding</optional></parameter>
     </paramdef>
     <paramdef>string
      <parameter><optional>linefeed</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_encode_mimeheader</function> convertit la cha&icirc;ne
    <parameter>str</parameter> en en-t&ecirc;te MIME, et retourne la cha&icirc;ne
    encod&eacute;e.
   </para>
   <para>
    <parameter>charset</parameter> est le nom de l'encodage. Par d&eacute;faut,
    c'est <literal>ISO-2022-JP</literal>.
   </para>
   <para>
    <parameter>transfer-encoding</parameter> est l'encodage de transfert. Il
    peut &ecirc;tre <literal>"B"</literal> (Base64) ou
    <literal>"Q"</literal> (Quoted-Printable). Par d&eacute;faut, c'est
    <literal>"B"</literal>.
   </para>
   <para>
    <parameter>linefeed</parameter> est le marqueur de fin de ligne. Par d&eacute;faut,
    c'est <literal>"\r\n"</literal> (CRLF).
   </para>
   <para>
    <example>
     <title>Exemple avec <function>mb_convert_kana</function></title>
     <programlisting role="php">
&lt?php
$name = ""; // kanji
$mbox = "kru";
$doma = "gtinn.mon";
$addr = mb_encode_mimeheader($name, "UTF-7", "Q") . " &lt;" . $mbox . "&#64;" . $doma . "&gt;";
echo $addr;
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Voir aussi
    <function>mb_decode_mimeheader</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-decode-mimeheader">
  <refnamediv>
   <refname>mb_decode_mimeheader</refname>
   <refpurpose>D&eacute;code une en-t&ecirc;te MIME</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_decode_mimeheader</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_decode_mimeheader</function> d&eacute;code l'en-t&ecirc;te MIME
    <parameter>str</parameter>, obtenue dans un courrier &eacute;lectronique.
   </para>
   <para>
    <function>mb_decode_mimeheader</function> retourne la cha&icirc;ne d&eacute;cod&eacute;e,
    encod&eacute;e au format interne.
   </para>
   <para>
    Voir aussi
    <function>mb_encode_mimeheader</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-convert-variables">
  <refnamediv>
   <refname>mb_convert_variables</refname>
   <refpurpose>Convertit l'encodage de variables</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_convert_variables</function></funcdef>
     <paramdef>string <parameter>to-encoding</parameter></paramdef>
     <paramdef>mixed <parameter>from-encoding</parameter></paramdef>
     <paramdef>mixed <parameter>vars</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_convert_variables</function> convertit l'encodage
    des variables <parameter>vars</parameter> depuis l'encodage
    <parameter>from-encoding</parameter> vers l'encodage
    <parameter>to-encoding</parameter>, puis retourne le nom
    de l'encodage d&eacute;tect&eacute;, en cas de succ&egrave;s, ou &false;
    en cas d'&eacute;chec.
   </para>
   <para>
    <parameter>from-encoding</parameter> est une liste d'encodages possibles
    pour les variables <parameter>vars</parameter>, fourni sous forme d'un
    tableau ou d'une liste d'encodage, s&eacute;par&eacute;s par des virgules.
    Si <parameter>from-coding</parameter> est omis,
    les encodages fournit dans <function>mb_detect_order</function> sont
    utilis&eacute;s.
   </para>
   <para>
    <parameter>vars</parameter> est une r&eacute;f&eacute;rence sur une variables
    &agrave; convertir. Les cha&icirc;nes, tableaux et objets sont aussi support&eacute;s.
   </para>
   <para>
    <example>
     <title>Exemple avec <function>mb_convert_variables</function></title>
     <programlisting role="php">
&lt?php
/* Convertit les variables $post1, $post2 en encodage interne */
$interenc = mb_internal_encoding();
$inputenc = mb_convert_variables($interenc, "ASCII,UTF-8,SJIS-win", $post1, $post2);
?&gt;
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-encode-numericentity">
  <refnamediv>
   <refname>mb_encode_numericentity</refname>
   <refpurpose>
    Encode des entit&eacute;s HTML
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_encode_numericentity</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
     <paramdef>array <parameter>convmap</parameter></paramdef>
     <paramdef>string
      <parameter><optional>encoding</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_encode_numericentity</function> convertit la
    cha&icirc;ne <parameter>str</parameter> depuis encodage interne
    en les codes num&eacute;riques HTML, puis retourne cette cha&icirc;ne.
   </para>
   <para>
    <parameter>array</parameter> est un tableau qui sp&eacute;cifie les
    codes &agrave; convertir.
   </para>
   <para>
    <parameter>encoding</parameter> est un nom d'encodage de caract&egrave;res. S'il
    n'est pas sp&eacute;cifi&eacute;, l'encodage interne est utilis&eacute;.
   </para>
   <para>
    <example>
     <title>Exemple de param&egrave;tre <parameter>convmap</parameter></title>
     <programlisting role="php">
&lt?php
$convmap = array (
 int start_code1, int end_code1, int offset1, int mask1,
 int start_code2, int end_code2, int offset2, int mask2,
 ........
 int start_codeN, int end_codeN, int offsetN, int maskN );
// Sp&eacute;cifie les valeurs Unicode de d&eacute;but (start_codeN) et fin (end_codeN)
// Ajoutez offsetN &agrave; la valeur, et faites un ET bit-&agrave;-bit avec maskN, puis
// il convertit la valeur obtenu en entite num&eacute;rique
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    <example>
     <title>Exemple avec <function>mb_encode_numericentity</function></title>
     <programlisting role="php">
&lt?php
/* Convertit du ISO-8859-1 en entit&eacute;s HTML */
$convmap = array(0x80, 0xff, 0, 0xff);
$str = mb_encode_numericentity($str, $convmap, "ISO-8859-1");
/* Convertit du code SJIS-win (uniquement le bloc 95-104) en entit&eacute;s num&eacute;rique */
$convmap = array(
       0xe000, 0xe03e, 0x1040, 0xffff,
       0xe03f, 0xe0bb, 0x1041, 0xffff,
       0xe0bc, 0xe0fa, 0x1084, 0xffff,
       0xe0fb, 0xe177, 0x1085, 0xffff,
       0xe178, 0xe1b6, 0x10c8, 0xffff,
       0xe1b7, 0xe233, 0x10c9, 0xffff,
       0xe234, 0xe272, 0x110c, 0xffff,
       0xe273, 0xe2ef, 0x110d, 0xffff,
       0xe2f0, 0xe32e, 0x1150, 0xffff,
       0xe32f, 0xe3ab, 0x1151, 0xffff );
$str = mb_encode_numericentity($str, $convmap, "sjis-win");
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Voir aussi
    <function>mb_decode_numericentity</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb_decode_numericentity">
  <refnamediv>
   <refname>mb_decode_numericentity</refname>
   <refpurpose>
    D&eacute;code les entit&eacute;s HTML en caract&egrave;res
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>mb_decode_numericentity</function></funcdef>
     <paramdef>string <parameter>str</parameter></paramdef>
     <paramdef>array <parameter>convmap</parameter></paramdef>
     <paramdef>string
      <parameter><optional>encoding</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_decode_numericentity</function> la cha&icirc;ne d'entit&eacute;s HTML
    <parameter>str</parameter> en cha&icirc;ne, et retourne cette cha&icirc;ne.
   </para>
   <para>
    <parameter>array</parameter> est un tableau qui sp&eacute;cifie les
    codes &agrave; convertir.
   </para>
   <para>
    <parameter>encoding</parameter> est un nom d'encodage de caract&egrave;res. S'il
    n'est pas sp&eacute;cifi&eacute;, l'encodage interne est utilis&eacute;.
   </para>
   <para>
    <example>
     <title>Exemple avec le param&egrave;tre <parameter>convmap</parameter></title>
     <programlisting>
$convmap = array (
   int start_code1, int end_code1, int offset1, int mask1,
   int start_code2, int end_code2, int offset2, int mask2,
   ........
   int start_codeN, int end_codeN, int offsetN, int maskN );
// Sp&eacute;cifie les valeurs Unicode de d&eacute;but (start_codeN) et fin (end_codeN)
// Ajoutez offsetN &agrave; la valeur, et faites un ET bit-&agrave;-bit avec maskN, puis
// il convertit la valeur obtenu en entite num&eacute;rique
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Voir aussi
    <function>mb_encode_numericentity</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mb-send-mail">
  <refnamediv>
   <refname>mb_send_mail</refname>
   <refpurpose>
    Envoie un mail encod&eacute; ISO-2022-JP (mail japonais)
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>boolean <function>mb_send_mail</function></funcdef>
     <paramdef>string <parameter>to</parameter></paramdef>
     <paramdef>string <parameter>subject</parameter></paramdef>
     <paramdef>string <parameter>message</parameter></paramdef>
     <paramdef>string
      <parameter><optional>additional_headers</optional></parameter>
     </paramdef>
     <paramdef>string
      <parameter><optional>additional_parameter</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mb_send_mail</function> envoie un courrier &eacute;lectronique.
    Les en-t&ecirc;tes et le corps du mesage sont convertis et encod&eacute;s en
    ISO-2022-JP. <function>mb_send_mail</function> est une version
    adapt&eacute;e de <function>mail</function>.
   </para>
   <para>
    <parameter>to</parameter> est l'adresse de destination du mail. Les
    adresses multiples peuvent &ecirc;tre sp&eacute;cifi&eacute;es en les s&eacute;parant par des
    virgules.
   </para>
   <para>
    <parameter>subject</parameter> est le sujet du mail.
   </para>
   <para>
    <parameter>message</parameter> est le message du mail.
   </para>
   <para>
    La cha&icirc;ne <parameter>additional_headers</parameter> est ins&eacute;r&eacute;e &agrave; la fin
    de l'en-t&ecirc;te mail. Elle sert &agrave; ajouter d'autres en-t&ecirc;tes email. N'oubliez
    pas de les s&eacute;parer par des nouvelles lignes (\n).
   </para>
   <para>
    <function>mb_send_mail</function> retourne &true; en
    cas de succ&egrave;s, et &false; en cas d'erreur.
   </para>
   <para>
    Voir aussi
    <function>mail</function>.
   </para>
  </refsect1>
 </refentry>
</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
<!-- Keep this comment for vi/vim/gvim
vi: et:ts=1:sw=1
-->
