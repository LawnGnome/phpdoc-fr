<reference id="ref.math">
 <title>Math&eacute;matiques</title>
 <titleabbrev>Maths</titleabbrev>
 <partintro>
  <sect1 id="math.intro">
  <title>Introduction</title>
  <para>
   Ces fonctions ne sont capables de manipuler que des entiers "double", ou
   des "long". Si vous avez besoin de manipuler des nombres plus grands,
   reportez-vous aux fonctions math&eacute;matiques sur des
   <link linkend="ref.bc">nombres de grande taille</link>.
  </para>
  <sect2 id="math.constants">
  <title>Constantes math&eacute;matiques</title>
  <para>
   Les valeurs suivantes sont d&eacute;finies comme des constantes en PHP :
   <table>
    <title>Constantes math&eacute;matiques</title>
    <tgroup cols="3">
     <thead>
     <row>
      <entry>Constante</entry>
      <entry>Valeur</entry>
      <entry>Description</entry>
     </row>
     </thead>
     <tbody>
      <row>
       <entry>M_PI</entry>
       <entry>3.14159265358979323846</entry>
       <entry>Pi</entry>
      </row>
      <row>
       <entry>M_E</entry>
       <entry>2.7182818284590452354</entry>
       <entry>e</entry>
      </row>
      <row>
       <entry>M_LOG2E</entry>
       <entry>1.4426950408889634074</entry>
       <entry>log_2 e</entry>
      </row>
      <row>
       <entry>M_LOG10E</entry>
       <entry>0.43429448190325182765</entry>
       <entry>log_10 e</entry>
      </row>
      <row>
       <entry>M_LN2</entry>
       <entry>0.69314718055994530942</entry>
       <entry>log_e 2</entry>
      </row>
      <row>
       <entry>M_LN10</entry>
       <entry>2.30258509299404568402</entry>
       <entry>log_e 10</entry>
      </row>
      <row>
       <entry>M_PI_2</entry>
       <entry>1.57079632679489661923</entry>
       <entry>pi/2</entry>
      </row>
      <row>
       <entry>M_PI_4</entry>
       <entry>0.78539816339744830962</entry>
       <entry>pi/4</entry>
      </row>
      <row>
       <entry>M_1_PI</entry>
       <entry>0.31830988618379067154</entry>
       <entry>1/pi</entry>
      </row>
      <row>
       <entry>M_2_PI</entry>
       <entry>0.63661977236758134308</entry>
       <entry>2/pi</entry>
      </row>
      <row>
       <entry>M_SQRTPI</entry>
       <entry>1.77245385090551602729</entry>
       <entry>sqrt(pi) [4.0.2]</entry>
      </row>
      <row>
       <entry>M_2_SQRTPI</entry>
       <entry>1.12837916709551257390</entry>
       <entry>2/sqrt(pi)</entry>
      </row>
      <row>
       <entry>M_SQRT2</entry>
       <entry>1.41421356237309504880</entry>
       <entry>sqrt(2)</entry>
      </row>
      <row>
       <entry>M_SQRT3</entry>
       <entry>1.73205080756887729352</entry>
       <entry>sqrt(3) [4.0.2]</entry>
      </row>
      <row>
       <entry>M_SQRT1_2</entry>
       <entry>0.70710678118654752440</entry>
       <entry>1/sqrt(2)</entry>
      </row>
      <row>
       <entry>M_LNPI</entry>
       <entry>1.14472988584940017414</entry>
       <entry>log_e(pi) [4.0.2]</entry>
      </row>
      <row>
       <entry>M_EULER</entry>
       <entry>0.57721566490153286061</entry>
       <entry>Euler constant [4.0.2]</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  </sect2>
  </sect1>
 </partintro>
 <refentry id="function.abs">
  <refnamediv>
   <refname>Abs</refname>
   <refpurpose>Valeur absolue</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>mixed <function>abs</function></funcdef>
     <paramdef>mixed <parameter>number</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>abs</function> retourne la valeur absolue du nombre
    <parameter>number</parameter>. Si le nombre est un nombre &agrave;
    virgule flottante (<type>float</type>), le type retourn&eacute;
    est aussi un nombre &agrave; virgule flottante (<type>float</type>),
    sinon, c'est un entier (<type>integer</type>).
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.acos">
  <refnamediv>
   <refname>Acos</refname>
   <refpurpose>arc cosinus</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>float <function>acos</function></funcdef>
     <paramdef>float <parameter>arg</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>acos</function> retourne l'arc cosinus de
    <parameter>arg</parameter> (<parameter>arg</parameter> en radians).
   </para>
   <para>
    Voir aussi
    <function>asin</function> et
    <function>atan</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.asin">
  <refnamediv>
   <refname>Asin</refname>
   <refpurpose>arc sinus</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>float <function>asin</function></funcdef>
     <paramdef>float <parameter>arg</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>asin</function> retourne l'arc sinus de
    <parameter>arg</parameter> (<parameter>arg</parameter> en radians).
   </para>
   <para>
    Voir aussi
    <function>acos</function> et
    <function>atan</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.atan">
  <refnamediv>
   <refname>Atan</refname>
   <refpurpose>arc tangent</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>float <function>atan</function></funcdef>
     <paramdef>float <parameter>arg</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>atan</function> retourne l'arc tangent de
    <parameter>arg</parameter> (<parameter>arg</parameter> en radians).
   </para>
   <para>
    Voir aussi
    <function>acos</function> et
    <function>atan</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.atan2">
  <refnamediv>
   <refname>Atan2</refname>
   <refpurpose>arc tangent de deux variables</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>float <function>atan2</function></funcdef>
     <paramdef>float <parameter>y</parameter></paramdef>
     <paramdef>float <parameter>x</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <simpara>
    <function>atan2</function> retourne l'arc tangent de deux variables
    <parameter>x</parameter> et <parameter>y</parameter>. La formule est :
    " arc tangent (y / x) ", et les signes des
    arguments sont utilis&eacute;s pour d&eacute;terminer le quadrant du
    r&eacute;sultat.
   </simpara>
   <simpara>
    <function>atan2</function> retourne un r&eacute;sultat en radians,
    entre -PI et PI (inclus).
   </simpara>
   <para>
    Voir aussi
    <function>acos</function> et
    <function>atan</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.base-convert">
  <refnamediv>
   <refname>base_convert</refname>
   <refpurpose>Convertit un nombre entre des bases arbitraires.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>base_convert</function></funcdef>
     <paramdef>string <parameter>number</parameter></paramdef>
     <paramdef>int <parameter>frombase</parameter></paramdef>
     <paramdef>int <parameter>tobase</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>base_convert</function> retourne une cha&icirc;ne contenant
    l'argument <parameter>number</parameter> repr&eacute;sent&eacute;
    dans la base <parameter>tobase</parameter>. La base de
    repr&eacute;sentation de <parameter>number</parameter> est
    donn&eacute;e par <parameter>frombase</parameter>.
    <parameter>frombase</parameter> et <parameter>tobase</parameter>
    doivent &ecirc;tre compris entre 2 et 36 inclus. Les chiffres
    sup&eacute;rieurs &agrave; 10 des bases sup&eacute;rieures
    &agrave; 10 seront repr&eacute;sent&eacute;s par les lettres
    de A &agrave; Z, avec A = 10 et Z = 36.
    <example>
     <title><function>base_convert</function></title>
     <programlisting role="php">
&lt;?php
  $binary = base_convert($hexadecimal, 16, 2);
?&gt;
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.bindec">
  <refnamediv>
   <refname>BinDec</refname>
   <refpurpose>Convertit de binaire en d&eacute;cimal</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>bindec</function></funcdef>
     <paramdef>string <parameter>binary_string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>bindec</function> retourne la conversion d'un nombre
    binaire repr&eacute;sent&eacute; par la cha&icirc;ne
    <parameter>binary_string</parameter> en d&eacute;cimal.
   </para>
   <para>
    <function>bindec</function> convertit un nombre binaire en d&eacute;cimal.
    Le plus grand nombre convertible a 31 bits &agrave; 1, soit
    2147483647 en d&eacute;cimal.
   </para>
   <para>
    Voir aussi
    <function>decbin</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.ceil">
  <refnamediv>
   <refname>Ceil</refname>
   <refpurpose>Arrondit au nombre sup&eacute;rieur</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>float <function>ceil</function></funcdef>
     <paramdef>float <parameter>number</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>ceil</function> retourne l'entier sup&eacute;rieur du
    nombre <parameter>number</parameter>. Utiliser
    <function>ceil</function> sur un entier ne sert &agrave; rien.
    La valeur retourn&eacute;e est un nombre &agrave; virgule flottante
    (<type>float</type>), car ces nombres peuvent &ecirc;tre plus
    grands que les entiers.
    <informalexample>
     <programlisting role="php">
&lt;?php
  $x = ceil(4.25);
//  ce qui donne $x=5
?&gt;
     </programlisting>
    </informalexample>
   </para>
   <simpara>
    NOTE: <function>ceil</function> sous PHP/FI 2 retournait un nombre &agrave;
    virgule flottante.  Utilisez: <literal>$new = (double)ceil($number);</literal>
    pour retrouver le comportement traditionnel.
   </simpara>
   <simpara>
    Voir aussi
    <function>floor</function> et
    <function>round</function>.
   </simpara>
  </refsect1>
 </refentry>
 <refentry id="function.cos">
  <refnamediv>
   <refname>Cos</refname>
   <refpurpose>cosinus</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>float <function>cos</function></funcdef>
     <paramdef>float <parameter>arg</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>cos</function> retourne le cosinus de <parameter>arg</parameter>
    (<parameter>arg</parameter> en radians).
   </para>
   <para>
    Voir aussi
    <function>sin</function> et
    <function>tan</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.decbin">
  <refnamediv>
   <refname>DecBin</refname>
   <refpurpose>Convertit de d&eacute;cimal en binaire</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>decbin</function></funcdef>
     <paramdef>int <parameter>number</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>decbin</function> retourne une cha&icirc;ne contenant
    la repr&eacute;sentation binaire de l'entier donn&eacute; en argument.
    Le plus grand nombre pouvant &ecirc;tre converti est 2147483647
    en d&eacute;cimal, ce qui donne une s&eacute;rie de 31 uns (1).
   </para>
   <para>
    Voir aussi
    <function>bindec</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.dechex">
  <refnamediv>
   <refname>DecHex</refname>
   <refpurpose>Convertit de d&eacute;cimal en hexad&eacute;cimal </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>dechex</function></funcdef>
     <paramdef>int <parameter>number</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>dechex</function> retourne une cha&icirc;ne contenant
    la repr&eacute;sentation hexad&eacute;cimale du nombre
    <parameter>number</parameter>. Le nombre le plus grand qui puisse &ecirc;tre
    converti est 2147483647 en d&eacute;cimal, ce qui donnera "7fffffff".
   </para>
   <para>
    Voir aussi
    <function>hexdec</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.decoct">
  <refnamediv>
   <refname>DecOct</refname>
   <refpurpose>Convertit de d&eacute;cimal en octal </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>decoct</function></funcdef>
     <paramdef>int <parameter>number</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>decoct</function> retourne une cha&icirc;ne contenant
    la repr&eacute;sentation octale du nombre donn&eacute;
    <parameter>number</parameter>. Le nombre le plus grand qui puisse
    &ecirc;tre converti est 2147483647 en d&eacute;cimal, ce qui
    donnera "17777777777".
   </para>
   <para>
    Voir aussi
    <function>octdec</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.deg2rad">
  <refnamediv>
   <refname>deg2rad</refname>
   <refpurpose>
    Convertit un nombre de degr&eacute;s en radians
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>double <function>deg2rad</function></funcdef>
     <paramdef>double <parameter>number</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>deg2rad</function> convertit <parameter>number</parameter> de
    degr&eacute;s en radians.
   </para>
   <para>
    Voir aussi
    <function>rad2deg</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.exp">
  <refnamediv>
   <refname>Exp</refname>
   <refpurpose>exponentielle</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>float <function>exp</function></funcdef>
     <paramdef>float <parameter>arg</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>exp</function> retourne l'exponentielle de
    <parameter>arg</parameter>, c'est-&agrave;-dire
    e &eacute;lev&eacute; &agrave; la puissance
    <parameter>arg</parameter>.
   </para>
   <para>
    Voir aussi
    <function>pow</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.floor">
  <refnamediv>
   <refname>Floor</refname>
   <refpurpose>Arrondi &agrave; l'entier inf&eacute;rieur </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>floats <function>floor</function></funcdef>
     <paramdef>float <parameter>number</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <simpara>
    <function>floor</function> retourne l'entier inf&eacute;rieur
    du nombre <parameter>number</parameter>. La valeur retourn&eacute;e
    est un nombre &agrave; virgule flottante, (<type>float</type>)
    car ces nombres peuvent &ecirc;tre plus grands que les entiers.
   </simpara>
   <simpara>
    NOTE: <function>floor</function> sous PHP/FI retournait un float.
    Utilisez:  <literal>$new = (double)floor($number);</literal>
    pour retrouver le comportement traditionnel.
   </simpara>
   <simpara>
    Voir aussi
    <function>ceil</function> et
    <function>round</function>.
   </simpara>
  </refsect1>
 </refentry>
 <refentry id="function.getrandmax">
  <refnamediv>
   <refname>getrandmax</refname>
   <refpurpose>Plus grande valeur al&eacute;atoire possible.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>getrandmax</function></funcdef>
     <paramdef>void </paramdef>
    </funcprototype>
   </funcsynopsis>
   <simpara>
    <function>getrandmax</function> retourne la plus grande valeur
    al&eacute;atoire possible retourn&eacute;e par <function>rand</function>.
   </simpara>
   <simpara>
    Voir aussi
    <function>rand</function>,
    <function>srand</function>
    <function>mt_rand</function>,
    <function>mt_srand</function> et
    <function>mt_getrandmax</function>.
   </simpara>
  </refsect1>
 </refentry>
 <refentry id="function.hexdec">
  <refnamediv>
   <refname>hexdec</refname>
   <refpurpose>Convertit de hexad&eacute;cimal en d&eacute;cimal</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>hexdec</function></funcdef>
     <paramdef>string <parameter>hex_string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>hexdec</function> retourne une cha&icirc;ne contenant la
    repr&eacute;sentation d&eacute;cimale du nombre
    <parameter>hex_string</parameter>. Le nombre le plus grand
    qui puisse &ecirc;tre converti est 7fffffff en d&eacute;cimal,
    ce qui donne "2147483647".
   </para>
    <para>
     <function>hexdec</function> remplace tous les caract&egrave;res non-h&eacute;xadecimal
     par des <literal>0</literal>. Et si les z&eacute;ros de gauche sont ignor&eacute;s,
     ceux de droite prennent le propre valeur.
     <example>
      <title>Exemple avec <function>hexdec</function></title>
      <programlisting role="php">
&lt;?php
  var_dump(hexdec("Hop comme ceci"));
  var_dump(hexdec("0000c000e0cec0"));
  var_dump(hexdec("c000e0cec0"));
// les deux affichent "int(14732992)"
  var_dump(hexdec("aussi"));
  var_dump(hexdec("a0000"));
// les deux affichent "int(655360)"
?&gt;
      </programlisting>
     </example>
    </para>
   <para>
    Voir aussi
    <function>dechex</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.lcg-value">
  <refnamediv>
   <refname>lcg_value</refname>
   <refpurpose>
    G&eacute;n&eacute;rateur de congruence combin&eacute;e lin&eacute;aire
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>double <function>lcg_value</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>lcg_value</function> retourne un nombre pseudo-al&eacute;atoire,
    compris entre 0 et 1. <function>lcg_value</function> combine deux
    g&eacute;n&eacute;rateurs de congruence, de p&eacute;riodes respectives
    <literal>2^31 - 85</literal> et <literal>2^31 - 249</literal>. 
    La p&eacute;riode de cette fonction est le produit de ces deux 
    nombres premiers (soit <literal>(2^31 - 85)*(2^31 - 249)</literal>).
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.log">
  <refnamediv>
   <refname>Log</refname>
   <refpurpose>Logarithme naturel (n&eacute;p&eacute;rien)</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>float <function>log</function></funcdef>
     <paramdef>float <parameter>arg</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>log</function> retourne le logarithme naturel 
    (ou n&eacute;p&eacute;rien) de <parameter>arg</parameter>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.log10">
  <refnamediv>
   <refname>Log10</refname>
   <refpurpose>logarithme en base 10.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>float <function>log10</function></funcdef>
     <paramdef>float <parameter>arg</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>log10</function> retourne le logarithme en base 10 de
    <parameter>arg</parameter>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.max">
  <refnamediv>
   <refname>max</refname>
   <refpurpose>La plus grande valeur.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>mixed <function>max</function></funcdef>
     <paramdef>mixed <parameter>arg1</parameter></paramdef>
     <paramdef>mixed <parameter>arg2</parameter></paramdef>
     <paramdef>mixed <parameter>argn</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>max</function> retourne la plus grande valeur
    num&eacute;rique parmi les valeurs pass&eacute;es en param&egrave;tre.
   </para>
   <para>
    Si le premier param&egrave;tre est un tableau,
    <function>max</function> retourne la plus grande valeur de ce tableau.
    Si le premier param&egrave;tre est un entier, une cha&icirc;ne ou
    un double,  <function>max</function> requiert au moins deux param&egrave;tres,
    et retournera alors le plus grand d'entre eux.
    Le nombre d'arguments est alors illimit&eacute;.
   </para>
   <para>
    Si au moins une valeur est un entier double, elles seront toutes
    trait&eacute;es comme des doubles, et un double sera retourn&eacute;.
    Si aucune valeur n'est de type double, elles seront trait&eacute;es
    comme des entiers, et un entier sera retourn&eacute;.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.min">
  <refnamediv>
   <refname>min</refname>
   <refpurpose>La plus petite valeur.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>mixed <function>min</function></funcdef>
     <paramdef>mixed <parameter>arg1</parameter></paramdef>
     <paramdef>mixed <parameter>arg2</parameter></paramdef>
     <paramdef>mixed <parameter>argn</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>min</function> retourne la plus petite valeur
    num&eacute;rique parmi les valeurs pass&eacute;es en param&egrave;tres.
   </para>
   <para>
    Si le premier param&egrave;tre est un tableau, <function>min</function>
    retourne la plus petite valeur de ce tableau. Si le premier
    param&egrave;tre est un entier, une cha&icirc;ne ou un double,
    <function>min</function> requiert au moins deux param&egrave;tres, et
    retournera alors le plus petit d'entre eux. Le nombre d'arguments est alors
    illimit&eacute;.
   </para>
   <para>
    Si au moins une valeur est un entier double, elles seront toutes
    trait&eacute;es comme des doubles, et un double sera retourn&eacute;.
    Si aucune valeur n'est de type double, elles seront trait&eacute;es
    comme des entiers, et un entier sera retourn&eacute;.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.mt-rand">
  <refnamediv>
   <refname>mt_rand</refname>
   <refpurpose>
    G&eacute;n&egrave;re une meilleure valeur al&eacute;atoire.
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>mt_rand</function></funcdef>
     <paramdef>int
      <parameter><optional>min</optional></parameter>
     </paramdef>
     <paramdef>int
      <parameter><optional>max</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <simpara>
    De nombreux g&eacute;n&eacute;rateurs de nombres al&eacute;atoires
    provenant de vieilles biblioth&egrave;ques libcs ont des comportement
    douteux et sont tr&egrave;s lents. Par d&eacute;faut, PHP utilise le
    g&eacute;n&eacute;rateur de nombres al&eacute;atoires de libc avec la
    fonction <function>rand</function>. <function>mt_rand</function> est une
    fonction de remplacement, pour cette derni&egrave;re. Elle utilise un
    g&eacute;n&eacute;rateur de nombres al&eacute;atoire de caract&eacute;ristique
    connue, le " Mersenne Twister ", qui va produire des nombres utilisables en
    cryptographie, et qui est 4 fois plus rapide que la fonction standard libc.
    La "Homepage of the Mersenne Twister " est
    <ulink url="&url.mersenne;">&url.mersenne;</ulink>. Une version optimis&eacute;e
    des sources de MT est disponible &agrave;
    <ulink url="&url.mersenne.twister;">&url.mersenne.twister;</ulink>.
   </simpara>
   <simpara>
    Appel&eacute;e sans les arguments optionnels <parameter>min</parameter> et
    <parameter>max</parameter>, <function>mt_rand</function> retourne un nombre
    pseudo-al&eacute;atoire, entre 0 et <constant>RAND_MAX</constant>.
    Pour obtenir un nombre entre 5 et 15 inclus, il faut utiliser
    <literal>mt_rand(5,15)</literal>.
   </simpara>
   <simpara>
    N'oubliez pas d'initialiser le g&eacute;n&eacute;rateur de nombres
    al&eacute;atoires avec <function>mt_srand</function>.
   </simpara>
   <note>
    <para>
     Dans les versions ant&eacute;rieures &agrave; la 3.0.7, la signification
     du param&egrave;tre <parameter>max</parameter> &eacute;tait "longueur".
     Pour avoir le m&ecirc;me r&eacute;sultat, il faut utiliser
     <literal>mt_rand (5, 11)</literal> pour obtenir un nombre
     al&eacute;atoire entre 5 et 15.
    </para>
   </note>
   <simpara>
    Voir aussi
    <function>mt_srand</function>,
    <function>mt_getrandmax</function>,
    <function>srand</function>,
    <function>rand</function> et
    <function>getrandmax</function>.
   </simpara>
  </refsect1>
 </refentry>
 <refentry id="function.mt-srand">
  <refnamediv>
   <refname>mt_srand</refname>
   <refpurpose>Initialise une meilleure valeur al&eacute;atoire</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>mt_srand</function></funcdef>
     <paramdef>int <parameter>seed</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>mt_srand</function> initialise une meilleure valeur
    al&eacute;atoire avec <parameter>seed</parameter>.
    <informalexample>
     <programlisting role="php">
&lt;?php
// initialise avec les microsecondes depuis la derni&egrave;re seconde enti&egrave;re
  mt_srand((double)microtime()*1000000);
  $randval = mt_rand();
?&gt;
     </programlisting>
    </informalexample>
   </para>
   <simpara>
    Voir aussi
    <function>mt_rand</function>,
    <function>mt_getrandmax</function>,
    <function>srand</function>,
    <function>rand</function> et
    <function>getrandmax</function>.
   </simpara>
  </refsect1>
 </refentry>
 <refentry id="function.mt-getrandmax">
  <refnamediv>
   <refname>mt_getrandmax</refname>
   <refpurpose>La plus grand valeur al&eacute;atoire possible.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>mt_getrandmax</function></funcdef>
     <paramdef>void </paramdef>
    </funcprototype>
   </funcsynopsis>
   <simpara>
    <function>mt_getrandmax</function> retourne la plus grand valeur
    al&eacute;atoire possible que peut retourner <function>mt_rand</function>.
   </simpara>
   <simpara>
    Voir aussi
    <function>mt_rand</function>,
    <function>mt_srand</function>
    <function>rand</function>,
    <function>srand</function> et
    <function>getrandmax</function>.
   </simpara>
  </refsect1>
 </refentry>
 <refentry id="function.number-format">
  <refnamediv>
   <refname>number_format</refname>
   <refpurpose>Formate un nombre pour l'affichage.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>number_format</function></funcdef>
     <paramdef>float <parameter>number</parameter></paramdef>
     <paramdef>int <parameter><optional>decimals</optional></parameter></paramdef>
     <paramdef>string <parameter><optional>dec_point</optional></parameter></paramdef>
     <paramdef>string <parameter><optional>thousands_sep</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>number_format</function> retourne une cha&icirc;ne
    repr&eacute;sentant <parameter>number</parameter> format&eacute;.
    <function>number_format</function> accepte un, deux ou 4 param&egrave;tres
    (mais pas trois).
   </para>
   <para>
    Si le seul param&egrave;tre <parameter>number</parameter> est donn&eacute;,
    il sera format&eacute; sans partie d&eacute;cimale, mais avec une
    virgule entre chaque millier.
   </para>
   <para>
    Si les deux param&egrave;tres <parameter>number</parameter> et
    <parameter>decimals</parameter> sont fournis, <parameter>number</parameter> sera
    format&eacute; avec <parameter>decimals</parameter> d&eacute;cimales,
    un point (".") comme s&eacute;parateur d&eacute;cimal et une virgule entre chaque
    millier.
   </para>
   <para>
    Avec quatre param&egrave;tres, <parameter>number</parameter> sera
    format&eacute; avec <parameter>decimals</parameter> d&eacute;cimales,
    <parameter>dec_point</parameter> comme s&eacute;parateur d&eacute;cimal, et
    <parameter>thousands_sep</parameter> comme s&eacute;parateur de milliers.
   </para>
    <note>
     <para>
      Seul le premier caract&egrave;re du param&egrave;tre <parameter>thousands_sep</parameter>
      est utilis&eacute;. Par exemple, si vous utilisez <literal>foo</literal> comme
      s&eacute;parateur de milliers, sur le nombre <literal>1000</literal>,
      <function>number_format</function> retournera <literal>1f000</literal>.
     </para>
    </note>
   <para>
    En notation fran&ccedil;aise, on utilise g&eacute;n&eacute;ralement deux chiffres
    apr&egrave;s la virgule, une virgule comme s&eacute;parateur d&eacute;cimal, et un
    espace comme s&eacute;parateur de milliers. Cela donne :
    <informalexample>
     <programlisting role="php">
&lt;?php
  $nombre = 1234.56;
// Notation anglaise (par d&eacute;faut)
  $english_format_number = number_format($nombre);
// 1,234.56
// Notation fran&ccedil;aise
  $nombre_format_francais = number_format($nombre, 2, ',', ' ');
// 1 234,56
?&gt;
     </programlisting>
    </informalexample>
   </para>
   <para>
    Voir aussi
    <function>sprintf</function>,
    <function>printf</function> et
    <function>sscanf</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.octdec">
  <refnamediv>
   <refname>OctDec</refname>
   <refpurpose>Convertit d'octal en d&eacute;cimal.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>octdec</function></funcdef>
     <paramdef>string <parameter>octal_string</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>octdec</function> retourne une cha&icirc;ne contenant la
    repr&eacute;sentation d&eacute;cimale du nombre
    <parameter>octal_tring</parameter>. Le nombre le plus grand qui
    puisse &ecirc;tre converti est 17777777777 en d&eacute;cimal,
    ce qui donnera "2147483647".
   </para>
   <para>
    Voir aussi
    <function>decoct</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.pi">
  <refnamediv>
   <refname>pi</refname>
   <refpurpose>Retourne la valeur de pi </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>double <function>pi</function></funcdef>
     <paramdef>void </paramdef>
    </funcprototype>
   </funcsynopsis>
   <simpara>
    <function>pi</function> retourne la valeur de pi.
   </simpara>
   <para>
    <informalexample>
     <programlisting role="php">
&lt;?php
  echo pi();
//  3.1415926535898
?&gt;
     </programlisting>
    </informalexample>
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.pow">
  <refnamediv>
   <refname>pow</refname>
   <refpurpose>Puissance</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>float <function>pow</function></funcdef>
     <paramdef>float <parameter>base</parameter></paramdef>
     <paramdef>float <parameter>exp</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>pow</function> retourne <parameter>base</parameter>
    &eacute;lev&eacute; &agrave; la puissance <parameter>exp</parameter>.
    Si le calcul est impossible (racine d'un nombre n&eacute;gatif, par
    exemple), <function>exp</function> retourne <literal>NAN</literal>.
   </para>
   <para>
    Voir aussi
    <function>exp</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.rad2deg">
  <refnamediv>
   <refname>rad2deg</refname>
   <refpurpose>
    Convertit de radians en degr&eacute;s
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>double <function>rad2deg</function></funcdef>
     <paramdef>double <parameter>number</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>rad2deg</function> convertit <parameter>number</parameter>
    (suppos&eacute; en radians) en degr&eacute;s.
   </para>
   <para>
    Voir aussi
    <function>deg2rad</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.rand">
  <refnamediv>
   <refname>rand</refname>
   <refpurpose>G&eacute;n&egrave;re une valeur al&eacute;atoire.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>rand</function></funcdef>
     <paramdef>int
      <parameter><optional>min</optional></parameter>
     </paramdef>
     <paramdef>int
      <parameter><optional>max</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <simpara>
    Appel&eacute;e sans les options <parameter>min</parameter> et
    <parameter>max</parameter>, <function>rand</function> retourne un
    nombre pseudo-al&eacute;atoire entre 0 et <constant>RAND_MAX</constant>.
    Si vous voulez un nombre al&eacute;atoire entre 5 et 15
    (inclus), par exemple, utilisez <literal>rand (5, 15)</literal>.
   </simpara>
   <simpara>
    N'oubliez pas d'initialiser le g&eacute;n&eacute;rateur de nombres
    al&eacute;atoires avec <function>srand</function>.
   </simpara>
   <note>
    <para>
     Dans les versions ant&eacute;rieures &agrave; la 3.0.7 la signification
     du param&egrave;tre <parameter>max</parameter> &eacute;tait longueur.
     Pour avoir le m&ecirc;me r&eacute;sultat, il faut  utiliser
     <literal>mt_rand (5, 11)</literal> pour obtenir un nombre al&eacute;atoire
     entre 5 et 15.
    </para>
   </note>
   <simpara>
    Voir aussi
    <function>srand</function>,
    <function>getrandmax</function>,
    <function>mt_rand</function>,
    <function>mt_srand</function> et
    <function>mt_getrandmax</function>.
   </simpara>
  </refsect1>
 </refentry>
 <refentry id="function.round">
  <refnamediv>
   <refname>round</refname>
   <refpurpose>Arrondi.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>double <function>round</function></funcdef>
     <paramdef>double <parameter>val</parameter></paramdef>
     <paramdef>int
      <parameter><optional>precision</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>round</function> retourne la valeur arrondie de <parameter>val</parameter>
    &agrave; la pr&eacute;cision <parameter>precision</parameter>
    (nombre de chiffres apr&egrave;s la virgule).
    <informalexample>
     <programlisting role="php">
&lt;?php
  $foo = round( 3.4 );   // $foo == 3.0
  $foo = round( 3.5 );   // $foo == 4.0
  $foo = round( 3.6 );   // $foo == 4.0
?&gt;
     </programlisting>
    </informalexample>
   </para>
   <note>
    <simpara>
     Le param&egrave;tre <parameter>precision</parameter> est disponible
     uniquement en PHP 4.
    </simpara>
   </note>
   <simpara>
    Voir aussi
    <function>ceil</function> et
    <function>floor</function>.
   </simpara>
  </refsect1>
 </refentry>
 <refentry id="function.sin">
  <refnamediv>
   <refname>Sin</refname>
   <refpurpose>Sinus</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>float <function>sin</function></funcdef>
     <paramdef>float <parameter>arg</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>sin</function> retourne le sinus de <parameter>arg</parameter>
    (<parameter>arg</parameter> in radians).
   </para>
   <para>
    Voir aussi
    <function>cos</function> et
    <function>tan</function>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.sqrt">
  <refnamediv>
   <refname>Sqrt</refname>
   <refpurpose>Racine carr&eacute;e.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>float <function>sqrt</function></funcdef>
     <paramdef>float <parameter>arg</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>sqrt</function> retourne la racine carr&eacute;e de
    <parameter>arg</parameter>.
   </para>
  </refsect1>
 </refentry>
 <refentry id="function.srand">
  <refnamediv>
   <refname>srand</refname>
   <refpurpose>Initialise le g&eacute;n&eacute;rateur de nombres al&eacute;atoires</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>srand</function></funcdef>
     <paramdef>int <parameter>seed</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>srand</function> initialise le g&eacute;n&eacute;rateur de
    nombres al&eacute;atoires avec <parameter>seed</parameter>.
    <informalexample>
     <programlisting role="php">
&lt;?php
// initialise avec les microsecondes depuis la derni&egrave;re seconde enti&egrave;re
  srand((double)microtime()*1000000);
  $randval = rand();
?&gt;
     </programlisting>
    </informalexample>
   </para>
   <simpara>
    Voir aussi
    <function>rand</function>,
    <function>getrandmax</function>,
    <function>mt_rand</function>,
    <function>mt_srand</function> et
    <function>mt_getrandmax</function>.
   </simpara>
  </refsect1>
 </refentry>
 <refentry id="function.tan">
  <refnamediv>
   <refname>Tan</refname>
   <refpurpose>Tangente</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Description</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>float <function>tan</function></funcdef>
     <paramdef>float <parameter>arg</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>tan</function> retourne la tangente de
    <parameter>arg</parameter> (<parameter>arg</parameter> en radians).
   </para>
   <para>
    Voir aussi
    <function>sin</function> et
    <function>cos</function>.
   </para>
  </refsect1>
 </refentry>
</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
