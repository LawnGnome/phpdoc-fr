<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.7 Maintainer: dams Status: ready -->
<chapter id="install.pecl">
 <title>Installation d'extensions PECL</title>

 <sect1 id="install.pecl.intro">
  <title>Introduction aux installations PECL</title>
  <simpara>
   Les extensions &php; peuvent être installés de différentes façons.
   <ulink url="&url.pecl;">PECL</ulink> est un entrepôt d'extensions &php;,
   qui réside dans la structure <ulink url="&url.php.pear;">PEAR</ulink>. Cette
   section montre comment installer les extensions disponibles sous PECL.
  </simpara>
  <simpara>
   Ces instructions supposent que <literal>/your/phpsrcdir/</literal> est le
   chemin jusqu'à la distribution &php;, et <literal>extname</literal> est le nom
   de votre extension PECL : adaptez les commandes qui suivent à votre situation.
   Ces instructions supposent aussi que vous êtes familiers avec l'utilisation
   des <ulink url="&url.php.pear.cli;">commandes pear</ulink>.
  </simpara>
  <simpara>
   Les extensions partagées peuvent être installées en les incluant dans le fichier &php.ini;,
   grâce à la directive <link linkend="ini.extension">extension</link>.
   Voyez aussi la directive <link linkend="ini.extension-dir">extensions_dir</link>
   et la fonction <function>dl</function>.  Les méthodes d'installation décrites ci-dessous
   ne configure pas automatiquement &php; pour inclure ces options : 
   vous devez le faire manuellement.
  </simpara>
  <simpara>
   Lorsque vous compilez des modules &php;, il est important d'avoir les
   outils appropriés, tels que autoconf, automake, libtool, etc.) Voyez les
   <ulink url="&url.php.anoncvs;">Instructions pour le CVS anonyme</ulink>, afin
   de connaître les utilitaires nécessaires, et leurs versions.
  </simpara>
 </sect1>

 <sect1 id="install.pecl.downloads">
  <title>Télécharger des extensions PECL</title>
  <simpara>
   Il existe plusieurs méthodes pour télécharger des extensions PECL : 
  </simpara>
  <itemizedlist>
   <listitem>
    <simpara>
     <ulink url="&url.pecl;">&url.pecl;</ulink>
    </simpara>
    <simpara>
     Vous trouverez ici des informations comme le ChangeLog, les informations de version, 
     les pre requis, les versions, etc. Même si toutes les extensions PECL ne sont pas
     sur cette page, la plupart y sont.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <literal>pear download extname</literal>
    </simpara>
    <simpara>
     La <ulink url="&url.php.pear.cli;">commande pear</ulink> peut aussi être
     utilisé pour télécharger les sources. Les versions spécifiques peuvent
     aussi être spécifiées.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <acronym>CVS</acronym>
    </simpara>
    <simpara>
     Tous les fichiers PECL sont conservés dans le serveur <acronym>CVS</acronym>.  
     Une interface Web est disponible à <ulink url="&url.php.cvs;pecl/">&url.php.cvs;pecl/</ulink>.  
     Pour télécharger directement depuis <acronym>CVS</acronym>, suivez ces instructions,
     où <emphasis>phpfi</emphasis> est le mot de passe de l'utilisateur
     <emphasis>cvsread</emphasis> :
    </simpara>
    <para>
     <screen>
$ cvs -d:pserver:cvsread@cvs.php.net:/repository login 
$ cvs -d:pserver:cvsread@cvs.php.net:/repository co pecl/extname
     </screen>
    </para>
   </listitem>
   <listitem>
    <simpara>
     Téléchargements pour Windows
    </simpara>
    <simpara>
     Les utilisateurs de Windows peuvent trouver les bibliothèques compilées PECL
     dans la <emphasis>Collection of PECL modules</emphasis> disponible sur la 
     page <ulink url="&url.php.downloads;">téléchargements &php;</ulink>, et en suivant
     le lien <ulink url="&url.php.snapshots;">PECL Snapshot</ulink>. Pour compiler
     &php; sous Windows, lisez le fichier  
     <ulink url="&url.php.win32.build.readme;">Win32 Build README</ulink>.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>

 <sect1 id="install.pecl.windows">
  <title>PECL sur Windows</title>
  <simpara>
   Comme pour toute extension &php; <acronym>DLL</acronym>, pour faire l'installation
   placez la bibliothèque DLL de l'extension PECL dans le dossier 
   <link linkend="ini.extension-dir">extension_dir</link> et ajoutez-la dans 
   le fichier &php.ini;. Par exemple : 
  </simpara>
  <para>
   <screen>
extension=php_extname.dll
   </screen>
  </para>
  <simpara>
   Après cela, relancez le serveur Web.
  </simpara>
 </sect1>
 
 <sect1 id="install.pecl.pear">
  <title>Compilations d'extensions PECL partagées avec PEAR</title>
  <simpara>
   PEAR facilite la création d'extension &php; partagées. En utilisant la 
   <ulink url="&url.php.pear.cli;">commande pear</ulink>, faîtes ceci : 
  </simpara>
  <para>
   <screen>
$ pear install extname
   </screen>
  </para>
  <simpara>
   Cette commande va télécharger le fichier source de <emphasis>extname</emphasis>, 
   et le compiler sur votre système. Cela donne un fichier 
   <filename>extname.so</filename> qui peut être inclut dans le fichier
   &php.ini;
  </simpara>
  <simpara>
   Dans le cas où <emphasis>preferred_state</emphasis> est plus haut que celui
   qui est disponible dans la version de <emphasis>extname</emphasis>, 
   (il pourrait valoir stable alors que l'extension est toujours en bêta), 
   vous pouvez changer <emphasis>preferred_state</emphasis> avec 
   <literal>pear config-set</literal>, ou en spécifiant une version particulière
   pour l'extension PECL. Par exemple : 
  </simpara>
  <para>
   <screen>
$ pear install extname-0.1.1
   </screen>
  </para>
  <simpara>
   Quelle que soit la situation, pear va copier le fichier 
   <filename>extname.so</filename> dans le 
   <link linkend="ini.extension-dir">dossier des extensions</link>. Modifiez
   le fichier &php.ini; en concordance.
  </simpara>
 </sect1>

 <sect1 id="install.pecl.phpize">
  <title>Compilation des extensions partagées avec phpize</title>
  <simpara>
   Lorsque l'utilisation de pear n'est pas une option, comme lorsque vous
   compilez les extensions PECL depuis <acronym>CVS</acronym>, ou pour 
   une version non-publiée d'un paquet PECL, alors la création d'une extension
   partagée doit se faire manuellement, avec la commande <literal>phpize</literal>. 
   La commande pear automatise tout ce processus, mais vous pouvez le faire
   manuellement. En supposant que le code source est dans l'archive 
   <filename>extname.tgz</filename>, et que cette dernière a été téléchargée
   dans le dossier courant, suivez ces instructions :
  </simpara>
  <para>
   <screen>
<![CDATA[
$ pear download extname
$ gzip -d < extname.tgz | tar -xvf -
$ cd extname
$ phpize
$ ./configure && make
]]>
   </screen>
  </para>
  <simpara>
   En cas de succès, cela va créer un fichier appelé <filename>extname.so</filename> 
   et le placer dans le dossier <filename>modules/</filename> et/ou 
   <filename>.libs/</filename>, du dossier <filename>extname/</filename>. Placez
   cette extension partagée (<filename>extname.so</filename>) dans le 
   <link linkend="ini.extension-dir">dossier d'extensions &php;</link>, et
   modifiez le fichier &php.ini;.
  </simpara>
 </sect1>

 <sect1 id="install.pecl.static">
  <title>Compilation des extensions PECL statiquement dans &php;</title>
  <simpara>
   Pour inclure statiquement des extensions dans &php;, placez les sources
   de l'extensions dans le dossier <filename>ext/</filename>, disponible
   dans la distribution &php;. Par exemple : 
  </simpara>
  <para>
   <screen>
<![CDATA[
$ cd /your/phpsrcdir/ext
$ pear download extname
$ gzip -d < extname.tgz | tar -xvf -
$ mv extname-x.x.x extname
$ rm package.xml
]]>
   </screen>
  </para>
  <simpara>
   Cela générera le dossier suivant :
  </simpara>
  <para>
   <screen>
    /your/phpsrcdir/ext/extname
   </screen>
  </para>
  <simpara>
   A partir de la, suivez le processus classique de compilation de &php; : 
  </simpara>
  <para>
   <screen>
$ cd /your/phpsrcdir 
$ ./buildconf --force
$ ./configure --help
$ ./configure --with-extname --enable-someotherext --with-foobar
$ make
$ make install
   </screen>
  </para>
  <note>
   <simpara>
    Pour exécuter le script 'buildconf', vous devez posséder autoconf 2.13 et
    automake 1.4+ (les versions plus récentes de autoconf peuvent fonctionner,
    mais ne sont pas supportées).
   </simpara>
  </note>
  <simpara>
   L'utilisation de <literal>--enable-extname</literal> ou 
   <literal>--with-extname</literal> dépend de l'extension. Généralement,
   une extension qui ne dépend pas d'une bibliothèque externe utilise
   <literal>--enable</literal>. Pour être certains, utilisez la commande
   suivante après avoir utilisé buildconf : 
  </simpara>
  <para>
   <screen>
$ ./configure --help | grep extname
   </screen>
  </para>
 </sect1>
</chapter>   

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
