<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.15 $ -->
<!-- EN-Revision: 1.6 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->
   <sect1 xml:id="install.unix.sun" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Installation sous Netscape et iPlanet Enterprise Serveur sur un système Sun Solaris</title>
    <para>
     Cette section contient les notes et détails spécifiques à l'installation de &php; sur
     les serveurs web Sun Java System Web Server,
     Sun ONE Web Server, iPlanet et Netscape server sur les systèmes Sun Solaris.
    </para>
    <para>
     Depuis &php; 4.3.3, vous pouvez utiliser les scripts &php; avec
     le <link linkend="ref.nsapi">module NSAPI</link> pour
     <link linkend="install.unix.sun.specialpages">gérer des listes de dossiers
     et des pages d'erreurs personnalisées</link>. Des fonctions supplémentaires
     sont disponibles pour assurer la compatibilité avec Apache.
     Pour du support sur les serverus courants, voyez la
     <link linkend="install.unix.sun.notes">note sur les sous-requêtes</link>.
    </para>
    <para>
     Vous pouvez trouver plus d'informations sur la configuration de
     &php; avec Netscape Enterprise Server :
     <link xlink:href="&url.netscape.nsapi;">&url.netscape.nsapi;</link>
    </para>
    
    <para>
     Pour construire &php; avec les serveurs web Sun JSWS/Sun ONE WS/iPlanet/Netscape, entrez
     le répertoire valide d'installation pour l'option
     <link linkend="configure.with-nsapi">--with-nsapi=[DIR]</link>.
     Le répertoire par défaut est habituellement
     <filename class="directory">/opt/netscape/suitespot/</filename>.
     Lisez également le fichier <filename>/php-xxx-version/sapi/nsapi/nsapi-readme.txt</filename>.
    </para>
    <para>
     <orderedlist>
      <listitem>
       <para>
        Installez les packages suivants depuis le serveur
        <link xlink:href="&url.sun.freeware;">&url.sun.freeware;</link>
        ou un miroir ad hoc :
        <simplelist>
         <member><filename>autoconf-2.13</filename></member>
         <member><filename>automake-1.4</filename></member>
         <member><filename>bison-1_25-sol26-sparc-local</filename></member>
         <member><filename>flex-2_5_4a-sol26-sparc-local</filename></member>
         <member><filename>gcc-2_95_2-sol26-sparc-local</filename></member>
         <member><filename>gzip-1.2.4-sol26-sparc-local</filename></member>
         <member><filename>m4-1_4-sol26-sparc-local</filename></member>
         <member><filename>make-3_76_1-sol26-sparc-local</filename></member>
         <member>
          <filename>mysql-3.23.24-beta</filename> (si vous voulez le support MySQL)
         </member>
         <member><filename>perl-5_005_03-sol26-sparc-local</filename></member>
         <member><filename>tar-1.13</filename> (GNU tar)</member>
        </simplelist>
       </para>
      </listitem>
      <listitem>
       <simpara>
        Assurez-vous que le path inclut bien les dossiers nécessaires :
        <literal>PATH=.:/usr/local/bin:/usr/sbin:/usr/bin:/usr/ccs/bin</literal>
        et rendez-le accessible à vortre système avec <userinput>export PATH</userinput>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <userinput>gunzip php-x.x.x.tar.gz</userinput>
        (si vous avez une distribution <filename>.gz</filename>, ou bien allez en 4).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <userinput>tar xvf php-x.x.x.tar</userinput>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Passez dans votre dossier &php; :
        <userinput>cd ../php-x.x.x</userinput>
       </simpara>
      </listitem>
      <listitem>
       <para>
        Pour les étapes suivantes, assurez-vous que
        <filename class="directory">/opt/netscape/suitespot/</filename>
        correspond bien à votre installation du serveur netscape. Sinon, indiquez le chemin
        correct :
        <programlisting role="shell">
<![CDATA[
./configure --with-mysql=/usr/local/mysql \
--with-nsapi=/opt/netscape/suitespot/ \
--enable-libgcc
]]>
        </programlisting>
       </para>
      </listitem>
      <listitem>
       <simpara>
        Faites un <command>make</command> puis un <command>make install</command>.
       </simpara>
      </listitem>
     </orderedlist>
    </para>
    <para>
     Après avoir fait l'installation de base et lu les fichiers
     readme.txt, vous pouvez avoir besoin de faire des configurations
     supplémentaires.
    </para>
    <formalpara>
     <title>Instructions de configuration pour Sun/iPlanet/Netscape</title>
     <para>
      Tout d'abord, vous aurez besoin d'ajouter des chemins dans la variable
      <varname>LD_LIBRARY_PATH</varname> pour que Netscape trouve son bonheur.
      Il est préférable de le faire dans le script de démarrage du serveur
      Netscape. Les utilisateurs Windows peuvent ignorer cette étape. Le script
      de démarrage est souvent situé dans :
      <filename class="directory">/path/to/server/https-servername/start</filename>.
      Vous aurez peut être à éditer le fichier de configuration situé dans
      <filename class="directory">/path/to/server/https-servername/config/</filename>.
      <orderedlist>
       <listitem>
        <para>
         Ajoutez les lignes suivantes dans <filename>mime.types</filename> en tant qu'administrateur :
         <screen>
<![CDATA[
type=magnus-internal/x-httpd-php exts=php
]]>
         </screen>
        </para>
       </listitem>
       <listitem>
        <para>
         Éditez le fichier <filename>magnus.conf</filename> (pour les serveurs &gt;= 6) ou
         le fichier <filename>obj.conf</filename> (pour les serveurs &lt; 6) et
         ajoutez les lignes suivantes dans <filename>obj.conf</filename>.
         shlib peut varier en fonction de votre OS. Pour Unix, c'est
         quelque chose comme <filename>/opt/netscape/suitespot/bin/libphp4.so</filename>.
         Il est conseillé de placer les lignes suivantes après les
         lignes de <literal>mime types init</literal>.
         <programlisting>
<![CDATA[
Init fn="load-modules" funcs="php4_init,php4_execute,php4_auth_trans" shlib="/opt/netscape/suitespot/bin/libphp4.so"
Init fn="php4_init" LateInit="yes" errorString="Failed to initialize PHP!" [php_ini="/path/to/php.ini"]
]]>
         </programlisting>
         (&php; &gt;= 4.3.3) Le paramètre <literal>php_ini</literal> est optionnel
         mais, avec lui, vous pouvez placer votre &php.ini; dans le dossier de configuration
         de votre serveur web.
        </para>
       </listitem>
       <listitem>
        <para>
         Configurez l'objet par défaut dans le fichier <filename>obj.conf</filename>
         (pour les classes de serveur virtuel [version 6.0+] dans leur fichier
         <filename>vserver.obj.conf</filename>) :
         <programlisting>
<![CDATA[
<Object name="default">
.
.
.
.#NOTE this next line should happen after all 'ObjectType' and before all 'AddLog' lines
Service fn="php4_execute" type="magnus-internal/x-httpd-php" [inikey=value inikey=value ...]
.
.
</Object>
]]>
         </programlisting>
         (&php; &gt;= 4.3.3) Comme paramètres additionnels, vous pouvez ajouter
         quelques valeurs spéciales dans le &php.ini;. Par exemple, vous pouvez définir
         un spécifique <literal>docroot=&quot;/path/to/docroot&quot;</literal> où
         le contexte <literal>php4_execute</literal> est appelé. Pour les init-keys booléens,
         utilisez les valeurs 0/1, et non pas <literal>&quot;On&quot;,&quot;Off&quot;,...</literal>
         (cela ne fonctionnera pas correctement), e.g.
         <literal>zlib.output_compression=1</literal> au lieu de
         <literal>zlib.output_compression=&quot;On&quot;</literal>
        </para>
       </listitem>
       <listitem>
        <para>
         Cela est nécessaire uniquement si vous voulez configurer un répertoire
         pour acceuillir des scripts &php; tout comme un répertoire
         <filename class="directory">cgi-bin</filename> :
         <programlisting>
<![CDATA[
<Object name="x-httpd-php">
ObjectType fn="force-type" type="magnus-internal/x-httpd-php"
Service fn=php4_execute [inikey=value inikey=value ...]
</Object>
]]>
         </programlisting>
         Après cela, vous pouvez configurer un répertoire dans le serveur d'administration
         et y assigner le style <literal>x-httpd-php</literal>. Tous les fichiers dans ce répertoire
         seront exécutés comme étant du &php;. C'est pratique pour cacher l'usage de &php;
         en renommant les fichiers en <filename>.html</filename>.
        </para>
       </listitem>
       <listitem>
        <para>
         Configuration de l'identification : les identifications &php; ne peuvent pas être
         utilisées avec aucune autre identification.
         TOUTES LES IDENTIFICATIONS SONT PASSEES À VOS SCRIPTS &php;.
         Pour configurer l'identification &php; pour tout le serveur web, ajoutez
         la ligne suivante à votre objet par défaut :
         <programlisting>
<![CDATA[
<Object name="default">
AuthTrans fn=php4_auth_trans
.
.
.
</Object>
]]>
         </programlisting>
        </para>
       </listitem>
       <listitem>
        <para>
         Pour utiliser l'identification &php; dans un seul répertoire, ajoutez ce qui suit :
         <programlisting>
<![CDATA[
<Object ppath="d:\path\to\authenticated\dir\*">
AuthTrans fn=php4_auth_trans
</Object>
]]>
         </programlisting>
        </para>
       </listitem>
      </orderedlist>
     </para>
    </formalpara>
    <note>
     <para>
      La taille de la pile que &php; utilise dépend de la
      configuration du serveur web. Si vous rencontrez des crashs avec
      les grands scripts &php;, il est recommandé d'augmenter la taille de
      la pile avec la console d'administration : dans la section
      &quot;MAGNUS EDITOR&quot;.
     </para>
    </note>

   <sect2 xml:id="install.unix.sun.phpini">
    <title>Environnement CGI et modifications recommandées du &php.ini;</title>
    <para>
     Il est important de garder en tête que iPlanet/SunONE/Netscape est un serveur web
     multi-threadé. Comme toutes les requêtes se situent dans le même contexte
     (c'est le contexte sur serveur web), et que ce contexte est unique, si vous voulez
     accéder à des variables comme <literal>PATH_INFO</literal>,
     <literal>HTTP_HOST</literal> etc., il n'est pas recommandé d'y accéder
     à l'ancienne manière de &php;, avec la fonction <function>getenv</function> ou une
     autre méthode (register globals, <literal>$_ENV</literal>).
     De cette manière, vous n'aurez que des valeurs d'environnement du serveur,
     et non pas des valeurs correctes pour le CGI.
    </para>
    <note>
     <para>
      Pourquoi est-ce que les variables CGI sont invalides ?
     </para>
     <para>
      C'est lié au fait que le processus du serveur web est lancé par l'administrateur
      du serveur, qui utilise le script de lancement au démarrage. En fait, il aurait fallu
      que vous lanciez vous-même le processus. C'est pour cela que l'environnement
      du serveur web contient des variables d'environnement CGI. Vous pouvez vérifier
      cela en lançant le serveur web depuis un autre endroit que l'administrateur
      du serveur : utilisez la ligne de commande Unix en tant que root :
      vous verrez alors qu'il n'y a pas de variables d'environnement.
     </para>
    </note>
    <para>
     Changez simplement vos scripts pour lire les variables CGI, en utilisant
     le tableau superglobal <literal>$_SERVER</literal>. Si vous avez d'autres scripts qui
     utilisent encore <literal>$HTTP_HOST</literal> et compagnie,
     il est recommandé d'activer l'option <literal>register_globals</literal>
     dans le &php.ini; et de changer l'ordre des variables.
     IMPORTANT : supprimez le <literal>&quot;E&quot;</literal> dans cette option, car
     vous n'en avez pas besoin pour cet environnement.
     <programlisting>
<![CDATA[
variables_order = "GPCS"
register_globals = On
]]>
     </programlisting>
    </para>
   </sect2>
   
   <sect2 xml:id="install.unix.sun.specialpages">
    <title>Utilisation particulière pour les pages d'erreurs ou les
     listages spécifiques de dossier (&php; &gt;= 4.3.3)</title>
    <para>
     Vous pouvez utiliser &php; pour générer des pages d'erreurs de type
     <literal>"404 Not Found"</literal> ou apparentée. Ajoutez la ligne
     suivante dans le fichier <filename>obj.conf</filename> pour chaque
     page d'erreur que vous souhaitez remplacer :
     <programlisting>
<![CDATA[
Error fn="php4_execute" code=XXX script="/chemin/vers/script.php" [inikey=value inikey=value...]
]]>
     </programlisting>
     où <literal>XXX</literal> est le code d'erreur HTTP. Effacez toute autre
     directive <literal>Error</literal> qui pourrait interférer avec la vôtre.
     Si vous voulez utiliser une page pour toutes les erreurs qui existent,
     laissez le paramètre <literal>code</literal> vide. Votre script peut
     obtenir le code de statut HTTP dans la variable
     <literal>$_SERVER['ERROR_TYPE']</literal>.
    </para>
    <para>
     Une autre possibilité est de générer une liste de dossiers personnalisée.
     Créez simplement un script &php; qui affiche le contenu du dossier, et
     remplacez la ligne <literal>Service</literal> par défaut par
     <literal>type=&quot;magnus-internal/directory&quot;</literal>
     dans <filename>obj.conf</filename> avec ceci :
     <programlisting>
<![CDATA[
Service fn="php4_execute" type="magnus-internal/directory" script="/chemin/vers/script.php" [inikey=value inikey=value...]
]]>
     </programlisting>
     Pour ces deux points, l'URI originale et l'URI traduite sont
     dans les variables <literal>$_SERVER['PATH_INFO']</literal> et
     <literal>$_SERVER['PATH_TRANSLATED']</literal>.
    </para>
   </sect2>
   
   <sect2 xml:id="install.unix.sun.notes">
    <title>Note au sujet de <function>nsapi_virtual</function> et des requêtes (&php; &gt;= 4.3.3)</title>
    <para>
     Le module NSAPI supporte désormais la fonction <function>nsapi_virtual</function>
     (alias : <function>virtual</function>), pour réaliser des sous requêtes au serveur
     web, et inclure le résultat dans une page. Le problème est que cette fonction
     utilise une fonctionnalité non documentée de la bibliothèque
     NSAPI.
     Sous Unix, ce n'est pas un problème, car le module va automatiquement
     rechercher les fonctions nécessaires, et les utiliser si elles sont
     disponibles. Sinon, <function>nsapi_virtual</function> sera désactivée.
    </para>
    <note>
     <para>
      Soyez prévenu : le support de <function>nsapi_virtual</function> est EXPERIMENTAL !
     </para>
    </note>
   </sect2>   
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
