<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.1 Maintainer: yannick Status: ready -->
  <sect1 id="install.unix.commandline">
   <title>CGI et configurations en ligne de commande</title>
   <para>
    Par défaut, &php; est compilé en version CGI. Cela crée
    un interpréteur de commande qui peut être utilisé soit
    pour le traitement CGI, soit pour les scripts non relatifs au web. 
    Si &php; peut être incorporé au serveur web que vous utilisez 
    en tant que module, de manière générale c'est cette solution 
    que vous devriez adopter pour des raisons de performances. Cependant, la version CGI
    permet aux utilisateurs sous Apache de lancer des scripts &php; sous leurs UID
    respectives.
    Lisez attentivement le chapitre consacré à la
    <link linkend="security">sécurité</link> si vous souhaitez utiliser
    cette solution.
   </para>
   <para>
    Avec &php; 4.3.0, d'importants ajouts ont été faits à &php;.
    une nouvelle SAPI, appelée CLI, existe aussi et porte le même
    nom que la version CGI. Ce qui est installé en tant que
    <literal>{PREFIX}/bin/php</literal> dépend de votre ligne de
    configuration. Tout ceci est décrit en détails dans la partie
    du manuel intitulée <link linkend="features.commandline">Utiliser &php;
    en ligne de commande</link>. Veuillez vous y référer pour de
    plus amples informations.
   </para>
   
   <sect2 id="install.unix.commandline.testing">
    <title>Tests</title>
    <simpara>
     Si vous avez compilé &php; comme programme CGI, vous pouvez tester
     votre produit en tapant : <command>make test</command>.  C'est toujours
     une bonne chose de tester le résultat d'une compilation.
     Cela vous permet de repérer des problèmes entre &php; et votre
     plate-forme, plutôt que d'attendre qu'ils surviennent.
    </simpara>
   </sect2>

   <sect2 id="install.unix.commandline.benchmarking">
    <title>Performances</title>
    <simpara>
     Si vous avez compilé &php; 3 comme programme CGI, vous
     pouvez évaluer ses performances avec la commande
     <command>make bench</command>. Notez que si le
     &safemode; est activé
     (par défaut), vous risquez de voir l'évaluation
     s'arrêter une fois les 30 secondes réglementaires
     écoulées. En effet, la fonction
     <function>set_time_limit</function> ne peut pas être utilisée
     si le &safemode; fonctionne.
     Utilisez l'option <link linkend="ini.max-execution-time">max_execution_time</link>
     pour contrôler le temps d'exécution de vos scripts.
     <command>make bench</command> ignore le fichier de <link
     linkend="configuration.file">configuration file</link>.
    </simpara>
    <note>
     <simpara>
        <command>make bench</command> n'est disponible qu'en &php; 3.
     </simpara>
    </note>
   </sect2>
   
   <sect2 id="install.unix.commandline.using-variables">
    <title>Utiliser les variables prédéfinies</title>
    <simpara>
      Certaines <link linkend="reserved.variables.server">variables d'environnement</link> 
      fournies par les serveurs web ne sont pas disponibles dans les 
      <ulink url="&url.cgispec;">spécifications CGI/1.1</ulink> actuelles. 
      Seules les variables suivantes sont définies, et les
      autres doivent être considérées comme spécifiques aux serveurs
      web :  
      <varname>AUTH_TYPE</varname>, 
      <varname>CONTENT_LENGTH</varname>, 
      <varname>CONTENT_TYPE</varname>,
      <varname>GATEWAY_INTERFACE</varname>, 
      <varname>PATH_INFO</varname>, 
      <varname>PATH_TRANSLATED</varname>, 
      <varname>QUERY_STRING</varname>,
      <varname>REMOTE_ADDR</varname>, 
      <varname>REMOTE_HOST</varname>, 
      <varname>REMOTE_IDENT</varname>, 
      <varname>REMOTE_USER</varname>,
      <varname>REQUEST_METHOD</varname>, 
      <varname>SCRIPT_NAME</varname>, 
      <varname>SERVER_NAME</varname>, 
      <varname>SERVER_PORT</varname>,
      <varname>SERVER_PROTOCOL</varname> et 
      <varname>SERVER_SOFTWARE</varname>.
    </simpara>
   </sect2>
   
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
