<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.4 Maintainer: yannick Status: ready -->
   <sect1 id="install.windows.building">
    <title>Compilation des sources</title>
    <para>
     Avant de commencer, il est bon de se poser la question suivante :
     "Pourquoi la compilation de &php; sous Windows est si difficile?".
     Deux raisons viennent immédiatement à l'esprit :
    </para>
    <orderedlist>
     <listitem>
      <simpara>
       Windows ne dispose pas (encore) d'une grande communauté de
       développeurs qui partagent librement leurs sources.
       La conséquence directe est que les investissements
       nécessaires en infrastructure pour supporter ce
       type de développement n'ont pas été faits. Ce qui fait
       que le portage des utilitaires Unix a été la solution
       pour pallier ce manque. Ne soyez donc pas surpris de
       rencontrer cette parenté de temps en temps.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       La majorité des instructions que vous allez rencontrer sont
       du type : "faire et oublier". Alors, asseyez-vous confortablement
       et suivez aussi scrupuleusement que possible les instructions.
      </simpara>
     </listitem>
    </orderedlist>

    <sect2 id="install.windows.building.requirement">
     &reftitle.required;
     <para>
      Pour compiler l'exécutable &php;, vous avez besoin d'un 
      Microsoft Development Environment. Microsoft Visual C++ 6.0 est recommendé.
      Pour extraire le fichier téléchargé, vous avez besoin d'un outil
      de décompression (e.g.: Winzip). Si vous n'avez pas encore d'utilitaire
      de décompression, vous pouvez en télécharger un chez 
      <ulink url="&url.infozip;">InfoZip</ulink>.
     </para>
     <para>
      Avant de commencer, vous devez télécharger...
     </para>
      <itemizedlist>
       <listitem>
        <simpara>
         ..les win32 buildtools de &php;, sur 
         <ulink url="&url.win32.buildtools;">&url.win32.buildtools;</ulink>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        ..le code source du résolveur de noms DNS utilisé par &php;
        sur <ulink url="&url.win32.dnsresolver;">&url.win32.dnsresolver;</ulink>. 
        C'est un remplacement pour la bibliothèque <filename>resolv.lib</filename> 
        inclue dans <filename>win32build.zip</filename>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Si vous prévoyez de compiler &php; comme module pour Apache,
        vous aurez aussi besion des 
        <ulink url="&url.apache.source;">sources d'Apache</ulink>.
       </simpara>
      </listitem>
     </itemizedlist>
     <simpara>
      Finalement, vous aurez besoin des sources &php; elles-mêmes.
      Les dernières versions sont accessibles sur le serveur
      <ulink url="&url.php.anoncvs;">CVS anonyme</ulink>.
      Vous pouvez  aussi  télécharger
      <ulink url="&url.php.snapshots;">une version intermédiaire</ulink>
      ou <ulink url="&url.php.downloads;">l'archive des sources</ulink> la
      plus récente.
     </simpara>
    </sect2>

    <sect2 id="install.windows.building.install">
     <title>Compiler tout ensemble</title>
     <para>
      Après téléchargement des paquets nécessaires, vous devez les extraire
      au bon endroit.
      <itemizedlist>
       <listitem>
        <simpara>
         Créez un dossier où tous les fichiers seront placés après l'extraction,
         par exemple : <filename class="directory">C:\work</filename>.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Créez le dossier <filename>win32build</filename> dans votre dossier
         de travail (ici <filename class="directory">C:\work</filename>) et décompressez 
         <filename>win32build.zip</filename> dedans.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Créez le dossier <filename>bindlib_w32</filename> sous votre dossier
         de travail (ici <filename class="directory">C:\work</filename>)  
         et décompressez <filename>bindlib_w32.zip</filename> dedans.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Décompressez le code source de &php; dans votre dossier de travail
         (<filename class="directory">C:\work</filename>).
        </simpara>
       </listitem>
      </itemizedlist>
      Après avoir suivi ces instructions, vous devriez obtenir un dossier 
      qui ressemble à ceci : 
      <example>
       <title>Structure de la distribution source pour compilation sous Windows</title>
       <programlisting>
<![CDATA[

+--c:\work
|  |
|  +--bindlib_w32
|  |  |
|  |  +--arpa
|  |  |
|  |  +--conf
|  |  |
|  |  +--...
|  |
|  +--php-4.x.x
|  |  |
|  |  +--build
|  |  |
|  |  +--...
|  |  |
|  |  +--win32
|  |  |
|  |  +--...
|  |
|  +--win32build
|  |  |
|  |  +--bin
|  |  |
|  |  +--include
|  |  |
|  |  +--lib

]]>
       </programlisting>
      </example>
      Créez les dossiers <filename class="directory">c:\usr\local\lib</filename>. 
      Copiez le fichier <filename>bison.simple</filename> depuis 
      <filename class="directory">>c:\work\win32build\bin</filename> vers 
      <filename class="directory">c:\usr\local\lib</filename>.
     </para>
     <note>
      <simpara>
       Les utilisateurs de <ulink url="&url.cygwin;">Cygwin</ulink> peuvent omettre la
       dernière étable. Un environnement Cygwin correctement installé fournit les
       fichiers obligatoires de <filename>bison.simple</filename> et
       <filename>bison.exe</filename>.
      </simpara>
     </note>
    </sect2>

    <sect2 id="install.windows.building.configure">
     <title>Configuration de MVC ++</title>
      <para>
       L'étape suivante est la configuration de MVC ++ pour préparer la compiler.
       Lancez Microsoft Visual C++, et allez dans le menu
       <literal>"select Tools =&gt; Options"</literal>. Dans le dialogue, 
       sélectionnez l'onglet <literal>"directories"</literal>. 
       Modifiez les valeurs pour les éléments du menu 
       <literal>Executables</literal>, <literal>Includes</literal> 
       et <literal>Library</literal>. Votre configuration 
       doit alors ressembler à ceci :
       <itemizedlist>
        <listitem>
         <simpara>
          Fichiers exécutables : 
          <filename class="directory">c:\work\win32build\bin</filename>,
          Utilisateurs Cygwin : <filename>cygwin\bin</filename>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Fichiers d'en-têtes : 
          <filename class="directory">c:\work\win32build\include</filename>
         </simpara>
        </listitem>
         <listitem>
          <simpara>
          Fichiers bibliothèques : 
          <filename class="directory">c:\work\win32build\lib</filename>
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
    </sect2>

    <sect2 id="install.windows.building.resolvlib">
     <title>Compilation de resolv.lib</title>
      <para>
       Vous devez compiler la bibliothèque <filename>resolv.lib</filename>.
       Decidez si vous avez besoin des symboles de débogage
       (bindlib - Win32 Debug) ou non (bindlib - Win32 Release).
       Compilez la configuration ad hoc : 
       <itemizedlist>
        <listitem>
         <simpara>
          Pour les utilisateurs de l'interface graphique, lancez VC++, puis sélectionnez le
          menu "File =&gt; Open Workspace", naviguez dans le répertoire
          <filename class="directory">c:\work\bindlib_w32</filename> et 
          sélectionnez le fichier <filename>bindlib.dsw</filename>.  Puis sélectionnez
          "Build=&gt;Set Active Configuration" et sélectionnez la configuration
          voulue. Enfin, sélectionnez "Build=&gt;Rebuild All".
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Pour les utilisateurs en ligne de commande, assurez-vous que
          vous avez enregistré les variables d'environnement C++, ou que
          vous avez exécuté <command>vcvars.bat</command>. Exécutez
          maintenant l'une des commandes suivantes :
         </simpara>
         <itemizedlist>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Debug"</userinput>
           </simpara>
          </listitem>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Release"</userinput>
           </simpara>
          </listitem>
         </itemizedlist>
        </listitem>
       </itemizedlist>
       A ce stade, vous avez une bibliothèque <filename>resolv.lib</filename>
       utilisable, soit dans votre dossier 
       <filename class="directory">c:\work\bindlib_w32\Debug</filename>,
       soit sans le dossier <filename>Release</filename>. Copiez ce fichier
       dans votre dossier 
       <filename class="directory">c:\work\win32build\lib</filename>, en remplaçant
       le fichier du même nom.
      </para>
    </sect2>

    <sect2 id="install.windows.building.compile">
     <title>Compilation</title>
     <simpara>
      La meilleure façon de compiler est de commander par la version
      CGI/exécutable.
     </simpara>
     <itemizedlist>
      <listitem>
       <simpara>
        Pour les utilisateurs GUI, lancez VC++, puis sélectionnez le
        menu "File =&gt; Open Workspace" et sélectionnez 
        <filename>c:\work\php-4.x.x\win32\php4ts.dsw</filename>. 
        Ensuite,
        sélectionnez le menu "Build=&gt;Set Active Configuration",
        et sélectionnez la configuration voulue, soit
        <literal>php4ts - Win32 Debug_TS</literal> ou
        <literal>php4ts - Win32 Release_TS</literal>. 
        Finalement, sélectionnez le menu "Build=&gt;Rebuild All".
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Pour les utilisateurs en ligne de commande, assurez-vous que
        vous avez enregistré les variables d'environnement C++, ou que
        vous avez exécuté <command>vcvars.bat</command>. Exécutez
        maintenant l'une des commandes suivantes depuis le dossier 
        <filename class="directory">c:\work\php-4.x.x\win32</filename> :
       </simpara>
       <itemizedlist>
        <listitem>
         <simpara>
          <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Debug_TS"</userinput>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Release_TS"</userinput>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          A ce stade, vous avez un exécutable <filename>php.exe</filename>
          utilisable, soit dans votre dossier 
          <filename class="directory">c:\work\php-4.x.x.\Debug_TS</filename>
          soit sans le sous dossier <filename>Release_TS</filename>.
         </simpara>
        </listitem>
       </itemizedlist>
      </listitem>
     </itemizedlist>
     <simpara>
      Il est possible de faire des modifications particulières mineures
      en éditant le fichier <filename>main/config.win32.h.in</filename>.
      Par exemple, vous pouvez changer la localisation du &php.ini;, des extensions
      internes ainsi que la localisation par défaut de ces extensions.
     </simpara>
     <simpara>
      Ensuite, vous pouvez compiler la version CLI qui est conçue pour un
      usage en 
      <link linkend="features.commandline">ligne de commande</link> de &php;.
      Les étapes sont les mêmes que pour la compilation en mode CGI, hormis
      le fait que vous devez sélectionner <literal>php4ts_cli - Win32 Debug_TS</literal> ou
      <literal>php4ts_cli - Win32 Release_TS</literal> dans le fichier de projet.
      Après une compilation réussie, vous pouvez exécuter le fichier 
      <filename>php.exe</filename> dans l'un des dossiers 
      <filename class="directory">Release_TS\cli\</filename> ou
      <filename class="directory">Debug_TS\cli\</filename>.
     </simpara>
     <note>
      <simpara>
       Si vous voulez utiliser PEAR et l'installeur en ligne de commande,
       la version CLI-SAPI est obligatoire. Pour plus d'informations sur le projet 
       PEAR et l'installeur, lisez la documentation sur le site de
       <ulink url="&url.php.pear;manual/">PEAR</ulink>.
      </simpara>
     </note>
     <simpara>
      Afin de compiler le module SAPI (<filename>php4isapi.dll</filename>
      pour l'intégrer dans Microsoft IIS, vous devez utiliser la configuration
      <filename>php4isapi-whatever-config</filename> et compiler la DLL
      nécessaire.
     </simpara>
    </sect2>
   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
