<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.16 $ -->
<!-- EN-Revision: 1.19 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

   <sect1 id="install.windows.manual">
    <title>Installation manuelle sous Windows</title>

    <para>
     Ce guide d'installation vous aide à installer manuellement et configurer
     &php; avec un serveur web sous Microsoft Windows.
     Pour commencer, vous devrez télécharger la distribution binaire Zip sur la page
     <ulink url="&url.php.downloads;">&url.php.downloads;</ulink>.
    </para>

    <para>
     Bien qu'il existe beaucoup d'installeurs et que nous fournissons également un installeur
     pour Microsoft Windows, nous vous recommandons de prendre le temps de lire ceci
     et d'installer &php; vous-même, ce qui est la meilleur façon d'apprendre le système,
     et vous permettra d'installer des extensions &php; facilement lorsque vous
     en aurez besoin.
    </para>

    <note id="install.windows.manual.upgrade">
     <title>Mise à jour d'une ancienne version de &php;</title>
     <para>
      Les précédentes éditions de ce manuel vous suggéraient de déplacer les fichiers
      ini et les <acronym>DLLs</acronym> dans votre répertoire système
      (i.e dans le dossier <filename class="directory">C:\WINDOWS</filename>) et
      de ce fait, vous aviez des fichiers relatifs à &php; dans de multiples dossiers sur votre
      disque dur. Nous vous conseillons d'effacer tous ces fichiers (comme &php.ini;et les
      bibliothèques DLLs relatives à &php; du dossier système
      de Windows), avant de commencer l'installation d'une nouvelle version de &php;.
      Assurez-vous d'avoir effectué des
      sauvegardes de ces bibliothèques DLLs, sinon, vous risquez de corrompte la totalité de
      votre système. L'ancien fichier &php.ini; peut également vous aider à configurer
      votre nouvelle installation de &php;. Et, comme vous l'apprendrez bientôt,
      la méthode préférée pour installer &php; est de garder tous les fichiers relatifs à &php;
      dans un seul dossier et d'avoir le dossier de disponible dans votre variable système
      <literal>PATH</literal>.
     </para>
    </note>

    <note>
     <title>Pré-requis MDAC</title>
     <para>
      Si vous utilisez Microsoft <emphasis>Windows 9x/NT4</emphasis>, téléchargez
      la dernière version de Microsoft Data Access Components (MDAC) pour votre
      plate-forme. MDAC est disponible à <ulink url="&url.mdac;">&url.mdac;</ulink>.
      Cette condition existe car <link linkend="ref.uodbc">ODBC</link> est compilé
      dans les binaires distribués pour Windows.
     </para>
    </note>

    <para>
     Les étapes suivantes doivent être terminées sur toutes les installations
     avant d'exécuter une quelconque instruction spécifique au serveur.
    </para>
    <para>
     Décompressez la distribution dans un dossier de votre choix.
     Si vous installez &php; 4, extrayez le fichier zippé dans
     <filename class="directory">C:\</filename> car il va créer un
     dossier comme <filename>php-4.3.7-Win32</filename>. Si vous installez
     &php; 5, extrayez le fichier zippé dans <filename class="directory">C:\php</filename>
     car il ne va pas créer de dossier principal, comme en &php; 4.
     Vous pouvez choisir un autre dossier, mais soyez
     prudent d'éviter les espaces dans le nom du chemin au dossier
     (comme <filename class="directory">C:\Program Files\PHP</filename>),
     sinon, certains serveurs web crasheront.
    </para>
    <para>
     La structure du dossier que vous avez extrait depuis le fichier zippé est
     différente pour les versions 4 et 5 de &php; et ressemble à ceci :
    </para>
    <example>
     <title>Structure de la distribution Windows de &php; 4</title>
     <programlisting>
<![CDATA[

c:\php
   |
   +--cli
   |  |
   |  |-php.exe           -- Executable CLI - UNIQUEMENT pour la ligne de commande
   |
   +--dlls                -- DLL de support des extensions  --> dossier systeme Windows
   |  |
   |  |-expat.dll
   |  |
   |  |-fdftk.dll
   |  |
   |  |-...
   |
   +--extensions          -- extensions DLL pour PHP
   |  |
   |  |-php_bz2.dll
   |  |
   |  |-php_cpdf.dll
   |  |
   |  |-..
   |
   +--mibs                -- fichiers de support de SNMP
   |
   +--openssl             -- fichiers de support de Openssl
   |
   +--pdf-related         -- fichiers de support de PDF
   |
   +--sapi                -- DLL SAPI
   |  |
   |  |-php4apache.dll
   |  |
   |  |-php4apache2.dll
   |  |
   |  |-..
   |
   +--PEAR                -- copie initiale de PEAR
   |
   |
   |-go-pear.bat          -- script de configuration de PEAR
   |
   |-..
   |
   |-php.exe              -- exécutable CGI
   |
   |-..
   |
   |-php.ini-dist         -- paramètres par défaut du php.ini
   |
   |-php.ini-recommended  -- paramètres recommandés du php.ini
   |
   |-php4ts.dll           -- DLL principale
   |
   |-...

]]>
     </programlisting>
    </example>
    <para>
    Ou :
    </para>
    <example>
     <title>Structure du paquet &php; 5</title>
     <programlisting>
<![CDATA[

c:\php
   |
   +--dev
   |  |
   |  |-php5ts.lib
   |
   +--ext                 -- extensions DLL pour PHP
   |  |
   |  |-php_bz2.dll
   |  |
   |  |-php_cpdf.dll
   |  |
   |  |-..
   |
   +--extras
   |  |
   |  +--mibs             -- fichiers de support de SNMP
   |  |
   |  +--openssl          -- fichiers de support de Openssl
   |  |
   |  +--pdf-related      -- fichiers de support de PDF
   |  |
   |  |-mime.magic
   |
   +--pear                -- copie initiale de PEAR
   |
   |
   |-go-pear.bat          -- script de configuration de PEAR
   |
   |-fdftk.dll
   |
   |-..
   |
   |-php-cgi.exe          -- exécutable CGI
   |
   |-php-win.exe          -- permet d'exécuter des scripts sans ouvrir un fenêtre de prompt
   |
   |-php.exe              -- exécutable CLI - UNIQUEMENT pour du script en ligne de commande
   |
   |-..
   |
   |-php.ini-dist         -- paramètres par défaut du php.ini
   |
   |-php.ini-recommended  -- paramètres recommandés du php.ini
   |
   |-php5activescript.dll
   |
   |-php5apache.dll
   |
   |-php5apache2.dll
   |
   |-..
   |
   |-php5ts.dll           -- DLL principale
   |
   |-...

]]>
     </programlisting>
    </example>
    <para>
     Notez les différences et les similitudes. &php; 4 et &php; 5
     ont tous les deux un exécutable <acronym>CGI</acronym>,
     un exéctuable <acronym>CLI</acronym> et des modules serveurs,
     mais qu'ils sont situés dans des dossiers différents et/ou ont des noms différents.
     En &php; 4, les modules serveurs se trouvent dans le dossier
     <filename class="directory">sapi</filename>,
     tandis qu'ils se trouvent dans le dossier principal en &php; 5.
     Le support des DLLs pour les extensions de &php; sont également dans le dossier
     principal en &php; 5. Observez l'arborescence pour connaître l'emplacement
     des exécutables CGI et CLI.
    </para>
    <note>
     <para>
      En &php; 4, vous devez déplacer tous les fichiers se trouvant dans les dossiers
      <filename class="directory">dll</filename> et
      <filename class="directory">sapi</filename> dans le dossier principal
      (e.g. <filename class="directory">C:\php</filename>).
     </para>
    </note>
    <para>
     Voici une liste de modules serveur avec la correspondance entre &php; 4 et &php; 5.
     <itemizedlist>
      <listitem><para>
       <filename>sapi/php4activescript.dll (php5activescript.dll)</filename>
       - <link linkend="install.windows.activescript">moteur ActiveScript</link>
       vous permet d'intégrer &php; dans vos applications Windows.
      </para></listitem>
      <listitem><para>
       <filename>sapi/php4apache.dll (php5apache.dll)</filename> - module Apache 1.3.x.
      </para></listitem>
      <listitem><para>
       <filename>sapi/php4apache2.dll (php5apache2.dll)</filename> - module Apache 2.0.x.
      </para></listitem>
      <listitem><para>
       <filename>sapi/php4isapi.dll (php5isapi.dll)</filename> -
       module ISAPI pour les serveurs  ISAPI compliant comme IIS 4.0/PWS 4.0 ou autres.
      </para></listitem>
      <listitem><para>
       <filename>sapi/php4nsapi.dll (php5nsapi.dll)</filename> -
       module serveur Sun/iPlanet/Netscape.
      </para></listitem>
      <listitem><para>
       <filename>sapi/php4pi3web.dll (pas d'équivalent en &php; 5)</filename> -
       module serveur Pi3Web.
      </para></listitem>
       <!-- TODO: servlets? -->
     </itemizedlist>
     </para>
     <para>
      Les modules serveurs permettent des gains de performances et quelques
      fonctionnalités supplémentaires par rapport à la version CGI.
      La version CLI est destinée à être utilisée pour les scripts en ligne de commande.
      Plus d'informations sur la version CLI est disponible dans le chapitre à propos
      "<link linkend="features.commandline">utilisez &php; en ligne de
      commande</link>".
     </para>
     <warning>
      <simpara>
       Les modules SAPI ont été significativement améliorés dans la version
       4.1, mais vous pourrez rencontrer des erreurs avec le serveur ou
       d'autres modules (tels ASP), dans les systèmes plus anciens.
      </simpara>
     </warning>
     <para>
      Les binaires CGI et CLI et les modules des serveurs web requierent tous la bibliothèque
      <filename>php4ts.dll</filename> (<filename>php5ts.dll</filename>).
      Vous devez vous assurer que ce fichier peut être trouvé par votre installation
      de &php;. Le dossier où ce fichier sera recherché suit ces règles :
      <itemizedlist>
      <listitem>
       <para>
        Le même dossier depuis lequel le fichier <filename>php.exe</filename>
        est appelé ou, dans le cas où vous utilisez le module SAPI, le dossier du serveur web
        (e.g. <filename>C:\Program Files\Apache Group\Apache2\bin</filename>).
       </para>
      </listitem>
      <listitem>
       <para>
        N'importe quel dossier de votre variable d'environnement
        <varname>PATH</varname>.
       </para>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     Pour rendre le fichier <filename>php4ts.dll</filename> /
     <filename>php5ts.dll</filename> disponible, vous avez trois options :
     copiez le fichier dans le dossier système de Windwos, copiez le fichier
     dans le dossier du serveur web ou ajoutez le dossier PHP,
     <filename class="directory">C:\php</filename> à votre variable 
     d'environnement <varname>PATH</varname>. Pour une meilleur maintenance,
     nous vous conseillons de suivre la dernière option et d'ajoutez le dossier
     <filename class="directory">C:\php</filename> à votre variable
     d'environnement <varname>PATH</varname>, cela rendera plus facile la mise à
     jour de &php; dans le futur. Lisez
     l'<link linkend="faq.installation.addtopath">entrée correspondante de la
     FAQ</link> pour avoir plus d'informations sur la façon d'ajouter votre
     dossier &php; à la variable d'environnement <varname>PATH</varname>
     (et donc, n'oubliez pas de redémarrer votre ordinateur, une simple fermeture
     de session ne suffisant pas).
    </para>
    <para>
     L'étape suivante est de définir une configuration valide pour &php;, 
     &php.ini;. Il y a deux fichiers ini distribués avec lepaquet zip,
     <filename>php.ini-dist</filename> et
     <filename>php.ini-recommended</filename>. Nous vous recommandons
     vivement d'utiliser le fichier <filename>php.ini-recommended</filename>,
     car nous avons optimisé les options par défaut dans ce fichier pour
     rendre &php; plus performant, plus sécurisé. Lisez ce document très
     attentivement car il contient des modifications depuis
     <filename>php.ini-dist</filename> qui affectent sérieusement votre
     configuration. Par exemple,
     <link linkend="ini.display-errors">display_errors</link> est à
     <literal>off</literal> et 
     <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> est aussi à
     <literal>off</literal>. En complément de cette lecture, étudiez <link
     linkend="configuration.file">la configuration du fichier ini</link> et
     définissez chacun des éléments manuellement. Si vous voulez avoir la
     meilleure sécurité, alors, c'est la seule façon pour vous, bien que &php;
     fonctionne très bien avec le fichier ini par défaut.
     Copiez le fichier ini de votre choix dans un dossier où &php; sera capable
     de le trouver et renommez le en &php.ini;. &php; recherche un fichier
     &php.ini; dans les endroits décrits dans la section <xref linkend="configuration.file"/>.
    </para>
    <para>
     Si vous utilisez Apache 2, l'option la plus simple est d'utiliser
     la directive PHPIniDir (lisez la page traitant de
     l'<link linkend="install.windows.apache2">installation de &php; avec Apache
     2</link>)
     sinon, la meilleure option est de définir la variable d'environnement
     <varname>PHPRC</varname>. Ce processus est expliqué dans
     cette <link linkend="faq.installation.phprc">entrée de la FAQ</link>.
    </para>
    <note>
     <simpara>
      Si vous utilisez NTFS sous Windows NT, 2000, XP ou 2003, assurez-vous que
      l'utilisateur faisant fonctionner le serveur web a les permissions en
      lecture sur votre fichier &php.ini; (e.g. rendez le lisible pour tout le
      monde).
     </simpara>
    </note>
    <para>
     Les étapes suivantes sont optionnelles :
     <itemizedlist>
      <listitem>
       <para>
        Éditez votre nouveau fichier &php.ini;.
        Si vous avez prévu d'utiliser
        <link linkend="install.windows.omnihttpd">OmniHTTPd</link>,
        ne suivez pas l'étape suivante.
        Définissez le paramètre <link linkend="ini.doc-root">doc_root</link> de façon
        à ce qu'il pointe vers le document_root de votre serveur web.
        Par exemple :
        <informalexample>
          <programlisting role="ini">
<![CDATA[
doc_root = c:\inetpub\wwwroot // pour IIS/PWS

doc_root = c:\apache\htdocs // pour Apache
]]>
         </programlisting>
        </informalexample>
       </para>
      </listitem>
      <listitem>
       <simpara>
        Choisissez les extensions que vous voulez charger au démarrage de &php;.
        Lisez la section sur les extensions
        <link linkend="install.windows.extensions">Windows</link>, sur la manière
        de les configurer et celles qui sont déjà intégrées à &php;.
        Notez que sur les nouvells installations, il est préférable de faire fonctionner
        &php; et de le tester avec aucune extension avant d'en activer dans votre
        fichier &php.ini;.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Sous PWS et IIS, vous pouvez définir le paramètre de configuration
        <link linkend="ini.browscap">browscap</link> pour pointer vers
        <filename>c:\windows\system\inetsrv\browscap.ini</filename>
        sous Windows 9x/Me,
        <filename>c:\winnt\system32\inetsrv\browscap.ini</filename>
        sous NT/2000 et
        <filename>c:\windows\system32\inetsrv\browscap.ini</filename>
        sous XP. Pour un fichier <filename>browscap.ini</filename> à jour, lisez
        cette <link linkend="faq.obtaining.browscap">entrée de la FAQ</link>.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     &php; est maintenant installé sur votre système.
     L'étape suivante est le choix du serveur web et de le configurer
     pour y faire fonctionner &php;. Choisissez un serveur web parmis ceux supportés.
    </para>
   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
