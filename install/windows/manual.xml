<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.8 Maintainer: yannick Status: ready -->
   <sect1 id="install.windows.manual">
    <title>Installation manuelle sous Windows</title>
    
    <para>
     Ce guide d'installation vous aide à installer manuellement et configurer
     &php; sur votre serveur web Windows. 
     Vous devrez télécharger la distribution binaire Zip sur la page
     <ulink url="&url.php.downloads;">&url.php.downloads;</ulink>.
    </para>
    
    <para>
     Bien qu'il existe des installeurs et que nous fournissons également un installeur
     pour Microsoft Windows, nous vous recommandons de prendre le temps de lire ceci
     et d'installer &php; vous-même, ce qui est la meilleur façon d'apprendre le système,
     et vous permettera d'installer des extensions &php; facilement lorsque vous
     en aurez besoin.
    </para>
    
    <note id="install.windows.manual.upgrade">
     <title>Mise à jour d'une ancienne version de &php;</title>
     <para>
      Les précédentes éditions de ce manuel vous suggéraient de déplacer les fichiers
      ini et les DLLs en dehors de vos répertoires et de ce fait, vous aviez des fichiers
      relatifs à &php; dans de multiples dossiers sur votre disque dur. Nous vous conseillons
      d'effacer tous ces fichiers (php.ini depuis le répertoire système de Windows, 
      les bibliothèques DLLs relatives à &php; depuis le répertoire système de Windows),
      avant de commencer l'installation. Assurez vous que vous avez effectuer des 
      sauvegardes de ces bibliothèques DLLs, sinon, vous risquez de corrompte la totalité de 
      votre système. L'ancien fichier ini peut également vous aider à configurer
      votre nouvelle installation de &php;.
     </para>
    </note>
    
    <note>
     <title>Pré-requis MDAC</title>
     <para>
      Si vous utilisez Microsoft <emphasis>Windows 9x/NT4</emphasis>, téléchargez
      la dernière version de Microsoft Data Access Components (MDAC) pour votre
      plate-forme. MDAC est disponible à <ulink url="&url.mdac;">&url.mdac;</ulink>.
     </para>
    </note>
    
    <para>
     Voici les différentes étapes d'installation avant les
     étapes spécifiques au serveur.
     <itemizedlist>
      <listitem>
       <para>
        Extrayez la distribution dans un dossier de votre choix,
        par exemple <filename class="directory">c:\</filename>. L'archive zip devient un
        dossier appelé <filename>php-4.3.7-Win32</filename> qui est supposé être
        renommé en <filename>php</filename>. Par sourci de clarté, nous supposerons
        alors que vous avez placé votre distribution dans le dossier 
        <filename class="directory">C:\php</filename>. 
        Vous pouvez choisir un autre dossier, mais vous
        serez prudents d'éviter les espaces dans le nom du chemin au dossier 
        (par exemple <filename class="directory">C:\program files\php</filename> 
        n'est pas une bonne idée), 
        car certains serveurs web vont crasher sinon. La structure du dossier que vous
        avez extrait ressemble à ceci :
       </para>
       <example>
        <title>Structure de la distribution Windows de &php; 4</title>
        <programlisting>
<![CDATA[

c:\php
   |
   +--cli
   |  |
   |  |-php.exe           -- Executable CLI - UNIQUEMENT pour la ligne de commande
   |
   +--dlls                -- DLL de support des extensions  --> dossier systeme Windows
   |  |
   |  |-expat.dll
   |  |
   |  |-fdftk.dll
   |  |
   |  |-...
   |
   +--extensions          -- extensions DLL pour PHP
   |  |
   |  |-php_bz2.dll
   |  |
   |  |-php_cpdf.dll
   |  |
   |  |-..
   |
   +--mibs                -- fichiers de support de SNMP
   |
   +--openssl             -- fichiers de support de Openssl
   |
   +--pdf-related         -- fichiers de support de PDF
   |
   +--sapi                -- DLL SAPI
   |  |
   |  |-php4activescript.dll
   |  |
   |  |-php4apache.dll
   |  |
   |  |-php4apache2.dll
   |  |
   |  |-..
   |
   +--PEAR                -- copie initiale de PEAR
   |
   |
   |-go-pear.bat          -- script de configuration de PEAR
   |
   |-..
   |
   |-php.exe              -- exécutable CGI
   |
   |-..
   |
   |-php.ini-dist         -- paramètres par défaut du php.ini
   |
   |-php.ini-recommended  -- paramètres recommandés du php.ini
   | 
   |-php4ts.dll           -- DLL principale
   | 
   |-...

]]>
        </programlisting>
       </example> 
       <para>
        Dans le cas où vous avez téléchargé et extrait &php; 5, ce dossier aura une structure
        légèrement différente :
       </para>
       <example>
        <title>Structure du paquet &php; 5</title>
        <programlisting>
<![CDATA[

c:\php
   |
   +--dev
   |  |
   |  |-php5ts.lib
   |
   +--ext                 -- extension DLLs pour PHP
   |  |
   |  |-php_bz2.dll
   |  |
   |  |-php_cpdf.dll
   |  |
   |  |-..
   |
   +--extras
   |  |
   |  +--mibs             -- fichiers de support de SNMP
   |  |
   |  +--openssl          -- fichiers de support de Openssl
   |  |
   |  +--pdf-related      -- fichiers de support de PDF
   |  |
   |  |-mime.magic
   |
   +--pear                -- copie initiale de PEAR
   |
   |
   |-go-pear.bat          -- script de configuration de PEAR
   |
   |-fdftk.dll
   |
   |-..
   |
   |-php-cgi.exe          -- exécutable CGI
   |
   |-php-win.exe          -- permet d'exécuter des scripts sans ouvrir un fenêtre de prompt
   |
   |-php.exe              -- exécutable CLI - UNIQUEMENT pour du script en ligne de commande
   |
   |-..
   |
   |-php.ini-dist         -- paramètres par défaut du php.ini
   |
   |-php.ini-recommended  -- paramètres recommandés du php.ini
   | 
   |-php5activescript.dll
   | 
   |-..
   |
   |-php5ts.dll           -- DLL principale
   | 
   |-...

]]>
        </programlisting>
       </example> 
    
       <para>
        Notez que &php; 4 t &php; 5 pour Windows ont tous les deux un exécutable CGI,
        un exéctuable CLI et des modules serveurs, mais qu'ils sont situés dans des dossiers
        différents. En &php; 4, les modules serveurs se trouvent dans le dossier SAPI,
        tandis qu'ils se trouvent dans le répertoire PHP en &php; 5.
        Le support des DLLs pour les extensions de &php; sont également dans le dossier
        principal en &php; 5. Observez l'arborescence pour connaître l'emplacement
        des exécutables CGI et CLI.
       </para>
       <para>
        Voici une liste de modules serveur avec la correspondance entre &php; 4 et &php; 5.
        <simplelist>
         <member>
          <filename>sapi/php4activescript.dll (php5activescript.dll)</filename> -
          <link linkend="install.windows.activescript">moteur ActiveScript</link>,
          permet d'intégrer &php; dans vos applications Windows.
         </member>
         <member>
          <filename>sapi/php4apache.dll (php5apache.dll)</filename> - 
          module Apache 1.3.x.
         </member>
         <member>
          <filename>sapi/php4apache2.dll (php5apache2.dll)</filename> - 
          module Apache 2.0.x.
         </member>
         <member>
          <filename>sapi/php4isapi.dll (php5isapi.dll)</filename> - 
          module ISAPI pour les serveurs  ISAPI compliant comme IIS 4.0/PWS 4.0 ou autres.
         </member>
         <member>
          <filename>sapi/php4nsapi.dll (php5nsapi.dll)</filename> - 
          module serveur Sun/iPlanet/Netscape.
         </member>
         <member>
          <filename>sapi/php4pi3web.dll (aucun équivalent en &php; 5)</filename> - 
          module serveur Pi3Web.
         </member>
         <!-- TODO: servlets? -->
        </simplelist>
       </para>
       <para>
        Les modules serveurs permettent des gains de performances et quelques 
        fonctionnalités supplémentaires par rapport à la version CGI.
        La version CLI est destinée à être utilisée pour les scripts en ligne de commande.
        Plus d'informations sur la version CLI est disponible dans le chapitre à propos
        "<link linkend="features.commandline">utilisez &php; en ligne de 
        commande</link>".
       </para>
       <warning>
        <simpara>
         Les modules SAPI ont été significativement
         améliorés dans la version
         4.1, mais vous pourrez rencontrer des erreurs avec le serveur ou
         d'autres modules (tels ASP), dans les systèmes plus anciens.
        </simpara>
       </warning>

       <para>
        Les binaires CGI et CLI et les modules des serveurs web requierent tous la bibliothèque
        <filename>php4ts.dll</filename> (<filename>php5ts.dll</filename>).
        Vous devez vous assurer que ce fichier peut être trouvé par votre installation
        de &php;. Le dossier où ce fichier sera recherché suivit ces règles :
        <simplelist>
         <member>
          Le même dossier où se trouve le fichier <filename>php.exe</filename>.
          Dans ce cas, vous utilisez pour le module SAPI le même dossier d'où sont
          chargés les bibliothèques DLLs pour votre serveur web
          (e.g. <filename>php4apache.dll</filename>).
         </member>
         <member>
          N'importe quel dossier de votre <varname>PATH</varname> de votre 
          environnement de variables Windows.
         </member>
        </simplelist>
       </para>
       
<!--
 WARNING: the instructions presented below still need serious revision!!!!!!!
 Refer to http://lxr.php.net/source/php-src/main/php_ini.c#262 for more information
 on how the ini file is located on the system. This needs to be integrated to the
 ini part too!
 -->
       
       <para>
        La meilleur façon est de rendre valide <filename>php4ts.dll</filename>
        au regard de l'interface (CGI ou module SAPI) que vous souhaitez utiliser.
        Pour faire celà, copiez ce fichier DLL dans un répertoire présent dans votre 
        PATH windows. La meilleur place est votre dossier système :
        <simplelist>
         <member>
          <filename class="directory">C:\Windows\System</filename> 
          pour Windows 9x/ME
         </member>
         <member>
          <filename class="directory">C:\WINNT\System32</filename> pour Windows 
          NT/2000 ou
          <filename class="directory">C:\WINNT40\System32</filename> 
          pour les serveurs NT/2000 
         </member>
         <member>
          <filename class="directory">C:\Windows\System32</filename> pour Windows XP
         </member>
        </simplelist>
        Si vous souhaitez utiliser le module SAPI depuis le dossier <filename 
        class="directory">c:\php\sapi</filename> et quevous ne voulez pas copier les 
        bibliothèques DLLs dans votre dossier système, vous pouvez simplement copier
        le fichier <filename>php4ts.dll</filename> dans le dossier SAPI de votre paquet
        zip, <filename class="directory">c:\php\sapi</filename>.
       </para>
      </listitem>
      <listitem>
       <para>
        L'étape suivante est de définir une configuration valide pour &php;, &php.ini;.
        Il y a deux fichiers ini distribués avec lepaquet zip, 
        <filename>php.ini-dist</filename> et
        <filename>php.ini-recommended</filename>. Nous vous recommandons
        vivement d'utiliser le fichier <filename>php.ini-recommended</filename>,
        car nous avons optimisé les options par défaut dans ce fichier pour
        rendre &php; plus performant, plus sécurisé. Lisez attentivement ce fichier où chaque option est très bien commentée et lisez également les
        <link linkend="configuration.file">options ini</link> et définissez tous les éléments
        manuellement. Si vous voulez avoir une sécurité optimale, alors ce sera la meilleur
        manière d'y arriver bien que &php; fonctionne très bien avec ces options par défaut.
        Copiez le fichier ini choisi dans un dossier où &php; sera capable de le trouver et 
        renommez le en &php.ini;. Par défaut, &php; recherche &php.ini; dans votre dossier
        Windows :
        <simplelist>
         <member>
          Sous Windows 9x/ME/XP, copiez le fichier ini choisi dans votre 
          dossier <filename> %WINDIR%</filename>, qui est, typiquement, 
          <filename class="directory">C:\Windows</filename>.
         </member>
         <member>
          Sous Windows NT/2000, copiez le fichier ini choisi dans votre dossier
          <filename>%WINDIR%</filename> ou 
          <filename>%SYSTEMROOT%</filename>, qui est, typiquement,
          <filename class="directory">C:\WINNT</filename> ou
          <filename class="directory">C:\WINNT40</filename> pour les serveurs
          NT/2000.
         </member>
        </simplelist>   
       </para>
      </listitem>
      <listitem>
       <simpara>
        Si vous utilisez NTFS sous Windows NT, 2000 ou XP, assurez vous que l'utilisateur
        faisant tourner le serveur web a les permissions sur &php.ini; (e.g. rendez le lisible
        par tous).
       </simpara>
      </listitem>     
     </itemizedlist>
    </para>
    <para>
     Les étapes suivantes sont optionnelles.
     <itemizedlist>      
      <listitem>
       <para>
        Editez votre nouveau fichier &php.ini;.
        Si vous avez prévu d'utiliser 
        <link linkend="install.windows.omnihttpd">OmniHTTPd</link>,
        ne suivez pas l'étape suivante.
        Définissez le paramètre <link linkend="ini.doc-root">doc_root</link> de façon
        à ce qu'il pointe vers le document_root de votre serveur web.
        Par exemple :
        <informalexample>
          <programlisting role="ini">
<![CDATA[
doc_root = c:\inetpub        // pour IIS/PWS

doc_root = c:\apache\htdocs // pour Apache
]]>
         </programlisting>
        </informalexample>
       </para>
      </listitem>
      <listitem>
       <simpara>
        Choisissez quels extensions vous voulez charger au démarrage de &php;.
        Lisez la section sur les extensions 
        <link linkend="install.windows.extensions">Windows</link>, sur la manière
        de les configurer et celles qui sont déjà intégrées à &php;.
        Notez que sur les nouvells installations, il est préférable de faire fonctionner
        &php; et de le tester avec aucune extension avant d'en activer dans votre
        fichier &php.ini;.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Sous PWS et IIS, vous pouvez définir le paramètre de configuration
        <link linkend="ini.browscap">browscap</link> pour pointer vers
        <filename>c:\windows\system\inetsrv\browscap.ini</filename> 
        sous Windows 9x/Me, 
        <filename>c:\winnt\system32\inetsrv\browscap.ini</filename>
        sous NT/2000 et 
        <filename>c:\windows\system32\inetsrv\browscap.ini</filename>
        sous XP.
       </simpara>
      </listitem>
     </itemizedlist>
    </para> 
    <para>
     En suivant ces instructions, vous avez appris à paramétrer basiquement &php;
     sous Windows. L'étape suivante est le choix du serveur web et de le configurer
     pour y faire fonctionner &php;. Choisissez un serveur web prmis ceux supportés.
    </para>
   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
