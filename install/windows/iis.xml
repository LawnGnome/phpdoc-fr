<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.16 $ -->
<!-- EN-Revision: 1.20 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<sect1 xml:id="install.windows.iis" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Installation avec les serveurs IIS/PWS</title>
 <para>
  Cette section contient des notes sur l'installation de &php; avec IIS (
   Microsoft Internet Information Server).
 </para>

 &warn.install.cgi;

 <sect2 xml:id="install.windows.iis.general">
  <title>Considérations générales pour toutes les installations de &php; avec IIS ou PWS</title>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>
      Tout d'abord, lisez les <link linkend="install.windows.manual">
      instructions d'installation du manuel</link>. Ne négligez pas
      cette étape, elle fournit des informations essentielles sur
      l'installation de &php; sur Windows.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Les utilisateurs de CGI doivent définir la directive &php;
      <link linkend="ini.cgi.force-redirect">cgi.force_redirect</link>
      à &zero; dans le &php.ini;. Lisez la
      <link linkend="faq.installation.forceredirect">faq sur 
      cgi.force_redirect</link> qui vous apprendra des détails importants. 
      De même, les utilisateurs de CGI peuvent vouloir définir la directive
      <link linkend="ini.cgi.redirect-status-env">cgi.redirect_status_env</link>. 
      Lorsque vous utilisez les directives, assurez-vous qu'elles ne soient pas
      commentées dans le &php.ini;.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Le CGI de &php; 4 est nommé <filename>php.exe</filename> 
      tandis qu'en &php; 5, il est nommé <filename>php-cgi.exe</filename>. 
      En &php; 5, <filename>php.exe</filename> est le CLI et non le CGI.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Modifiez la variable d'environnement <literal>PATH</literal> de Windows
      afin d'inclure le dossier de &php;. De cette façon, les fichiers DLLs de &php;,
      et les exécutables de &php; peuvent tous résider dans le dossier de &php;
      sans être dans le dossier système de Windows. Pour plus de détails, lisez la
      FAQ sur la
      <link linkend="faq.installation.addtopath">façon de définir le PATH</link>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      L'utilisateur IIS (habituellement IUSR_MACHINENAME) a besoin de permission
      pour lire les différents fichiers et dossiers, comme le &php.ini;, docroot
      ainsi que le dossier temporaire hébergeant les sessions.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Assurez-vous que les directives &php; 
      <link linkend="ini.extension-dir">extension_dir</link> 
      et <link linkend="ini.doc-root">doc_root</link> soient correctement
      définies dans le &php.ini;. Ces directives dépendent du système sur lequel
      &php; est installé. En &php; 4, extension_dir vaut 
      <filename>extensions</filename> tandis qu'en &php; 5, il vaut
      <filename>ext</filename>. Donc, un exemple de valeur pour extensions_dir
      en &php; 5 est <filename>"c:\php\ext"</filename> et un exemple 
      de valeur pour doc_root pour IIS est 
      <filename>"c:\Inetpub\wwwroot"</filename>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Les fichiers d'extensions DLL de &php;, comme <filename>php_mysql.dll</filename> et
      <filename>php_curl.dll</filename>, peuvent être trouvés dans le paquet compressé
      de &php; (et non dans l'installeur de &php;). En &php; 5, beaucoup d'extensions
      font parties de PECL et peuvent être téléchargées dans le paquet "Collection de
      modules PECL". Les fichiers comme <filename>php_zip.dll</filename> et
      <filename>php_ssh2.dll</filename>.
      <link xlink:href="&url.php.downloads;">Téléchargez les fichiers &php; ici</link>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Lors de la définition de l'exécutable, la case "Vérifier que ce fichier existe"
      doit également être cochée. Pour un faible coût au niveau performance, IIS (ou PWS)
      vérifiera que le fichier de script existe et proposera l'identification avant
      d'appeler &php;. Cela signifie que le serveur web fourniera des messages
      d'erreur sensiblement identiques à des erreurs 404 au lieu des erreurs CGI
      stipulant que &php; n'a pu afficher aucune donnée.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>
 
 <sect2 xml:id="install.windows.iis.iis4">
  <title>Windows NT/200x/XP et IIS 4 ou plus récent</title>
  
  <simpara>
   &php; peut être installé en tant que binaire CGI ou en tant
   que module SAPI. Dans tous les cas, vous devez démarrer
   la console d'administration Microsoft (qui doit apparaître comme
   'Internet Services Manager', soit depuis le menu des options
   Pack de votre Windows NT 4.0 ou le menu 'Control
   Panel=&gt;Administrative Tools' sous Windows 2000/XP). 
   Faites alors un clic droit sur le noeud du serveur web (ceci
   doit apparaître comme 'Default Web Server'), et sélectionnez 'Properties'.
  </simpara>
  
  <para>
   Si vous voulez utiliser le binaire CGI, suivez ce qui suit :
   <itemizedlist>
    <listitem>
     <simpara>
      Sous 'Home Directory', 'Virtual Directory', ou 'Directory', faites ce qui suit :
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Modifier les permissions d'exécution en 'Scripts only'
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Cliquez sur le boutton 'Configuration', et choisissez l'onglet
      'Application Mappings'. Cliquez sur 'Add' et définissez le chemin vers l'exécutable
      vers le fichier CGI approprié.
      Un exemple de valeur pour &php; 5 : <filename>C:\php\php-cgi.exe</filename>.
      Ajoutez <literal>.php</literal> en tant qu'extension. Laissez 'Method 
      exclusions' vide, et cochez la case 'Script engine' checkbox. 
      Maintenant, cliquez sur Ok plusieurs fois.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Définissez la sécurité appropriée. (Ceci est fait dans 'Internet
      Service Manager'), et, si votre serveur NT utilise le système de fichiers
      NTFS, ajoutez le droit à l'exécution pour I_USR_ pour le dossier
      qui contient <filename>php.exe</filename> / <filename>php-cgi.exe</filename>.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   Pour utiliser le module SAPI, faites ce qui suit :
   <itemizedlist>
    <listitem>
     <simpara>
      Si vous ne souhaitez pas faire d'identification HTTP en utilisant &php;,
      vous pouvez (et vous devez) ignorer cette étape. Dans les filtres ISAPI,
      ajoutez un nouveau filtre ISAPI. Utilisez &php; en tant que nom de filtre,
      et ajoutez un chemin vers les fichiers <filename>php4isapi.dll</filename> /
      <filename>php5isapi.dll</filename>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Sous 'Home Directory', 'Virtual Directory', ou 'Directory', faites ce qui suit :
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Modifiez les permissions d'exécution en 'Scripts only'
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Cliquez sur le bouton "Configuration" et
      ajoutez une nouvelle entrée dans "Application Mappings". 
      Cliquez sur 'Add' et définissez le chemin d'exécution vers la bibliothèque
      DLL ISAPI appropriée. Un exemple de valeur pour &php; 5 est : 
      <filename>C:\php\php5isapi.dll</filename>.
      Ajoutez <literal>.php</literal> en tant qu'extension. Laissez 'Method 
      exclusions' vide, et cochez la case 'Script engine'. 
      Maintenant, cliquez que Ok plusieurs fois.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Arrêtez totalement IIS (<literal>NET STOP iisadmin</literal>)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Démarrez IIS (<literal>NET START w3svc</literal>)
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   Avec IIS 6 (2003 serveur), ouvrez le gestionnaire IIS, allez aux extensions de 
   services web, choisissez "Add a new Web service extension", entrez-y un nom comme
   &php;, cliquez sur le boutton 'Add' et pour la valeur, choisissez soit le
   fichier ISAPI (<filename>php4isapi.dll</filename> ou 
   <filename>php5isapi.dll</filename>), soit le fichier CGI (<filename>php.exe</filename> ou
   <filename>php-cgi.exe</filename>), puis cochez "Set extension status to 
   Allowed" et validez en cliquant sur OK.
  </para>
  <para>
   Afin d'utiliser <filename>index.php</filename> en tant que page par défaut,
   faites ce qui suit : depuis l'onglet 'Documents', choisissez 'Add'.
   Entrez-y <filename>index.php</filename> et validez en cliquant sur OK. 
   Ajustez l'ordre en choisissant 'Move Up' ou 'Move Down'. Ceci est similaire
   à la définission de 'DirectoryIndex' sous Apache.
  </para>
  <para>
   L'étape ci-dessus doit être répétée pour chaque extension qui doit être associée
   aux scripts &php;. <literal>.php</literal> est le plus courant, cependant
   <literal>.php3</literal> peut être requis pour certaines applications.
  </para>
  <para>
   Si vous atteignez 100 % d'utilisation du CPU après quelques minutes, désactivez 
   l'option de configuration <literal>Cache ISAPI Application</literal> de IIS.
  </para>
 </sect2>
 
 <sect2 xml:id="install.windows.iis.pws4">
  <title>Windows et PWS 4</title>
  <simpara>
   PWS 4 ne supporte pas ISAPI, uniquement &php; CGI doit être utilisé.
  </simpara>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>
      Éditez le fichier <filename>pws-php4cgi.reg</filename> /
      <filename>pws-php5cgi.reg</filename> (regardez dans le dossier SAPI pour &php;4 
      ou dans le dossier principal pour &php; 5) pour indiquer la localisation de votre
      fichier <filename>php.exe</filename> / 
      <filename>php-cgi.exe</filename>.
      Les slash doivent être échappés. Par exemple :
      <literal>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\w3svc\parameters\Script
      Map] ".php"="C:\\php\\php.exe"</literal> (modifiez en
      <literal>C:\\php\\php-cgi.exe</literal> si vous utilisez &php; 5).
      Maintenant, intégrez ce fichier de registre dans votre système ; vous devriez 
      juste avoir à double-cliquer dessus.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Dans le gestionnaire PWS Manager, faites un clic droit sur les
      dossiers qui supporteront &php;, et sélectionnez "Properties".
      Cochez l'option "Execute" et confirmez.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>
 
 <sect2 xml:id="install.windows.iis.iis3">
  <title>Windows et PWS/IIS 3</title>
  <simpara>
   La méthode recommandée pour configurer ces serveurs
   est d'utiliser le fichier INF inclus dans la distribution
   (<filename>pws-php4cgi.reg</filename> dans le dossier SAPI pour &php; 4 ou
   <filename>pws-php5cgi.reg</filename> dans le dossier principal pour &php; 5).
   Vous pouvez éditer ce fichier, pour vous assurer que les
   extensions et les dossiers d'installation de &php; sont bien
   ceux de votre configuration. Ou alors, vous pouvez suivre les
   instructions suivantes pour le faire manuellement.
  </simpara>
  <warning>
   <para>
    Ces instructions requièrent la manipulation du fichier de
    registre de Windows. Une erreur peut laisser votre système dans un
    état instable. Nous vous recommandons vivement de sauvegarder ce
    fichier en lieu sûr. L'équipe de développement et les
    traducteurs de cette documentation ne pourront pas être tenus responsable
    d'un quelconque dommage qui pourrait survenir dans votre registre.
   </para>
  </warning>
  
  <para>
   <itemizedlist>
    <listitem>
     <simpara>
      Lancez Regedit.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Naviguez jusqu'à : <literal>HKEY_LOCAL_MACHINE /System
      /CurrentControlSet /Services /W3Svc /Parameters
      /ScriptMap</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Dans le menu "edit", sélectionnez : <literal>New->String Value</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Entrez l'extension que vous voulez utiliser pour les scripts &php;.
      Par exemple : <literal>.php</literal>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Double-cliquez sur la chaîne, et entrez le chemin jusqu'à
      <filename>php.exe</filename> dans le champ "value data". Exemple :
      <filename>C:\php\php.exe "%s" %s</filename> pour &php; 4 ou
      <filename>C:\php\php-cgi.exe "%s" %s</filename> pour &php; 5.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Répétez ces étapes pour chaque extension que vous désirez associer à vos scripts
      &php;.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   Les étapes suivantes n'affectent pas la configuration du serveur
   web, et ne s'appliquent que si vous voulez que vos scripts &php;
   soient exécutés lorsqu'il sont exécutés en ligne de commande
   (par exemple, run <filename>C:\messcripts\test.php</filename>)
   ou en double-cliquant sur l'icône. Vous pouvez ignorer
   ces étapes si vous préférez que vos scripts &php; s'ouvrent dans un
   éditeur de texte, plutôt que de les voir s'exécuter lorsque vous
   double-cliquez dessus.
  </para>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>
      Naviguez jusqu'à : <literal>HKEY_CLASSES_ROOT</literal>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Dans le menu edit, sélectionnez : <literal>New->Key</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Donnez le nom de votre extension à la clé.
      Par exemple : <literal>.php</literal>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Sélectionnez le nom de la nouvelle clé dans le panneau de
      droite, et double-cliquez dans "default value", puis entrez
      <literal>phpfile</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Répétez ces instructions pour toutes les extensions que vous avez
      associé aux scripts &php;.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Créez une autre <literal>New->Key</literal> sous
      <literal>HKEY_CLASSES_ROOT</literal> et nommez-la
      <literal>phpfile</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Sélectionnez la nouvelle clé <literal>phpfile</literal> et, dans
      le panneau de droite, double-cliquez dans "default value" et
      entrez <literal>PHP Script</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Faites un clic droit dans <literal>phpfile</literal> et sélectionnez
      <literal>New->Key</literal>, appelez-la <literal>Shell</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Faites un clic droit dans <literal>Shell</literal> et sélectionnez
      <literal>New->Key</literal>, appelez-la <literal>open</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Faites un clic droit dans <literal>open</literal> et sélectionnez
      <literal>New->Key</literal>, appelez-la
      <literal>command</literal>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Sélectionnez la nouvelle clé <literal>command</literal> et dans le
      panneau de droite, faites un double-clic dans "default value", puis entrez
      le chemin jusqu'à <filename>php.exe</filename>. Par exemple : 
      <literal>c:\php\php.exe -q %1</literal> (n'oubliez pas le
      <literal>%1</literal>).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Quittez Regedit.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Si vous utilisez PWS sous Windows, redémarrez pour prendre en
      compte le nouveau registre.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <simpara>
   Les utilisateurs de PWS et IIS 3 sont prêts à utiliser
   leur serveur. Avec IIS 3, vous pouvez utiliser un <link
   xlink:href="&url.iiscfg;">outil</link> bien pratique de
   Steven Genusa pour configurer votre carte des scripts.
  </simpara>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
