<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.1 Maintainer: yannick Status: ready -->
   <sect1 id="install.windows.apache1">
    <title>Installer &php; sous Windows avec Apache 1.3.x</title>
    <para>
     Cette section contient des notes et conseils spécifiques pour l'installation de &php;
     avec Apache 1.3.x sur les systèmes Microsoft Windows. Nous avons aussi des instructions et des notes spécifiques
     pour Apache 2 <link linkend="install.windows.apache2">sur une
     page séparée</link>.
    </para>
    
    <simpara>
     Il y a deux méthodes pour faire fonctionner &php; avec Apache 1.3.x
     sous Windows. La première est d'utiliser l'exécutable CGI (php.exe),
     l'autre est d'utiliser les modules Apache DLL. Dans les deux cas,
     vous devez arrêter le serveur Apache, éditer votre fichier
     &httpd.conf; pour dire à Apache de prendre &php; en compte.
    </simpara>
    <simpara>
     Mainetant que le module SAPI a été rendu plus stable sous Windows,
     nous recommandons son usage plutôt que celui de
     l'exécutable CGI, car il est plus transparent et sécurisé.
    </simpara>
    <simpara>
     Bien qu'il puisse y avoir quelques différences de configuration 
     de &php; sous Apache, le processus reste simple et à la portée du néophyte.
     Reportez-vous aux documentations Apache pour plus de détails sur
     ces directives.
    </simpara>
  
    <para>
     Si vous avez dézippé le paquet &php; dans <filename>c:\php\</filename>
     comme indiqué dans le chapitre <link linkend="install.windows.manual">Installation
     manuelle sous Windows"</link>, vous devez insérer les lignes
     suivantes dans vos fichiers de configuration Apache
     pour configurer l'exécutable CGI :
     <itemizedlist>
      <listitem>
       <simpara>
        <literal>
         ScriptAlias /php/ "c:/php/"
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         AddType application/x-httpd-php .php .phtml
        </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <literal>
         Action application/x-httpd-php "/php/php.exe"
        </literal>
       </simpara>
      </listitem>
     </itemizedlist>
     Notez que la deuxième des lignes ci-dessus peut être trouvée
     dans les versions courantes de &httpd.conf;, mais commentée. N'oubliez pas de
     remplacer <filename>c:/php/</filename> par le chemin courant de
     &php;.
     </para>

    <warning>
     <para>
      En utilisant la configuration en CGI, votre serveur sera ouvert
      à plusieurs attaques potentielles. Lisez donc la section
      <link linkend="security.cgi-bin">sécurité des CGI</link> pour savoir
      comment vous en défendre.
     </para>
    </warning>

    <para>
     Si vous voulez utiliser &php; comme module Apache, vous devez déplacer le fichier
     <filename>php4ts.dll</filename> dans le dossier <filename>windows/system</filename>
     (pour Windows 9x/Me), <filename>winnt/system32</filename> (pour Windows
     NT/2000) ou <filename>windows/system32</filename> (pour Windows XP)
     en écrasant les anciennes versions. Puis, vous devez ajouter
     les deux lignes suivantes dans le fichier de configuration Apache &httpd.conf; :
     <itemizedlist>
      <listitem>
       <simpara>
        Editez &httpd.conf; avec votre programme favori, repérez la directive
        <literal>LoadModule</literal> et ajoutez la ligne suivante <emphasis>à la
        fin</emphasis> de la liste pour &php; 4 :
        <literal>LoadModule php4_module "c:/php/sapi/php4apache.dll"</literal>
        ou celle-ci pour &php; 5 : 
        <literal>LoadModule php5_module "c:/php/sapi/php5apache.dll"</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Il se peut que, après avoir utilisé l'installeur Windows de Apache, vous deviez
        définir la directive <literal>AddModule</literal> pour
        <filename>mod_php4.c</filename>. C'est particulièrement important si la directive
        <literal>ClearModuleList</literal> est définie (vous la trouverez normalement
        quelques lignes plus bas). Vous verrez une liste d'entrés 
        <literal>AddModule</literal>, ajoutez la ligne suivante <emphasis>à la fin</emphasis>
        de la liste :
        <literal>AddModule mod_php4.c</literal>  Pour &php; 5, utilisez plutôt
        <literal>AddModule mod_php5.c</literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Cherchez une phrase identique à
        <literal># AddType allows you to tweak mime.types</literal>. Vous verrez
        quelques entrées <literal>AddType</literal>, ajoutez alors la ligne suivante
        <emphasis>à la fin</emphasis> de la liste :
         <literal>AddType application/x-httpd-php .php</literal>.
        Vous pouvez choisir les extensions que vous voulez parser avec &php; ici-même. 
        .php est tout simplement celle que nous suggérons. 
        Vous pouvez aussi ajouter .html et .php3
        pour une compatibilité ascendante.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>

    <simpara>
     Après avoir modifié le fichier de configuration, pensez à
     redémarrer le serveur web, par exemple avec 
     <command>NET STOP APACHE</command> suivi de 
     <command>NET START APACHE</command>, si vous utilisez Apache
     comme service Windows, ou bien utilisez vos alias classiques.
    </simpara>
    
    <simpara>
     Il y a deux méthodes pour utiliser la fonctionnalité de coloration
     syntaxique, elles dépendent de votre installation. Si vous avez
     configuré Apache pour utiliser &php; comme module SAPI, alors il suffit d'ajouter
     la ligne suivante dans votre &httpd.conf; (au même endroit que celui où vous avez inséré
     <literal>AddType application/x-httpd-php .php</literal>, voir plus haut) pour bénéficier
     de cette fonctionnalité :
     <literal>AddType application/x-httpd-php-source .phps</literal>.
    </simpara>
    <simpara>
     Si vous choisissez de configurer Apache pour utiliser &php; comme
     exécutable CGI, vous aurez besoin de la fonction <function>show_source</function>. 
     Pour cela, créez simplement un script &php; et ajoutez-y le code
     suivant : <literal>&lt;?php show_source ("original_php_script.php"); ?></literal>. 
     Substitutez <literal>original_php_script.php</literal> par le nom
     du fichier que vous souhaitez afficher.
    </simpara>
    
    <note>
     <simpara>
      Avec le couple Windows-Apache tous les antislashes des noms de chemins tels que
     "<filename>c:\directory\file.ext</filename>", doivent être convertis en
     slash c'est à dire "<filename>c:/directory/file.ext</filename>".
     </simpara>
    </note>
   </sect2>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
