<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.5 Maintainer: yannick Status: ready -->
   <sect1 id="install.windows.apache1">
    <title>Installer &php; sous Windows avec Apache 1.3.x</title>
    <para>
     Cette section contient des notes et conseils spécifiques pour l'installation de &php;
     avec Apache 1.3.x sur les systèmes Microsoft Windows. Nous avons aussi des 
     instructions et des notes spécifiques pour Apache 2 
     <link linkend="install.windows.apache2">sur une page séparée</link>.
    </para>
    
    <simpara>
     Il y a deux méthodes pour faire fonctionner &php; avec Apache 1.3.x
     sous Windows. La première est d'utiliser l'exécutable CGI 
     (<filename>php.exe</filename>
     pour &php; 4 et <filename>php-cgi.exe</filename> pour &php; 5),
     l'autre est d'utiliser les modules Apache DLL. Dans les deux cas,
     vous devez arrêter le serveur Apache, éditer votre fichier
     &httpd.conf; pour dire à Apache de prendre &php; en compte et redémarrer Apache.
    </simpara>
        
    <simpara>
     Maintenant que le module SAPI a été rendu plus stable sous Windows,
     nous recommandons son usage plutôt que celui de
     l'exécutable CGI, car il est plus transparent et sécurisé.
    </simpara>
        
    <simpara>
     Bien qu'il puisse y avoir quelques différences de configuration 
     de &php; sous Apache, le processus reste simple et à la portée du néophyte.
     Reportez-vous aux documentations Apache pour plus de détails sur
     ces directives.
    </simpara>
    
    <simpara>
     Après avoir modifié le fichier de configuration, pensez à
     redémarrer le serveur web, par exemple avec 
     <command>NET STOP APACHE</command> suivi de 
     <command>NET START APACHE</command>, si vous utilisez Apache
     comme service Windows, ou bien utilisez vos alias classiques.
    </simpara>
         
    &note.apache.slashes;  
     
    <sect2 id="install.windows.apache1.cgi">
     <title>Installation comme binaire CGI</title>
    
     <para>
      Si vous avez dézippé lepaquet &php; dans le répertoire 
      <filename>c:\php\</filename> comme décrit dans la section 
      sur les 
      <link linkend="install.windows.manual">étapes d'installation du manuel</link>, 
      vous devez insérer ces lignes à votre
      fichier de configuration Apache pour activer le binaire CGI :
      <example>
       <title>&php; et Apache 1.3.x en tant que CGI</title>
        <programlisting role="apache-conf">
<![CDATA[
ScriptAlias /php/ "c:/php/"
AddType application/x-httpd-php .php

# Pour PHP 4
Action application/x-httpd-php "/php/php.exe"

# Pour PHP 5
Action application/x-httpd-php "/php/php-cgi.exe"
]]>example
       </programlisting>
      </example>
      Notez que la seconde ligne dans l'exemple ci-dessus peut être touvée
      dans l'actuelle version de votre &httpd.conf;, mais elle est commenté.
      Souvenez-vous également de faire correspondre le chemin
      <filename>c:/php/</filename> à votre chemin actuelle vers &php;.
     </para>

     <warning>
      <para>
       En utilisant la configuration en mode CGI, votre serveur est ouvert
       à de possibles attaques. Lisez la 
       <link linkend="security.cgi-bin">section sécurité CGI</link> pour savoir
       comment vous défendre de ces attaques.
      </para>
     </warning>
    
     <simpara>
      Si vous voulez présenter la source de vos fichiers &php; avec la 
      coloration synthaxique, il n'existe pas d'option équivalent de celle
      de la version module de &php;.
      Si vous choisissez de configurer Apache pour utiliser &php; en mode CGI,
      vous aurez besoin d'utiliser la fonction <function>show_source</function>.
      Pour réaliser celà smplement, créez un script &php; dans un fichier et ajoutez
      ce code :
      <literal>&lt;?php show_source("original_php_script.php"); ?&gt;</literal>.
      Remplacez <filename>original_php_script.php</filename> avec le nom du fichier
      dont vous voulez afficher le code source.
     </simpara>
    </sect2>

    <sect2 id="install.windows.apache1.module">
     <title>Installation de &php; en tant que module Apache</title>
    
     <para>
      Si vous voulez utiliser &php; en tant que module Apache, assurez-vous de
      copier le fichier <filename>php4ts.dll</filename> dans le répertoire
      <filename>windows/system</filename> (pour Windows 9x/Me)
      <filename>winnt/system32</filename> (pour Windows NT/2000)
      ou <filename>windows/system32</filename> (pour Windows XP), en effaçant
      tous vieux fichiers portant le même nom. Ensuite, vous devez ajouter les
      lignes suivantes dans votre fichier de configuration Apache &httpd.conf; :
      <itemizedlist>
       <listitem>
        <simpara>
         Ouvrez &httpd.conf; avec votre éditeur de texte favori et localisez
         la directive <literal>LoadModule</literal> et ajoutez les lignes suivantes
         <emphasis>à la fin</emphasis> de la liste pour &php; 4 :
         <literal>LoadModule php4_module "c:/php/sapi/php4apache.dll"</literal>
         ou la suivante pour &php; 5 :
         <literal>LoadModule php5_module "c:/php/php5apache.dll"</literal>
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Vous pourriez avoir besoin, après avoir utilisé l'installateur Windows pour Apache,
         de définir la directive <literal>AddModule</literal> pour 
         <filename>mod_php4.c</filename>. Celà est tout spécialement 
         important si la directive <literal>ClearModuleList</literal> est définie, 
         que vous pouvez trouver en faisant défiler la page de quelques lignes
         vers le bas. Vous devriez voir une liste d'entrées <literal>AddModule</literal>,
         ajoutez la ligne suivante <emphasis>à la fin</emphasis> de la liste :
         <literal>AddModule mod_php4.c</literal> pour &php; 4. Pour &php; 5, 
         utilisez à la place : <literal>AddModule mod_php5.c</literal>
        </simpara>
       </listitem>
       <listitem>
        <simpara>
          Cherchez une phrase similaire à 
          <literal># AddType allows you to tweak mime.types</literal>.
          Vous devriez voir quelques entrées <literal>AddType</literal>, ajoutez
          la ligne suivante <emphasis>à la fin</emphasis> de la liste :
          <literal>AddType application/x-httpd-php .php</literal>.
          Vous pouvez choisir n'importe quelle extension de fichiers qui seront
          parsés par &php; ici. .php est simplement le seul que nous suggestions.
          Vous pouvez également inclure .html et .php3 pour des raisons de 
          compatiblité antérieure.
        </simpara>
       </listitem>
      </itemizedlist>
     </para>
    
     <simpara>
      Si vous voulez utiliser la fonctionnalité d'affichage du code source
      colorisée, vous devez ajouter la ligne suivante à votre &httpd.conf; :
      <literal>AddType application/x-httpd-php-source .phps</literal>.
      Ceci doit être inséré à la même place où vous avez inséré 
      <literal>AddType application/x-httpd-php .php</literal> précédemment.
      Avec cette configuration, tous les fichiers servis avec l'extension 
      <literal>.phps</literal> seront affichés sous forme du code source
      dont le code aura été colorisé sur votre navigateur.
     </simpara>
    </sect2>
   </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
