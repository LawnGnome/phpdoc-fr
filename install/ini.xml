<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.15 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

 <chapter id="configuration">
  <title>Configuration</title>

  <sect1 id="configuration.file">
   <title>Le fichier de configuration</title>

   <simpara>
    Le fichier de configuration (appelé <filename>php3.ini</filename>
    dans la version 3 de &php;, et simplement &php.ini;
    dans la version 4) est lu par &php; au démarrage. Si vous
    avez compilé &php; en module, le fichier n'est lu qu'une seule
    fois, au lancement du démon <acronym>HTTP</acronym>. Pour les versions
    <acronym>CGI</acronym> et <acronym>CLI</acronym> le fichier est lu à 
    chaque invocation.
   </simpara>
   <para>
    Le &php.ini; est cherché dans ces endroits (et dans cet ordre) :
    <itemizedlist>
     <listitem>
      <para>
       L'endroit spécifique du module SAPI (la directive <literal>PHPIniDir</literal>
       d'Apache 2, l'option de la ligne de commande <literal>-c</literal>en CGI et en CLI,
       le paramètre <literal>php_ini</literal> en NSAPI,
       la variable d'environnement <literal>PHP_INI_PATH</literal> en THTTPD)
      </para>
     </listitem>
     <listitem>
      <para>
       La variable d'environnement <varname>PHPRC</varname>. Avant &php; 5.2.0,
       cette variable était récupérée après la clé de registre mentionnée ci-dessous.
      </para>
     </listitem>
     <listitem>
      <para>
       <literal>HKEY_LOCAL_MACHINE\SOFTWARE\PHP\IniFilePath</literal>
       (Registre Windows)
      </para>
     </listitem>
     <listitem>
      <para>
       Le dossier courant de travail (sous pour CLI)
      </para>
     </listitem>
     <listitem>
      <para>
       Le dossier du serveur web (pour les modules SAPI), ou le dossier contenant &php;
       (autrement dans Windows)
      </para>
     </listitem>
     <listitem>
      <para>
       Le dossier Windows (<filename class="directory">C:\windows</filename>
       ou <filename class="directory">C:\winnt</filename>) (pour Windows), ou
       l'option de compilation <literal>--with-config-file-path</literal> lors de la compilation
      </para>
     </listitem>
    </itemizedlist> 
   </para>
   <para>
    Si le fichier <filename>php-SAPI.ini</filename> existe (où SAPI utilise SAPI, donc le
    nom du fichier est e.g. <filename>php-cli.ini</filename> ou
    <filename>php-apache.ini</filename>), il sera utilisé à la place du &php.ini;.
    Le nom SAPI peut être déterminé en utilisant la fonction <function>php_sapi_name</function>.
   </para>
   <note>
    <para>
     Le serveur web Apache change ce dossier en dossier root au démarage, ce qui fait 
     que &php; essaye de lire &php.ini; depuis le système de fichier racine s'il existe.
    </para>
   </note>
   <para>
    Les directives &php.ini; sont directement documentées, par extensions,
    sur les pages respectives du manuel de ces extensions. La 
    <link linkend="ini">liste des directives internes</link> est disponible 
    en annexe. Il est probable que toutes les directives &php; ne sont pas documentées
    dans le manuel. Pour une liste complète des directives disponibles dans votre version de &php;,
    merci de lire les commentaires de votre propre fichier &php.ini;. Vous pouvez également
    trouver la <ulink url="&url.php.cvs.phpini;">dernière liste disponible</ulink> sur CVS.
   </para>
   <para>
    <example>
     <title>Extrait du &php.ini;</title>
     <programlisting role="ini">
<![CDATA[
; tout texte sur une ligne, situé après un point-virgule ";" est ignoré
[php] ; les marqueur de section (texte entre crochets) sont aussi ignorés
; Les valeurs booléennes peuvent être spécifiées comme ceci :
;    true, on, yes
; ou false, off, no, none
register_globals = off
track_errors = yes

; vous pouvez placer les chaînes de caractères entre guillemets
include_path = ".:/usr/local/lib/php"

; Les anti-slash sont traités comme n'importe quel caractère
include_path = ".;c:\php\lib"
]]>
</programlisting>
<!-- TODO: add more details about values and expressions -->
    </example>
   </para>
   <para>
    Depuis &php; 5.1.0, il est possible de se référer à des variables .ini
    depuis des fichiers .ini. Par exemple : <literal>open_basedir = ${open_basedir}
     ":/new/dir"</literal>.
   </para>
  </sect1>

  <sect1 id="configuration.changes">
   <title>Comment modifier la configuration</title>

   <sect2 id="configuration.changes.apache">
    <title>Exécuter &php; comme module Apache</title>
    <simpara>
     Lorsque vous utilisez le module Apache, vous pouvez aussi changer
     les paramètres de configuration en utilisant les directives
     dans les fichiers de configuration d'Apache (&httpd.conf;) et dans 
     les fichiers &htaccess;. Vous aurez besoin des privilèges 
     "AllowOverride Options" ou "AllowOverride All".
    </simpara>

    <para>
     Dans la version 4 et 5 de &php;, il y a de nombreuses directives
     Apache qui vous permettent de modifier la configuration de &php;
     à partir des fichiers de configuration Apache. Pour une liste des
     directives qui sont <constant>PHP_INI_ALL</constant>, 
     <constant>PHP_INI_PERDIR</constant> ou <constant>PHP_INI_SYSTEM</constant>
     reportez-vous à l'appendice <link linkend="ini.list">Liste des directives
     du php.ini</link>.
    </para>

    <note>
     <simpara>
      Dans la version 3 de &php;, à chaque directive de configuration
      présente dans le fichier de configuration d'Apache correspond
      une directive de configuration dans le fichier
      <filename>php3.ini</filename>, à l'exception des directives
      préfixées par <filename>php3_</filename>.
     </simpara>
    </note>

    <para>
     <variablelist>
      <varlistentry>
       <term>
        <systemitem role="directive">php_value</systemitem>
        <parameter>nom</parameter>
        <parameter>valeur</parameter>
       </term>
       <listitem>
        <para>
         Modifie la valeur de la directive spécifiée.
         Cette instruction n'est utilisable qu'avec les directives &php; de type
         <constant>PHP_INI_ALL</constant> et <constant>PHP_INI_PERDIR</constant>.
         Pour annuler une valeur qui aurait été modifiée au préalable,
         utilisez la valeur <literal>none</literal>.
        </para>
        <note>
         <simpara>
          N'utilisez pas <systemitem role="directive">php_value</systemitem> pour configurer des 
          valeurs booléennes. 
          <systemitem role="directive">php_flag</systemitem> (voir plus bas) doit être utilisée.
         </simpara>
        </note>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_flag</systemitem>
        <parameter>nom</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         Cette instruction est utilisée pour activer ou
         désactiver une option.
         Cette instruction n'est utilisable qu'avec les directives
         &php; de type <constant>PHP_INI_ALL</constant> et
         <constant>PHP_INI_PERDIR</constant>.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_value</systemitem>
        <parameter>nom</parameter>
        <parameter>valeur</parameter>
       </term>
       <listitem>
        <para>
         Cette instruction affecte une valeur à la variable spécifiée. 
         Cette instruction <emphasis>NE peut PAS être utilisée</emphasis> dans un fichier 
         &htaccess;. Toute directive de &php; configurée avec le type 
         <systemitem role="directive">php_admin_value</systemitem> ne peut pas être
         modifiée en utilisant le fichier &htaccess; ou les directives de virtualhost.
         Pour annuler une valeur qui aurait été modifiée au préalable, utilisez la 
         valeur <literal>none</literal>.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_flag</systemitem>
        <parameter>name</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         Cette directive est utilisée pour activer ou désactiver l'option
         précédente.
         Cette instruction <emphasis>NE peut PAS être utilisée</emphasis> dans un fichier 
         &htaccess;. Toute directive de &php; configurée avec le type 
         <systemitem role="directive">php_admin_flag</systemitem> ne peut pas être
         modifiée en utilisant le fichier &htaccess; ou par une directive virtualhost.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <example>
      <title>Exemple de configuration Apache</title>
      <programlisting role="ini">
<![CDATA[
<IfModule mod_php5.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php4.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php3.c>
  php3_include_path ".:/usr/local/lib/php"
  php3_safe_mode on
</IfModule>
]]>
      </programlisting>
     </example>
    </para>
    <caution>
     <para>
      Les constantes &php; n'existent pas en dehors de &php;. Par
      exemple, dans le fichier &httpd.conf;,
      vous ne pouvez pas utiliser des constantes &php; telles que
      <constant>E_ALL</constant> ou <constant>E_NOTICE</constant> 
      pour fixer le niveau de <link linkend="ini.error-reporting">rapport d'erreur</link>,
      car ces constantes n'ont pas de signification pour Apache, 
      et seront remplacées par <emphasis>0</emphasis>. 
      Utilisez les valeurs numériques à la place. 
      Les constantes peuvent être utilisées dans le &php.ini;
     </para>
    </caution>
   </sect2>

   <sect2 id="configuration.changes.windows">
    <title>Modifier la configuration de &php; dans la base de registre Windows</title>
     <simpara>
      Lorsque vous utilisez &php; sur Windows, la configuration peut
      être modifiée dossier par dossier en utilisant la base de registres
      de Windows. Les valeurs de configuration sont stockées
      avec la clé de registre 
      <literal>HKLM\SOFTWARE\PHP\Per Directory Values</literal>, 
      dans les sous-clés correspondantes aux noms de dossier. Par exemple,
      la valeur d'une option dans le dossier <literal>c:\inetpub\wwwroot</literal>
      sera stockée dans la clé 
      <literal>HKLM\SOFTWARE\PHP\Per Directory Values\c\inetpub\wwwroot</literal>. 
      La valeur de cette option sera utilisée pour tous les
      scripts qui fonctionnent dans ce dossier ou ses sous-dossiers.
      Les valeurs sous la clé doivent avoir le nom d'une
      <link linkend="configuration">direction de configuration &php;</link>,
      et la valeur correspondante. Les constantes &php; ne sont
      pas utilisables : il faut mettre la valeur entière.
      Cependant, seules les valeurs des configurations dans
      <constant>PHP_INI_USER</constant> peuvent être fixées de cette manière,
      celles dans <constant>PHP_INI_PERDIR</constant> ne peuvent l'être.
     </simpara>
   </sect2>

   <sect2 id="configuration.changes.other">
    <title>Autres interfaces de configuration de &php;</title>
    <para>
      Suivant la façon dont vous exécutez &php;, vous pouvez changer certaines valeurs
     durant l'exécution de vos scripts en utilisant <function>ini_set</function>.
     Voir la documentation de la fonction <function>ini_set</function> pour plus
     d'informations.
    </para>
    <para>
     Si vous êtes intéressé par une liste complète des options configurées
     sur votre système avec leurs valeurs courantes, vous pouvez exécuter
     la fonction <function>phpinfo</function> et consulter la page résultante.
     Vous pouvez aussi accéder individuellement aux directives de configuration
     pendant l'exécution de vos scripts en utilisant soit la fonction
     <function>ini_get</function>, soit la fonction <function>get_cfg_var</function>.
    </para>
   </sect2>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
